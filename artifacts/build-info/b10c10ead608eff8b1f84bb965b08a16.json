{"id":"b10c10ead608eff8b1f84bb965b08a16","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"contracts/BaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\n\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\nimport './interfaces/I1inchSpotAgg.sol';\r\nimport './interfaces/IBaluniV1Registry.sol';\r\nimport './interfaces/IBaluniV1Oracle.sol';\r\nimport './interfaces/IStaticOracle.sol';\r\n\r\ncontract BaluniV1Oracle is Initializable, OwnableUpgradeable, UUPSUpgradeable, IBaluniV1Oracle {\r\n    IBaluniV1Registry public registry;\r\n\r\n    function initialize(address _registry) public initializer {\r\n        __Ownable_init(msg.sender);\r\n        __UUPSUpgradeable_init();\r\n        registry = IBaluniV1Registry(_registry);\r\n    }\r\n\r\n    function reinitialize(address _registry, uint64 version) public reinitializer(version) {\r\n        __Ownable_init(msg.sender);\r\n        __UUPSUpgradeable_init();\r\n        registry = IBaluniV1Registry(_registry);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the available oracle.\r\n     * If the conversion fails with the static oracle, it falls back to the aggregator oracle.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param toToken The address of the token to convert to.\r\n     * @param amount The amount of `fromToken` to convert.\r\n     * @return valuation The converted valuation of `amount` in `toToken`.\r\n     */\r\n    function convert(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) public view override returns (uint256 valuation) {\r\n        try this.convertWithStaticOracle(fromToken, toToken, amount) returns (uint256 _valuation) {\r\n            return _valuation;\r\n        } catch {\r\n            return this.convertWithAgg(fromToken, toToken, amount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the available oracle.\r\n     * If the conversion fails with the static oracle, it falls back to the aggregator oracle.\r\n     * This function is externally callable.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param toToken The address of the token to convert to.\r\n     * @param amount The amount of `fromToken` to convert.\r\n     * @return valuation The converted valuation of `amount` in `toToken`.\r\n     */\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view override returns (uint256 valuation) {\r\n        try this.convertScaledWithStaticOracle(fromToken, toToken, amount) returns (uint256 _valuation) {\r\n            return _valuation;\r\n        } catch {\r\n            return this.convertScaledWithAgg(fromToken, toToken, amount);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param toToken The address of the token to convert to.\r\n     * @param amount The amount of `fromToken` to convert.\r\n     * @return valuation The converted valuation of `amount` in `toToken`.\r\n     */\r\n    function convertWithAgg(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation) {\r\n        if (fromToken == toToken) return amount;\r\n\r\n        address _1InchSpotAgg = registry.get1inchSpotAgg();\r\n        uint8 fromDecimal = IERC20Metadata(fromToken).decimals();\r\n        uint8 toDecimal = IERC20Metadata(toToken).decimals();\r\n\r\n        uint256 rate = I1inchSpotAgg(_1InchSpotAgg).getRate(IERC20(fromToken), IERC20(toToken), false);\r\n\r\n        rate = (rate * (10 ** fromDecimal)) / (10 ** toDecimal);\r\n\r\n        uint256 factor;\r\n        if (fromDecimal >= toDecimal) {\r\n            factor = 10 ** (fromDecimal - toDecimal);\r\n            valuation = ((amount / factor) * rate) / 1e18;\r\n        } else {\r\n            factor = 10 ** (toDecimal - fromDecimal);\r\n            valuation = ((amount * factor) * rate) / 1e18;\r\n        }\r\n\r\n        return valuation;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator and scales the result.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param toToken The address of the token to convert to.\r\n     * @param amount The amount of `fromToken` to convert.\r\n     * @return valuation  The scaled converted valuation of `amount` in `toToken`.\r\n     */\r\n    function convertScaledWithAgg(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation) {\r\n        if (fromToken == toToken) return amount * 10 ** (18 - IERC20Metadata(toToken).decimals());\r\n\r\n        address _1InchSpotAgg = registry.get1inchSpotAgg();\r\n        uint8 fromDecimal = IERC20Metadata(fromToken).decimals();\r\n        uint8 toDecimal = IERC20Metadata(toToken).decimals();\r\n        uint256 rate = I1inchSpotAgg(_1InchSpotAgg).getRate(IERC20(fromToken), IERC20(toToken), false);\r\n\r\n        rate = (rate * (10 ** fromDecimal)) / (10 ** toDecimal);\r\n\r\n        uint256 scalingFactor;\r\n        uint256 tokenAmount;\r\n        uint256 finalScalingFactor = 10 ** (18 - toDecimal);\r\n\r\n        if (fromDecimal == toDecimal) {\r\n            valuation = (amount * rate) / 1e18;\r\n        } else if (fromDecimal > toDecimal) {\r\n            scalingFactor = 10 ** (fromDecimal - toDecimal);\r\n            tokenAmount = amount / scalingFactor;\r\n            valuation = (tokenAmount * rate) / 1e18;\r\n        } else {\r\n            scalingFactor = 10 ** (toDecimal - fromDecimal);\r\n            tokenAmount = amount * scalingFactor;\r\n            valuation = (tokenAmount * rate) / 1e18;\r\n        }\r\n\r\n        valuation = valuation * finalScalingFactor;\r\n\r\n        return valuation;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the static oracle.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param toToken The address of the token to convert to.\r\n     * @param amount The amount of `fromToken` to convert.\r\n     * @return  valuation of the converted amount.\r\n     */\r\n    function convertWithStaticOracle(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation) {\r\n        IStaticOracle staticOracle = IStaticOracle(registry.getStaticOracle());\r\n        require(address(staticOracle) != address(0), 'StaticOracle not set');\r\n        (valuation, ) = staticOracle.quoteAllAvailablePoolsWithTimePeriod(uint128(amount), fromToken, toToken, 3600);\r\n        return valuation;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the given amount of tokens from one token to another using a static oracle.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param toToken The address of the token to convert to.\r\n     * @param amount The amount of tokens to convert.\r\n     * @return  valuation of the converted tokens.\r\n     */\r\n    function convertScaledWithStaticOracle(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation) {\r\n        uint256 _valuation = this.convertWithStaticOracle(fromToken, toToken, amount);\r\n        valuation = scaleUp(_valuation, IERC20Metadata(fromToken).decimals());\r\n        return valuation;\r\n    }\r\n\r\n    /**\r\n     * @dev Scales up the given amount by subtracting the decimals.\r\n     * @param amount The amount to be scaled up.\r\n     * @param decimals The number of decimals to be subtracted.\r\n     * @return The scaled up amount.\r\n     */\r\n    function scaleUp(uint256 amount, uint256 decimals) internal pure returns (uint256) {\r\n        return amount * (10 ** 18 - decimals);\r\n    }\r\n\r\n    /**\r\n     * @dev Scales down the given amount by dividing it by the difference between 10^18 and the decimals.\r\n     * @param amount The amount to be scaled down.\r\n     * @param decimals The number of decimals to be subtracted.\r\n     * @return The scaled down amount.\r\n     */\r\n    function scaleDown(uint256 amount, uint256 decimals) internal pure returns (uint256) {\r\n        return amount / (10 ** 18 - decimals);\r\n    }\r\n\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n}\r\n"},"contracts/interfaces/I1inchSpotAgg.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\ninterface I1inchSpotAgg {\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Oracle {\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\r\n\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Registry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1Registry\r\n * @dev Interface for the BaluniV1Registry contract.\r\n */\r\ninterface IBaluniV1Registry {\r\n    function setUniswapFactory(address _uniswapFactory) external;\r\n\r\n    function setUniswapRouter(address _uniswapRouter) external;\r\n\r\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\r\n\r\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\r\n\r\n    function setBaluniSwapper(address _baluniSwapper) external;\r\n\r\n    function setBaluniOracle(address _baluniOracle) external;\r\n\r\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\r\n\r\n    function setBaluniRebalancer(address _baluniRebalancer) external;\r\n\r\n    function setBaluniRouter(address _baluniRouter) external;\r\n\r\n    function setBaluniRegistry(address _baluniRegistry) external;\r\n\r\n    function setWNATIVE(address _WNATIVE) external;\r\n\r\n    function setUSDC(address _USDC) external;\r\n\r\n    function setTreasury(address _treasury) external;\r\n\r\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\r\n\r\n    function setBPS_FEE(uint256 __BPS_FEE) external;\r\n\r\n    function getUniswapFactory() external view returns (address);\r\n\r\n    function getUniswapRouter() external view returns (address);\r\n\r\n    function getBaluniSwapper() external view returns (address);\r\n\r\n    function getBaluniOracle() external view returns (address);\r\n\r\n    function getBaluniAgentFactory() external view returns (address);\r\n\r\n    function getBaluniPoolPeriphery() external view returns (address);\r\n\r\n    function getBaluniPoolFactory() external view returns (address);\r\n\r\n    function getBaluniRebalancer() external view returns (address);\r\n\r\n    function getBaluniRouter() external view returns (address);\r\n\r\n    function getBaluniRegistry() external view returns (address);\r\n\r\n    function getWNATIVE() external view returns (address);\r\n\r\n    function getUSDC() external view returns (address);\r\n\r\n    function get1inchSpotAgg() external view returns (address);\r\n\r\n    function getBPS_FEE() external view returns (uint256);\r\n\r\n    function getMAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function getBPS_BASE() external view returns (uint256);\r\n\r\n    function getTreasury() external view returns (address);\r\n\r\n    function setStaticOracle(address _staticOracle) external;\r\n\r\n    function getStaticOracle() external view returns (address);\r\n}\r\n"},"contracts/interfaces/IStaticOracle.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\r\n\r\npragma solidity 0.8.25;\r\n\r\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\r\n\r\n/// @title Uniswap V3 Static Oracle\r\n/// @notice Oracle contract for calculating price quoting against Uniswap V3\r\ninterface IStaticOracle {\r\n    /// @notice Returns the address of the Uniswap V3 factory\r\n    /// @dev This value is assigned during deployment and cannot be changed\r\n    /// @return The address of the Uniswap V3 factory\r\n    function UNISWAP_V3_FACTORY() external view returns (IUniswapV3Factory);\r\n\r\n    /// @notice Returns how many observations are needed per minute in Uniswap V3 oracles, on the deployed chain\r\n    /// @dev This value is assigned during deployment and cannot be changed\r\n    /// @return Number of observation that are needed per minute\r\n    function CARDINALITY_PER_MINUTE() external view returns (uint8);\r\n\r\n    /// @notice Returns all supported fee tiers\r\n    /// @return The supported fee tiers\r\n    function supportedFeeTiers() external view returns (uint24[] memory);\r\n\r\n    /// @notice Returns whether a specific pair can be supported by the oracle\r\n    /// @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\r\n    /// @return Whether the given pair can be supported by the oracle\r\n    function isPairSupported(address tokenA, address tokenB) external view returns (bool);\r\n\r\n    /// @notice Returns all existing pools for the given pair\r\n    /// @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\r\n    /// @return All existing pools for the given pair\r\n    function getAllPoolsForPair(address tokenA, address tokenB) external view returns (address[] memory);\r\n\r\n    /// @notice Returns a quote, based on the given tokens and amount, by querying all of the pair's pools\r\n    /// @dev If some pools are not configured correctly for the given period, then they will be ignored\r\n    /// @dev Will revert if there are no pools available/configured for the pair and period combination\r\n    /// @param baseAmount Amount of token to be converted\r\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\r\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\r\n    /// @param period Number of seconds from which to calculate the TWAP\r\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\r\n    /// @return queriedPools The pools that were queried to calculate the quote\r\n    function quoteAllAvailablePoolsWithTimePeriod(\r\n        uint128 baseAmount,\r\n        address baseToken,\r\n        address quoteToken,\r\n        uint32 period\r\n    ) external view returns (uint256 quoteAmount, address[] memory queriedPools);\r\n\r\n    /// @notice Returns a quote, based on the given tokens and amount, by querying only the specified fee tiers\r\n    /// @dev Will revert if the pair does not have a pool for one of the given fee tiers, or if one of the pools\r\n    /// is not prepared/configured correctly for the given period\r\n    /// @param baseAmount Amount of token to be converted\r\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\r\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\r\n    /// @param feeTiers The fee tiers to consider when calculating the quote\r\n    /// @param period Number of seconds from which to calculate the TWAP\r\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\r\n    /// @return queriedPools The pools that were queried to calculate the quote\r\n    function quoteSpecificFeeTiersWithTimePeriod(\r\n        uint128 baseAmount,\r\n        address baseToken,\r\n        address quoteToken,\r\n        uint24[] calldata feeTiers,\r\n        uint32 period\r\n    ) external view returns (uint256 quoteAmount, address[] memory queriedPools);\r\n\r\n    /// @notice Returns a quote, based on the given tokens and amount, by querying only the specified pools\r\n    /// @dev Will revert if one of the pools is not prepared/configured correctly for the given period\r\n    /// @param baseAmount Amount of token to be converted\r\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\r\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\r\n    /// @param pools The pools to consider when calculating the quote\r\n    /// @param period Number of seconds from which to calculate the TWAP\r\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\r\n    function quoteSpecificPoolsWithTimePeriod(\r\n        uint128 baseAmount,\r\n        address baseToken,\r\n        address quoteToken,\r\n        address[] calldata pools,\r\n        uint32 period\r\n    ) external view returns (uint256 quoteAmount);\r\n\r\n    /// @notice Will initialize all existing pools for the given pair, so that they can be queried with the given period in the future\r\n    /// @dev Will revert if there are no pools available for the pair and period combination\r\n    /// @param tokenA One of the pair's tokens\r\n    /// @param tokenB The other of the pair's tokens\r\n    /// @param period The period that will be guaranteed when quoting\r\n    /// @return preparedPools The pools that were prepared\r\n    function prepareAllAvailablePoolsWithTimePeriod(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint32 period\r\n    ) external returns (address[] memory preparedPools);\r\n\r\n    /// @notice Will initialize the pair's pools with the specified fee tiers, so that they can be queried with the given period in the future\r\n    /// @dev Will revert if the pair does not have a pool for a given fee tier\r\n    /// @param tokenA One of the pair's tokens\r\n    /// @param tokenB The other of the pair's tokens\r\n    /// @param feeTiers The fee tiers to consider when searching for the pair's pools\r\n    /// @param period The period that will be guaranteed when quoting\r\n    /// @return preparedPools The pools that were prepared\r\n    function prepareSpecificFeeTiersWithTimePeriod(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24[] calldata feeTiers,\r\n        uint32 period\r\n    ) external returns (address[] memory preparedPools);\r\n\r\n    /// @notice Will initialize all given pools, so that they can be queried with the given period in the future\r\n    /// @param pools The pools to initialize\r\n    /// @param period The period that will be guaranteed when quoting\r\n    function prepareSpecificPoolsWithTimePeriod(address[] calldata pools, uint32 period) external;\r\n\r\n    /// @notice Will increase observations for all existing pools for the given pair, so they start accruing information for twap calculations\r\n    /// @dev Will revert if there are no pools available for the pair and period combination\r\n    /// @param tokenA One of the pair's tokens\r\n    /// @param tokenB The other of the pair's tokens\r\n    /// @param cardinality The cardinality that will be guaranteed when quoting\r\n    /// @return preparedPools The pools that were prepared\r\n    function prepareAllAvailablePoolsWithCardinality(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint16 cardinality\r\n    ) external returns (address[] memory preparedPools);\r\n\r\n    /// @notice Will increase the pair's pools with the specified fee tiers observations, so they start accruing information for twap calculations\r\n    /// @dev Will revert if the pair does not have a pool for a given fee tier\r\n    /// @param tokenA One of the pair's tokens\r\n    /// @param tokenB The other of the pair's tokens\r\n    /// @param feeTiers The fee tiers to consider when searching for the pair's pools\r\n    /// @param cardinality The cardinality that will be guaranteed when quoting\r\n    /// @return preparedPools The pools that were prepared\r\n    function prepareSpecificFeeTiersWithCardinality(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint24[] calldata feeTiers,\r\n        uint16 cardinality\r\n    ) external returns (address[] memory preparedPools);\r\n\r\n    /// @notice Will increase all given pools observations, so they start accruing information for twap calculations\r\n    /// @param pools The pools to initialize\r\n    /// @param cardinality The cardinality that will be guaranteed when quoting\r\n    function prepareSpecificPoolsWithCardinality(address[] calldata pools, uint16 cardinality) external;\r\n\r\n    /// @notice Adds support for a new fee tier\r\n    /// @dev Will revert if the given tier is invalid, or already supported\r\n    /// @param feeTier The new fee tier to add\r\n    function addNewFeeTier(uint24 feeTier) external;\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":10000},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1294,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1293,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1743],"IERC1822Proxiable":[1303],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1304,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1744,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1303,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,1303,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1302],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1743_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1743_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1501,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1743_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1470,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1743_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1743_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1475,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1303_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1303","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1302,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,1475,1488,1870,1873],"usedEvents":[219,1454]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"ERC20Upgradeable":[1247],"IERC20":[1831],"IERC20Errors":[1345],"IERC20Metadata":[1857],"Initializable":[448]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1832,"src":"131:70:3","symbolAliases":[{"foreign":{"id":633,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1858,"src":"202:97:3","symbolAliases":[{"foreign":{"id":635,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1294,"src":"300:70:3","symbolAliases":[{"foreign":{"id":637,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1441,"src":"371:83:3","symbolAliases":[{"foreign":{"id":639,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":449,"src":"455:66:3","symbolAliases":[{"foreign":{"id":641,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":644,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1614:13:3"},"id":645,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":646,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1629:18:3"},"id":647,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":648,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":1831,"src":"1649:6:3"},"id":649,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":650,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":1857,"src":"1657:14:3"},"id":651,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":652,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1345,"src":"1673:12:3"},"id":653,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247,1345,1857,1831,1293,448],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":671,"members":[{"constant":false,"id":658,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":671,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":657,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":671,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":663,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":662,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":671,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":671,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":671,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":669,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1247,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":674,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1247,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":681,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nativeSrc":"2335:54:3","nodeType":"YulBlock","src":"2335:54:3","statements":[{"nativeSrc":"2349:30:3","nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2359:20:3","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2349:6:3","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":678,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":680,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":682,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2292:12:3"},"referencedDeclaration":671,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1247,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":697,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":693,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":694,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":692,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":698,"implemented":true,"kind":"function","modifiers":[{"id":690,"kind":"modifierInvocation","modifierName":{"id":689,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":698,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":698,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":686,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1247,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":725,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2842:12:3"},"referencedDeclaration":671,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":713,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":718,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":719,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":722,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":724,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":726,"implemented":true,"kind":"function","modifiers":[{"id":705,"kind":"modifierInvocation","modifierName":{"id":704,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":726,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":726,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":701,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1247,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1844],"body":{"id":741,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":741,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3081:12:3"},"referencedDeclaration":671,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":738,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":731,"id":740,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1247,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1850],"body":{"id":757,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":757,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3340:12:3"},"referencedDeclaration":671,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":754,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":747,"id":756,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1247,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1856],"body":{"id":766,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1247,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1780],"body":{"id":782,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":782,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":774,"nodeType":"UserDefinedTypeName","pathNode":{"id":773,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4262:12:3"},"referencedDeclaration":671,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1247,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1788],"body":{"id":802,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":802,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4485:12:3"},"referencedDeclaration":671,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":797,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":790,"id":801,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":803,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":803,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1247,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1798],"body":{"id":826,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":826,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":812,"id":825,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":827,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":827,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":827,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1247,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1808],"body":{"id":850,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":850,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"5102:12:3"},"referencedDeclaration":671,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":840,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":843,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":846,"indexExpression":{"id":845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":849,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":851,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":851,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1247,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1818],"body":{"id":874,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":874,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1130,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":860,"id":873,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":875,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":875,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1247,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1830],"body":{"id":906,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":906,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":886,"id":905,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":907,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":907,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":907,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1247,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":953,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":931,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":930,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":945,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":954,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":954,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":954,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1247,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1045,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"7568:12:3"},"referencedDeclaration":671,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":969,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":967,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1012,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1012,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"baseExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":988,"indexExpression":{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":999,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1011,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1001,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"id":1003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1013,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":982,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":976,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1037,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1028,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1038,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1027,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1026,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1046,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1046,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1046,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1247,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1067,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1069,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1079,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1079,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1247,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1100,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1093,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1112,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1112,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1247,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1122,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1130,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1247,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1197,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"11332:12:3"},"referencedDeclaration":671,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1145,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1161,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1177,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1176,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1183,"indexExpression":{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1184,"indexExpression":{"id":1181,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1195,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1198,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1198,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1247,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1245,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1243,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1231,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1226,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1242,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1234,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1233,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1246,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1247,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1248,"src":"1576:10896:3","usedErrors":[211,214,1315,1320,1325,1334,1339,1344],"usedEvents":[219,1765,1774]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":449,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1250,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1253,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:4"},"id":1254,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,448],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1259,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1260,"implemented":true,"kind":"function","modifiers":[{"id":1257,"kind":"modifierInvocation","modifierName":{"id":1256,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1293,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1266,"implemented":true,"kind":"function","modifiers":[{"id":1263,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1293,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1273,"nodeType":"Return","src":"959:17:4"}]},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1293,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1279,"id":1282,"nodeType":"Return","src":"1066:15:4"}]},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1293,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1288,"id":1290,"nodeType":"Return","src":"1176:8:4"}]},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1293,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1294,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1303]},"id":1304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1296,"nodeType":"StructuredDocumentation","src":"139:203:5","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1303,"linearizedBaseContracts":[1303],"name":"IERC1822Proxiable","nameLocation":"353:17:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"377:438:5","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1302,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:5","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"842:2:5"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"868:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:5"},"scope":1303,"src":"820:57:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1304,"src":"343:536:5","usedErrors":[],"usedEvents":[]}],"src":"113:767:5"},"id":5},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1440],"IERC20Errors":[1345],"IERC721Errors":[1393]},"id":1441,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1305,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1306,"nodeType":"StructuredDocumentation","src":"138:139:6","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":1345,"linearizedBaseContracts":[1345],"name":"IERC20Errors","nameLocation":"288:12:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1307,"nodeType":"StructuredDocumentation","src":"307:309:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1315,"name":"ERC20InsufficientBalance","nameLocation":"627:24:6","nodeType":"ErrorDefinition","parameters":{"id":1314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1309,"mutability":"mutable","name":"sender","nameLocation":"660:6:6","nodeType":"VariableDeclaration","scope":1315,"src":"652:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1308,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1311,"mutability":"mutable","name":"balance","nameLocation":"676:7:6","nodeType":"VariableDeclaration","scope":1315,"src":"668:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1313,"mutability":"mutable","name":"needed","nameLocation":"693:6:6","nodeType":"VariableDeclaration","scope":1315,"src":"685:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1312,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:6"},"src":"621:80:6"},{"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"707:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1320,"name":"ERC20InvalidSender","nameLocation":"870:18:6","nodeType":"ErrorDefinition","parameters":{"id":1319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"sender","nameLocation":"897:6:6","nodeType":"VariableDeclaration","scope":1320,"src":"889:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:6"},"src":"864:41:6"},{"documentation":{"id":1321,"nodeType":"StructuredDocumentation","src":"911:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1325,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:6","nodeType":"ErrorDefinition","parameters":{"id":1324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1323,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:6","nodeType":"VariableDeclaration","scope":1325,"src":"1102:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1322,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:6"},"src":"1075:45:6"},{"documentation":{"id":1326,"nodeType":"StructuredDocumentation","src":"1126:345:6","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1334,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:6","nodeType":"ErrorDefinition","parameters":{"id":1333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1328,"mutability":"mutable","name":"spender","nameLocation":"1517:7:6","nodeType":"VariableDeclaration","scope":1334,"src":"1509:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:6","nodeType":"VariableDeclaration","scope":1334,"src":"1526:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1332,"mutability":"mutable","name":"needed","nameLocation":"1553:6:6","nodeType":"VariableDeclaration","scope":1334,"src":"1545:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:6"},"src":"1476:85:6"},{"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"1567:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1339,"name":"ERC20InvalidApprover","nameLocation":"1752:20:6","nodeType":"ErrorDefinition","parameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"approver","nameLocation":"1781:8:6","nodeType":"VariableDeclaration","scope":1339,"src":"1773:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:6"},"src":"1746:45:6"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"1797:195:6","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1344,"name":"ERC20InvalidSpender","nameLocation":"2003:19:6","nodeType":"ErrorDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"spender","nameLocation":"2031:7:6","nodeType":"VariableDeclaration","scope":1344,"src":"2023:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:6"},"src":"1997:43:6"}],"scope":1441,"src":"278:1764:6","usedErrors":[1315,1320,1325,1334,1339,1344],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1346,"nodeType":"StructuredDocumentation","src":"2044:141:6","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":1393,"linearizedBaseContracts":[1393],"name":"IERC721Errors","nameLocation":"2196:13:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1347,"nodeType":"StructuredDocumentation","src":"2216:219:6","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1351,"name":"ERC721InvalidOwner","nameLocation":"2446:18:6","nodeType":"ErrorDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"owner","nameLocation":"2473:5:6","nodeType":"VariableDeclaration","scope":1351,"src":"2465:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:6"},"src":"2440:40:6"},{"documentation":{"id":1352,"nodeType":"StructuredDocumentation","src":"2486:132:6","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1356,"name":"ERC721NonexistentToken","nameLocation":"2629:22:6","nodeType":"ErrorDefinition","parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:6","nodeType":"VariableDeclaration","scope":1356,"src":"2652:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:6"},"src":"2623:46:6"},{"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"2675:289:6","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1365,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:6","nodeType":"ErrorDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"sender","nameLocation":"3004:6:6","nodeType":"VariableDeclaration","scope":1365,"src":"2996:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:6","nodeType":"VariableDeclaration","scope":1365,"src":"3012:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1360,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"owner","nameLocation":"3037:5:6","nodeType":"VariableDeclaration","scope":1365,"src":"3029:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:6"},"src":"2969:75:6"},{"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"3050:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1370,"name":"ERC721InvalidSender","nameLocation":"3213:19:6","nodeType":"ErrorDefinition","parameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"sender","nameLocation":"3241:6:6","nodeType":"VariableDeclaration","scope":1370,"src":"3233:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:6"},"src":"3207:42:6"},{"documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"3255:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1375,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:6","nodeType":"ErrorDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:6","nodeType":"VariableDeclaration","scope":1375,"src":"3447:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:6"},"src":"3419:46:6"},{"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"3471:247:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1382,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:6","nodeType":"ErrorDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"operator","nameLocation":"3764:8:6","nodeType":"VariableDeclaration","scope":1382,"src":"3756:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:6","nodeType":"VariableDeclaration","scope":1382,"src":"3774:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1379,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:6"},"src":"3723:68:6"},{"documentation":{"id":1383,"nodeType":"StructuredDocumentation","src":"3797:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1387,"name":"ERC721InvalidApprover","nameLocation":"3982:21:6","nodeType":"ErrorDefinition","parameters":{"id":1386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1385,"mutability":"mutable","name":"approver","nameLocation":"4012:8:6","nodeType":"VariableDeclaration","scope":1387,"src":"4004:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:6"},"src":"3976:46:6"},{"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"4028:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1392,"name":"ERC721InvalidOperator","nameLocation":"4236:21:6","nodeType":"ErrorDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"operator","nameLocation":"4266:8:6","nodeType":"VariableDeclaration","scope":1392,"src":"4258:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:6"},"src":"4230:46:6"}],"scope":1441,"src":"2186:2092:6","usedErrors":[1351,1356,1365,1370,1375,1382,1387,1392],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1394,"nodeType":"StructuredDocumentation","src":"4280:143:6","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1440,"linearizedBaseContracts":[1440],"name":"IERC1155Errors","nameLocation":"4434:14:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"4455:361:6","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1405,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:6","nodeType":"ErrorDefinition","parameters":{"id":1404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"sender","nameLocation":"4862:6:6","nodeType":"VariableDeclaration","scope":1405,"src":"4854:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1399,"mutability":"mutable","name":"balance","nameLocation":"4878:7:6","nodeType":"VariableDeclaration","scope":1405,"src":"4870:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"needed","nameLocation":"4895:6:6","nodeType":"VariableDeclaration","scope":1405,"src":"4887:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1400,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:6","nodeType":"VariableDeclaration","scope":1405,"src":"4903:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:6"},"src":"4821:99:6"},{"documentation":{"id":1406,"nodeType":"StructuredDocumentation","src":"4926:152:6","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1410,"name":"ERC1155InvalidSender","nameLocation":"5089:20:6","nodeType":"ErrorDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"sender","nameLocation":"5118:6:6","nodeType":"VariableDeclaration","scope":1410,"src":"5110:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1407,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:6"},"src":"5083:43:6"},{"documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"5132:159:6","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1415,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:6","nodeType":"ErrorDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:6","nodeType":"VariableDeclaration","scope":1415,"src":"5325:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1412,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:6"},"src":"5296:47:6"},{"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"5349:256:6","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1422,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:6","nodeType":"ErrorDefinition","parameters":{"id":1421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"operator","nameLocation":"5653:8:6","nodeType":"VariableDeclaration","scope":1422,"src":"5645:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"owner","nameLocation":"5671:5:6","nodeType":"VariableDeclaration","scope":1422,"src":"5663:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1419,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:6"},"src":"5610:68:6"},{"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"5684:174:6","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1427,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:6","nodeType":"ErrorDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"approver","nameLocation":"5900:8:6","nodeType":"VariableDeclaration","scope":1427,"src":"5892:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:6"},"src":"5863:47:6"},{"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"5916:197:6","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1432,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:6","nodeType":"ErrorDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"operator","nameLocation":"6155:8:6","nodeType":"VariableDeclaration","scope":1432,"src":"6147:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1429,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:6"},"src":"6118:47:6"},{"documentation":{"id":1433,"nodeType":"StructuredDocumentation","src":"6171:280:6","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1439,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:6","nodeType":"ErrorDefinition","parameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:6","nodeType":"VariableDeclaration","scope":1439,"src":"6488:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:6","nodeType":"VariableDeclaration","scope":1439,"src":"6507:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:6"},"src":"6456:73:6"}],"scope":1441,"src":"4424:2107:6","usedErrors":[1405,1410,1415,1422,1427,1432,1439],"usedEvents":[]}],"src":"112:6420:6"},"id":6},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2110],"ERC1967Utils":[1743],"IBeacon":[1753],"StorageSlot":[2220]},"id":1744,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1442,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:7"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1744,"sourceUnit":1754,"src":"140:46:7","symbolAliases":[{"foreign":{"id":1443,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"148:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1744,"sourceUnit":2111,"src":"187:48:7","symbolAliases":[{"foreign":{"id":1445,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"195:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1744,"sourceUnit":2221,"src":"236:56:7","symbolAliases":[{"foreign":{"id":1447,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"244:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1449,"nodeType":"StructuredDocumentation","src":"294:154:7","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1743,"linearizedBaseContracts":[1743],"name":"ERC1967Utils","nameLocation":"457:12:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"660:68:7","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1454,"name":"Upgraded","nameLocation":"739:8:7","nodeType":"EventDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:7","nodeType":"VariableDeclaration","scope":1454,"src":"748:30:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:7"},"src":"733:47:7"},{"anonymous":false,"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"786:67:7","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1461,"name":"AdminChanged","nameLocation":"864:12:7","nodeType":"EventDefinition","parameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:7","nodeType":"VariableDeclaration","scope":1461,"src":"877:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1456,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1459,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:7","nodeType":"VariableDeclaration","scope":1461,"src":"900:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:7"},"src":"858:60:7"},{"anonymous":false,"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"924:59:7","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1466,"name":"BeaconUpgraded","nameLocation":"994:14:7","nodeType":"EventDefinition","parameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:7","nodeType":"VariableDeclaration","scope":1466,"src":"1009:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:7"},"src":"988:45:7"},{"constant":true,"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"1039:170:7","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1470,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:7","nodeType":"VariableDeclaration","scope":1743,"src":"1279:114:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:7","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"1400:69:7","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1475,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:7","nodeType":"ErrorDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:7","nodeType":"VariableDeclaration","scope":1475,"src":"1509:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1472,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:7"},"src":"1474:59:7"},{"documentation":{"id":1476,"nodeType":"StructuredDocumentation","src":"1539:60:7","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1480,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:7","nodeType":"ErrorDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"admin","nameLocation":"1638:5:7","nodeType":"VariableDeclaration","scope":1480,"src":"1630:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1477,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:7"},"src":"1604:41:7"},{"documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"1651:61:7","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1485,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:7","nodeType":"ErrorDefinition","parameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:7","nodeType":"VariableDeclaration","scope":1485,"src":"1744:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:7"},"src":"1717:43:7"},{"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"1766:82:7","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1488,"name":"ERC1967NonPayable","nameLocation":"1859:17:7","nodeType":"ErrorDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"1876:2:7"},"src":"1853:26:7"},{"body":{"id":1500,"nodeType":"Block","src":"2018:77:7","statements":[{"expression":{"expression":{"arguments":[{"id":1496,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2062:19:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1494,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"2035:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2220_$","typeString":"type(library StorageSlot)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"2035:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2116_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"2035:53:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1493,"id":1499,"nodeType":"Return","src":"2028:60:7"}]},"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"1885:67:7","text":" @dev Returns the current implementation address."},"id":1501,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:7","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"1983:2:7"},"returnParameters":{"id":1493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"2009:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:7"},"scope":1743,"src":"1957:138:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"2249:218:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1507,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2263:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:7","memberName":"code","nodeType":"MemberAccess","src":"2263:22:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:7","memberName":"length","nodeType":"MemberAccess","src":"2263:29:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1517,"nodeType":"IfStatement","src":"2259:119:7","trueBody":{"id":1516,"nodeType":"Block","src":"2299:79:7","statements":[{"errorCall":{"arguments":[{"id":1513,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2349:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1512,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"2320:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"RevertStatement","src":"2313:54:7"}]}},{"expression":{"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1521,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"2414:19:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1518,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"2387:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2220_$","typeString":"type(library StorageSlot)"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"2387:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2116_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1523,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"2387:53:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1524,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"2443:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1526,"nodeType":"ExpressionStatement","src":"2387:73:7"}]},"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"2101:80:7","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:7","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:7","nodeType":"VariableDeclaration","scope":1528,"src":"2214:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:7"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[],"src":"2249:0:7"},"scope":1743,"src":"2186:281:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1561,"nodeType":"Block","src":"2860:254:7","statements":[{"expression":{"arguments":[{"id":1537,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2889:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1536,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2870:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1539,"nodeType":"ExpressionStatement","src":"2870:37:7"},{"eventCall":{"arguments":[{"id":1541,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2931:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1540,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2922:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1543,"nodeType":"EmitStatement","src":"2917:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1544,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"2964:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:7","memberName":"length","nodeType":"MemberAccess","src":"2964:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1559,"nodeType":"Block","src":"3065:43:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1556,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"3079:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"ExpressionStatement","src":"3079:18:7"}]},"id":1560,"nodeType":"IfStatement","src":"2960:148:7","trueBody":{"id":1555,"nodeType":"Block","src":"2981:78:7","statements":[{"expression":{"arguments":[{"id":1551,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"3024:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1552,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"3043:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1548,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2995:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2110_$","typeString":"type(library Address)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:7","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2029,"src":"2995:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1554,"nodeType":"ExpressionStatement","src":"2995:53:7"}]}}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"2473:301:7","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:7","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:7","nodeType":"VariableDeclaration","scope":1562,"src":"2805:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"data","nameLocation":"2845:4:7","nodeType":"VariableDeclaration","scope":1562,"src":"2832:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1532,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:7"},"returnParameters":{"id":1535,"nodeType":"ParameterList","parameters":[],"src":"2860:0:7"},"scope":1743,"src":"2779:335:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"3120:145:7","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1566,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:7","nodeType":"VariableDeclaration","scope":1743,"src":"3335:105:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:7","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1578,"nodeType":"Block","src":"3844:68:7","statements":[{"expression":{"expression":{"arguments":[{"id":1574,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"3888:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1572,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"3861:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2220_$","typeString":"type(library StorageSlot)"}},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"3861:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2116_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"3861:44:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1571,"id":1577,"nodeType":"Return","src":"3854:51:7"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"3447:340:7","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:7","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[],"src":"3809:2:7"},"returnParameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1579,"src":"3835:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:7"},"scope":1743,"src":"3792:120:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1609,"nodeType":"Block","src":"4039:172:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4053:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:7","typeDescriptions":{}}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1599,"nodeType":"IfStatement","src":"4049:91:7","trueBody":{"id":1598,"nodeType":"Block","src":"4077:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:7","typeDescriptions":{}}},"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1591,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1480,"src":"4098:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1597,"nodeType":"RevertStatement","src":"4091:38:7"}]}},{"expression":{"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1603,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"4176:10:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1600,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4149:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2220_$","typeString":"type(library StorageSlot)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"4149:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2116_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"4149:44:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1606,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"4196:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1608,"nodeType":"ExpressionStatement","src":"4149:55:7"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"3918:71:7","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1610,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:7","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:7","nodeType":"VariableDeclaration","scope":1610,"src":"4013:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:7"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"4039:0:7"},"scope":1743,"src":"3994:217:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1626,"nodeType":"Block","src":"4379:85:7","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1617,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"4407:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1619,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4419:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1616,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"4394:12:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1621,"nodeType":"EmitStatement","src":"4389:39:7"},{"expression":{"arguments":[{"id":1623,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4448:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1622,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"4438:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1625,"nodeType":"ExpressionStatement","src":"4438:19:7"}]},"documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"4217:109:7","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1627,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:7","nodeType":"FunctionDefinition","parameters":{"id":1614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1613,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:7","nodeType":"VariableDeclaration","scope":1627,"src":"4352:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:7"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[],"src":"4379:0:7"},"scope":1743,"src":"4331:133:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"4470:201:7","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1631,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:7","nodeType":"VariableDeclaration","scope":1743,"src":"4741:106:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:7","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1643,"nodeType":"Block","src":"4963:69:7","statements":[{"expression":{"expression":{"arguments":[{"id":1639,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5007:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1637,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"4980:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2220_$","typeString":"type(library StorageSlot)"}},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"4980:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2116_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"4980:45:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1636,"id":1642,"nodeType":"Return","src":"4973:52:7"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"4854:51:7","text":" @dev Returns the current beacon."},"id":1644,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:7","nodeType":"FunctionDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[],"src":"4928:2:7"},"returnParameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1644,"src":"4954:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1634,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:7"},"scope":1743,"src":"4910:122:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1689,"nodeType":"Block","src":"5161:390:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1650,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5175:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:7","memberName":"code","nodeType":"MemberAccess","src":"5175:14:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:7","memberName":"length","nodeType":"MemberAccess","src":"5175:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1660,"nodeType":"IfStatement","src":"5171:95:7","trueBody":{"id":1659,"nodeType":"Block","src":"5203:63:7","statements":[{"errorCall":{"arguments":[{"id":1656,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5245:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1655,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"5224:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1658,"nodeType":"RevertStatement","src":"5217:38:7"}]}},{"expression":{"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1664,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"5303:11:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1661,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2220,"src":"5276:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2220_$","typeString":"type(library StorageSlot)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:7","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2142,"src":"5276:26:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2116_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:7","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2115,"src":"5276:45:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1667,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5324:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1669,"nodeType":"ExpressionStatement","src":"5276:57:7"},{"assignments":[1671],"declarations":[{"constant":false,"id":1671,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:7","nodeType":"VariableDeclaration","scope":1689,"src":"5344:28:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1677,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1673,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5383:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1672,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"5375:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1753_$","typeString":"type(contract IBeacon)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1753","typeString":"contract IBeacon"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:7","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"5375:33:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1678,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5424:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:7","memberName":"code","nodeType":"MemberAccess","src":"5424:25:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:7","memberName":"length","nodeType":"MemberAccess","src":"5424:32:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1688,"nodeType":"IfStatement","src":"5420:125:7","trueBody":{"id":1687,"nodeType":"Block","src":"5463:82:7","statements":[{"errorCall":{"arguments":[{"id":1684,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"5513:20:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1683,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"5484:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1686,"nodeType":"RevertStatement","src":"5477:57:7"}]}}]},"documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"5038:71:7","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1690,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:7","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:7","nodeType":"VariableDeclaration","scope":1690,"src":"5134:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:7"},"returnParameters":{"id":1649,"nodeType":"ParameterList","parameters":[],"src":"5161:0:7"},"scope":1743,"src":"5114:437:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1727,"nodeType":"Block","src":"6155:254:7","statements":[{"expression":{"arguments":[{"id":1699,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"6176:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1698,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"6165:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"ExpressionStatement","src":"6165:21:7"},{"eventCall":{"arguments":[{"id":1703,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"6216:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1702,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"6201:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1705,"nodeType":"EmitStatement","src":"6196:30:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1706,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"6241:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:7","memberName":"length","nodeType":"MemberAccess","src":"6241:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1725,"nodeType":"Block","src":"6360:43:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1722,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"6374:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1724,"nodeType":"ExpressionStatement","src":"6374:18:7"}]},"id":1726,"nodeType":"IfStatement","src":"6237:166:7","trueBody":{"id":1721,"nodeType":"Block","src":"6258:96:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1714,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"6309:9:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1713,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1753,"src":"6301:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1753_$","typeString":"type(contract IBeacon)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1753","typeString":"contract IBeacon"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:7","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"6301:33:7","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1718,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"6338:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1710,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"6272:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2110_$","typeString":"type(library Address)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:7","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2029,"src":"6272:28:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1720,"nodeType":"ExpressionStatement","src":"6272:71:7"}]}}]},"documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"5557:514:7","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:7","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1693,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:7","nodeType":"VariableDeclaration","scope":1728,"src":"6108:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1692,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"data","nameLocation":"6140:4:7","nodeType":"VariableDeclaration","scope":1728,"src":"6127:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1694,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:7"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[],"src":"6155:0:7"},"scope":1743,"src":"6076:333:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"6634:86:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1732,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:7","memberName":"value","nodeType":"MemberAccess","src":"6648:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1740,"nodeType":"IfStatement","src":"6644:70:7","trueBody":{"id":1739,"nodeType":"Block","src":"6663:51:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1736,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"6684:17:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1738,"nodeType":"RevertStatement","src":"6677:26:7"}]}}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"6415:178:7","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:7","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[],"src":"6623:2:7"},"returnParameters":{"id":1731,"nodeType":"ParameterList","parameters":[],"src":"6634:0:7"},"scope":1743,"src":"6598:122:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1744,"src":"449:6273:7","usedErrors":[1475,1480,1485,1488],"usedEvents":[1454,1461,1466]}],"src":"114:6609:7"},"id":7},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1753]},"id":1754,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1745,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"134:79:8","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1753,"linearizedBaseContracts":[1753],"name":"IBeacon","nameLocation":"224:7:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"238:168:8","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1752,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:8","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[],"src":"434:2:8"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1752,"src":"460:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1749,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:8"},"scope":1753,"src":"411:58:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1754,"src":"214:257:8","usedErrors":[],"usedEvents":[]}],"src":"108:364:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1831]},"id":1832,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1755,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1756,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1831,"linearizedBaseContracts":[1831],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1765,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1765,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1758,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1761,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1765,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1763,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1765,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1766,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1774,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1768,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1774,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1770,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1774,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1774,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1771,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1780,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1780,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1777,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1831,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1788,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1788,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1788,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1831,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1789,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1798,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1791,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1798,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1790,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1793,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1798,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1798,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1831,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1799,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1808,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1808,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1803,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1808,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1802,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1808,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1831,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1809,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1818,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1818,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1813,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1818,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1818,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1815,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1831,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1830,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1830,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1830,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1822,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1830,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1830,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1827,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1831,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1832,"src":"203:2575:9","usedErrors":[],"usedEvents":[1765,1774]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1831],"IERC20Metadata":[1857]},"id":1858,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1833,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1835,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1858,"sourceUnit":1832,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1834,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1837,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1831,"src":"305:6:10"},"id":1838,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1836,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1857,"linearizedBaseContracts":[1857,1831],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1844,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1844,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1841,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1857,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1845,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1850,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1846,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1850,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1847,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1857,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1856,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1856,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1853,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1857,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1858,"src":"277:405:10","usedErrors":[],"usedEvents":[1765,1774]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2110]},"id":2111,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1859,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2110,"linearizedBaseContracts":[2110],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1865,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1865,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1862,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1870,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1870,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1867,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1873,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1913,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1883,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}],"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1881,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1896,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1895,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1891,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1888,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1894,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1898,null],"declarations":[{"constant":false,"id":1898,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1913,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1897,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1905,"initialValue":{"arguments":[{"hexValue":"","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1899,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1901,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1906,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1912,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1911,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1908,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1910,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1874,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1876,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1914,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1914,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1880,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2110,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1930,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1925,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1926,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1924,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1923,"id":1929,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1931,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1931,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1916,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1919,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1931,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1918,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1931,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1921,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2110,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1945,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}],"id":1944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1958,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1957,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1953,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2110","typeString":"library Address"}],"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1950,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1960,1962],"declarations":[{"constant":false,"id":1960,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1976,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1959,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1976,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1961,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1969,"initialValue":{"arguments":[{"id":1967,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1963,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1971,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1972,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1973,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1970,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1942,"id":1975,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1932,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1934,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1977,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1933,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1936,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1977,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1935,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1938,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1977,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1940,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2110,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2002,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1988,1990],"declarations":[{"constant":false,"id":1988,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":2002,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1987,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":2002,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1989,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1995,"initialValue":{"arguments":[{"id":1993,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1991,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1997,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1998,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1999,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1996,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1986,"id":2001,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2003,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":2003,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1979,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":2003,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1981,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2003,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1984,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2110,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[2014,2016],"declarations":[{"constant":false,"id":2014,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":2028,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2013,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2016,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":2028,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2015,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2021,"initialValue":{"arguments":[{"id":2019,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2017,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":2023,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2024,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2025,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2022,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2012,"id":2027,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":2004,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2006,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":2029,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2005,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2008,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":2029,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2007,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":2012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2010,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2110,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2068,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":2041,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2066,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2048,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2052,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2063,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":2062,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":2059,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2058,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2061,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":2064,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2040,"id":2065,"nodeType":"Return","src":"5173:17:11"}]},"id":2067,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":2047,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":2044,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2043,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2046,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2069,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":2069,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2031,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2034,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":2069,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2033,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":2069,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2069,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2038,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2110,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2090,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":2079,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2072,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2088,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":2086,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2078,"id":2087,"nodeType":"Return","src":"5597:17:11"}]},"id":2089,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":2085,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":2082,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2074,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2081,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2084,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":2070,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2091,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":2075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2072,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":2091,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2071,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2074,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":2091,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2073,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2091,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2076,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2110,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2097,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2094,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2106,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2103,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2107,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2102,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2094,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":2094,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":2101,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":2092,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":2095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2094,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2109,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2093,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":2096,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2110,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2111,"src":"195:6066:11","usedErrors":[1865,1870,1873],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2220]},"id":2221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2112,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2113,"nodeType":"StructuredDocumentation","src":"219:1025:12","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2220,"linearizedBaseContracts":[2220],"name":"StorageSlot","nameLocation":"1253:11:12","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2116,"members":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1308:5:12","nodeType":"VariableDeclaration","scope":2116,"src":"1300:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2114,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:12","nodeType":"StructDefinition","scope":2220,"src":"1271:49:12","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2119,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"1360:5:12","nodeType":"VariableDeclaration","scope":2119,"src":"1355:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2117,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:12","nodeType":"StructDefinition","scope":2220,"src":"1326:46:12","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1415:5:12","nodeType":"VariableDeclaration","scope":2122,"src":"1407:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:12","nodeType":"StructDefinition","scope":2220,"src":"1378:49:12","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2125,"members":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"1470:5:12","nodeType":"VariableDeclaration","scope":2125,"src":"1462:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:12","nodeType":"StructDefinition","scope":2220,"src":"1433:49:12","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2128,"members":[{"constant":false,"id":2127,"mutability":"mutable","name":"value","nameLocation":"1523:5:12","nodeType":"VariableDeclaration","scope":2128,"src":"1516:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2126,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:12","nodeType":"StructDefinition","scope":2220,"src":"1488:47:12","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2131,"members":[{"constant":false,"id":2130,"mutability":"mutable","name":"value","nameLocation":"1574:5:12","nodeType":"VariableDeclaration","scope":2131,"src":"1568:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2129,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:12","nodeType":"StructDefinition","scope":2220,"src":"1541:45:12","visibility":"public"},{"body":{"id":2141,"nodeType":"Block","src":"1768:106:12","statements":[{"AST":{"nativeSrc":"1830:38:12","nodeType":"YulBlock","src":"1830:38:12","statements":[{"nativeSrc":"1844:14:12","nodeType":"YulAssignment","src":"1844:14:12","value":{"name":"slot","nativeSrc":"1854:4:12","nodeType":"YulIdentifier","src":"1854:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:12","nodeType":"YulIdentifier","src":"1844:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2138,"isOffset":false,"isSlot":true,"src":"1844:6:12","suffix":"slot","valueSize":1},{"declaration":2134,"isOffset":false,"isSlot":false,"src":"1854:4:12","valueSize":1}],"id":2140,"nodeType":"InlineAssembly","src":"1821:47:12"}]},"documentation":{"id":2132,"nodeType":"StructuredDocumentation","src":"1592:87:12","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2142,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:12","nodeType":"FunctionDefinition","parameters":{"id":2135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2134,"mutability":"mutable","name":"slot","nameLocation":"1716:4:12","nodeType":"VariableDeclaration","scope":2142,"src":"1708:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:12"},"returnParameters":{"id":2139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2138,"mutability":"mutable","name":"r","nameLocation":"1765:1:12","nodeType":"VariableDeclaration","scope":2142,"src":"1745:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2137,"nodeType":"UserDefinedTypeName","pathNode":{"id":2136,"name":"AddressSlot","nameLocations":["1745:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"1745:11:12"},"referencedDeclaration":2116,"src":"1745:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2116_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:12"},"scope":2220,"src":"1684:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2152,"nodeType":"Block","src":"2056:106:12","statements":[{"AST":{"nativeSrc":"2118:38:12","nodeType":"YulBlock","src":"2118:38:12","statements":[{"nativeSrc":"2132:14:12","nodeType":"YulAssignment","src":"2132:14:12","value":{"name":"slot","nativeSrc":"2142:4:12","nodeType":"YulIdentifier","src":"2142:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:12","nodeType":"YulIdentifier","src":"2132:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2149,"isOffset":false,"isSlot":true,"src":"2132:6:12","suffix":"slot","valueSize":1},{"declaration":2145,"isOffset":false,"isSlot":false,"src":"2142:4:12","valueSize":1}],"id":2151,"nodeType":"InlineAssembly","src":"2109:47:12"}]},"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"1880:87:12","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2153,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:12","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"slot","nameLocation":"2004:4:12","nodeType":"VariableDeclaration","scope":2153,"src":"1996:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:12"},"returnParameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"r","nameLocation":"2053:1:12","nodeType":"VariableDeclaration","scope":2153,"src":"2033:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2119_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2148,"nodeType":"UserDefinedTypeName","pathNode":{"id":2147,"name":"BooleanSlot","nameLocations":["2033:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2033:11:12"},"referencedDeclaration":2119,"src":"2033:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2119_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:12"},"scope":2220,"src":"1972:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2163,"nodeType":"Block","src":"2344:106:12","statements":[{"AST":{"nativeSrc":"2406:38:12","nodeType":"YulBlock","src":"2406:38:12","statements":[{"nativeSrc":"2420:14:12","nodeType":"YulAssignment","src":"2420:14:12","value":{"name":"slot","nativeSrc":"2430:4:12","nodeType":"YulIdentifier","src":"2430:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:12","nodeType":"YulIdentifier","src":"2420:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2160,"isOffset":false,"isSlot":true,"src":"2420:6:12","suffix":"slot","valueSize":1},{"declaration":2156,"isOffset":false,"isSlot":false,"src":"2430:4:12","valueSize":1}],"id":2162,"nodeType":"InlineAssembly","src":"2397:47:12"}]},"documentation":{"id":2154,"nodeType":"StructuredDocumentation","src":"2168:87:12","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:12","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2156,"mutability":"mutable","name":"slot","nameLocation":"2292:4:12","nodeType":"VariableDeclaration","scope":2164,"src":"2284:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:12"},"returnParameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"r","nameLocation":"2341:1:12","nodeType":"VariableDeclaration","scope":2164,"src":"2321:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2159,"nodeType":"UserDefinedTypeName","pathNode":{"id":2158,"name":"Bytes32Slot","nameLocations":["2321:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"2321:11:12"},"referencedDeclaration":2122,"src":"2321:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:12"},"scope":2220,"src":"2260:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2174,"nodeType":"Block","src":"2632:106:12","statements":[{"AST":{"nativeSrc":"2694:38:12","nodeType":"YulBlock","src":"2694:38:12","statements":[{"nativeSrc":"2708:14:12","nodeType":"YulAssignment","src":"2708:14:12","value":{"name":"slot","nativeSrc":"2718:4:12","nodeType":"YulIdentifier","src":"2718:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:12","nodeType":"YulIdentifier","src":"2708:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2171,"isOffset":false,"isSlot":true,"src":"2708:6:12","suffix":"slot","valueSize":1},{"declaration":2167,"isOffset":false,"isSlot":false,"src":"2718:4:12","valueSize":1}],"id":2173,"nodeType":"InlineAssembly","src":"2685:47:12"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"2456:87:12","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2175,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:12","nodeType":"FunctionDefinition","parameters":{"id":2168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"slot","nameLocation":"2580:4:12","nodeType":"VariableDeclaration","scope":2175,"src":"2572:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:12"},"returnParameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"r","nameLocation":"2629:1:12","nodeType":"VariableDeclaration","scope":2175,"src":"2609:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2125_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2170,"nodeType":"UserDefinedTypeName","pathNode":{"id":2169,"name":"Uint256Slot","nameLocations":["2609:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2609:11:12"},"referencedDeclaration":2125,"src":"2609:11:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2125_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:12"},"scope":2220,"src":"2548:190:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2185,"nodeType":"Block","src":"2917:106:12","statements":[{"AST":{"nativeSrc":"2979:38:12","nodeType":"YulBlock","src":"2979:38:12","statements":[{"nativeSrc":"2993:14:12","nodeType":"YulAssignment","src":"2993:14:12","value":{"name":"slot","nativeSrc":"3003:4:12","nodeType":"YulIdentifier","src":"3003:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:12","nodeType":"YulIdentifier","src":"2993:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2182,"isOffset":false,"isSlot":true,"src":"2993:6:12","suffix":"slot","valueSize":1},{"declaration":2178,"isOffset":false,"isSlot":false,"src":"3003:4:12","valueSize":1}],"id":2184,"nodeType":"InlineAssembly","src":"2970:47:12"}]},"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"2744:86:12","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2186,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:12","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"mutability":"mutable","name":"slot","nameLocation":"2866:4:12","nodeType":"VariableDeclaration","scope":2186,"src":"2858:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:12"},"returnParameters":{"id":2183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"r","nameLocation":"2914:1:12","nodeType":"VariableDeclaration","scope":2186,"src":"2895:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2128_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2181,"nodeType":"UserDefinedTypeName","pathNode":{"id":2180,"name":"StringSlot","nameLocations":["2895:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"2895:10:12"},"referencedDeclaration":2128,"src":"2895:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2128_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:12"},"scope":2220,"src":"2835:188:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2196,"nodeType":"Block","src":"3225:112:12","statements":[{"AST":{"nativeSrc":"3287:44:12","nodeType":"YulBlock","src":"3287:44:12","statements":[{"nativeSrc":"3301:20:12","nodeType":"YulAssignment","src":"3301:20:12","value":{"name":"store.slot","nativeSrc":"3311:10:12","nodeType":"YulIdentifier","src":"3311:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:12","nodeType":"YulIdentifier","src":"3301:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2193,"isOffset":false,"isSlot":true,"src":"3301:6:12","suffix":"slot","valueSize":1},{"declaration":2189,"isOffset":false,"isSlot":true,"src":"3311:10:12","suffix":"slot","valueSize":1}],"id":2195,"nodeType":"InlineAssembly","src":"3278:53:12"}]},"documentation":{"id":2187,"nodeType":"StructuredDocumentation","src":"3029:101:12","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2197,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:12","nodeType":"FunctionDefinition","parameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"store","nameLocation":"3173:5:12","nodeType":"VariableDeclaration","scope":2197,"src":"3158:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2188,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:12"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"r","nameLocation":"3222:1:12","nodeType":"VariableDeclaration","scope":2197,"src":"3203:20:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2128_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2192,"nodeType":"UserDefinedTypeName","pathNode":{"id":2191,"name":"StringSlot","nameLocations":["3203:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3203:10:12"},"referencedDeclaration":2128,"src":"3203:10:12","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2128_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:12"},"scope":2220,"src":"3135:202:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2207,"nodeType":"Block","src":"3513:106:12","statements":[{"AST":{"nativeSrc":"3575:38:12","nodeType":"YulBlock","src":"3575:38:12","statements":[{"nativeSrc":"3589:14:12","nodeType":"YulAssignment","src":"3589:14:12","value":{"name":"slot","nativeSrc":"3599:4:12","nodeType":"YulIdentifier","src":"3599:4:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:12","nodeType":"YulIdentifier","src":"3589:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2204,"isOffset":false,"isSlot":true,"src":"3589:6:12","suffix":"slot","valueSize":1},{"declaration":2200,"isOffset":false,"isSlot":false,"src":"3599:4:12","valueSize":1}],"id":2206,"nodeType":"InlineAssembly","src":"3566:47:12"}]},"documentation":{"id":2198,"nodeType":"StructuredDocumentation","src":"3343:85:12","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2208,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:12","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"mutability":"mutable","name":"slot","nameLocation":"3463:4:12","nodeType":"VariableDeclaration","scope":2208,"src":"3455:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:12"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"r","nameLocation":"3510:1:12","nodeType":"VariableDeclaration","scope":2208,"src":"3492:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2131_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2203,"nodeType":"UserDefinedTypeName","pathNode":{"id":2202,"name":"BytesSlot","nameLocations":["3492:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2131,"src":"3492:9:12"},"referencedDeclaration":2131,"src":"3492:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2131_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:12"},"scope":2220,"src":"3433:186:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2218,"nodeType":"Block","src":"3816:112:12","statements":[{"AST":{"nativeSrc":"3878:44:12","nodeType":"YulBlock","src":"3878:44:12","statements":[{"nativeSrc":"3892:20:12","nodeType":"YulAssignment","src":"3892:20:12","value":{"name":"store.slot","nativeSrc":"3902:10:12","nodeType":"YulIdentifier","src":"3902:10:12"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:12","nodeType":"YulIdentifier","src":"3892:6:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2215,"isOffset":false,"isSlot":true,"src":"3892:6:12","suffix":"slot","valueSize":1},{"declaration":2211,"isOffset":false,"isSlot":true,"src":"3902:10:12","suffix":"slot","valueSize":1}],"id":2217,"nodeType":"InlineAssembly","src":"3869:53:12"}]},"documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"3625:99:12","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:12","nodeType":"FunctionDefinition","parameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"store","nameLocation":"3765:5:12","nodeType":"VariableDeclaration","scope":2219,"src":"3751:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2210,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:12"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"r","nameLocation":"3813:1:12","nodeType":"VariableDeclaration","scope":2219,"src":"3795:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2131_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2214,"nodeType":"UserDefinedTypeName","pathNode":{"id":2213,"name":"BytesSlot","nameLocations":["3795:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":2131,"src":"3795:9:12"},"referencedDeclaration":2131,"src":"3795:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2131_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:12"},"scope":2220,"src":"3729:199:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2221,"src":"1245:2685:12","usedErrors":[],"usedEvents":[]}],"src":"193:3738:12"},"id":12},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[2303]},"id":2304,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2222,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3Factory","contractDependencies":[],"contractKind":"interface","documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"71:163:13","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":2303,"linearizedBaseContracts":[2303],"name":"IUniswapV3Factory","nameLocation":"244:17:13","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2224,"nodeType":"StructuredDocumentation","src":"268:185:13","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"eventSelector":"b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c","id":2230,"name":"OwnerChanged","nameLocation":"464:12:13","nodeType":"EventDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"indexed":true,"mutability":"mutable","name":"oldOwner","nameLocation":"493:8:13","nodeType":"VariableDeclaration","scope":2230,"src":"477:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"519:8:13","nodeType":"VariableDeclaration","scope":2230,"src":"503:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:13"},"src":"458:71:13"},{"anonymous":false,"documentation":{"id":2231,"nodeType":"StructuredDocumentation","src":"535:421:13","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"eventSelector":"783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118","id":2243,"name":"PoolCreated","nameLocation":"967:11:13","nodeType":"EventDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2233,"indexed":true,"mutability":"mutable","name":"token0","nameLocation":"1004:6:13","nodeType":"VariableDeclaration","scope":2243,"src":"988:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2232,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2235,"indexed":true,"mutability":"mutable","name":"token1","nameLocation":"1036:6:13","nodeType":"VariableDeclaration","scope":2243,"src":"1020:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2234,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2237,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1067:3:13","nodeType":"VariableDeclaration","scope":2243,"src":"1052:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2236,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2239,"indexed":false,"mutability":"mutable","name":"tickSpacing","nameLocation":"1086:11:13","nodeType":"VariableDeclaration","scope":2243,"src":"1080:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2238,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2241,"indexed":false,"mutability":"mutable","name":"pool","nameLocation":"1115:4:13","nodeType":"VariableDeclaration","scope":2243,"src":"1107:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2240,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:13"},"src":"961:165:13"},{"anonymous":false,"documentation":{"id":2244,"nodeType":"StructuredDocumentation","src":"1132:275:13","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"eventSelector":"c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc","id":2250,"name":"FeeAmountEnabled","nameLocation":"1418:16:13","nodeType":"EventDefinition","parameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"indexed":true,"mutability":"mutable","name":"fee","nameLocation":"1450:3:13","nodeType":"VariableDeclaration","scope":2250,"src":"1435:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2245,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2248,"indexed":true,"mutability":"mutable","name":"tickSpacing","nameLocation":"1469:11:13","nodeType":"VariableDeclaration","scope":2250,"src":"1455:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2247,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:13"},"src":"1412:70:13"},{"documentation":{"id":2251,"nodeType":"StructuredDocumentation","src":"1488:163:13","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":2256,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1665:5:13","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[],"src":"1670:2:13"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2256,"src":"1696:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:13"},"scope":2303,"src":"1656:49:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2257,"nodeType":"StructuredDocumentation","src":"1711:348:13","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":2264,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nameLocation":"2073:20:13","nodeType":"FunctionDefinition","parameters":{"id":2260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"fee","nameLocation":"2101:3:13","nodeType":"VariableDeclaration","scope":2264,"src":"2094:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2258,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:13"},"returnParameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2264,"src":"2129:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2261,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:13"},"scope":2303,"src":"2064:72:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2265,"nodeType":"StructuredDocumentation","src":"2142:471:13","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":2276,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"2627:7:13","nodeType":"FunctionDefinition","parameters":{"id":2272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"tokenA","nameLocation":"2652:6:13","nodeType":"VariableDeclaration","scope":2276,"src":"2644:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2266,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"tokenB","nameLocation":"2676:6:13","nodeType":"VariableDeclaration","scope":2276,"src":"2668:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2268,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2271,"mutability":"mutable","name":"fee","nameLocation":"2699:3:13","nodeType":"VariableDeclaration","scope":2276,"src":"2692:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2270,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:13"},"returnParameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2274,"mutability":"mutable","name":"pool","nameLocation":"2740:4:13","nodeType":"VariableDeclaration","scope":2276,"src":"2732:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2273,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:13"},"scope":2303,"src":"2618:128:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2277,"nodeType":"StructuredDocumentation","src":"2752:554:13","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":2288,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"3320:10:13","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"tokenA","nameLocation":"3348:6:13","nodeType":"VariableDeclaration","scope":2288,"src":"3340:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"tokenB","nameLocation":"3372:6:13","nodeType":"VariableDeclaration","scope":2288,"src":"3364:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2280,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"fee","nameLocation":"3395:3:13","nodeType":"VariableDeclaration","scope":2288,"src":"3388:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2282,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:13"},"returnParameters":{"id":2287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2286,"mutability":"mutable","name":"pool","nameLocation":"3431:4:13","nodeType":"VariableDeclaration","scope":2288,"src":"3423:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:13"},"scope":2303,"src":"3311:126:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"3443:144:13","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":2294,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nameLocation":"3601:8:13","nodeType":"FunctionDefinition","parameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"_owner","nameLocation":"3618:6:13","nodeType":"VariableDeclaration","scope":2294,"src":"3610:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:13"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[],"src":"3634:0:13"},"scope":2303,"src":"3592:43:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"3641:326:13","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":2302,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nameLocation":"3981:15:13","nodeType":"FunctionDefinition","parameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"fee","nameLocation":"4004:3:13","nodeType":"VariableDeclaration","scope":2302,"src":"3997:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2296,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:13","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"tickSpacing","nameLocation":"4015:11:13","nodeType":"VariableDeclaration","scope":2302,"src":"4009:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2298,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:13","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:13"},"returnParameters":{"id":2301,"nodeType":"ParameterList","parameters":[],"src":"4036:0:13"},"scope":2303,"src":"3972:65:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2304,"src":"234:3805:13","usedErrors":[],"usedEvents":[2230,2243,2250]}],"src":"45:3995:13"},"id":13},"contracts/BaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/BaluniV1Oracle.sol","exportedSymbols":{"BaluniV1Oracle":[2878],"ContextUpgradeable":[1293],"ERC1967Utils":[1743],"ERC20Upgradeable":[1247],"I1inchSpotAgg":[2905],"IBaluniV1Oracle":[2930],"IBaluniV1Registry":[3104],"IERC1822Proxiable":[1303],"IERC20":[1831],"IERC20Errors":[1345],"IERC20Metadata":[1857],"IStaticOracle":[3286],"IUniswapV3Factory":[2303],"Initializable":[448],"OwnableUpgradeable":[194],"UUPSUpgradeable":[630]},"id":2879,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2305,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:14"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":195,"src":"1470:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":449,"src":"1547:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":631,"src":"1624:77:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":2309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":1248,"src":"1703:78:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","file":"./interfaces/I1inchSpotAgg.sol","id":2310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":2906,"src":"1783:40:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"./interfaces/IBaluniV1Registry.sol","id":2311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":3105,"src":"1825:44:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","file":"./interfaces/IBaluniV1Oracle.sol","id":2312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":2931,"src":"1871:42:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IStaticOracle.sol","file":"./interfaces/IStaticOracle.sol","id":2313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2879,"sourceUnit":3287,"src":"1915:40:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2314,"name":"Initializable","nameLocations":["1986:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1986:13:14"},"id":2315,"nodeType":"InheritanceSpecifier","src":"1986:13:14"},{"baseName":{"id":2316,"name":"OwnableUpgradeable","nameLocations":["2001:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2001:18:14"},"id":2317,"nodeType":"InheritanceSpecifier","src":"2001:18:14"},{"baseName":{"id":2318,"name":"UUPSUpgradeable","nameLocations":["2021:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2021:15:14"},"id":2319,"nodeType":"InheritanceSpecifier","src":"2021:15:14"},{"baseName":{"id":2320,"name":"IBaluniV1Oracle","nameLocations":["2038:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":2930,"src":"2038:15:14"},"id":2321,"nodeType":"InheritanceSpecifier","src":"2038:15:14"}],"canonicalName":"BaluniV1Oracle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2878,"linearizedBaseContracts":[2878,2930,630,1303,194,1293,448],"name":"BaluniV1Oracle","nameLocation":"1968:14:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"7b103999","id":2324,"mutability":"mutable","name":"registry","nameLocation":"2086:8:14","nodeType":"VariableDeclaration","scope":2878,"src":"2061:33:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"},"typeName":{"id":2323,"nodeType":"UserDefinedTypeName","pathNode":{"id":2322,"name":"IBaluniV1Registry","nameLocations":["2061:17:14"],"nodeType":"IdentifierPath","referencedDeclaration":3104,"src":"2061:17:14"},"referencedDeclaration":3104,"src":"2061:17:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"visibility":"public"},{"body":{"id":2345,"nodeType":"Block","src":"2161:130:14","statements":[{"expression":{"arguments":[{"expression":{"id":2332,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2187:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2187:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2331,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2172:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"ExpressionStatement","src":"2172:26:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2336,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2209:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2338,"nodeType":"ExpressionStatement","src":"2209:24:14"},{"expression":{"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2339,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2244:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2341,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2326,"src":"2273:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2340,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"2255:17:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$3104_$","typeString":"type(contract IBaluniV1Registry)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2255:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"src":"2244:39:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"id":2344,"nodeType":"ExpressionStatement","src":"2244:39:14"}]},"functionSelector":"c4d66de8","id":2346,"implemented":true,"kind":"function","modifiers":[{"id":2329,"kind":"modifierInvocation","modifierName":{"id":2328,"name":"initializer","nameLocations":["2149:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2149:11:14"},"nodeType":"ModifierInvocation","src":"2149:11:14"}],"name":"initialize","nameLocation":"2112:10:14","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"_registry","nameLocation":"2131:9:14","nodeType":"VariableDeclaration","scope":2346,"src":"2123:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2325,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:19:14"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[],"src":"2161:0:14"},"scope":2878,"src":"2103:188:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2370,"nodeType":"Block","src":"2386:130:14","statements":[{"expression":{"arguments":[{"expression":{"id":2357,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2412:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2412:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2356,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2397:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2360,"nodeType":"ExpressionStatement","src":"2397:26:14"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2361,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2434:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2363,"nodeType":"ExpressionStatement","src":"2434:24:14"},{"expression":{"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2364,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"2469:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2366,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"2498:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2365,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"2480:17:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$3104_$","typeString":"type(contract IBaluniV1Registry)"}},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2480:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"src":"2469:39:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"id":2369,"nodeType":"ExpressionStatement","src":"2469:39:14"}]},"functionSelector":"8f2248bc","id":2371,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2353,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2350,"src":"2377:7:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2354,"kind":"modifierInvocation","modifierName":{"id":2352,"name":"reinitializer","nameLocations":["2363:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2363:13:14"},"nodeType":"ModifierInvocation","src":"2363:22:14"}],"name":"reinitialize","nameLocation":"2308:12:14","nodeType":"FunctionDefinition","parameters":{"id":2351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2348,"mutability":"mutable","name":"_registry","nameLocation":"2329:9:14","nodeType":"VariableDeclaration","scope":2371,"src":"2321:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2347,"name":"address","nodeType":"ElementaryTypeName","src":"2321:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2350,"mutability":"mutable","name":"version","nameLocation":"2347:7:14","nodeType":"VariableDeclaration","scope":2371,"src":"2340:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2349,"name":"uint64","nodeType":"ElementaryTypeName","src":"2340:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2320:35:14"},"returnParameters":{"id":2355,"nodeType":"ParameterList","parameters":[],"src":"2386:0:14"},"scope":2878,"src":"2299:217:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2918],"body":{"id":2407,"nodeType":"Block","src":"3155:240:14","statements":[{"clauses":[{"block":{"id":2395,"nodeType":"Block","src":"3256:44:14","statements":[{"expression":{"id":2393,"name":"_valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"3278:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2383,"id":2394,"nodeType":"Return","src":"3271:17:14"}]},"errorName":"","id":2396,"nodeType":"TryCatchClause","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"_valuation","nameLocation":"3244:10:14","nodeType":"VariableDeclaration","scope":2396,"src":"3236:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3235:20:14"},"src":"3227:73:14"},{"block":{"id":2404,"nodeType":"Block","src":"3307:81:14","statements":[{"expression":{"arguments":[{"id":2399,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3349:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2400,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3360:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2401,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"3369:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2397,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3329:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Oracle_$2878","typeString":"contract BaluniV1Oracle"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3334:14:14","memberName":"convertWithAgg","nodeType":"MemberAccess","referencedDeclaration":2569,"src":"3329:19:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3329:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2383,"id":2403,"nodeType":"Return","src":"3322:54:14"}]},"errorName":"","id":2405,"nodeType":"TryCatchClause","src":"3301:87:14"}],"externalCall":{"arguments":[{"id":2386,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3199:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2387,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2376,"src":"3210:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2388,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"3219:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2384,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3170:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Oracle_$2878","typeString":"contract BaluniV1Oracle"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3175:23:14","memberName":"convertWithStaticOracle","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"3170:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3170:56:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2406,"nodeType":"TryStatement","src":"3166:222:14"}]},"documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"2524:473:14","text":" @dev Converts the specified amount of `fromToken` to `toToken` using the available oracle.\n If the conversion fails with the static oracle, it falls back to the aggregator oracle.\n @param fromToken The address of the token to convert from.\n @param toToken The address of the token to convert to.\n @param amount The amount of `fromToken` to convert.\n @return valuation The converted valuation of `amount` in `toToken`."},"functionSelector":"248391ff","id":2408,"implemented":true,"kind":"function","modifiers":[],"name":"convert","nameLocation":"3012:7:14","nodeType":"FunctionDefinition","overrides":{"id":2380,"nodeType":"OverrideSpecifier","overrides":[],"src":"3118:8:14"},"parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2374,"mutability":"mutable","name":"fromToken","nameLocation":"3038:9:14","nodeType":"VariableDeclaration","scope":2408,"src":"3030:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2373,"name":"address","nodeType":"ElementaryTypeName","src":"3030:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2376,"mutability":"mutable","name":"toToken","nameLocation":"3066:7:14","nodeType":"VariableDeclaration","scope":2408,"src":"3058:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2375,"name":"address","nodeType":"ElementaryTypeName","src":"3058:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2378,"mutability":"mutable","name":"amount","nameLocation":"3092:6:14","nodeType":"VariableDeclaration","scope":2408,"src":"3084:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3019:86:14"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"valuation","nameLocation":"3144:9:14","nodeType":"VariableDeclaration","scope":2408,"src":"3136:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"3136:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3135:19:14"},"scope":2878,"src":"3003:392:14","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2929],"body":{"id":2444,"nodeType":"Block","src":"4088:252:14","statements":[{"clauses":[{"block":{"id":2432,"nodeType":"Block","src":"4195:44:14","statements":[{"expression":{"id":2430,"name":"_valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"4217:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2420,"id":2431,"nodeType":"Return","src":"4210:17:14"}]},"errorName":"","id":2433,"nodeType":"TryCatchClause","parameters":{"id":2429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"_valuation","nameLocation":"4183:10:14","nodeType":"VariableDeclaration","scope":2433,"src":"4175:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4174:20:14"},"src":"4166:73:14"},{"block":{"id":2441,"nodeType":"Block","src":"4246:87:14","statements":[{"expression":{"arguments":[{"id":2436,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4294:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2437,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"4305:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2438,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4314:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2434,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4268:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Oracle_$2878","typeString":"contract BaluniV1Oracle"}},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4273:20:14","memberName":"convertScaledWithAgg","nodeType":"MemberAccess","referencedDeclaration":2742,"src":"4268:25:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2420,"id":2440,"nodeType":"Return","src":"4261:60:14"}]},"errorName":"","id":2442,"nodeType":"TryCatchClause","src":"4240:93:14"}],"externalCall":{"arguments":[{"id":2423,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4138:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2424,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"4149:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2425,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"4158:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2421,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4103:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Oracle_$2878","typeString":"contract BaluniV1Oracle"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4108:29:14","memberName":"convertScaledWithStaticOracle","nodeType":"MemberAccess","referencedDeclaration":2828,"src":"4103:34:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:62:14","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2443,"nodeType":"TryStatement","src":"4099:234:14"}]},"documentation":{"id":2409,"nodeType":"StructuredDocumentation","src":"3403:519:14","text":" @dev Converts the specified amount of `fromToken` to `toToken` using the available oracle.\n If the conversion fails with the static oracle, it falls back to the aggregator oracle.\n This function is externally callable.\n @param fromToken The address of the token to convert from.\n @param toToken The address of the token to convert to.\n @param amount The amount of `fromToken` to convert.\n @return valuation The converted valuation of `amount` in `toToken`."},"functionSelector":"b27b5e75","id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"3937:13:14","nodeType":"FunctionDefinition","overrides":{"id":2417,"nodeType":"OverrideSpecifier","overrides":[],"src":"4051:8:14"},"parameters":{"id":2416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2411,"mutability":"mutable","name":"fromToken","nameLocation":"3969:9:14","nodeType":"VariableDeclaration","scope":2445,"src":"3961:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2410,"name":"address","nodeType":"ElementaryTypeName","src":"3961:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"toToken","nameLocation":"3997:7:14","nodeType":"VariableDeclaration","scope":2445,"src":"3989:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2412,"name":"address","nodeType":"ElementaryTypeName","src":"3989:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"amount","nameLocation":"4023:6:14","nodeType":"VariableDeclaration","scope":2445,"src":"4015:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2414,"name":"uint256","nodeType":"ElementaryTypeName","src":"4015:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3950:86:14"},"returnParameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2419,"mutability":"mutable","name":"valuation","nameLocation":"4077:9:14","nodeType":"VariableDeclaration","scope":2445,"src":"4069:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4069:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4068:19:14"},"scope":2878,"src":"3928:412:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2568,"nodeType":"Block","src":"4883:782:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2457,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"4898:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2458,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"4911:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4898:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2462,"nodeType":"IfStatement","src":"4894:39:14","trueBody":{"expression":{"id":2460,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"4927:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2456,"id":2461,"nodeType":"Return","src":"4920:13:14"}},{"assignments":[2464],"declarations":[{"constant":false,"id":2464,"mutability":"mutable","name":"_1InchSpotAgg","nameLocation":"4954:13:14","nodeType":"VariableDeclaration","scope":2568,"src":"4946:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2463,"name":"address","nodeType":"ElementaryTypeName","src":"4946:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2468,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2465,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"4970:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4979:15:14","memberName":"get1inchSpotAgg","nodeType":"MemberAccess","referencedDeclaration":3073,"src":"4970:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4970:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4946:50:14"},{"assignments":[2470],"declarations":[{"constant":false,"id":2470,"mutability":"mutable","name":"fromDecimal","nameLocation":"5013:11:14","nodeType":"VariableDeclaration","scope":2568,"src":"5007:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2469,"name":"uint8","nodeType":"ElementaryTypeName","src":"5007:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2476,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2472,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5042:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2471,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"5027:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1857_$","typeString":"type(contract IERC20Metadata)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5027:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1857","typeString":"contract IERC20Metadata"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5053:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1856,"src":"5027:34:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5027:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5007:56:14"},{"assignments":[2478],"declarations":[{"constant":false,"id":2478,"mutability":"mutable","name":"toDecimal","nameLocation":"5080:9:14","nodeType":"VariableDeclaration","scope":2568,"src":"5074:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2477,"name":"uint8","nodeType":"ElementaryTypeName","src":"5074:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2484,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2480,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5107:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2479,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"5092:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1857_$","typeString":"type(contract IERC20Metadata)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5092:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1857","typeString":"contract IERC20Metadata"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5116:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1856,"src":"5092:32:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5092:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"5074:52:14"},{"assignments":[2486],"declarations":[{"constant":false,"id":2486,"mutability":"mutable","name":"rate","nameLocation":"5147:4:14","nodeType":"VariableDeclaration","scope":2568,"src":"5139:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"5139:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2499,"initialValue":{"arguments":[{"arguments":[{"id":2492,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5198:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2491,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"5191:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1831_$","typeString":"type(contract IERC20)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5191:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"}},{"arguments":[{"id":2495,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"5217:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2494,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"5210:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1831_$","typeString":"type(contract IERC20)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5210:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"}},{"hexValue":"66616c7365","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5227:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2488,"name":"_1InchSpotAgg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2464,"src":"5168:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2487,"name":"I1inchSpotAgg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"5154:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_I1inchSpotAgg_$2905_$","typeString":"type(contract I1inchSpotAgg)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5154:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_I1inchSpotAgg_$2905","typeString":"contract I1inchSpotAgg"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5183:7:14","memberName":"getRate","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"5154:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_contract$_IERC20_$1831_$_t_contract$_IERC20_$1831_$_t_bool_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,bool) view external returns (uint256)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5154:79:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5139:94:14"},{"expression":{"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2500,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5246:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5254:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5262:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2503,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5268:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5262:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5261:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5254:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5253:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5285:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2509,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5291:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5285:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5284:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5253:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5246:55:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2514,"nodeType":"ExpressionStatement","src":"5246:55:14"},{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"factor","nameLocation":"5322:6:14","nodeType":"VariableDeclaration","scope":2568,"src":"5314:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"5314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2517,"nodeType":"VariableDeclarationStatement","src":"5314:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2518,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5343:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2519,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5358:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5343:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2564,"nodeType":"Block","src":"5502:127:14","statements":[{"expression":{"id":2550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2543,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"5517:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5526:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5533:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2546,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5545:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5533:23:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5532:25:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5526:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5517:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2551,"nodeType":"ExpressionStatement","src":"5517:40:14"},{"expression":{"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2552,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"5572:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5586:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2554,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"5595:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5586:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2556,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5585:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2557,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5605:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5585:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5584:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5613:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"5584:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5572:45:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2563,"nodeType":"ExpressionStatement","src":"5572:45:14"}]},"id":2565,"nodeType":"IfStatement","src":"5339:290:14","trueBody":{"id":2542,"nodeType":"Block","src":"5369:127:14","statements":[{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2521,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"5384:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5393:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2470,"src":"5400:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2524,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2478,"src":"5414:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5400:23:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5399:25:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5393:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5384:40:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"5384:40:14"},{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2530,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"5439:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2531,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"5453:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2532,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"5462:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5453:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2534,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5452:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2535,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2486,"src":"5472:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5452:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5451:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5480:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"5451:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5439:45:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2541,"nodeType":"ExpressionStatement","src":"5439:45:14"}]}},{"expression":{"id":2566,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2455,"src":"5648:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2456,"id":2567,"nodeType":"Return","src":"5641:16:14"}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"4348:377:14","text":" @dev Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator.\n @param fromToken The address of the token to convert from.\n @param toToken The address of the token to convert to.\n @param amount The amount of `fromToken` to convert.\n @return valuation The converted valuation of `amount` in `toToken`."},"functionSelector":"1f0e3cd2","id":2569,"implemented":true,"kind":"function","modifiers":[],"name":"convertWithAgg","nameLocation":"4740:14:14","nodeType":"FunctionDefinition","parameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"fromToken","nameLocation":"4773:9:14","nodeType":"VariableDeclaration","scope":2569,"src":"4765:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"4765:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"toToken","nameLocation":"4801:7:14","nodeType":"VariableDeclaration","scope":2569,"src":"4793:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2449,"name":"address","nodeType":"ElementaryTypeName","src":"4793:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"amount","nameLocation":"4827:6:14","nodeType":"VariableDeclaration","scope":2569,"src":"4819:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"4819:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4754:86:14"},"returnParameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2455,"mutability":"mutable","name":"valuation","nameLocation":"4872:9:14","nodeType":"VariableDeclaration","scope":2569,"src":"4864:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"4864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4863:19:14"},"scope":2878,"src":"4731:934:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2741,"nodeType":"Block","src":"6244:1186:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2581,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6259:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2582,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"6272:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6259:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2597,"nodeType":"IfStatement","src":"6255:89:14","trueBody":{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"6288:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6297:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6304:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2588,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"6324:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2587,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6309:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1857_$","typeString":"type(contract IERC20Metadata)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6309:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1857","typeString":"contract IERC20Metadata"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6333:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1856,"src":"6309:32:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6309:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6304:39:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6303:41:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6297:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6288:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2580,"id":2596,"nodeType":"Return","src":"6281:63:14"}},{"assignments":[2599],"declarations":[{"constant":false,"id":2599,"mutability":"mutable","name":"_1InchSpotAgg","nameLocation":"6365:13:14","nodeType":"VariableDeclaration","scope":2741,"src":"6357:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"6357:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2603,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2600,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"6381:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"id":2601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6390:15:14","memberName":"get1inchSpotAgg","nodeType":"MemberAccess","referencedDeclaration":3073,"src":"6381:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6381:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6357:50:14"},{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"fromDecimal","nameLocation":"6424:11:14","nodeType":"VariableDeclaration","scope":2741,"src":"6418:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2604,"name":"uint8","nodeType":"ElementaryTypeName","src":"6418:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2611,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2607,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6453:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2606,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6438:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1857_$","typeString":"type(contract IERC20Metadata)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1857","typeString":"contract IERC20Metadata"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6464:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1856,"src":"6438:34:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6418:56:14"},{"assignments":[2613],"declarations":[{"constant":false,"id":2613,"mutability":"mutable","name":"toDecimal","nameLocation":"6491:9:14","nodeType":"VariableDeclaration","scope":2741,"src":"6485:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2612,"name":"uint8","nodeType":"ElementaryTypeName","src":"6485:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2619,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2615,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"6518:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2614,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"6503:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1857_$","typeString":"type(contract IERC20Metadata)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6503:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1857","typeString":"contract IERC20Metadata"}},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6527:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1856,"src":"6503:32:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6503:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6485:52:14"},{"assignments":[2621],"declarations":[{"constant":false,"id":2621,"mutability":"mutable","name":"rate","nameLocation":"6556:4:14","nodeType":"VariableDeclaration","scope":2741,"src":"6548:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2634,"initialValue":{"arguments":[{"arguments":[{"id":2627,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"6607:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2626,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6600:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1831_$","typeString":"type(contract IERC20)"}},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6600:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"}},{"arguments":[{"id":2630,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2574,"src":"6626:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2629,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"6619:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1831_$","typeString":"type(contract IERC20)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6619:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"}},{"hexValue":"66616c7365","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"},{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"arguments":[{"id":2623,"name":"_1InchSpotAgg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"6577:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2622,"name":"I1inchSpotAgg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"6563:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_I1inchSpotAgg_$2905_$","typeString":"type(contract I1inchSpotAgg)"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6563:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_I1inchSpotAgg_$2905","typeString":"contract I1inchSpotAgg"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6592:7:14","memberName":"getRate","nodeType":"MemberAccess","referencedDeclaration":2894,"src":"6563:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_contract$_IERC20_$1831_$_t_contract$_IERC20_$1831_$_t_bool_$returns$_t_uint256_$","typeString":"function (contract IERC20,contract IERC20,bool) view external returns (uint256)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6563:79:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:94:14"},{"expression":{"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2635,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"6655:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"6663:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2638,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"6677:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6671:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6670:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6663:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2642,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6662:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6694:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2644,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6700:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6694:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6693:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6662:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6655:55:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2649,"nodeType":"ExpressionStatement","src":"6655:55:14"},{"assignments":[2651],"declarations":[{"constant":false,"id":2651,"mutability":"mutable","name":"scalingFactor","nameLocation":"6731:13:14","nodeType":"VariableDeclaration","scope":2741,"src":"6723:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2650,"name":"uint256","nodeType":"ElementaryTypeName","src":"6723:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2652,"nodeType":"VariableDeclarationStatement","src":"6723:21:14"},{"assignments":[2654],"declarations":[{"constant":false,"id":2654,"mutability":"mutable","name":"tokenAmount","nameLocation":"6763:11:14","nodeType":"VariableDeclaration","scope":2741,"src":"6755:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"6755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2655,"nodeType":"VariableDeclarationStatement","src":"6755:19:14"},{"assignments":[2657],"declarations":[{"constant":false,"id":2657,"mutability":"mutable","name":"finalScalingFactor","nameLocation":"6793:18:14","nodeType":"VariableDeclaration","scope":2741,"src":"6785:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2656,"name":"uint256","nodeType":"ElementaryTypeName","src":"6785:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2664,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6814:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6821:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2660,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6826:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6821:14:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6820:16:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6814:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6785:51:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2665,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"6853:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2666,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6868:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6853:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2678,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"6950:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2679,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"6964:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6950:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2730,"nodeType":"Block","src":"7160:179:14","statements":[{"expression":{"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2706,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"7175:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7191:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7198:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2709,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"7210:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7198:23:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7197:25:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7191:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7175:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2714,"nodeType":"ExpressionStatement","src":"7175:47:14"},{"expression":{"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2715,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"7237:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2716,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"7251:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2717,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"7260:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7251:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7237:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2720,"nodeType":"ExpressionStatement","src":"7237:36:14"},{"expression":{"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2721,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"7288:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2722,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"7301:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2723,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"7315:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7301:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7300:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7323:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7300:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7288:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2729,"nodeType":"ExpressionStatement","src":"7288:39:14"}]},"id":2731,"nodeType":"IfStatement","src":"6946:393:14","trueBody":{"id":2705,"nodeType":"Block","src":"6975:179:14","statements":[{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2681,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"6990:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7006:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2683,"name":"fromDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"7013:11:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2684,"name":"toDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"7027:9:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7013:23:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2686,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7012:25:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7006:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6990:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"6990:47:14"},{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2690,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"7052:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"7066:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2692,"name":"scalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2651,"src":"7075:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7066:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7052:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2695,"nodeType":"ExpressionStatement","src":"7052:36:14"},{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2696,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"7103:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2697,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"7116:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2698,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"7130:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7116:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7115:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7138:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7115:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7103:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"7103:39:14"}]}},"id":2732,"nodeType":"IfStatement","src":"6849:490:14","trueBody":{"id":2677,"nodeType":"Block","src":"6879:61:14","statements":[{"expression":{"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"6894:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2576,"src":"6907:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2670,"name":"rate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"6916:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6907:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2672,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6906:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"6906:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6894:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2676,"nodeType":"ExpressionStatement","src":"6894:34:14"}]}},{"expression":{"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2733,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"7351:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2734,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"7363:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2735,"name":"finalScalingFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"7375:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7363:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7351:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2738,"nodeType":"ExpressionStatement","src":"7351:42:14"},{"expression":{"id":2739,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"7413:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2580,"id":2740,"nodeType":"Return","src":"7406:16:14"}]},"documentation":{"id":2570,"nodeType":"StructuredDocumentation","src":"5673:407:14","text":" @dev Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator and scales the result.\n @param fromToken The address of the token to convert from.\n @param toToken The address of the token to convert to.\n @param amount The amount of `fromToken` to convert.\n @return valuation  The scaled converted valuation of `amount` in `toToken`."},"functionSelector":"8c41a354","id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"convertScaledWithAgg","nameLocation":"6095:20:14","nodeType":"FunctionDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"fromToken","nameLocation":"6134:9:14","nodeType":"VariableDeclaration","scope":2742,"src":"6126:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"6126:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2574,"mutability":"mutable","name":"toToken","nameLocation":"6162:7:14","nodeType":"VariableDeclaration","scope":2742,"src":"6154:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2573,"name":"address","nodeType":"ElementaryTypeName","src":"6154:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2576,"mutability":"mutable","name":"amount","nameLocation":"6188:6:14","nodeType":"VariableDeclaration","scope":2742,"src":"6180:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2575,"name":"uint256","nodeType":"ElementaryTypeName","src":"6180:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6115:86:14"},"returnParameters":{"id":2580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2579,"mutability":"mutable","name":"valuation","nameLocation":"6233:9:14","nodeType":"VariableDeclaration","scope":2742,"src":"6225:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"6225:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6224:19:14"},"scope":2878,"src":"6086:1344:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2792,"nodeType":"Block","src":"7955:314:14","statements":[{"assignments":[2756],"declarations":[{"constant":false,"id":2756,"mutability":"mutable","name":"staticOracle","nameLocation":"7980:12:14","nodeType":"VariableDeclaration","scope":2792,"src":"7966:26:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IStaticOracle_$3286","typeString":"contract IStaticOracle"},"typeName":{"id":2755,"nodeType":"UserDefinedTypeName","pathNode":{"id":2754,"name":"IStaticOracle","nameLocations":["7966:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3286,"src":"7966:13:14"},"referencedDeclaration":3286,"src":"7966:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IStaticOracle_$3286","typeString":"contract IStaticOracle"}},"visibility":"internal"}],"id":2762,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2758,"name":"registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2324,"src":"8009:8:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$3104","typeString":"contract IBaluniV1Registry"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8018:15:14","memberName":"getStaticOracle","nodeType":"MemberAccess","referencedDeclaration":3103,"src":"8009:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8009:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2757,"name":"IStaticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"7995:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IStaticOracle_$3286_$","typeString":"type(contract IStaticOracle)"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7995:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IStaticOracle_$3286","typeString":"contract IStaticOracle"}},"nodeType":"VariableDeclarationStatement","src":"7966:70:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2766,"name":"staticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"8063:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IStaticOracle_$3286","typeString":"contract IStaticOracle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IStaticOracle_$3286","typeString":"contract IStaticOracle"}],"id":2765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8055:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2764,"name":"address","nodeType":"ElementaryTypeName","src":"8055:7:14","typeDescriptions":{}}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8055:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8088:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8080:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2768,"name":"address","nodeType":"ElementaryTypeName","src":"8080:7:14","typeDescriptions":{}}},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8080:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8055:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374617469634f7261636c65206e6f7420736574","id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8092:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bf731e51c3bdddc9de437c8fbd8fb76f6af6aa4bb4b0f5a60fe643d06ce9ff8","typeString":"literal_string \"StaticOracle not set\""},"value":"StaticOracle not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bf731e51c3bdddc9de437c8fbd8fb76f6af6aa4bb4b0f5a60fe643d06ce9ff8","typeString":"literal_string \"StaticOracle not set\""}],"id":2763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8047:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8047:68:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2775,"nodeType":"ExpressionStatement","src":"8047:68:14"},{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2776,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"8127:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":2777,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"8126:13:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$__$","typeString":"tuple(uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2782,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"8200:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8192:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":2780,"name":"uint128","nodeType":"ElementaryTypeName","src":"8192:7:14","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":2784,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"8209:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2785,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"8220:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"33363030","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8229:4:14","typeDescriptions":{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"},"value":"3600"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_3600_by_1","typeString":"int_const 3600"}],"expression":{"id":2778,"name":"staticOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"8142:12:14","typeDescriptions":{"typeIdentifier":"t_contract$_IStaticOracle_$3286","typeString":"contract IStaticOracle"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8155:36:14","memberName":"quoteAllAvailablePoolsWithTimePeriod","nodeType":"MemberAccess","referencedDeclaration":3166,"src":"8142:49:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint128_$_t_address_$_t_address_$_t_uint32_$returns$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint128,address,address,uint32) view external returns (uint256,address[] memory)"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8142:92:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"tuple(uint256,address[] memory)"}},"src":"8126:108:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2789,"nodeType":"ExpressionStatement","src":"8126:108:14"},{"expression":{"id":2790,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"8252:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2753,"id":2791,"nodeType":"Return","src":"8245:16:14"}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"7438:350:14","text":" @dev Converts the specified amount of `fromToken` to `toToken` using the static oracle.\n @param fromToken The address of the token to convert from.\n @param toToken The address of the token to convert to.\n @param amount The amount of `fromToken` to convert.\n @return  valuation of the converted amount."},"functionSelector":"fac0ba74","id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"convertWithStaticOracle","nameLocation":"7803:23:14","nodeType":"FunctionDefinition","parameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"fromToken","nameLocation":"7845:9:14","nodeType":"VariableDeclaration","scope":2793,"src":"7837:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"7837:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"toToken","nameLocation":"7873:7:14","nodeType":"VariableDeclaration","scope":2793,"src":"7865:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2746,"name":"address","nodeType":"ElementaryTypeName","src":"7865:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"amount","nameLocation":"7899:6:14","nodeType":"VariableDeclaration","scope":2793,"src":"7891:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2748,"name":"uint256","nodeType":"ElementaryTypeName","src":"7891:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7826:86:14"},"returnParameters":{"id":2753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2752,"mutability":"mutable","name":"valuation","nameLocation":"7944:9:14","nodeType":"VariableDeclaration","scope":2793,"src":"7936:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2751,"name":"uint256","nodeType":"ElementaryTypeName","src":"7936:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7935:19:14"},"scope":2878,"src":"7794:475:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2827,"nodeType":"Block","src":"8797:203:14","statements":[{"assignments":[2806],"declarations":[{"constant":false,"id":2806,"mutability":"mutable","name":"_valuation","nameLocation":"8816:10:14","nodeType":"VariableDeclaration","scope":2827,"src":"8808:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"8808:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2813,"initialValue":{"arguments":[{"id":2809,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"8858:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2810,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"8869:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2811,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"8878:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2807,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8829:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Oracle_$2878","typeString":"contract BaluniV1Oracle"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8834:23:14","memberName":"convertWithStaticOracle","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"8829:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8829:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8808:77:14"},{"expression":{"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2814,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"8896:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2816,"name":"_valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"8916:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2818,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"8943:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2817,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"8928:14:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1857_$","typeString":"type(contract IERC20Metadata)"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8928:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1857","typeString":"contract IERC20Metadata"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8954:8:14","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1856,"src":"8928:34:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8928:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2815,"name":"scaleUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"8908:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8908:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8896:69:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ExpressionStatement","src":"8896:69:14"},{"expression":{"id":2825,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2803,"src":"8983:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2804,"id":2826,"nodeType":"Return","src":"8976:16:14"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"8277:347:14","text":" @dev Converts the given amount of tokens from one token to another using a static oracle.\n @param fromToken The address of the token to convert from.\n @param toToken The address of the token to convert to.\n @param amount The amount of tokens to convert.\n @return  valuation of the converted tokens."},"functionSelector":"ca66d9a8","id":2828,"implemented":true,"kind":"function","modifiers":[],"name":"convertScaledWithStaticOracle","nameLocation":"8639:29:14","nodeType":"FunctionDefinition","parameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"fromToken","nameLocation":"8687:9:14","nodeType":"VariableDeclaration","scope":2828,"src":"8679:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"8679:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"toToken","nameLocation":"8715:7:14","nodeType":"VariableDeclaration","scope":2828,"src":"8707:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2797,"name":"address","nodeType":"ElementaryTypeName","src":"8707:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"amount","nameLocation":"8741:6:14","nodeType":"VariableDeclaration","scope":2828,"src":"8733:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"8733:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8668:86:14"},"returnParameters":{"id":2804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2803,"mutability":"mutable","name":"valuation","nameLocation":"8786:9:14","nodeType":"VariableDeclaration","scope":2828,"src":"8778:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2802,"name":"uint256","nodeType":"ElementaryTypeName","src":"8778:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8777:19:14"},"scope":2878,"src":"8630:370:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2847,"nodeType":"Block","src":"9331:56:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"9349:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9359:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9365:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"9359:8:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2842,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"9370:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9359:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9358:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9349:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2837,"id":2846,"nodeType":"Return","src":"9342:37:14"}]},"documentation":{"id":2829,"nodeType":"StructuredDocumentation","src":"9008:234:14","text":" @dev Scales up the given amount by subtracting the decimals.\n @param amount The amount to be scaled up.\n @param decimals The number of decimals to be subtracted.\n @return The scaled up amount."},"id":2848,"implemented":true,"kind":"function","modifiers":[],"name":"scaleUp","nameLocation":"9257:7:14","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2831,"mutability":"mutable","name":"amount","nameLocation":"9273:6:14","nodeType":"VariableDeclaration","scope":2848,"src":"9265:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2830,"name":"uint256","nodeType":"ElementaryTypeName","src":"9265:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2833,"mutability":"mutable","name":"decimals","nameLocation":"9289:8:14","nodeType":"VariableDeclaration","scope":2848,"src":"9281:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"9281:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9264:34:14"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2848,"src":"9322:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"9322:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9321:9:14"},"scope":2878,"src":"9248:139:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2867,"nodeType":"Block","src":"9762:56:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2858,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2851,"src":"9780:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9790:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9796:2:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"9790:8:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2862,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"9801:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9789:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9780:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2857,"id":2866,"nodeType":"Return","src":"9773:37:14"}]},"documentation":{"id":2849,"nodeType":"StructuredDocumentation","src":"9395:276:14","text":" @dev Scales down the given amount by dividing it by the difference between 10^18 and the decimals.\n @param amount The amount to be scaled down.\n @param decimals The number of decimals to be subtracted.\n @return The scaled down amount."},"id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"scaleDown","nameLocation":"9686:9:14","nodeType":"FunctionDefinition","parameters":{"id":2854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2851,"mutability":"mutable","name":"amount","nameLocation":"9704:6:14","nodeType":"VariableDeclaration","scope":2868,"src":"9696:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2850,"name":"uint256","nodeType":"ElementaryTypeName","src":"9696:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2853,"mutability":"mutable","name":"decimals","nameLocation":"9720:8:14","nodeType":"VariableDeclaration","scope":2868,"src":"9712:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2852,"name":"uint256","nodeType":"ElementaryTypeName","src":"9712:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9695:34:14"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"9753:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"9753:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9752:9:14"},"scope":2878,"src":"9677:141:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[584],"body":{"id":2876,"nodeType":"Block","src":"9908:2:14","statements":[]},"id":2877,"implemented":true,"kind":"function","modifiers":[{"id":2874,"kind":"modifierInvocation","modifierName":{"id":2873,"name":"onlyOwner","nameLocations":["9898:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"9898:9:14"},"nodeType":"ModifierInvocation","src":"9898:9:14"}],"name":"_authorizeUpgrade","nameLocation":"9835:17:14","nodeType":"FunctionDefinition","overrides":{"id":2872,"nodeType":"OverrideSpecifier","overrides":[],"src":"9889:8:14"},"parameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"newImplementation","nameLocation":"9861:17:14","nodeType":"VariableDeclaration","scope":2877,"src":"9853:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2869,"name":"address","nodeType":"ElementaryTypeName","src":"9853:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9852:27:14"},"returnParameters":{"id":2875,"nodeType":"ParameterList","parameters":[],"src":"9908:0:14"},"scope":2878,"src":"9826:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2879,"src":"1959:7954:14","usedErrors":[30,35,211,214,475,480,1475,1488,1870,1873],"usedEvents":[41,219,1454]}],"src":"40:9875:14"},"id":14},"contracts/interfaces/I1inchSpotAgg.sol":{"ast":{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","exportedSymbols":{"I1inchSpotAgg":[2905],"IERC20":[1831]},"id":2906,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2880,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2906,"sourceUnit":1832,"src":"65:56:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"I1inchSpotAgg","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2905,"linearizedBaseContracts":[2905],"name":"I1inchSpotAgg","nameLocation":"135:13:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":2894,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"163:7:15","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2884,"mutability":"mutable","name":"srcToken","nameLocation":"178:8:15","nodeType":"VariableDeclaration","scope":2894,"src":"171:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"},"typeName":{"id":2883,"nodeType":"UserDefinedTypeName","pathNode":{"id":2882,"name":"IERC20","nameLocations":["171:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1831,"src":"171:6:15"},"referencedDeclaration":1831,"src":"171:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"dstToken","nameLocation":"195:8:15","nodeType":"VariableDeclaration","scope":2894,"src":"188:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"},"typeName":{"id":2886,"nodeType":"UserDefinedTypeName","pathNode":{"id":2885,"name":"IERC20","nameLocations":["188:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1831,"src":"188:6:15"},"referencedDeclaration":1831,"src":"188:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"useWrappers","nameLocation":"210:11:15","nodeType":"VariableDeclaration","scope":2894,"src":"205:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2888,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"170:52:15"},"returnParameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"weightedRate","nameLocation":"254:12:15","nodeType":"VariableDeclaration","scope":2894,"src":"246:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:22:15"},"scope":2905,"src":"154:114:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":2904,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"283:12:15","nodeType":"FunctionDefinition","parameters":{"id":2900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2897,"mutability":"mutable","name":"srcToken","nameLocation":"303:8:15","nodeType":"VariableDeclaration","scope":2904,"src":"296:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"},"typeName":{"id":2896,"nodeType":"UserDefinedTypeName","pathNode":{"id":2895,"name":"IERC20","nameLocations":["296:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1831,"src":"296:6:15"},"referencedDeclaration":1831,"src":"296:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1831","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2899,"mutability":"mutable","name":"useWrappers","nameLocation":"318:11:15","nodeType":"VariableDeclaration","scope":2904,"src":"313:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2898,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"295:35:15"},"returnParameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2902,"mutability":"mutable","name":"weightedRate","nameLocation":"362:12:15","nodeType":"VariableDeclaration","scope":2904,"src":"354:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2901,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:22:15"},"scope":2905,"src":"274:102:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2906,"src":"125:254:15","usedErrors":[],"usedEvents":[]}],"src":"40:341:15"},"id":15},"contracts/interfaces/IBaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","exportedSymbols":{"IBaluniV1Oracle":[2930]},"id":2931,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2907,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Oracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2930,"linearizedBaseContracts":[2930],"name":"IBaluniV1Oracle","nameLocation":"77:15:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"248391ff","id":2918,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"109:7:16","nodeType":"FunctionDefinition","parameters":{"id":2914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"fromToken","nameLocation":"125:9:16","nodeType":"VariableDeclaration","scope":2918,"src":"117:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2908,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"toToken","nameLocation":"144:7:16","nodeType":"VariableDeclaration","scope":2918,"src":"136:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2910,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"amount","nameLocation":"161:6:16","nodeType":"VariableDeclaration","scope":2918,"src":"153:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:52:16"},"returnParameters":{"id":2917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2916,"mutability":"mutable","name":"valuation","nameLocation":"200:9:16","nodeType":"VariableDeclaration","scope":2918,"src":"192:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2915,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:19:16"},"scope":2930,"src":"100:111:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b27b5e75","id":2929,"implemented":false,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"228:13:16","nodeType":"FunctionDefinition","parameters":{"id":2925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"fromToken","nameLocation":"260:9:16","nodeType":"VariableDeclaration","scope":2929,"src":"252:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"toToken","nameLocation":"288:7:16","nodeType":"VariableDeclaration","scope":2929,"src":"280:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2921,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2924,"mutability":"mutable","name":"amount","nameLocation":"314:6:16","nodeType":"VariableDeclaration","scope":2929,"src":"306:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:86:16"},"returnParameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2927,"mutability":"mutable","name":"valuation","nameLocation":"359:9:16","nodeType":"VariableDeclaration","scope":2929,"src":"351:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"350:19:16"},"scope":2930,"src":"219:151:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2931,"src":"67:306:16","usedErrors":[],"usedEvents":[]}],"src":"40:335:16"},"id":16},"contracts/interfaces/IBaluniV1Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","exportedSymbols":{"IBaluniV1Registry":[3104]},"id":3105,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2932,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"67:91:17","text":" @title IBaluniV1Registry\n @dev Interface for the BaluniV1Registry contract."},"fullyImplemented":false,"id":3104,"linearizedBaseContracts":[3104],"name":"IBaluniV1Registry","nameLocation":"170:17:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e04b677f","id":2938,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapFactory","nameLocation":"204:17:17","nodeType":"FunctionDefinition","parameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"_uniswapFactory","nameLocation":"230:15:17","nodeType":"VariableDeclaration","scope":2938,"src":"222:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:25:17"},"returnParameters":{"id":2937,"nodeType":"ParameterList","parameters":[],"src":"255:0:17"},"scope":3104,"src":"195:61:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bea9849e","id":2943,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapRouter","nameLocation":"273:16:17","nodeType":"FunctionDefinition","parameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"298:14:17","nodeType":"VariableDeclaration","scope":2943,"src":"290:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"289:24:17"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[],"src":"322:0:17"},"scope":3104,"src":"264:59:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1dccde7","id":2948,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniAgentFactory","nameLocation":"340:21:17","nodeType":"FunctionDefinition","parameters":{"id":2946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2945,"mutability":"mutable","name":"_baluniAgentFactory","nameLocation":"370:19:17","nodeType":"VariableDeclaration","scope":2948,"src":"362:27:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2944,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:29:17"},"returnParameters":{"id":2947,"nodeType":"ParameterList","parameters":[],"src":"399:0:17"},"scope":3104,"src":"331:69:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"588c5b70","id":2953,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolPeriphery","nameLocation":"417:22:17","nodeType":"FunctionDefinition","parameters":{"id":2951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"_baluniPoolPeriphery","nameLocation":"448:20:17","nodeType":"VariableDeclaration","scope":2953,"src":"440:28:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2949,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:30:17"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[],"src":"478:0:17"},"scope":3104,"src":"408:71:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c3f5df5c","id":2958,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniSwapper","nameLocation":"496:16:17","nodeType":"FunctionDefinition","parameters":{"id":2956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2955,"mutability":"mutable","name":"_baluniSwapper","nameLocation":"521:14:17","nodeType":"VariableDeclaration","scope":2958,"src":"513:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2954,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:24:17"},"returnParameters":{"id":2957,"nodeType":"ParameterList","parameters":[],"src":"545:0:17"},"scope":3104,"src":"487:59:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5b84f64","id":2963,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniOracle","nameLocation":"563:15:17","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"_baluniOracle","nameLocation":"587:13:17","nodeType":"VariableDeclaration","scope":2963,"src":"579:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2959,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:23:17"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[],"src":"610:0:17"},"scope":3104,"src":"554:57:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8267c2c8","id":2968,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolFactory","nameLocation":"628:20:17","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2965,"mutability":"mutable","name":"_baluniPoolFactory","nameLocation":"657:18:17","nodeType":"VariableDeclaration","scope":2968,"src":"649:26:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2964,"name":"address","nodeType":"ElementaryTypeName","src":"649:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"648:28:17"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[],"src":"685:0:17"},"scope":3104,"src":"619:67:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0241bffa","id":2973,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRebalancer","nameLocation":"703:19:17","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2970,"mutability":"mutable","name":"_baluniRebalancer","nameLocation":"731:17:17","nodeType":"VariableDeclaration","scope":2973,"src":"723:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"723:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"722:27:17"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[],"src":"758:0:17"},"scope":3104,"src":"694:65:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"400fb668","id":2978,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRouter","nameLocation":"776:15:17","nodeType":"FunctionDefinition","parameters":{"id":2976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"_baluniRouter","nameLocation":"800:13:17","nodeType":"VariableDeclaration","scope":2978,"src":"792:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2974,"name":"address","nodeType":"ElementaryTypeName","src":"792:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"791:23:17"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[],"src":"823:0:17"},"scope":3104,"src":"767:57:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43274c","id":2983,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRegistry","nameLocation":"841:17:17","nodeType":"FunctionDefinition","parameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"_baluniRegistry","nameLocation":"867:15:17","nodeType":"VariableDeclaration","scope":2983,"src":"859:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2979,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"858:25:17"},"returnParameters":{"id":2982,"nodeType":"ParameterList","parameters":[],"src":"892:0:17"},"scope":3104,"src":"832:61:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6fe9cc7","id":2988,"implemented":false,"kind":"function","modifiers":[],"name":"setWNATIVE","nameLocation":"910:10:17","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"_WNATIVE","nameLocation":"929:8:17","nodeType":"VariableDeclaration","scope":2988,"src":"921:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"920:18:17"},"returnParameters":{"id":2987,"nodeType":"ParameterList","parameters":[],"src":"947:0:17"},"scope":3104,"src":"901:47:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3e089a2","id":2993,"implemented":false,"kind":"function","modifiers":[],"name":"setUSDC","nameLocation":"965:7:17","nodeType":"FunctionDefinition","parameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"_USDC","nameLocation":"981:5:17","nodeType":"VariableDeclaration","scope":2993,"src":"973:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2989,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:17"},"returnParameters":{"id":2992,"nodeType":"ParameterList","parameters":[],"src":"996:0:17"},"scope":3104,"src":"956:41:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f0f44260","id":2998,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1014:11:17","nodeType":"FunctionDefinition","parameters":{"id":2996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"_treasury","nameLocation":"1034:9:17","nodeType":"VariableDeclaration","scope":2998,"src":"1026:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2994,"name":"address","nodeType":"ElementaryTypeName","src":"1026:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1025:19:17"},"returnParameters":{"id":2997,"nodeType":"ParameterList","parameters":[],"src":"1053:0:17"},"scope":3104,"src":"1005:49:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c08f786b","id":3003,"implemented":false,"kind":"function","modifiers":[],"name":"set1inchSpotAgg","nameLocation":"1071:15:17","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"__1inchSpotAgg","nameLocation":"1095:14:17","nodeType":"VariableDeclaration","scope":3003,"src":"1087:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1086:24:17"},"returnParameters":{"id":3002,"nodeType":"ParameterList","parameters":[],"src":"1119:0:17"},"scope":3104,"src":"1062:58:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9e6453f8","id":3008,"implemented":false,"kind":"function","modifiers":[],"name":"setBPS_FEE","nameLocation":"1137:10:17","nodeType":"FunctionDefinition","parameters":{"id":3006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"__BPS_FEE","nameLocation":"1156:9:17","nodeType":"VariableDeclaration","scope":3008,"src":"1148:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1147:19:17"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[],"src":"1175:0:17"},"scope":3104,"src":"1128:48:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3e6dfa36","id":3013,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapFactory","nameLocation":"1193:17:17","nodeType":"FunctionDefinition","parameters":{"id":3009,"nodeType":"ParameterList","parameters":[],"src":"1210:2:17"},"returnParameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3013,"src":"1236:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1235:9:17"},"scope":3104,"src":"1184:61:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"524900b5","id":3018,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapRouter","nameLocation":"1262:16:17","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[],"src":"1278:2:17"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"1304:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"1304:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1303:9:17"},"scope":3104,"src":"1253:60:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82755ebb","id":3023,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniSwapper","nameLocation":"1330:16:17","nodeType":"FunctionDefinition","parameters":{"id":3019,"nodeType":"ParameterList","parameters":[],"src":"1346:2:17"},"returnParameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3023,"src":"1372:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"1372:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1371:9:17"},"scope":3104,"src":"1321:60:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb3ba04c","id":3028,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniOracle","nameLocation":"1398:15:17","nodeType":"FunctionDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[],"src":"1413:2:17"},"returnParameters":{"id":3027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3028,"src":"1439:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3025,"name":"address","nodeType":"ElementaryTypeName","src":"1439:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1438:9:17"},"scope":3104,"src":"1389:59:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d2d998","id":3033,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniAgentFactory","nameLocation":"1465:21:17","nodeType":"FunctionDefinition","parameters":{"id":3029,"nodeType":"ParameterList","parameters":[],"src":"1486:2:17"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3033,"src":"1512:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3030,"name":"address","nodeType":"ElementaryTypeName","src":"1512:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1511:9:17"},"scope":3104,"src":"1456:65:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1acb6141","id":3038,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolPeriphery","nameLocation":"1538:22:17","nodeType":"FunctionDefinition","parameters":{"id":3034,"nodeType":"ParameterList","parameters":[],"src":"1560:2:17"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3038,"src":"1586:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1585:9:17"},"scope":3104,"src":"1529:66:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7c6fd308","id":3043,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolFactory","nameLocation":"1612:20:17","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[],"src":"1632:2:17"},"returnParameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3043,"src":"1658:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3040,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1657:9:17"},"scope":3104,"src":"1603:64:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cff49d68","id":3048,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRebalancer","nameLocation":"1684:19:17","nodeType":"FunctionDefinition","parameters":{"id":3044,"nodeType":"ParameterList","parameters":[],"src":"1703:2:17"},"returnParameters":{"id":3047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3048,"src":"1729:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"1729:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1728:9:17"},"scope":3104,"src":"1675:63:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":3053,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1755:15:17","nodeType":"FunctionDefinition","parameters":{"id":3049,"nodeType":"ParameterList","parameters":[],"src":"1770:2:17"},"returnParameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3053,"src":"1796:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"1796:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1795:9:17"},"scope":3104,"src":"1746:59:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9aba8ae","id":3058,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRegistry","nameLocation":"1822:17:17","nodeType":"FunctionDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[],"src":"1839:2:17"},"returnParameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3058,"src":"1865:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3055,"name":"address","nodeType":"ElementaryTypeName","src":"1865:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1864:9:17"},"scope":3104,"src":"1813:61:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c9c0078","id":3063,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVE","nameLocation":"1891:10:17","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[],"src":"1901:2:17"},"returnParameters":{"id":3062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3063,"src":"1927:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3060,"name":"address","nodeType":"ElementaryTypeName","src":"1927:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1926:9:17"},"scope":3104,"src":"1882:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1bf01e9b","id":3068,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDC","nameLocation":"1953:7:17","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[],"src":"1960:2:17"},"returnParameters":{"id":3067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3068,"src":"1986:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"1986:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1985:9:17"},"scope":3104,"src":"1944:51:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e1c3a8a","id":3073,"implemented":false,"kind":"function","modifiers":[],"name":"get1inchSpotAgg","nameLocation":"2012:15:17","nodeType":"FunctionDefinition","parameters":{"id":3069,"nodeType":"ParameterList","parameters":[],"src":"2027:2:17"},"returnParameters":{"id":3072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3073,"src":"2053:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"2053:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2052:9:17"},"scope":3104,"src":"2003:59:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85462d6f","id":3078,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_FEE","nameLocation":"2079:10:17","nodeType":"FunctionDefinition","parameters":{"id":3074,"nodeType":"ParameterList","parameters":[],"src":"2089:2:17"},"returnParameters":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"2115:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3075,"name":"uint256","nodeType":"ElementaryTypeName","src":"2115:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:9:17"},"scope":3104,"src":"2070:54:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9380fb6f","id":3083,"implemented":false,"kind":"function","modifiers":[],"name":"getMAX_BPS_FEE","nameLocation":"2141:14:17","nodeType":"FunctionDefinition","parameters":{"id":3079,"nodeType":"ParameterList","parameters":[],"src":"2155:2:17"},"returnParameters":{"id":3082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3083,"src":"2181:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"2181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2180:9:17"},"scope":3104,"src":"2132:58:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f4608a2","id":3088,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_BASE","nameLocation":"2207:11:17","nodeType":"FunctionDefinition","parameters":{"id":3084,"nodeType":"ParameterList","parameters":[],"src":"2218:2:17"},"returnParameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3088,"src":"2244:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2243:9:17"},"scope":3104,"src":"2198:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":3093,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"2270:11:17","nodeType":"FunctionDefinition","parameters":{"id":3089,"nodeType":"ParameterList","parameters":[],"src":"2281:2:17"},"returnParameters":{"id":3092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3093,"src":"2307:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"2307:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2306:9:17"},"scope":3104,"src":"2261:55:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc01e9a6","id":3098,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticOracle","nameLocation":"2333:15:17","nodeType":"FunctionDefinition","parameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"_staticOracle","nameLocation":"2357:13:17","nodeType":"VariableDeclaration","scope":3098,"src":"2349:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3094,"name":"address","nodeType":"ElementaryTypeName","src":"2349:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2348:23:17"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[],"src":"2380:0:17"},"scope":3104,"src":"2324:57:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5d2236f","id":3103,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticOracle","nameLocation":"2398:15:17","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[],"src":"2413:2:17"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3103,"src":"2439:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3100,"name":"address","nodeType":"ElementaryTypeName","src":"2439:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2438:9:17"},"scope":3104,"src":"2389:59:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3105,"src":"160:2291:17","usedErrors":[],"usedEvents":[]}],"src":"40:2413:17"},"id":17},"contracts/interfaces/IStaticOracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IStaticOracle.sol","exportedSymbols":{"IStaticOracle":[3286],"IUniswapV3Factory":[2303]},"id":3287,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":3106,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"48:23:18"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":3107,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3287,"sourceUnit":2304,"src":"75:69:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IStaticOracle","contractDependencies":[],"contractKind":"interface","documentation":{"id":3108,"nodeType":"StructuredDocumentation","src":"148:115:18","text":"@title Uniswap V3 Static Oracle\n @notice Oracle contract for calculating price quoting against Uniswap V3"},"fullyImplemented":false,"id":3286,"linearizedBaseContracts":[3286],"name":"IStaticOracle","nameLocation":"273:13:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3109,"nodeType":"StructuredDocumentation","src":"294:189:18","text":"@notice Returns the address of the Uniswap V3 factory\n @dev This value is assigned during deployment and cannot be changed\n @return The address of the Uniswap V3 factory"},"functionSelector":"f73e5aab","id":3115,"implemented":false,"kind":"function","modifiers":[],"name":"UNISWAP_V3_FACTORY","nameLocation":"498:18:18","nodeType":"FunctionDefinition","parameters":{"id":3110,"nodeType":"ParameterList","parameters":[],"src":"516:2:18"},"returnParameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3115,"src":"542:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2303","typeString":"contract IUniswapV3Factory"},"typeName":{"id":3112,"nodeType":"UserDefinedTypeName","pathNode":{"id":3111,"name":"IUniswapV3Factory","nameLocations":["542:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":2303,"src":"542:17:18"},"referencedDeclaration":2303,"src":"542:17:18","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$2303","typeString":"contract IUniswapV3Factory"}},"visibility":"internal"}],"src":"541:19:18"},"scope":3286,"src":"489:72:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"569:251:18","text":"@notice Returns how many observations are needed per minute in Uniswap V3 oracles, on the deployed chain\n @dev This value is assigned during deployment and cannot be changed\n @return Number of observation that are needed per minute"},"functionSelector":"b7604e53","id":3121,"implemented":false,"kind":"function","modifiers":[],"name":"CARDINALITY_PER_MINUTE","nameLocation":"835:22:18","nodeType":"FunctionDefinition","parameters":{"id":3117,"nodeType":"ParameterList","parameters":[],"src":"857:2:18"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3121,"src":"883:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3118,"name":"uint8","nodeType":"ElementaryTypeName","src":"883:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"882:7:18"},"scope":3286,"src":"826:64:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3122,"nodeType":"StructuredDocumentation","src":"898:84:18","text":"@notice Returns all supported fee tiers\n @return The supported fee tiers"},"functionSelector":"bc4389f7","id":3128,"implemented":false,"kind":"function","modifiers":[],"name":"supportedFeeTiers","nameLocation":"997:17:18","nodeType":"FunctionDefinition","parameters":{"id":3123,"nodeType":"ParameterList","parameters":[],"src":"1014:2:18"},"returnParameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3128,"src":"1040:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_memory_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":3124,"name":"uint24","nodeType":"ElementaryTypeName","src":"1040:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":3125,"nodeType":"ArrayTypeName","src":"1040:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"}],"src":"1039:17:18"},"scope":3286,"src":"988:69:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3129,"nodeType":"StructuredDocumentation","src":"1065:224:18","text":"@notice Returns whether a specific pair can be supported by the oracle\n @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\n @return Whether the given pair can be supported by the oracle"},"functionSelector":"9446994a","id":3138,"implemented":false,"kind":"function","modifiers":[],"name":"isPairSupported","nameLocation":"1304:15:18","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3131,"mutability":"mutable","name":"tokenA","nameLocation":"1328:6:18","nodeType":"VariableDeclaration","scope":3138,"src":"1320:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3130,"name":"address","nodeType":"ElementaryTypeName","src":"1320:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3133,"mutability":"mutable","name":"tokenB","nameLocation":"1344:6:18","nodeType":"VariableDeclaration","scope":3138,"src":"1336:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3132,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1319:32:18"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3138,"src":"1375:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3135,"name":"bool","nodeType":"ElementaryTypeName","src":"1375:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1374:6:18"},"scope":3286,"src":"1295:86:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3139,"nodeType":"StructuredDocumentation","src":"1389:191:18","text":"@notice Returns all existing pools for the given pair\n @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\n @return All existing pools for the given pair"},"functionSelector":"62d99119","id":3149,"implemented":false,"kind":"function","modifiers":[],"name":"getAllPoolsForPair","nameLocation":"1595:18:18","nodeType":"FunctionDefinition","parameters":{"id":3144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"tokenA","nameLocation":"1622:6:18","nodeType":"VariableDeclaration","scope":3149,"src":"1614:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3140,"name":"address","nodeType":"ElementaryTypeName","src":"1614:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3143,"mutability":"mutable","name":"tokenB","nameLocation":"1638:6:18","nodeType":"VariableDeclaration","scope":3149,"src":"1630:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3142,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1613:32:18"},"returnParameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3149,"src":"1669:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3145,"name":"address","nodeType":"ElementaryTypeName","src":"1669:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3146,"nodeType":"ArrayTypeName","src":"1669:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1668:18:18"},"scope":3286,"src":"1586:101:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"1695:809:18","text":"@notice Returns a quote, based on the given tokens and amount, by querying all of the pair's pools\n @dev If some pools are not configured correctly for the given period, then they will be ignored\n @dev Will revert if there are no pools available/configured for the pair and period combination\n @param baseAmount Amount of token to be converted\n @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\n @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\n @param period Number of seconds from which to calculate the TWAP\n @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\n @return queriedPools The pools that were queried to calculate the quote"},"functionSelector":"0757bc81","id":3166,"implemented":false,"kind":"function","modifiers":[],"name":"quoteAllAvailablePoolsWithTimePeriod","nameLocation":"2519:36:18","nodeType":"FunctionDefinition","parameters":{"id":3159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"baseAmount","nameLocation":"2574:10:18","nodeType":"VariableDeclaration","scope":3166,"src":"2566:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3151,"name":"uint128","nodeType":"ElementaryTypeName","src":"2566:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"baseToken","nameLocation":"2603:9:18","nodeType":"VariableDeclaration","scope":3166,"src":"2595:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3153,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3156,"mutability":"mutable","name":"quoteToken","nameLocation":"2631:10:18","nodeType":"VariableDeclaration","scope":3166,"src":"2623:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3155,"name":"address","nodeType":"ElementaryTypeName","src":"2623:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3158,"mutability":"mutable","name":"period","nameLocation":"2659:6:18","nodeType":"VariableDeclaration","scope":3166,"src":"2652:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3157,"name":"uint32","nodeType":"ElementaryTypeName","src":"2652:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2555:117:18"},"returnParameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3161,"mutability":"mutable","name":"quoteAmount","nameLocation":"2704:11:18","nodeType":"VariableDeclaration","scope":3166,"src":"2696:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3160,"name":"uint256","nodeType":"ElementaryTypeName","src":"2696:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"queriedPools","nameLocation":"2734:12:18","nodeType":"VariableDeclaration","scope":3166,"src":"2717:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3163,"nodeType":"ArrayTypeName","src":"2717:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2695:52:18"},"scope":3286,"src":"2510:238:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"2756:863:18","text":"@notice Returns a quote, based on the given tokens and amount, by querying only the specified fee tiers\n @dev Will revert if the pair does not have a pool for one of the given fee tiers, or if one of the pools\n is not prepared/configured correctly for the given period\n @param baseAmount Amount of token to be converted\n @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\n @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\n @param feeTiers The fee tiers to consider when calculating the quote\n @param period Number of seconds from which to calculate the TWAP\n @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\n @return queriedPools The pools that were queried to calculate the quote"},"functionSelector":"d8045eca","id":3186,"implemented":false,"kind":"function","modifiers":[],"name":"quoteSpecificFeeTiersWithTimePeriod","nameLocation":"3634:35:18","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"baseAmount","nameLocation":"3688:10:18","nodeType":"VariableDeclaration","scope":3186,"src":"3680:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3168,"name":"uint128","nodeType":"ElementaryTypeName","src":"3680:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"baseToken","nameLocation":"3717:9:18","nodeType":"VariableDeclaration","scope":3186,"src":"3709:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"3709:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"quoteToken","nameLocation":"3745:10:18","nodeType":"VariableDeclaration","scope":3186,"src":"3737:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3172,"name":"address","nodeType":"ElementaryTypeName","src":"3737:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"feeTiers","nameLocation":"3784:8:18","nodeType":"VariableDeclaration","scope":3186,"src":"3766:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_calldata_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":3174,"name":"uint24","nodeType":"ElementaryTypeName","src":"3766:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":3175,"nodeType":"ArrayTypeName","src":"3766:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"},{"constant":false,"id":3178,"mutability":"mutable","name":"period","nameLocation":"3810:6:18","nodeType":"VariableDeclaration","scope":3186,"src":"3803:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3177,"name":"uint32","nodeType":"ElementaryTypeName","src":"3803:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3669:154:18"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"quoteAmount","nameLocation":"3855:11:18","nodeType":"VariableDeclaration","scope":3186,"src":"3847:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"3847:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3184,"mutability":"mutable","name":"queriedPools","nameLocation":"3885:12:18","nodeType":"VariableDeclaration","scope":3186,"src":"3868:29:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3182,"name":"address","nodeType":"ElementaryTypeName","src":"3868:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3183,"nodeType":"ArrayTypeName","src":"3868:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3846:52:18"},"scope":3286,"src":"3625:274:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"3907:694:18","text":"@notice Returns a quote, based on the given tokens and amount, by querying only the specified pools\n @dev Will revert if one of the pools is not prepared/configured correctly for the given period\n @param baseAmount Amount of token to be converted\n @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\n @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\n @param pools The pools to consider when calculating the quote\n @param period Number of seconds from which to calculate the TWAP\n @return quoteAmount Amount of quoteToken received for baseAmount of baseToken"},"functionSelector":"07f7ca9f","id":3203,"implemented":false,"kind":"function","modifiers":[],"name":"quoteSpecificPoolsWithTimePeriod","nameLocation":"4616:32:18","nodeType":"FunctionDefinition","parameters":{"id":3199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"baseAmount","nameLocation":"4667:10:18","nodeType":"VariableDeclaration","scope":3203,"src":"4659:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3188,"name":"uint128","nodeType":"ElementaryTypeName","src":"4659:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"baseToken","nameLocation":"4696:9:18","nodeType":"VariableDeclaration","scope":3203,"src":"4688:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3190,"name":"address","nodeType":"ElementaryTypeName","src":"4688:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"quoteToken","nameLocation":"4724:10:18","nodeType":"VariableDeclaration","scope":3203,"src":"4716:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3192,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"pools","nameLocation":"4764:5:18","nodeType":"VariableDeclaration","scope":3203,"src":"4745:24:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3194,"name":"address","nodeType":"ElementaryTypeName","src":"4745:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3195,"nodeType":"ArrayTypeName","src":"4745:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3198,"mutability":"mutable","name":"period","nameLocation":"4787:6:18","nodeType":"VariableDeclaration","scope":3203,"src":"4780:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3197,"name":"uint32","nodeType":"ElementaryTypeName","src":"4780:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4648:152:18"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3201,"mutability":"mutable","name":"quoteAmount","nameLocation":"4832:11:18","nodeType":"VariableDeclaration","scope":3203,"src":"4824:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4823:21:18"},"scope":3286,"src":"4607:238:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3204,"nodeType":"StructuredDocumentation","src":"4853:457:18","text":"@notice Will initialize all existing pools for the given pair, so that they can be queried with the given period in the future\n @dev Will revert if there are no pools available for the pair and period combination\n @param tokenA One of the pair's tokens\n @param tokenB The other of the pair's tokens\n @param period The period that will be guaranteed when quoting\n @return preparedPools The pools that were prepared"},"functionSelector":"1c49cbb5","id":3216,"implemented":false,"kind":"function","modifiers":[],"name":"prepareAllAvailablePoolsWithTimePeriod","nameLocation":"5325:38:18","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3206,"mutability":"mutable","name":"tokenA","nameLocation":"5382:6:18","nodeType":"VariableDeclaration","scope":3216,"src":"5374:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3205,"name":"address","nodeType":"ElementaryTypeName","src":"5374:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3208,"mutability":"mutable","name":"tokenB","nameLocation":"5407:6:18","nodeType":"VariableDeclaration","scope":3216,"src":"5399:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"5399:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"period","nameLocation":"5431:6:18","nodeType":"VariableDeclaration","scope":3216,"src":"5424:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3209,"name":"uint32","nodeType":"ElementaryTypeName","src":"5424:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5363:81:18"},"returnParameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3214,"mutability":"mutable","name":"preparedPools","nameLocation":"5480:13:18","nodeType":"VariableDeclaration","scope":3216,"src":"5463:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3212,"name":"address","nodeType":"ElementaryTypeName","src":"5463:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3213,"nodeType":"ArrayTypeName","src":"5463:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5462:32:18"},"scope":3286,"src":"5316:179:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"5503:538:18","text":"@notice Will initialize the pair's pools with the specified fee tiers, so that they can be queried with the given period in the future\n @dev Will revert if the pair does not have a pool for a given fee tier\n @param tokenA One of the pair's tokens\n @param tokenB The other of the pair's tokens\n @param feeTiers The fee tiers to consider when searching for the pair's pools\n @param period The period that will be guaranteed when quoting\n @return preparedPools The pools that were prepared"},"functionSelector":"e85dd383","id":3232,"implemented":false,"kind":"function","modifiers":[],"name":"prepareSpecificFeeTiersWithTimePeriod","nameLocation":"6056:37:18","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"tokenA","nameLocation":"6112:6:18","nodeType":"VariableDeclaration","scope":3232,"src":"6104:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"6104:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"tokenB","nameLocation":"6137:6:18","nodeType":"VariableDeclaration","scope":3232,"src":"6129:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"6129:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"feeTiers","nameLocation":"6172:8:18","nodeType":"VariableDeclaration","scope":3232,"src":"6154:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_calldata_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":3222,"name":"uint24","nodeType":"ElementaryTypeName","src":"6154:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":3223,"nodeType":"ArrayTypeName","src":"6154:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"period","nameLocation":"6198:6:18","nodeType":"VariableDeclaration","scope":3232,"src":"6191:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3225,"name":"uint32","nodeType":"ElementaryTypeName","src":"6191:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6093:118:18"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"preparedPools","nameLocation":"6247:13:18","nodeType":"VariableDeclaration","scope":3232,"src":"6230:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"6230:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3229,"nodeType":"ArrayTypeName","src":"6230:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6229:32:18"},"scope":3286,"src":"6047:215:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"6270:225:18","text":"@notice Will initialize all given pools, so that they can be queried with the given period in the future\n @param pools The pools to initialize\n @param period The period that will be guaranteed when quoting"},"functionSelector":"354b1a7d","id":3241,"implemented":false,"kind":"function","modifiers":[],"name":"prepareSpecificPoolsWithTimePeriod","nameLocation":"6510:34:18","nodeType":"FunctionDefinition","parameters":{"id":3239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"pools","nameLocation":"6564:5:18","nodeType":"VariableDeclaration","scope":3241,"src":"6545:24:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"6545:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3235,"nodeType":"ArrayTypeName","src":"6545:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3238,"mutability":"mutable","name":"period","nameLocation":"6578:6:18","nodeType":"VariableDeclaration","scope":3241,"src":"6571:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3237,"name":"uint32","nodeType":"ElementaryTypeName","src":"6571:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"6544:41:18"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[],"src":"6594:0:18"},"scope":3286,"src":"6501:94:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3242,"nodeType":"StructuredDocumentation","src":"6603:475:18","text":"@notice Will increase observations for all existing pools for the given pair, so they start accruing information for twap calculations\n @dev Will revert if there are no pools available for the pair and period combination\n @param tokenA One of the pair's tokens\n @param tokenB The other of the pair's tokens\n @param cardinality The cardinality that will be guaranteed when quoting\n @return preparedPools The pools that were prepared"},"functionSelector":"1b2a933c","id":3254,"implemented":false,"kind":"function","modifiers":[],"name":"prepareAllAvailablePoolsWithCardinality","nameLocation":"7093:39:18","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"tokenA","nameLocation":"7151:6:18","nodeType":"VariableDeclaration","scope":3254,"src":"7143:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"7143:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"tokenB","nameLocation":"7176:6:18","nodeType":"VariableDeclaration","scope":3254,"src":"7168:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"7168:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"cardinality","nameLocation":"7200:11:18","nodeType":"VariableDeclaration","scope":3254,"src":"7193:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3247,"name":"uint16","nodeType":"ElementaryTypeName","src":"7193:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"7132:86:18"},"returnParameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"preparedPools","nameLocation":"7254:13:18","nodeType":"VariableDeclaration","scope":3254,"src":"7237:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3250,"name":"address","nodeType":"ElementaryTypeName","src":"7237:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3251,"nodeType":"ArrayTypeName","src":"7237:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7236:32:18"},"scope":3286,"src":"7084:185:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"7277:552:18","text":"@notice Will increase the pair's pools with the specified fee tiers observations, so they start accruing information for twap calculations\n @dev Will revert if the pair does not have a pool for a given fee tier\n @param tokenA One of the pair's tokens\n @param tokenB The other of the pair's tokens\n @param feeTiers The fee tiers to consider when searching for the pair's pools\n @param cardinality The cardinality that will be guaranteed when quoting\n @return preparedPools The pools that were prepared"},"functionSelector":"33e4c28e","id":3270,"implemented":false,"kind":"function","modifiers":[],"name":"prepareSpecificFeeTiersWithCardinality","nameLocation":"7844:38:18","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3257,"mutability":"mutable","name":"tokenA","nameLocation":"7901:6:18","nodeType":"VariableDeclaration","scope":3270,"src":"7893:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"7893:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3259,"mutability":"mutable","name":"tokenB","nameLocation":"7926:6:18","nodeType":"VariableDeclaration","scope":3270,"src":"7918:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"7918:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"feeTiers","nameLocation":"7961:8:18","nodeType":"VariableDeclaration","scope":3270,"src":"7943:26:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_calldata_ptr","typeString":"uint24[]"},"typeName":{"baseType":{"id":3260,"name":"uint24","nodeType":"ElementaryTypeName","src":"7943:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":3261,"nodeType":"ArrayTypeName","src":"7943:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint24_$dyn_storage_ptr","typeString":"uint24[]"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"cardinality","nameLocation":"7987:11:18","nodeType":"VariableDeclaration","scope":3270,"src":"7980:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3263,"name":"uint16","nodeType":"ElementaryTypeName","src":"7980:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"7882:123:18"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"preparedPools","nameLocation":"8041:13:18","nodeType":"VariableDeclaration","scope":3270,"src":"8024:30:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"8024:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3267,"nodeType":"ArrayTypeName","src":"8024:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8023:32:18"},"scope":3286,"src":"7835:221:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"8064:239:18","text":"@notice Will increase all given pools observations, so they start accruing information for twap calculations\n @param pools The pools to initialize\n @param cardinality The cardinality that will be guaranteed when quoting"},"functionSelector":"55eba792","id":3279,"implemented":false,"kind":"function","modifiers":[],"name":"prepareSpecificPoolsWithCardinality","nameLocation":"8318:35:18","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"pools","nameLocation":"8373:5:18","nodeType":"VariableDeclaration","scope":3279,"src":"8354:24:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3272,"name":"address","nodeType":"ElementaryTypeName","src":"8354:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3273,"nodeType":"ArrayTypeName","src":"8354:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"cardinality","nameLocation":"8387:11:18","nodeType":"VariableDeclaration","scope":3279,"src":"8380:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3275,"name":"uint16","nodeType":"ElementaryTypeName","src":"8380:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8353:46:18"},"returnParameters":{"id":3278,"nodeType":"ParameterList","parameters":[],"src":"8408:0:18"},"scope":3286,"src":"8309:100:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"8417:168:18","text":"@notice Adds support for a new fee tier\n @dev Will revert if the given tier is invalid, or already supported\n @param feeTier The new fee tier to add"},"functionSelector":"43dfc58d","id":3285,"implemented":false,"kind":"function","modifiers":[],"name":"addNewFeeTier","nameLocation":"8600:13:18","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"feeTier","nameLocation":"8621:7:18","nodeType":"VariableDeclaration","scope":3285,"src":"8614:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3281,"name":"uint24","nodeType":"ElementaryTypeName","src":"8614:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"8613:16:18"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[],"src":"8638:0:18"},"scope":3286,"src":"8591:48:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3287,"src":"263:8379:18","usedErrors":[],"usedEvents":[]}],"src":"48:8596:18"},"id":18}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ea536ad08b12bac4da368385961ddee2f4d624b0dab738eb233487e42140a6c64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xA5 CALLDATASIZE 0xAD ADDMOD 0xB1 0x2B 0xAC 0x4D LOG3 PUSH9 0x385961DDEE2F4D624B 0xD 0xAB PUSH20 0x8EB233487E42140A6C64736F6C63430008190033 ","sourceMap":"449:6273:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202ea536ad08b12bac4da368385961ddee2f4d624b0dab738eb233487e42140a6c64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xA5 CALLDATASIZE 0xAD ADDMOD 0xB1 0x2B 0xAC 0x4D LOG3 PUSH9 0x385961DDEE2F4D624B 0xD 0xAB PUSH20 0x8EB233487E42140A6C64736F6C63430008190033 ","sourceMap":"449:6273:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f2038cc5b642ee9a57478ee4f1c9222b83a9768ab29523707a16532388131a6564736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SUB DUP13 0xC5 0xB6 TIMESTAMP 0xEE SWAP11 JUMPI SELFBALANCE DUP15 0xE4 CALL 0xC9 0x22 0x2B DUP4 0xA9 PUSH23 0x8AB29523707A16532388131A6564736F6C634300081900 CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f2038cc5b642ee9a57478ee4f1c9222b83a9768ab29523707a16532388131a6564736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE SUB DUP13 0xC5 0xB6 TIMESTAMP 0xEE SWAP11 JUMPI SELFBALANCE DUP15 0xE4 CALL 0xC9 0x22 0x2B DUP4 0xA9 PUSH23 0x8AB29523707A16532388131A6564736F6C634300081900 CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122072f29379d66268d9b1608cb5aaba7b46da6cc1e63794f87e7b8fe627a065dbb964736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF29379D66268D9B1608CB5AABA7B46DA6CC1E6 CALLDATACOPY SWAP5 0xF8 PUSH31 0x7B8FE627A065DBB964736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:12;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122072f29379d66268d9b1608cb5aaba7b46da6cc1e63794f87e7b8fe627a065dbb964736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF29379D66268D9B1608CB5AABA7B46DA6CC1E6 CALLDATACOPY SWAP5 0xF8 PUSH31 0x7B8FE627A065DBB964736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"contracts/BaluniV1Oracle.sol":{"BaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaledWithAgg","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaledWithStaticOracle","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertWithAgg","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertWithStaticOracle","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_registry","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"contract IBaluniV1Registry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_registry","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"convert(address,address,uint256)":{"details":"Converts the specified amount of `fromToken` to `toToken` using the available oracle. If the conversion fails with the static oracle, it falls back to the aggregator oracle.","params":{"amount":"The amount of `fromToken` to convert.","fromToken":"The address of the token to convert from.","toToken":"The address of the token to convert to."},"returns":{"valuation":"The converted valuation of `amount` in `toToken`."}},"convertScaled(address,address,uint256)":{"details":"Converts the specified amount of `fromToken` to `toToken` using the available oracle. If the conversion fails with the static oracle, it falls back to the aggregator oracle. This function is externally callable.","params":{"amount":"The amount of `fromToken` to convert.","fromToken":"The address of the token to convert from.","toToken":"The address of the token to convert to."},"returns":{"valuation":"The converted valuation of `amount` in `toToken`."}},"convertScaledWithAgg(address,address,uint256)":{"details":"Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator and scales the result.","params":{"amount":"The amount of `fromToken` to convert.","fromToken":"The address of the token to convert from.","toToken":"The address of the token to convert to."},"returns":{"valuation":" The scaled converted valuation of `amount` in `toToken`."}},"convertScaledWithStaticOracle(address,address,uint256)":{"details":"Converts the given amount of tokens from one token to another using a static oracle.","params":{"amount":"The amount of tokens to convert.","fromToken":"The address of the token to convert from.","toToken":"The address of the token to convert to."},"returns":{"valuation":"of the converted tokens."}},"convertWithAgg(address,address,uint256)":{"details":"Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator.","params":{"amount":"The amount of `fromToken` to convert.","fromToken":"The address of the token to convert from.","toToken":"The address of the token to convert to."},"returns":{"valuation":"The converted valuation of `amount` in `toToken`."}},"convertWithStaticOracle(address,address,uint256)":{"details":"Converts the specified amount of `fromToken` to `toToken` using the static oracle.","params":{"amount":"The amount of `fromToken` to convert.","fromToken":"The address of the token to convert from.","toToken":"The address of the token to convert to."},"returns":{"valuation":"of the converted amount."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0604052306080523480156012575f80fd5b50608051611d416100395f395f81816111fe0152818161122701526113dc0152611d415ff3fe6080604052600436106100e4575f3560e01c80638da5cb5b11610087578063c4d66de811610057578063c4d66de81461029a578063ca66d9a8146102b9578063f2fde38b146102d8578063fac0ba74146102f7575f80fd5b80638da5cb5b146101cb5780638f2248bc14610207578063ad3cb1cc14610226578063b27b5e751461027b575f80fd5b806352d1902d116100c257806352d1902d1461014e578063715018a6146101625780637b103999146101765780638c41a354146101ac575f80fd5b80631f0e3cd2146100e8578063248391ff1461011a5780634f1ef28614610139575b5f80fd5b3480156100f3575f80fd5b50610107610102366004611845565b610316565b6040519081526020015b60405180910390f35b348015610125575f80fd5b50610107610134366004611845565b6105d6565b61014c6101473660046118e1565b6106fa565b005b348015610159575f80fd5b50610107610719565b34801561016d575f80fd5b5061014c610747565b348015610181575f80fd5b505f54610194906001600160a01b031681565b6040516001600160a01b039091168152602001610111565b3480156101b7575f80fd5b506101076101c6366004611845565b61075a565b3480156101d6575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610194565b348015610212575f80fd5b5061014c610221366004611983565b610adc565b348015610231575f80fd5b5061026e6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161011191906119c6565b348015610286575f80fd5b50610107610295366004611845565b610c4a565b3480156102a5575f80fd5b5061014c6102b43660046119fb565b610d2c565b3480156102c4575f80fd5b506101076102d3366004611845565b610ee4565b3480156102e3575f80fd5b5061014c6102f23660046119fb565b610fed565b348015610302575f80fd5b50610107610311366004611845565b611048565b5f826001600160a01b0316846001600160a01b0316036103375750806105cf565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316638e1c3a8a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610387573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ab9190611a16565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061040e9190611a31565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104719190611a31565b6040517f802431fb0000000000000000000000000000000000000000000000000000000081526001600160a01b03898116600483015288811660248301525f6044830181905292935085169063802431fb90606401602060405180830381865afa1580156104e1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105059190611a51565b905061051282600a611bb3565b61051d84600a611bb3565b6105279083611bc1565b6105319190611bd8565b90505f8260ff168460ff16106105875761054b8385611c10565b61055690600a611bb3565b9050670de0b6b3a76400008261056c838a611bd8565b6105769190611bc1565b6105809190611bd8565b95506105c9565b6105918484611c10565b61059c90600a611bb3565b9050670de0b6b3a7640000826105b2838a611bc1565b6105bc9190611bc1565b6105c69190611bd8565b95505b50505050505b9392505050565b6040517ffac0ba740000000000000000000000000000000000000000000000000000000081526001600160a01b03808516600483015283166024820152604481018290525f90309063fac0ba7490606401602060405180830381865afa925050508015610660575060408051601f3d908101601f1916820190925261065d91810190611a51565b60015b6106f3576040517f1f0e3cd20000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152604481018390523090631f0e3cd2906064015b602060405180830381865afa1580156106cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f39190611a51565b90506105cf565b6107026111f3565b61070b826112c3565b61071582826112cb565b5050565b5f6107226113d1565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61074f611433565b6107585f6114a7565b565b5f826001600160a01b0316846001600160a01b0316036107f457826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d49190611a31565b6107df906012611c10565b6107ea90600a611bb3565b6106f39083611bc1565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316638e1c3a8a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610844573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108689190611a16565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108cb9190611a31565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092e9190611a31565b6040517f802431fb0000000000000000000000000000000000000000000000000000000081526001600160a01b03898116600483015288811660248301525f6044830181905292935085169063802431fb90606401602060405180830381865afa15801561099e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c29190611a51565b90506109cf82600a611bb3565b6109da84600a611bb3565b6109e49083611bc1565b6109ee9190611bd8565b90505f80806109fe856012611c10565b610a0990600a611bb3565b90508460ff168660ff1603610a3c57670de0b6b3a7640000610a2b858b611bc1565b610a359190611bd8565b9750610ac3565b8460ff168660ff161115610a8057610a548587611c10565b610a5f90600a611bb3565b9250610a6b838a611bd8565b9150670de0b6b3a7640000610a2b8584611bc1565b610a8a8686611c10565b610a9590600a611bb3565b9250610aa1838a611bc1565b9150670de0b6b3a7640000610ab68584611bc1565b610ac09190611bd8565b97505b610acd8189611bc1565b9b9a5050505050505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805482919068010000000000000000900460ff1680610b2a5750805467ffffffffffffffff808416911610155b15610b61576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001667ffffffffffffffff83161768010000000000000000178155610ba73361152f565b610baf611540565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03861617905580547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b6040517fca66d9a80000000000000000000000000000000000000000000000000000000081526001600160a01b03808516600483015283166024820152604481018290525f90309063ca66d9a890606401602060405180830381865afa925050508015610cd4575060408051601f3d908101601f19168201909252610cd191810190611a51565b60015b6106f3576040517f8c41a3540000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152604481018390523090638c41a354906064016106b4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610d765750825b90505f8267ffffffffffffffff166001148015610d925750303b155b905081158015610da0575080155b15610dd7576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610e385784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610e413361152f565b610e49611540565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388161790558315610edc5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6040517ffac0ba740000000000000000000000000000000000000000000000000000000081526001600160a01b03808516600483015283166024820152604481018290525f908190309063fac0ba7490606401602060405180830381865afa158015610f52573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f769190611a51565b9050610fe481866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fdc9190611a31565b60ff16611548565b95945050505050565b610ff5611433565b6001600160a01b03811661103c576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b611045816114a7565b50565b5f8054604080517fa5d2236f000000000000000000000000000000000000000000000000000000008152905183926001600160a01b03169163a5d2236f9160048083019260209291908290030181865afa1580156110a8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110cc9190611a16565b90506001600160a01b03811661113e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5374617469634f7261636c65206e6f74207365740000000000000000000000006044820152606401611033565b6040517f0757bc810000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff841660048201526001600160a01b0386811660248301528581166044830152610e106064830152821690630757bc81906084015f60405180830381865afa1580156111c2573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111e99190810190611c29565b5095945050505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061128c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166112807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b15610758576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611045611433565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611325575060408051601f3d908101601f1916820190925261132291810190611a51565b60015b611366576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401611033565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146113c2576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401611033565b6113cc838361156e565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610758576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336114657f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610758576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401611033565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff000000000000000000000000000000000000000081166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6115376115c3565b6110458161162a565b6107586115c3565b5f61155b82670de0b6b3a7640000611ce2565b6115659084611bc1565b90505b92915050565b61157782611632565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156115bb576113cc82826116d9565b610715611742565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610758576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ff56115c3565b806001600160a01b03163b5f03611680576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401611033565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516116f59190611cf5565b5f60405180830381855af49150503d805f811461172d576040519150601f19603f3d011682016040523d82523d5f602084013e611732565b606091505b5091509150610fe485838361177a565b3415610758576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608261178f5761178a826117ef565b6105cf565b81511580156117a657506001600160a01b0384163b155b156117e8576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611033565b50806105cf565b8051156117ff5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381168114611045575f80fd5b5f805f60608486031215611857575f80fd5b833561186281611831565b9250602084013561187281611831565b929592945050506040919091013590565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118d9576118d9611883565b604052919050565b5f80604083850312156118f2575f80fd5b82356118fd81611831565b915060208381013567ffffffffffffffff8082111561191a575f80fd5b818601915086601f83011261192d575f80fd5b81358181111561193f5761193f611883565b61195184601f19601f840116016118b0565b91508082528784828501011115611966575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f8060408385031215611994575f80fd5b823561199f81611831565b9150602083013567ffffffffffffffff811681146119bb575f80fd5b809150509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611a0b575f80fd5b81356105cf81611831565b5f60208284031215611a26575f80fd5b81516105cf81611831565b5f60208284031215611a41575f80fd5b815160ff811681146105cf575f80fd5b5f60208284031215611a61575f80fd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b600181815b80851115611aee57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611ad457611ad4611a68565b80851615611ae157918102915b93841c9390800290611a9a565b509250929050565b5f82611b0457506001611568565b81611b1057505f611568565b8160018114611b265760028114611b3057611b4c565b6001915050611568565b60ff841115611b4157611b41611a68565b50506001821b611568565b5060208310610133831016604e8410600b8410161715611b6f575081810a611568565b611b798383611a95565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611bab57611bab611a68565b029392505050565b5f61156560ff841683611af6565b808202811582820484141761156857611568611a68565b5f82611c0b577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b60ff828116828216039081111561156857611568611a68565b5f8060408385031215611c3a575f80fd5b8251915060208084015167ffffffffffffffff80821115611c59575f80fd5b818601915086601f830112611c6c575f80fd5b815181811115611c7e57611c7e611883565b8060051b9150611c8f8483016118b0565b8181529183018401918481019089841115611ca8575f80fd5b938501935b83851015611cd25784519250611cc283611831565b8282529385019390850190611cad565b8096505050505050509250929050565b8181038181111561156857611568611a68565b5f82518060208501845e5f92019182525091905056fea2646970667358221220b7390934f91cdc7732d3aca742c9d03e33d166d0d3031a3b30d78be9ab56c79b64736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1D41 PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x11FE ADD MSTORE DUP2 DUP2 PUSH2 0x1227 ADD MSTORE PUSH2 0x13DC ADD MSTORE PUSH2 0x1D41 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xCA66D9A8 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xFAC0BA74 EQ PUSH2 0x2F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xB27B5E75 EQ PUSH2 0x27B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8C41A354 EQ PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F0E3CD2 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x248391FF EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x719 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x747 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x111 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0xFED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x1048 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x337 JUMPI POP DUP1 PUSH2 0x5CF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E1C3A8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x387 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x802431FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP DUP6 AND SWAP1 PUSH4 0x802431FB SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0x512 DUP3 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x51D DUP5 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x527 SWAP1 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0xFF AND DUP5 PUSH1 0xFF AND LT PUSH2 0x587 JUMPI PUSH2 0x54B DUP4 DUP6 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x556 SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x56C DUP4 DUP11 PUSH2 0x1BD8 JUMP JUMPDEST PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP6 POP PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x591 DUP5 DUP5 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x59C SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x5B2 DUP4 DUP11 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFAC0BA7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xFAC0BA74 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x660 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x65D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F0E3CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0x1F0E3CD2 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x702 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0x70B DUP3 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x715 DUP3 DUP3 PUSH2 0x12CB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x722 PUSH2 0x13D1 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x74F PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x758 PUSH0 PUSH2 0x14A7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7F4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x7DF SWAP1 PUSH1 0x12 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x7EA SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x6F3 SWAP1 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E1C3A8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x844 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x802431FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP DUP6 AND SWAP1 PUSH4 0x802431FB SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0x9CF DUP3 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x9DA DUP5 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x9E4 SWAP1 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP1 PUSH2 0x9FE DUP6 PUSH1 0x12 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0xA09 SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xFF AND DUP7 PUSH1 0xFF AND SUB PUSH2 0xA3C JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2B DUP6 DUP12 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP8 POP PUSH2 0xAC3 JUMP JUMPDEST DUP5 PUSH1 0xFF AND DUP7 PUSH1 0xFF AND GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA54 DUP6 DUP8 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0xA5F SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP PUSH2 0xA6B DUP4 DUP11 PUSH2 0x1BD8 JUMP JUMPDEST SWAP2 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2B DUP6 DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0xA8A DUP7 DUP7 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0xA95 SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA1 DUP4 DUP11 PUSH2 0x1BC1 JUMP JUMPDEST SWAP2 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xAB6 DUP6 DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0xAC0 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH2 0xACD DUP2 DUP10 PUSH2 0x1BC1 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xB2A JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND OR PUSH9 0x10000000000000000 OR DUP2 SSTORE PUSH2 0xBA7 CALLER PUSH2 0x152F JUMP JUMPDEST PUSH2 0xBAF PUSH2 0x1540 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCA66D9A800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xCA66D9A8 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C41A35400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0x8C41A354 SWAP1 PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xD92 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDA0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xE38 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0xE41 CALLER PUSH2 0x152F JUMP JUMPDEST PUSH2 0xE49 PUSH2 0x1540 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xEDC JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFAC0BA7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0xFAC0BA74 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0xFE4 DUP2 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x1548 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x103C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x14A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA5D2236F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA5D2236F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x113E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374617469634F7261636C65206E6F7420736574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x757BC8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH2 0xE10 PUSH1 0x64 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x757BC81 SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x11E9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C29 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x128C JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1280 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1045 PUSH2 0x1433 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1325 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1322 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x13CC DUP4 DUP4 PUSH2 0x156E JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x1465 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1537 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x758 PUSH2 0x15C3 JUMP JUMPDEST PUSH0 PUSH2 0x155B DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x1565 SWAP1 DUP5 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1577 DUP3 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x15BB JUMPI PUSH2 0x13CC DUP3 DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x1742 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF5 PUSH2 0x15C3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x172D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFE4 DUP6 DUP4 DUP4 PUSH2 0x177A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x178F JUMPI PUSH2 0x178A DUP3 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x17A6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST POP DUP1 PUSH2 0x5CF JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x17FF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1045 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1862 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1872 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18D9 JUMPI PUSH2 0x18D9 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18FD DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x191A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x193F JUMPI PUSH2 0x193F PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x1951 DUP5 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x18B0 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1966 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1994 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x199F DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x19BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5CF DUP2 PUSH2 0x1831 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A26 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5CF DUP2 PUSH2 0x1831 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x5CF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1AEE JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD4 PUSH2 0x1A68 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1AE1 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1B04 JUMPI POP PUSH1 0x1 PUSH2 0x1568 JUMP JUMPDEST DUP2 PUSH2 0x1B10 JUMPI POP PUSH0 PUSH2 0x1568 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1B26 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1B30 JUMPI PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1568 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B41 PUSH2 0x1A68 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1568 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1B6F JUMPI POP DUP2 DUP2 EXP PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x1B79 DUP4 DUP4 PUSH2 0x1A95 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x1BAB JUMPI PUSH2 0x1BAB PUSH2 0x1A68 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1565 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1AF6 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1568 JUMPI PUSH2 0x1568 PUSH2 0x1A68 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1C0B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1568 PUSH2 0x1A68 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C59 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C6C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C7E JUMPI PUSH2 0x1C7E PUSH2 0x1883 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x1C8F DUP5 DUP4 ADD PUSH2 0x18B0 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1CD2 JUMPI DUP5 MLOAD SWAP3 POP PUSH2 0x1CC2 DUP4 PUSH2 0x1831 JUMP JUMPDEST DUP3 DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1CAD JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1568 PUSH2 0x1A68 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CODECOPY MULMOD CALLVALUE 0xF9 SHR 0xDC PUSH24 0x32D3ACA742C9D03E33D166D0D3031A3B30D78BE9AB56C79B PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1959:7954:14:-:0;;;1171:4:2;1128:48;;1959:7954:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":5423,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":5674,"id":81,"parameterSlots":1,"returnSlots":0},"@__UUPSUpgradeable_init_502":{"entryPoint":5440,"id":502,"parameterSlots":0,"returnSlots":0},"@_authorizeUpgrade_2877":{"entryPoint":4803,"id":2877,"parameterSlots":1,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":5571,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_1742":{"entryPoint":5954,"id":1742,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":5073,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":5171,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":4595,"id":562,"parameterSlots":0,"returnSlots":0},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_msgSender_1275":{"entryPoint":null,"id":1275,"parameterSlots":0,"returnSlots":1},"@_revert_2109":{"entryPoint":6127,"id":2109,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1528":{"entryPoint":5682,"id":1528,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":5287,"id":193,"parameterSlots":1,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":4811,"id":629,"parameterSlots":2,"returnSlots":0},"@convertScaledWithAgg_2742":{"entryPoint":1882,"id":2742,"parameterSlots":3,"returnSlots":1},"@convertScaledWithStaticOracle_2828":{"entryPoint":3812,"id":2828,"parameterSlots":3,"returnSlots":1},"@convertScaled_2445":{"entryPoint":3146,"id":2445,"parameterSlots":3,"returnSlots":1},"@convertWithAgg_2569":{"entryPoint":790,"id":2569,"parameterSlots":3,"returnSlots":1},"@convertWithStaticOracle_2793":{"entryPoint":4168,"id":2793,"parameterSlots":3,"returnSlots":1},"@convert_2408":{"entryPoint":1494,"id":2408,"parameterSlots":3,"returnSlots":1},"@functionDelegateCall_2029":{"entryPoint":5849,"id":2029,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2142":{"entryPoint":null,"id":2142,"parameterSlots":1,"returnSlots":1},"@getImplementation_1501":{"entryPoint":null,"id":1501,"parameterSlots":0,"returnSlots":1},"@initialize_2346":{"entryPoint":3372,"id":2346,"parameterSlots":1,"returnSlots":0},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":1817,"id":520,"parameterSlots":0,"returnSlots":1},"@registry_2324":{"entryPoint":null,"id":2324,"parameterSlots":0,"returnSlots":0},"@reinitialize_2371":{"entryPoint":2780,"id":2371,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_136":{"entryPoint":1863,"id":136,"parameterSlots":0,"returnSlots":0},"@scaleUp_2848":{"entryPoint":5448,"id":2848,"parameterSlots":2,"returnSlots":1},"@transferOwnership_164":{"entryPoint":4077,"id":164,"parameterSlots":1,"returnSlots":0},"@upgradeToAndCall_1562":{"entryPoint":5486,"id":1562,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":1786,"id":540,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_2069":{"entryPoint":6010,"id":2069,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6213,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":6369,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint64":{"entryPoint":6531,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":6737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":7209,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":6705,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IBaluniV1Registry_$3104__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$1831_t_contract$_IERC20_$1831_t_bool__to_t_address_t_address_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6598,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0bf731e51c3bdddc9de437c8fbd8fb76f6af6aa4bb4b0f5a60fe643d06ce9ff8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint128_t_address_t_address_t_rational_3600_by_1__to_t_uint128_t_address_t_address_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6320,"id":null,"parameterSlots":1,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7128,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":6805,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":7091,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":6902,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7105,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7394,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":7184,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":6760,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6275,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":6193,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:11018:19","nodeType":"YulBlock","src":"0:11018:19","statements":[{"nativeSrc":"6:3:19","nodeType":"YulBlock","src":"6:3:19","statements":[]},{"body":{"nativeSrc":"59:109:19","nodeType":"YulBlock","src":"59:109:19","statements":[{"body":{"nativeSrc":"146:16:19","nodeType":"YulBlock","src":"146:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"155:1:19","nodeType":"YulLiteral","src":"155:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"158:1:19","nodeType":"YulLiteral","src":"158:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"148:6:19","nodeType":"YulIdentifier","src":"148:6:19"},"nativeSrc":"148:12:19","nodeType":"YulFunctionCall","src":"148:12:19"},"nativeSrc":"148:12:19","nodeType":"YulExpressionStatement","src":"148:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"82:5:19","nodeType":"YulIdentifier","src":"82:5:19"},{"arguments":[{"name":"value","nativeSrc":"93:5:19","nodeType":"YulIdentifier","src":"93:5:19"},{"kind":"number","nativeSrc":"100:42:19","nodeType":"YulLiteral","src":"100:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"89:3:19","nodeType":"YulIdentifier","src":"89:3:19"},"nativeSrc":"89:54:19","nodeType":"YulFunctionCall","src":"89:54:19"}],"functionName":{"name":"eq","nativeSrc":"79:2:19","nodeType":"YulIdentifier","src":"79:2:19"},"nativeSrc":"79:65:19","nodeType":"YulFunctionCall","src":"79:65:19"}],"functionName":{"name":"iszero","nativeSrc":"72:6:19","nodeType":"YulIdentifier","src":"72:6:19"},"nativeSrc":"72:73:19","nodeType":"YulFunctionCall","src":"72:73:19"},"nativeSrc":"69:93:19","nodeType":"YulIf","src":"69:93:19"}]},"name":"validator_revert_address","nativeSrc":"14:154:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48:5:19","nodeType":"YulTypedName","src":"48:5:19","type":""}],"src":"14:154:19"},{"body":{"nativeSrc":"277:352:19","nodeType":"YulBlock","src":"277:352:19","statements":[{"body":{"nativeSrc":"323:16:19","nodeType":"YulBlock","src":"323:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"332:1:19","nodeType":"YulLiteral","src":"332:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"335:1:19","nodeType":"YulLiteral","src":"335:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"325:6:19","nodeType":"YulIdentifier","src":"325:6:19"},"nativeSrc":"325:12:19","nodeType":"YulFunctionCall","src":"325:12:19"},"nativeSrc":"325:12:19","nodeType":"YulExpressionStatement","src":"325:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"298:7:19","nodeType":"YulIdentifier","src":"298:7:19"},{"name":"headStart","nativeSrc":"307:9:19","nodeType":"YulIdentifier","src":"307:9:19"}],"functionName":{"name":"sub","nativeSrc":"294:3:19","nodeType":"YulIdentifier","src":"294:3:19"},"nativeSrc":"294:23:19","nodeType":"YulFunctionCall","src":"294:23:19"},{"kind":"number","nativeSrc":"319:2:19","nodeType":"YulLiteral","src":"319:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"290:3:19","nodeType":"YulIdentifier","src":"290:3:19"},"nativeSrc":"290:32:19","nodeType":"YulFunctionCall","src":"290:32:19"},"nativeSrc":"287:52:19","nodeType":"YulIf","src":"287:52:19"},{"nativeSrc":"348:36:19","nodeType":"YulVariableDeclaration","src":"348:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"374:9:19","nodeType":"YulIdentifier","src":"374:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"361:12:19","nodeType":"YulIdentifier","src":"361:12:19"},"nativeSrc":"361:23:19","nodeType":"YulFunctionCall","src":"361:23:19"},"variables":[{"name":"value","nativeSrc":"352:5:19","nodeType":"YulTypedName","src":"352:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"418:5:19","nodeType":"YulIdentifier","src":"418:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"393:24:19","nodeType":"YulIdentifier","src":"393:24:19"},"nativeSrc":"393:31:19","nodeType":"YulFunctionCall","src":"393:31:19"},"nativeSrc":"393:31:19","nodeType":"YulExpressionStatement","src":"393:31:19"},{"nativeSrc":"433:15:19","nodeType":"YulAssignment","src":"433:15:19","value":{"name":"value","nativeSrc":"443:5:19","nodeType":"YulIdentifier","src":"443:5:19"},"variableNames":[{"name":"value0","nativeSrc":"433:6:19","nodeType":"YulIdentifier","src":"433:6:19"}]},{"nativeSrc":"457:47:19","nodeType":"YulVariableDeclaration","src":"457:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"489:9:19","nodeType":"YulIdentifier","src":"489:9:19"},{"kind":"number","nativeSrc":"500:2:19","nodeType":"YulLiteral","src":"500:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"485:3:19","nodeType":"YulIdentifier","src":"485:3:19"},"nativeSrc":"485:18:19","nodeType":"YulFunctionCall","src":"485:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"472:12:19","nodeType":"YulIdentifier","src":"472:12:19"},"nativeSrc":"472:32:19","nodeType":"YulFunctionCall","src":"472:32:19"},"variables":[{"name":"value_1","nativeSrc":"461:7:19","nodeType":"YulTypedName","src":"461:7:19","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"538:7:19","nodeType":"YulIdentifier","src":"538:7:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"513:24:19","nodeType":"YulIdentifier","src":"513:24:19"},"nativeSrc":"513:33:19","nodeType":"YulFunctionCall","src":"513:33:19"},"nativeSrc":"513:33:19","nodeType":"YulExpressionStatement","src":"513:33:19"},{"nativeSrc":"555:17:19","nodeType":"YulAssignment","src":"555:17:19","value":{"name":"value_1","nativeSrc":"565:7:19","nodeType":"YulIdentifier","src":"565:7:19"},"variableNames":[{"name":"value1","nativeSrc":"555:6:19","nodeType":"YulIdentifier","src":"555:6:19"}]},{"nativeSrc":"581:42:19","nodeType":"YulAssignment","src":"581:42:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"608:9:19","nodeType":"YulIdentifier","src":"608:9:19"},{"kind":"number","nativeSrc":"619:2:19","nodeType":"YulLiteral","src":"619:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"604:3:19","nodeType":"YulIdentifier","src":"604:3:19"},"nativeSrc":"604:18:19","nodeType":"YulFunctionCall","src":"604:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"591:12:19","nodeType":"YulIdentifier","src":"591:12:19"},"nativeSrc":"591:32:19","nodeType":"YulFunctionCall","src":"591:32:19"},"variableNames":[{"name":"value2","nativeSrc":"581:6:19","nodeType":"YulIdentifier","src":"581:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"173:456:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"227:9:19","nodeType":"YulTypedName","src":"227:9:19","type":""},{"name":"dataEnd","nativeSrc":"238:7:19","nodeType":"YulTypedName","src":"238:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"250:6:19","nodeType":"YulTypedName","src":"250:6:19","type":""},{"name":"value1","nativeSrc":"258:6:19","nodeType":"YulTypedName","src":"258:6:19","type":""},{"name":"value2","nativeSrc":"266:6:19","nodeType":"YulTypedName","src":"266:6:19","type":""}],"src":"173:456:19"},{"body":{"nativeSrc":"735:76:19","nodeType":"YulBlock","src":"735:76:19","statements":[{"nativeSrc":"745:26:19","nodeType":"YulAssignment","src":"745:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"757:9:19","nodeType":"YulIdentifier","src":"757:9:19"},{"kind":"number","nativeSrc":"768:2:19","nodeType":"YulLiteral","src":"768:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"753:3:19","nodeType":"YulIdentifier","src":"753:3:19"},"nativeSrc":"753:18:19","nodeType":"YulFunctionCall","src":"753:18:19"},"variableNames":[{"name":"tail","nativeSrc":"745:4:19","nodeType":"YulIdentifier","src":"745:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"787:9:19","nodeType":"YulIdentifier","src":"787:9:19"},{"name":"value0","nativeSrc":"798:6:19","nodeType":"YulIdentifier","src":"798:6:19"}],"functionName":{"name":"mstore","nativeSrc":"780:6:19","nodeType":"YulIdentifier","src":"780:6:19"},"nativeSrc":"780:25:19","nodeType":"YulFunctionCall","src":"780:25:19"},"nativeSrc":"780:25:19","nodeType":"YulExpressionStatement","src":"780:25:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"634:177:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"704:9:19","nodeType":"YulTypedName","src":"704:9:19","type":""},{"name":"value0","nativeSrc":"715:6:19","nodeType":"YulTypedName","src":"715:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"726:4:19","nodeType":"YulTypedName","src":"726:4:19","type":""}],"src":"634:177:19"},{"body":{"nativeSrc":"848:152:19","nodeType":"YulBlock","src":"848:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"865:1:19","nodeType":"YulLiteral","src":"865:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"868:77:19","nodeType":"YulLiteral","src":"868:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"858:6:19","nodeType":"YulIdentifier","src":"858:6:19"},"nativeSrc":"858:88:19","nodeType":"YulFunctionCall","src":"858:88:19"},"nativeSrc":"858:88:19","nodeType":"YulExpressionStatement","src":"858:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"962:1:19","nodeType":"YulLiteral","src":"962:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"965:4:19","nodeType":"YulLiteral","src":"965:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"955:6:19","nodeType":"YulIdentifier","src":"955:6:19"},"nativeSrc":"955:15:19","nodeType":"YulFunctionCall","src":"955:15:19"},"nativeSrc":"955:15:19","nodeType":"YulExpressionStatement","src":"955:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"986:1:19","nodeType":"YulLiteral","src":"986:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"989:4:19","nodeType":"YulLiteral","src":"989:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"979:6:19","nodeType":"YulIdentifier","src":"979:6:19"},"nativeSrc":"979:15:19","nodeType":"YulFunctionCall","src":"979:15:19"},"nativeSrc":"979:15:19","nodeType":"YulExpressionStatement","src":"979:15:19"}]},"name":"panic_error_0x41","nativeSrc":"816:184:19","nodeType":"YulFunctionDefinition","src":"816:184:19"},{"body":{"nativeSrc":"1050:289:19","nodeType":"YulBlock","src":"1050:289:19","statements":[{"nativeSrc":"1060:19:19","nodeType":"YulAssignment","src":"1060:19:19","value":{"arguments":[{"kind":"number","nativeSrc":"1076:2:19","nodeType":"YulLiteral","src":"1076:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1070:5:19","nodeType":"YulIdentifier","src":"1070:5:19"},"nativeSrc":"1070:9:19","nodeType":"YulFunctionCall","src":"1070:9:19"},"variableNames":[{"name":"memPtr","nativeSrc":"1060:6:19","nodeType":"YulIdentifier","src":"1060:6:19"}]},{"nativeSrc":"1088:117:19","nodeType":"YulVariableDeclaration","src":"1088:117:19","value":{"arguments":[{"name":"memPtr","nativeSrc":"1110:6:19","nodeType":"YulIdentifier","src":"1110:6:19"},{"arguments":[{"arguments":[{"name":"size","nativeSrc":"1126:4:19","nodeType":"YulIdentifier","src":"1126:4:19"},{"kind":"number","nativeSrc":"1132:2:19","nodeType":"YulLiteral","src":"1132:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1122:3:19","nodeType":"YulIdentifier","src":"1122:3:19"},"nativeSrc":"1122:13:19","nodeType":"YulFunctionCall","src":"1122:13:19"},{"kind":"number","nativeSrc":"1137:66:19","nodeType":"YulLiteral","src":"1137:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"1118:3:19","nodeType":"YulIdentifier","src":"1118:3:19"},"nativeSrc":"1118:86:19","nodeType":"YulFunctionCall","src":"1118:86:19"}],"functionName":{"name":"add","nativeSrc":"1106:3:19","nodeType":"YulIdentifier","src":"1106:3:19"},"nativeSrc":"1106:99:19","nodeType":"YulFunctionCall","src":"1106:99:19"},"variables":[{"name":"newFreePtr","nativeSrc":"1092:10:19","nodeType":"YulTypedName","src":"1092:10:19","type":""}]},{"body":{"nativeSrc":"1280:22:19","nodeType":"YulBlock","src":"1280:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1282:16:19","nodeType":"YulIdentifier","src":"1282:16:19"},"nativeSrc":"1282:18:19","nodeType":"YulFunctionCall","src":"1282:18:19"},"nativeSrc":"1282:18:19","nodeType":"YulExpressionStatement","src":"1282:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"1223:10:19","nodeType":"YulIdentifier","src":"1223:10:19"},{"kind":"number","nativeSrc":"1235:18:19","nodeType":"YulLiteral","src":"1235:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1220:2:19","nodeType":"YulIdentifier","src":"1220:2:19"},"nativeSrc":"1220:34:19","nodeType":"YulFunctionCall","src":"1220:34:19"},{"arguments":[{"name":"newFreePtr","nativeSrc":"1259:10:19","nodeType":"YulIdentifier","src":"1259:10:19"},{"name":"memPtr","nativeSrc":"1271:6:19","nodeType":"YulIdentifier","src":"1271:6:19"}],"functionName":{"name":"lt","nativeSrc":"1256:2:19","nodeType":"YulIdentifier","src":"1256:2:19"},"nativeSrc":"1256:22:19","nodeType":"YulFunctionCall","src":"1256:22:19"}],"functionName":{"name":"or","nativeSrc":"1217:2:19","nodeType":"YulIdentifier","src":"1217:2:19"},"nativeSrc":"1217:62:19","nodeType":"YulFunctionCall","src":"1217:62:19"},"nativeSrc":"1214:88:19","nodeType":"YulIf","src":"1214:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1318:2:19","nodeType":"YulLiteral","src":"1318:2:19","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"1322:10:19","nodeType":"YulIdentifier","src":"1322:10:19"}],"functionName":{"name":"mstore","nativeSrc":"1311:6:19","nodeType":"YulIdentifier","src":"1311:6:19"},"nativeSrc":"1311:22:19","nodeType":"YulFunctionCall","src":"1311:22:19"},"nativeSrc":"1311:22:19","nodeType":"YulExpressionStatement","src":"1311:22:19"}]},"name":"allocate_memory","nativeSrc":"1005:334:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"1030:4:19","nodeType":"YulTypedName","src":"1030:4:19","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"1039:6:19","nodeType":"YulTypedName","src":"1039:6:19","type":""}],"src":"1005:334:19"},{"body":{"nativeSrc":"1440:861:19","nodeType":"YulBlock","src":"1440:861:19","statements":[{"body":{"nativeSrc":"1486:16:19","nodeType":"YulBlock","src":"1486:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1495:1:19","nodeType":"YulLiteral","src":"1495:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1498:1:19","nodeType":"YulLiteral","src":"1498:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1488:6:19","nodeType":"YulIdentifier","src":"1488:6:19"},"nativeSrc":"1488:12:19","nodeType":"YulFunctionCall","src":"1488:12:19"},"nativeSrc":"1488:12:19","nodeType":"YulExpressionStatement","src":"1488:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1461:7:19","nodeType":"YulIdentifier","src":"1461:7:19"},{"name":"headStart","nativeSrc":"1470:9:19","nodeType":"YulIdentifier","src":"1470:9:19"}],"functionName":{"name":"sub","nativeSrc":"1457:3:19","nodeType":"YulIdentifier","src":"1457:3:19"},"nativeSrc":"1457:23:19","nodeType":"YulFunctionCall","src":"1457:23:19"},{"kind":"number","nativeSrc":"1482:2:19","nodeType":"YulLiteral","src":"1482:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1453:3:19","nodeType":"YulIdentifier","src":"1453:3:19"},"nativeSrc":"1453:32:19","nodeType":"YulFunctionCall","src":"1453:32:19"},"nativeSrc":"1450:52:19","nodeType":"YulIf","src":"1450:52:19"},{"nativeSrc":"1511:36:19","nodeType":"YulVariableDeclaration","src":"1511:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"1537:9:19","nodeType":"YulIdentifier","src":"1537:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"1524:12:19","nodeType":"YulIdentifier","src":"1524:12:19"},"nativeSrc":"1524:23:19","nodeType":"YulFunctionCall","src":"1524:23:19"},"variables":[{"name":"value","nativeSrc":"1515:5:19","nodeType":"YulTypedName","src":"1515:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1581:5:19","nodeType":"YulIdentifier","src":"1581:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1556:24:19","nodeType":"YulIdentifier","src":"1556:24:19"},"nativeSrc":"1556:31:19","nodeType":"YulFunctionCall","src":"1556:31:19"},"nativeSrc":"1556:31:19","nodeType":"YulExpressionStatement","src":"1556:31:19"},{"nativeSrc":"1596:15:19","nodeType":"YulAssignment","src":"1596:15:19","value":{"name":"value","nativeSrc":"1606:5:19","nodeType":"YulIdentifier","src":"1606:5:19"},"variableNames":[{"name":"value0","nativeSrc":"1596:6:19","nodeType":"YulIdentifier","src":"1596:6:19"}]},{"nativeSrc":"1620:12:19","nodeType":"YulVariableDeclaration","src":"1620:12:19","value":{"kind":"number","nativeSrc":"1630:2:19","nodeType":"YulLiteral","src":"1630:2:19","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"1624:2:19","nodeType":"YulTypedName","src":"1624:2:19","type":""}]},{"nativeSrc":"1641:46:19","nodeType":"YulVariableDeclaration","src":"1641:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1672:9:19","nodeType":"YulIdentifier","src":"1672:9:19"},{"name":"_1","nativeSrc":"1683:2:19","nodeType":"YulIdentifier","src":"1683:2:19"}],"functionName":{"name":"add","nativeSrc":"1668:3:19","nodeType":"YulIdentifier","src":"1668:3:19"},"nativeSrc":"1668:18:19","nodeType":"YulFunctionCall","src":"1668:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"1655:12:19","nodeType":"YulIdentifier","src":"1655:12:19"},"nativeSrc":"1655:32:19","nodeType":"YulFunctionCall","src":"1655:32:19"},"variables":[{"name":"offset","nativeSrc":"1645:6:19","nodeType":"YulTypedName","src":"1645:6:19","type":""}]},{"nativeSrc":"1696:28:19","nodeType":"YulVariableDeclaration","src":"1696:28:19","value":{"kind":"number","nativeSrc":"1706:18:19","nodeType":"YulLiteral","src":"1706:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"1700:2:19","nodeType":"YulTypedName","src":"1700:2:19","type":""}]},{"body":{"nativeSrc":"1751:16:19","nodeType":"YulBlock","src":"1751:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1760:1:19","nodeType":"YulLiteral","src":"1760:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1763:1:19","nodeType":"YulLiteral","src":"1763:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1753:6:19","nodeType":"YulIdentifier","src":"1753:6:19"},"nativeSrc":"1753:12:19","nodeType":"YulFunctionCall","src":"1753:12:19"},"nativeSrc":"1753:12:19","nodeType":"YulExpressionStatement","src":"1753:12:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"1739:6:19","nodeType":"YulIdentifier","src":"1739:6:19"},{"name":"_2","nativeSrc":"1747:2:19","nodeType":"YulIdentifier","src":"1747:2:19"}],"functionName":{"name":"gt","nativeSrc":"1736:2:19","nodeType":"YulIdentifier","src":"1736:2:19"},"nativeSrc":"1736:14:19","nodeType":"YulFunctionCall","src":"1736:14:19"},"nativeSrc":"1733:34:19","nodeType":"YulIf","src":"1733:34:19"},{"nativeSrc":"1776:32:19","nodeType":"YulVariableDeclaration","src":"1776:32:19","value":{"arguments":[{"name":"headStart","nativeSrc":"1790:9:19","nodeType":"YulIdentifier","src":"1790:9:19"},{"name":"offset","nativeSrc":"1801:6:19","nodeType":"YulIdentifier","src":"1801:6:19"}],"functionName":{"name":"add","nativeSrc":"1786:3:19","nodeType":"YulIdentifier","src":"1786:3:19"},"nativeSrc":"1786:22:19","nodeType":"YulFunctionCall","src":"1786:22:19"},"variables":[{"name":"_3","nativeSrc":"1780:2:19","nodeType":"YulTypedName","src":"1780:2:19","type":""}]},{"body":{"nativeSrc":"1856:16:19","nodeType":"YulBlock","src":"1856:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1865:1:19","nodeType":"YulLiteral","src":"1865:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1868:1:19","nodeType":"YulLiteral","src":"1868:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1858:6:19","nodeType":"YulIdentifier","src":"1858:6:19"},"nativeSrc":"1858:12:19","nodeType":"YulFunctionCall","src":"1858:12:19"},"nativeSrc":"1858:12:19","nodeType":"YulExpressionStatement","src":"1858:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"1835:2:19","nodeType":"YulIdentifier","src":"1835:2:19"},{"kind":"number","nativeSrc":"1839:4:19","nodeType":"YulLiteral","src":"1839:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1831:3:19","nodeType":"YulIdentifier","src":"1831:3:19"},"nativeSrc":"1831:13:19","nodeType":"YulFunctionCall","src":"1831:13:19"},{"name":"dataEnd","nativeSrc":"1846:7:19","nodeType":"YulIdentifier","src":"1846:7:19"}],"functionName":{"name":"slt","nativeSrc":"1827:3:19","nodeType":"YulIdentifier","src":"1827:3:19"},"nativeSrc":"1827:27:19","nodeType":"YulFunctionCall","src":"1827:27:19"}],"functionName":{"name":"iszero","nativeSrc":"1820:6:19","nodeType":"YulIdentifier","src":"1820:6:19"},"nativeSrc":"1820:35:19","nodeType":"YulFunctionCall","src":"1820:35:19"},"nativeSrc":"1817:55:19","nodeType":"YulIf","src":"1817:55:19"},{"nativeSrc":"1881:26:19","nodeType":"YulVariableDeclaration","src":"1881:26:19","value":{"arguments":[{"name":"_3","nativeSrc":"1904:2:19","nodeType":"YulIdentifier","src":"1904:2:19"}],"functionName":{"name":"calldataload","nativeSrc":"1891:12:19","nodeType":"YulIdentifier","src":"1891:12:19"},"nativeSrc":"1891:16:19","nodeType":"YulFunctionCall","src":"1891:16:19"},"variables":[{"name":"_4","nativeSrc":"1885:2:19","nodeType":"YulTypedName","src":"1885:2:19","type":""}]},{"body":{"nativeSrc":"1930:22:19","nodeType":"YulBlock","src":"1930:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"1932:16:19","nodeType":"YulIdentifier","src":"1932:16:19"},"nativeSrc":"1932:18:19","nodeType":"YulFunctionCall","src":"1932:18:19"},"nativeSrc":"1932:18:19","nodeType":"YulExpressionStatement","src":"1932:18:19"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"1922:2:19","nodeType":"YulIdentifier","src":"1922:2:19"},{"name":"_2","nativeSrc":"1926:2:19","nodeType":"YulIdentifier","src":"1926:2:19"}],"functionName":{"name":"gt","nativeSrc":"1919:2:19","nodeType":"YulIdentifier","src":"1919:2:19"},"nativeSrc":"1919:10:19","nodeType":"YulFunctionCall","src":"1919:10:19"},"nativeSrc":"1916:36:19","nodeType":"YulIf","src":"1916:36:19"},{"nativeSrc":"1961:125:19","nodeType":"YulVariableDeclaration","src":"1961:125:19","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_4","nativeSrc":"2002:2:19","nodeType":"YulIdentifier","src":"2002:2:19"},{"kind":"number","nativeSrc":"2006:4:19","nodeType":"YulLiteral","src":"2006:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1998:3:19","nodeType":"YulIdentifier","src":"1998:3:19"},"nativeSrc":"1998:13:19","nodeType":"YulFunctionCall","src":"1998:13:19"},{"kind":"number","nativeSrc":"2013:66:19","nodeType":"YulLiteral","src":"2013:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"1994:3:19","nodeType":"YulIdentifier","src":"1994:3:19"},"nativeSrc":"1994:86:19","nodeType":"YulFunctionCall","src":"1994:86:19"},{"name":"_1","nativeSrc":"2082:2:19","nodeType":"YulIdentifier","src":"2082:2:19"}],"functionName":{"name":"add","nativeSrc":"1990:3:19","nodeType":"YulIdentifier","src":"1990:3:19"},"nativeSrc":"1990:95:19","nodeType":"YulFunctionCall","src":"1990:95:19"}],"functionName":{"name":"allocate_memory","nativeSrc":"1974:15:19","nodeType":"YulIdentifier","src":"1974:15:19"},"nativeSrc":"1974:112:19","nodeType":"YulFunctionCall","src":"1974:112:19"},"variables":[{"name":"array","nativeSrc":"1965:5:19","nodeType":"YulTypedName","src":"1965:5:19","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"2102:5:19","nodeType":"YulIdentifier","src":"2102:5:19"},{"name":"_4","nativeSrc":"2109:2:19","nodeType":"YulIdentifier","src":"2109:2:19"}],"functionName":{"name":"mstore","nativeSrc":"2095:6:19","nodeType":"YulIdentifier","src":"2095:6:19"},"nativeSrc":"2095:17:19","nodeType":"YulFunctionCall","src":"2095:17:19"},"nativeSrc":"2095:17:19","nodeType":"YulExpressionStatement","src":"2095:17:19"},{"body":{"nativeSrc":"2158:16:19","nodeType":"YulBlock","src":"2158:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2167:1:19","nodeType":"YulLiteral","src":"2167:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2170:1:19","nodeType":"YulLiteral","src":"2170:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2160:6:19","nodeType":"YulIdentifier","src":"2160:6:19"},"nativeSrc":"2160:12:19","nodeType":"YulFunctionCall","src":"2160:12:19"},"nativeSrc":"2160:12:19","nodeType":"YulExpressionStatement","src":"2160:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"2135:2:19","nodeType":"YulIdentifier","src":"2135:2:19"},{"name":"_4","nativeSrc":"2139:2:19","nodeType":"YulIdentifier","src":"2139:2:19"}],"functionName":{"name":"add","nativeSrc":"2131:3:19","nodeType":"YulIdentifier","src":"2131:3:19"},"nativeSrc":"2131:11:19","nodeType":"YulFunctionCall","src":"2131:11:19"},{"name":"_1","nativeSrc":"2144:2:19","nodeType":"YulIdentifier","src":"2144:2:19"}],"functionName":{"name":"add","nativeSrc":"2127:3:19","nodeType":"YulIdentifier","src":"2127:3:19"},"nativeSrc":"2127:20:19","nodeType":"YulFunctionCall","src":"2127:20:19"},{"name":"dataEnd","nativeSrc":"2149:7:19","nodeType":"YulIdentifier","src":"2149:7:19"}],"functionName":{"name":"gt","nativeSrc":"2124:2:19","nodeType":"YulIdentifier","src":"2124:2:19"},"nativeSrc":"2124:33:19","nodeType":"YulFunctionCall","src":"2124:33:19"},"nativeSrc":"2121:53:19","nodeType":"YulIf","src":"2121:53:19"},{"expression":{"arguments":[{"arguments":[{"name":"array","nativeSrc":"2200:5:19","nodeType":"YulIdentifier","src":"2200:5:19"},{"name":"_1","nativeSrc":"2207:2:19","nodeType":"YulIdentifier","src":"2207:2:19"}],"functionName":{"name":"add","nativeSrc":"2196:3:19","nodeType":"YulIdentifier","src":"2196:3:19"},"nativeSrc":"2196:14:19","nodeType":"YulFunctionCall","src":"2196:14:19"},{"arguments":[{"name":"_3","nativeSrc":"2216:2:19","nodeType":"YulIdentifier","src":"2216:2:19"},{"name":"_1","nativeSrc":"2220:2:19","nodeType":"YulIdentifier","src":"2220:2:19"}],"functionName":{"name":"add","nativeSrc":"2212:3:19","nodeType":"YulIdentifier","src":"2212:3:19"},"nativeSrc":"2212:11:19","nodeType":"YulFunctionCall","src":"2212:11:19"},{"name":"_4","nativeSrc":"2225:2:19","nodeType":"YulIdentifier","src":"2225:2:19"}],"functionName":{"name":"calldatacopy","nativeSrc":"2183:12:19","nodeType":"YulIdentifier","src":"2183:12:19"},"nativeSrc":"2183:45:19","nodeType":"YulFunctionCall","src":"2183:45:19"},"nativeSrc":"2183:45:19","nodeType":"YulExpressionStatement","src":"2183:45:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nativeSrc":"2252:5:19","nodeType":"YulIdentifier","src":"2252:5:19"},{"name":"_4","nativeSrc":"2259:2:19","nodeType":"YulIdentifier","src":"2259:2:19"}],"functionName":{"name":"add","nativeSrc":"2248:3:19","nodeType":"YulIdentifier","src":"2248:3:19"},"nativeSrc":"2248:14:19","nodeType":"YulFunctionCall","src":"2248:14:19"},{"name":"_1","nativeSrc":"2264:2:19","nodeType":"YulIdentifier","src":"2264:2:19"}],"functionName":{"name":"add","nativeSrc":"2244:3:19","nodeType":"YulIdentifier","src":"2244:3:19"},"nativeSrc":"2244:23:19","nodeType":"YulFunctionCall","src":"2244:23:19"},{"kind":"number","nativeSrc":"2269:1:19","nodeType":"YulLiteral","src":"2269:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2237:6:19","nodeType":"YulIdentifier","src":"2237:6:19"},"nativeSrc":"2237:34:19","nodeType":"YulFunctionCall","src":"2237:34:19"},"nativeSrc":"2237:34:19","nodeType":"YulExpressionStatement","src":"2237:34:19"},{"nativeSrc":"2280:15:19","nodeType":"YulAssignment","src":"2280:15:19","value":{"name":"array","nativeSrc":"2290:5:19","nodeType":"YulIdentifier","src":"2290:5:19"},"variableNames":[{"name":"value1","nativeSrc":"2280:6:19","nodeType":"YulIdentifier","src":"2280:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"1344:957:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1398:9:19","nodeType":"YulTypedName","src":"1398:9:19","type":""},{"name":"dataEnd","nativeSrc":"1409:7:19","nodeType":"YulTypedName","src":"1409:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1421:6:19","nodeType":"YulTypedName","src":"1421:6:19","type":""},{"name":"value1","nativeSrc":"1429:6:19","nodeType":"YulTypedName","src":"1429:6:19","type":""}],"src":"1344:957:19"},{"body":{"nativeSrc":"2407:76:19","nodeType":"YulBlock","src":"2407:76:19","statements":[{"nativeSrc":"2417:26:19","nodeType":"YulAssignment","src":"2417:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"2429:9:19","nodeType":"YulIdentifier","src":"2429:9:19"},{"kind":"number","nativeSrc":"2440:2:19","nodeType":"YulLiteral","src":"2440:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2425:3:19","nodeType":"YulIdentifier","src":"2425:3:19"},"nativeSrc":"2425:18:19","nodeType":"YulFunctionCall","src":"2425:18:19"},"variableNames":[{"name":"tail","nativeSrc":"2417:4:19","nodeType":"YulIdentifier","src":"2417:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2459:9:19","nodeType":"YulIdentifier","src":"2459:9:19"},{"name":"value0","nativeSrc":"2470:6:19","nodeType":"YulIdentifier","src":"2470:6:19"}],"functionName":{"name":"mstore","nativeSrc":"2452:6:19","nodeType":"YulIdentifier","src":"2452:6:19"},"nativeSrc":"2452:25:19","nodeType":"YulFunctionCall","src":"2452:25:19"},"nativeSrc":"2452:25:19","nodeType":"YulExpressionStatement","src":"2452:25:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"2306:177:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2376:9:19","nodeType":"YulTypedName","src":"2376:9:19","type":""},{"name":"value0","nativeSrc":"2387:6:19","nodeType":"YulTypedName","src":"2387:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2398:4:19","nodeType":"YulTypedName","src":"2398:4:19","type":""}],"src":"2306:177:19"},{"body":{"nativeSrc":"2615:125:19","nodeType":"YulBlock","src":"2615:125:19","statements":[{"nativeSrc":"2625:26:19","nodeType":"YulAssignment","src":"2625:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"2637:9:19","nodeType":"YulIdentifier","src":"2637:9:19"},{"kind":"number","nativeSrc":"2648:2:19","nodeType":"YulLiteral","src":"2648:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2633:3:19","nodeType":"YulIdentifier","src":"2633:3:19"},"nativeSrc":"2633:18:19","nodeType":"YulFunctionCall","src":"2633:18:19"},"variableNames":[{"name":"tail","nativeSrc":"2625:4:19","nodeType":"YulIdentifier","src":"2625:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2667:9:19","nodeType":"YulIdentifier","src":"2667:9:19"},{"arguments":[{"name":"value0","nativeSrc":"2682:6:19","nodeType":"YulIdentifier","src":"2682:6:19"},{"kind":"number","nativeSrc":"2690:42:19","nodeType":"YulLiteral","src":"2690:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2678:3:19","nodeType":"YulIdentifier","src":"2678:3:19"},"nativeSrc":"2678:55:19","nodeType":"YulFunctionCall","src":"2678:55:19"}],"functionName":{"name":"mstore","nativeSrc":"2660:6:19","nodeType":"YulIdentifier","src":"2660:6:19"},"nativeSrc":"2660:74:19","nodeType":"YulFunctionCall","src":"2660:74:19"},"nativeSrc":"2660:74:19","nodeType":"YulExpressionStatement","src":"2660:74:19"}]},"name":"abi_encode_tuple_t_contract$_IBaluniV1Registry_$3104__to_t_address__fromStack_reversed","nativeSrc":"2488:252:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2584:9:19","nodeType":"YulTypedName","src":"2584:9:19","type":""},{"name":"value0","nativeSrc":"2595:6:19","nodeType":"YulTypedName","src":"2595:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2606:4:19","nodeType":"YulTypedName","src":"2606:4:19","type":""}],"src":"2488:252:19"},{"body":{"nativeSrc":"2846:125:19","nodeType":"YulBlock","src":"2846:125:19","statements":[{"nativeSrc":"2856:26:19","nodeType":"YulAssignment","src":"2856:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"2868:9:19","nodeType":"YulIdentifier","src":"2868:9:19"},{"kind":"number","nativeSrc":"2879:2:19","nodeType":"YulLiteral","src":"2879:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2864:3:19","nodeType":"YulIdentifier","src":"2864:3:19"},"nativeSrc":"2864:18:19","nodeType":"YulFunctionCall","src":"2864:18:19"},"variableNames":[{"name":"tail","nativeSrc":"2856:4:19","nodeType":"YulIdentifier","src":"2856:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2898:9:19","nodeType":"YulIdentifier","src":"2898:9:19"},{"arguments":[{"name":"value0","nativeSrc":"2913:6:19","nodeType":"YulIdentifier","src":"2913:6:19"},{"kind":"number","nativeSrc":"2921:42:19","nodeType":"YulLiteral","src":"2921:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"2909:3:19","nodeType":"YulIdentifier","src":"2909:3:19"},"nativeSrc":"2909:55:19","nodeType":"YulFunctionCall","src":"2909:55:19"}],"functionName":{"name":"mstore","nativeSrc":"2891:6:19","nodeType":"YulIdentifier","src":"2891:6:19"},"nativeSrc":"2891:74:19","nodeType":"YulFunctionCall","src":"2891:74:19"},"nativeSrc":"2891:74:19","nodeType":"YulExpressionStatement","src":"2891:74:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2745:226:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2815:9:19","nodeType":"YulTypedName","src":"2815:9:19","type":""},{"name":"value0","nativeSrc":"2826:6:19","nodeType":"YulTypedName","src":"2826:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2837:4:19","nodeType":"YulTypedName","src":"2837:4:19","type":""}],"src":"2745:226:19"},{"body":{"nativeSrc":"3062:341:19","nodeType":"YulBlock","src":"3062:341:19","statements":[{"body":{"nativeSrc":"3108:16:19","nodeType":"YulBlock","src":"3108:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3117:1:19","nodeType":"YulLiteral","src":"3117:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3120:1:19","nodeType":"YulLiteral","src":"3120:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3110:6:19","nodeType":"YulIdentifier","src":"3110:6:19"},"nativeSrc":"3110:12:19","nodeType":"YulFunctionCall","src":"3110:12:19"},"nativeSrc":"3110:12:19","nodeType":"YulExpressionStatement","src":"3110:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3083:7:19","nodeType":"YulIdentifier","src":"3083:7:19"},{"name":"headStart","nativeSrc":"3092:9:19","nodeType":"YulIdentifier","src":"3092:9:19"}],"functionName":{"name":"sub","nativeSrc":"3079:3:19","nodeType":"YulIdentifier","src":"3079:3:19"},"nativeSrc":"3079:23:19","nodeType":"YulFunctionCall","src":"3079:23:19"},{"kind":"number","nativeSrc":"3104:2:19","nodeType":"YulLiteral","src":"3104:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3075:3:19","nodeType":"YulIdentifier","src":"3075:3:19"},"nativeSrc":"3075:32:19","nodeType":"YulFunctionCall","src":"3075:32:19"},"nativeSrc":"3072:52:19","nodeType":"YulIf","src":"3072:52:19"},{"nativeSrc":"3133:36:19","nodeType":"YulVariableDeclaration","src":"3133:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"3159:9:19","nodeType":"YulIdentifier","src":"3159:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"3146:12:19","nodeType":"YulIdentifier","src":"3146:12:19"},"nativeSrc":"3146:23:19","nodeType":"YulFunctionCall","src":"3146:23:19"},"variables":[{"name":"value","nativeSrc":"3137:5:19","nodeType":"YulTypedName","src":"3137:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3203:5:19","nodeType":"YulIdentifier","src":"3203:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3178:24:19","nodeType":"YulIdentifier","src":"3178:24:19"},"nativeSrc":"3178:31:19","nodeType":"YulFunctionCall","src":"3178:31:19"},"nativeSrc":"3178:31:19","nodeType":"YulExpressionStatement","src":"3178:31:19"},{"nativeSrc":"3218:15:19","nodeType":"YulAssignment","src":"3218:15:19","value":{"name":"value","nativeSrc":"3228:5:19","nodeType":"YulIdentifier","src":"3228:5:19"},"variableNames":[{"name":"value0","nativeSrc":"3218:6:19","nodeType":"YulIdentifier","src":"3218:6:19"}]},{"nativeSrc":"3242:47:19","nodeType":"YulVariableDeclaration","src":"3242:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3274:9:19","nodeType":"YulIdentifier","src":"3274:9:19"},{"kind":"number","nativeSrc":"3285:2:19","nodeType":"YulLiteral","src":"3285:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3270:3:19","nodeType":"YulIdentifier","src":"3270:3:19"},"nativeSrc":"3270:18:19","nodeType":"YulFunctionCall","src":"3270:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"3257:12:19","nodeType":"YulIdentifier","src":"3257:12:19"},"nativeSrc":"3257:32:19","nodeType":"YulFunctionCall","src":"3257:32:19"},"variables":[{"name":"value_1","nativeSrc":"3246:7:19","nodeType":"YulTypedName","src":"3246:7:19","type":""}]},{"body":{"nativeSrc":"3355:16:19","nodeType":"YulBlock","src":"3355:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3364:1:19","nodeType":"YulLiteral","src":"3364:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3367:1:19","nodeType":"YulLiteral","src":"3367:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3357:6:19","nodeType":"YulIdentifier","src":"3357:6:19"},"nativeSrc":"3357:12:19","nodeType":"YulFunctionCall","src":"3357:12:19"},"nativeSrc":"3357:12:19","nodeType":"YulExpressionStatement","src":"3357:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nativeSrc":"3311:7:19","nodeType":"YulIdentifier","src":"3311:7:19"},{"arguments":[{"name":"value_1","nativeSrc":"3324:7:19","nodeType":"YulIdentifier","src":"3324:7:19"},{"kind":"number","nativeSrc":"3333:18:19","nodeType":"YulLiteral","src":"3333:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3320:3:19","nodeType":"YulIdentifier","src":"3320:3:19"},"nativeSrc":"3320:32:19","nodeType":"YulFunctionCall","src":"3320:32:19"}],"functionName":{"name":"eq","nativeSrc":"3308:2:19","nodeType":"YulIdentifier","src":"3308:2:19"},"nativeSrc":"3308:45:19","nodeType":"YulFunctionCall","src":"3308:45:19"}],"functionName":{"name":"iszero","nativeSrc":"3301:6:19","nodeType":"YulIdentifier","src":"3301:6:19"},"nativeSrc":"3301:53:19","nodeType":"YulFunctionCall","src":"3301:53:19"},"nativeSrc":"3298:73:19","nodeType":"YulIf","src":"3298:73:19"},{"nativeSrc":"3380:17:19","nodeType":"YulAssignment","src":"3380:17:19","value":{"name":"value_1","nativeSrc":"3390:7:19","nodeType":"YulIdentifier","src":"3390:7:19"},"variableNames":[{"name":"value1","nativeSrc":"3380:6:19","nodeType":"YulIdentifier","src":"3380:6:19"}]}]},"name":"abi_decode_tuple_t_addresst_uint64","nativeSrc":"2976:427:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3020:9:19","nodeType":"YulTypedName","src":"3020:9:19","type":""},{"name":"dataEnd","nativeSrc":"3031:7:19","nodeType":"YulTypedName","src":"3031:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3043:6:19","nodeType":"YulTypedName","src":"3043:6:19","type":""},{"name":"value1","nativeSrc":"3051:6:19","nodeType":"YulTypedName","src":"3051:6:19","type":""}],"src":"2976:427:19"},{"body":{"nativeSrc":"3529:356:19","nodeType":"YulBlock","src":"3529:356:19","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3546:9:19","nodeType":"YulIdentifier","src":"3546:9:19"},{"kind":"number","nativeSrc":"3557:2:19","nodeType":"YulLiteral","src":"3557:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"3539:6:19","nodeType":"YulIdentifier","src":"3539:6:19"},"nativeSrc":"3539:21:19","nodeType":"YulFunctionCall","src":"3539:21:19"},"nativeSrc":"3539:21:19","nodeType":"YulExpressionStatement","src":"3539:21:19"},{"nativeSrc":"3569:27:19","nodeType":"YulVariableDeclaration","src":"3569:27:19","value":{"arguments":[{"name":"value0","nativeSrc":"3589:6:19","nodeType":"YulIdentifier","src":"3589:6:19"}],"functionName":{"name":"mload","nativeSrc":"3583:5:19","nodeType":"YulIdentifier","src":"3583:5:19"},"nativeSrc":"3583:13:19","nodeType":"YulFunctionCall","src":"3583:13:19"},"variables":[{"name":"length","nativeSrc":"3573:6:19","nodeType":"YulTypedName","src":"3573:6:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3616:9:19","nodeType":"YulIdentifier","src":"3616:9:19"},{"kind":"number","nativeSrc":"3627:2:19","nodeType":"YulLiteral","src":"3627:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3612:3:19","nodeType":"YulIdentifier","src":"3612:3:19"},"nativeSrc":"3612:18:19","nodeType":"YulFunctionCall","src":"3612:18:19"},{"name":"length","nativeSrc":"3632:6:19","nodeType":"YulIdentifier","src":"3632:6:19"}],"functionName":{"name":"mstore","nativeSrc":"3605:6:19","nodeType":"YulIdentifier","src":"3605:6:19"},"nativeSrc":"3605:34:19","nodeType":"YulFunctionCall","src":"3605:34:19"},"nativeSrc":"3605:34:19","nodeType":"YulExpressionStatement","src":"3605:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3658:9:19","nodeType":"YulIdentifier","src":"3658:9:19"},{"kind":"number","nativeSrc":"3669:2:19","nodeType":"YulLiteral","src":"3669:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3654:3:19","nodeType":"YulIdentifier","src":"3654:3:19"},"nativeSrc":"3654:18:19","nodeType":"YulFunctionCall","src":"3654:18:19"},{"arguments":[{"name":"value0","nativeSrc":"3678:6:19","nodeType":"YulIdentifier","src":"3678:6:19"},{"kind":"number","nativeSrc":"3686:2:19","nodeType":"YulLiteral","src":"3686:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3674:3:19","nodeType":"YulIdentifier","src":"3674:3:19"},"nativeSrc":"3674:15:19","nodeType":"YulFunctionCall","src":"3674:15:19"},{"name":"length","nativeSrc":"3691:6:19","nodeType":"YulIdentifier","src":"3691:6:19"}],"functionName":{"name":"mcopy","nativeSrc":"3648:5:19","nodeType":"YulIdentifier","src":"3648:5:19"},"nativeSrc":"3648:50:19","nodeType":"YulFunctionCall","src":"3648:50:19"},"nativeSrc":"3648:50:19","nodeType":"YulExpressionStatement","src":"3648:50:19"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3722:9:19","nodeType":"YulIdentifier","src":"3722:9:19"},{"name":"length","nativeSrc":"3733:6:19","nodeType":"YulIdentifier","src":"3733:6:19"}],"functionName":{"name":"add","nativeSrc":"3718:3:19","nodeType":"YulIdentifier","src":"3718:3:19"},"nativeSrc":"3718:22:19","nodeType":"YulFunctionCall","src":"3718:22:19"},{"kind":"number","nativeSrc":"3742:2:19","nodeType":"YulLiteral","src":"3742:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3714:3:19","nodeType":"YulIdentifier","src":"3714:3:19"},"nativeSrc":"3714:31:19","nodeType":"YulFunctionCall","src":"3714:31:19"},{"kind":"number","nativeSrc":"3747:1:19","nodeType":"YulLiteral","src":"3747:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3707:6:19","nodeType":"YulIdentifier","src":"3707:6:19"},"nativeSrc":"3707:42:19","nodeType":"YulFunctionCall","src":"3707:42:19"},"nativeSrc":"3707:42:19","nodeType":"YulExpressionStatement","src":"3707:42:19"},{"nativeSrc":"3758:121:19","nodeType":"YulAssignment","src":"3758:121:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3774:9:19","nodeType":"YulIdentifier","src":"3774:9:19"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3793:6:19","nodeType":"YulIdentifier","src":"3793:6:19"},{"kind":"number","nativeSrc":"3801:2:19","nodeType":"YulLiteral","src":"3801:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3789:3:19","nodeType":"YulIdentifier","src":"3789:3:19"},"nativeSrc":"3789:15:19","nodeType":"YulFunctionCall","src":"3789:15:19"},{"kind":"number","nativeSrc":"3806:66:19","nodeType":"YulLiteral","src":"3806:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"3785:3:19","nodeType":"YulIdentifier","src":"3785:3:19"},"nativeSrc":"3785:88:19","nodeType":"YulFunctionCall","src":"3785:88:19"}],"functionName":{"name":"add","nativeSrc":"3770:3:19","nodeType":"YulIdentifier","src":"3770:3:19"},"nativeSrc":"3770:104:19","nodeType":"YulFunctionCall","src":"3770:104:19"},{"kind":"number","nativeSrc":"3876:2:19","nodeType":"YulLiteral","src":"3876:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"3766:3:19","nodeType":"YulIdentifier","src":"3766:3:19"},"nativeSrc":"3766:113:19","nodeType":"YulFunctionCall","src":"3766:113:19"},"variableNames":[{"name":"tail","nativeSrc":"3758:4:19","nodeType":"YulIdentifier","src":"3758:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3408:477:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3498:9:19","nodeType":"YulTypedName","src":"3498:9:19","type":""},{"name":"value0","nativeSrc":"3509:6:19","nodeType":"YulTypedName","src":"3509:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3520:4:19","nodeType":"YulTypedName","src":"3520:4:19","type":""}],"src":"3408:477:19"},{"body":{"nativeSrc":"3960:177:19","nodeType":"YulBlock","src":"3960:177:19","statements":[{"body":{"nativeSrc":"4006:16:19","nodeType":"YulBlock","src":"4006:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4015:1:19","nodeType":"YulLiteral","src":"4015:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4018:1:19","nodeType":"YulLiteral","src":"4018:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4008:6:19","nodeType":"YulIdentifier","src":"4008:6:19"},"nativeSrc":"4008:12:19","nodeType":"YulFunctionCall","src":"4008:12:19"},"nativeSrc":"4008:12:19","nodeType":"YulExpressionStatement","src":"4008:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3981:7:19","nodeType":"YulIdentifier","src":"3981:7:19"},{"name":"headStart","nativeSrc":"3990:9:19","nodeType":"YulIdentifier","src":"3990:9:19"}],"functionName":{"name":"sub","nativeSrc":"3977:3:19","nodeType":"YulIdentifier","src":"3977:3:19"},"nativeSrc":"3977:23:19","nodeType":"YulFunctionCall","src":"3977:23:19"},{"kind":"number","nativeSrc":"4002:2:19","nodeType":"YulLiteral","src":"4002:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3973:3:19","nodeType":"YulIdentifier","src":"3973:3:19"},"nativeSrc":"3973:32:19","nodeType":"YulFunctionCall","src":"3973:32:19"},"nativeSrc":"3970:52:19","nodeType":"YulIf","src":"3970:52:19"},{"nativeSrc":"4031:36:19","nodeType":"YulVariableDeclaration","src":"4031:36:19","value":{"arguments":[{"name":"headStart","nativeSrc":"4057:9:19","nodeType":"YulIdentifier","src":"4057:9:19"}],"functionName":{"name":"calldataload","nativeSrc":"4044:12:19","nodeType":"YulIdentifier","src":"4044:12:19"},"nativeSrc":"4044:23:19","nodeType":"YulFunctionCall","src":"4044:23:19"},"variables":[{"name":"value","nativeSrc":"4035:5:19","nodeType":"YulTypedName","src":"4035:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4101:5:19","nodeType":"YulIdentifier","src":"4101:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4076:24:19","nodeType":"YulIdentifier","src":"4076:24:19"},"nativeSrc":"4076:31:19","nodeType":"YulFunctionCall","src":"4076:31:19"},"nativeSrc":"4076:31:19","nodeType":"YulExpressionStatement","src":"4076:31:19"},{"nativeSrc":"4116:15:19","nodeType":"YulAssignment","src":"4116:15:19","value":{"name":"value","nativeSrc":"4126:5:19","nodeType":"YulIdentifier","src":"4126:5:19"},"variableNames":[{"name":"value0","nativeSrc":"4116:6:19","nodeType":"YulIdentifier","src":"4116:6:19"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3890:247:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3926:9:19","nodeType":"YulTypedName","src":"3926:9:19","type":""},{"name":"dataEnd","nativeSrc":"3937:7:19","nodeType":"YulTypedName","src":"3937:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3949:6:19","nodeType":"YulTypedName","src":"3949:6:19","type":""}],"src":"3890:247:19"},{"body":{"nativeSrc":"4223:170:19","nodeType":"YulBlock","src":"4223:170:19","statements":[{"body":{"nativeSrc":"4269:16:19","nodeType":"YulBlock","src":"4269:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4278:1:19","nodeType":"YulLiteral","src":"4278:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4281:1:19","nodeType":"YulLiteral","src":"4281:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4271:6:19","nodeType":"YulIdentifier","src":"4271:6:19"},"nativeSrc":"4271:12:19","nodeType":"YulFunctionCall","src":"4271:12:19"},"nativeSrc":"4271:12:19","nodeType":"YulExpressionStatement","src":"4271:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4244:7:19","nodeType":"YulIdentifier","src":"4244:7:19"},{"name":"headStart","nativeSrc":"4253:9:19","nodeType":"YulIdentifier","src":"4253:9:19"}],"functionName":{"name":"sub","nativeSrc":"4240:3:19","nodeType":"YulIdentifier","src":"4240:3:19"},"nativeSrc":"4240:23:19","nodeType":"YulFunctionCall","src":"4240:23:19"},{"kind":"number","nativeSrc":"4265:2:19","nodeType":"YulLiteral","src":"4265:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4236:3:19","nodeType":"YulIdentifier","src":"4236:3:19"},"nativeSrc":"4236:32:19","nodeType":"YulFunctionCall","src":"4236:32:19"},"nativeSrc":"4233:52:19","nodeType":"YulIf","src":"4233:52:19"},{"nativeSrc":"4294:29:19","nodeType":"YulVariableDeclaration","src":"4294:29:19","value":{"arguments":[{"name":"headStart","nativeSrc":"4313:9:19","nodeType":"YulIdentifier","src":"4313:9:19"}],"functionName":{"name":"mload","nativeSrc":"4307:5:19","nodeType":"YulIdentifier","src":"4307:5:19"},"nativeSrc":"4307:16:19","nodeType":"YulFunctionCall","src":"4307:16:19"},"variables":[{"name":"value","nativeSrc":"4298:5:19","nodeType":"YulTypedName","src":"4298:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4357:5:19","nodeType":"YulIdentifier","src":"4357:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4332:24:19","nodeType":"YulIdentifier","src":"4332:24:19"},"nativeSrc":"4332:31:19","nodeType":"YulFunctionCall","src":"4332:31:19"},"nativeSrc":"4332:31:19","nodeType":"YulExpressionStatement","src":"4332:31:19"},{"nativeSrc":"4372:15:19","nodeType":"YulAssignment","src":"4372:15:19","value":{"name":"value","nativeSrc":"4382:5:19","nodeType":"YulIdentifier","src":"4382:5:19"},"variableNames":[{"name":"value0","nativeSrc":"4372:6:19","nodeType":"YulIdentifier","src":"4372:6:19"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"4142:251:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4189:9:19","nodeType":"YulTypedName","src":"4189:9:19","type":""},{"name":"dataEnd","nativeSrc":"4200:7:19","nodeType":"YulTypedName","src":"4200:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4212:6:19","nodeType":"YulTypedName","src":"4212:6:19","type":""}],"src":"4142:251:19"},{"body":{"nativeSrc":"4477:194:19","nodeType":"YulBlock","src":"4477:194:19","statements":[{"body":{"nativeSrc":"4523:16:19","nodeType":"YulBlock","src":"4523:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4532:1:19","nodeType":"YulLiteral","src":"4532:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4535:1:19","nodeType":"YulLiteral","src":"4535:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4525:6:19","nodeType":"YulIdentifier","src":"4525:6:19"},"nativeSrc":"4525:12:19","nodeType":"YulFunctionCall","src":"4525:12:19"},"nativeSrc":"4525:12:19","nodeType":"YulExpressionStatement","src":"4525:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4498:7:19","nodeType":"YulIdentifier","src":"4498:7:19"},{"name":"headStart","nativeSrc":"4507:9:19","nodeType":"YulIdentifier","src":"4507:9:19"}],"functionName":{"name":"sub","nativeSrc":"4494:3:19","nodeType":"YulIdentifier","src":"4494:3:19"},"nativeSrc":"4494:23:19","nodeType":"YulFunctionCall","src":"4494:23:19"},{"kind":"number","nativeSrc":"4519:2:19","nodeType":"YulLiteral","src":"4519:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4490:3:19","nodeType":"YulIdentifier","src":"4490:3:19"},"nativeSrc":"4490:32:19","nodeType":"YulFunctionCall","src":"4490:32:19"},"nativeSrc":"4487:52:19","nodeType":"YulIf","src":"4487:52:19"},{"nativeSrc":"4548:29:19","nodeType":"YulVariableDeclaration","src":"4548:29:19","value":{"arguments":[{"name":"headStart","nativeSrc":"4567:9:19","nodeType":"YulIdentifier","src":"4567:9:19"}],"functionName":{"name":"mload","nativeSrc":"4561:5:19","nodeType":"YulIdentifier","src":"4561:5:19"},"nativeSrc":"4561:16:19","nodeType":"YulFunctionCall","src":"4561:16:19"},"variables":[{"name":"value","nativeSrc":"4552:5:19","nodeType":"YulTypedName","src":"4552:5:19","type":""}]},{"body":{"nativeSrc":"4625:16:19","nodeType":"YulBlock","src":"4625:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4634:1:19","nodeType":"YulLiteral","src":"4634:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4637:1:19","nodeType":"YulLiteral","src":"4637:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4627:6:19","nodeType":"YulIdentifier","src":"4627:6:19"},"nativeSrc":"4627:12:19","nodeType":"YulFunctionCall","src":"4627:12:19"},"nativeSrc":"4627:12:19","nodeType":"YulExpressionStatement","src":"4627:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4599:5:19","nodeType":"YulIdentifier","src":"4599:5:19"},{"arguments":[{"name":"value","nativeSrc":"4610:5:19","nodeType":"YulIdentifier","src":"4610:5:19"},{"kind":"number","nativeSrc":"4617:4:19","nodeType":"YulLiteral","src":"4617:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4606:3:19","nodeType":"YulIdentifier","src":"4606:3:19"},"nativeSrc":"4606:16:19","nodeType":"YulFunctionCall","src":"4606:16:19"}],"functionName":{"name":"eq","nativeSrc":"4596:2:19","nodeType":"YulIdentifier","src":"4596:2:19"},"nativeSrc":"4596:27:19","nodeType":"YulFunctionCall","src":"4596:27:19"}],"functionName":{"name":"iszero","nativeSrc":"4589:6:19","nodeType":"YulIdentifier","src":"4589:6:19"},"nativeSrc":"4589:35:19","nodeType":"YulFunctionCall","src":"4589:35:19"},"nativeSrc":"4586:55:19","nodeType":"YulIf","src":"4586:55:19"},{"nativeSrc":"4650:15:19","nodeType":"YulAssignment","src":"4650:15:19","value":{"name":"value","nativeSrc":"4660:5:19","nodeType":"YulIdentifier","src":"4660:5:19"},"variableNames":[{"name":"value0","nativeSrc":"4650:6:19","nodeType":"YulIdentifier","src":"4650:6:19"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nativeSrc":"4398:273:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4443:9:19","nodeType":"YulTypedName","src":"4443:9:19","type":""},{"name":"dataEnd","nativeSrc":"4454:7:19","nodeType":"YulTypedName","src":"4454:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4466:6:19","nodeType":"YulTypedName","src":"4466:6:19","type":""}],"src":"4398:273:19"},{"body":{"nativeSrc":"4857:257:19","nodeType":"YulBlock","src":"4857:257:19","statements":[{"nativeSrc":"4867:26:19","nodeType":"YulAssignment","src":"4867:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"4879:9:19","nodeType":"YulIdentifier","src":"4879:9:19"},{"kind":"number","nativeSrc":"4890:2:19","nodeType":"YulLiteral","src":"4890:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"4875:3:19","nodeType":"YulIdentifier","src":"4875:3:19"},"nativeSrc":"4875:18:19","nodeType":"YulFunctionCall","src":"4875:18:19"},"variableNames":[{"name":"tail","nativeSrc":"4867:4:19","nodeType":"YulIdentifier","src":"4867:4:19"}]},{"nativeSrc":"4902:52:19","nodeType":"YulVariableDeclaration","src":"4902:52:19","value":{"kind":"number","nativeSrc":"4912:42:19","nodeType":"YulLiteral","src":"4912:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"4906:2:19","nodeType":"YulTypedName","src":"4906:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4970:9:19","nodeType":"YulIdentifier","src":"4970:9:19"},{"arguments":[{"name":"value0","nativeSrc":"4985:6:19","nodeType":"YulIdentifier","src":"4985:6:19"},{"name":"_1","nativeSrc":"4993:2:19","nodeType":"YulIdentifier","src":"4993:2:19"}],"functionName":{"name":"and","nativeSrc":"4981:3:19","nodeType":"YulIdentifier","src":"4981:3:19"},"nativeSrc":"4981:15:19","nodeType":"YulFunctionCall","src":"4981:15:19"}],"functionName":{"name":"mstore","nativeSrc":"4963:6:19","nodeType":"YulIdentifier","src":"4963:6:19"},"nativeSrc":"4963:34:19","nodeType":"YulFunctionCall","src":"4963:34:19"},"nativeSrc":"4963:34:19","nodeType":"YulExpressionStatement","src":"4963:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5017:9:19","nodeType":"YulIdentifier","src":"5017:9:19"},{"kind":"number","nativeSrc":"5028:2:19","nodeType":"YulLiteral","src":"5028:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5013:3:19","nodeType":"YulIdentifier","src":"5013:3:19"},"nativeSrc":"5013:18:19","nodeType":"YulFunctionCall","src":"5013:18:19"},{"arguments":[{"name":"value1","nativeSrc":"5037:6:19","nodeType":"YulIdentifier","src":"5037:6:19"},{"name":"_1","nativeSrc":"5045:2:19","nodeType":"YulIdentifier","src":"5045:2:19"}],"functionName":{"name":"and","nativeSrc":"5033:3:19","nodeType":"YulIdentifier","src":"5033:3:19"},"nativeSrc":"5033:15:19","nodeType":"YulFunctionCall","src":"5033:15:19"}],"functionName":{"name":"mstore","nativeSrc":"5006:6:19","nodeType":"YulIdentifier","src":"5006:6:19"},"nativeSrc":"5006:43:19","nodeType":"YulFunctionCall","src":"5006:43:19"},"nativeSrc":"5006:43:19","nodeType":"YulExpressionStatement","src":"5006:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5069:9:19","nodeType":"YulIdentifier","src":"5069:9:19"},{"kind":"number","nativeSrc":"5080:2:19","nodeType":"YulLiteral","src":"5080:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5065:3:19","nodeType":"YulIdentifier","src":"5065:3:19"},"nativeSrc":"5065:18:19","nodeType":"YulFunctionCall","src":"5065:18:19"},{"arguments":[{"arguments":[{"name":"value2","nativeSrc":"5099:6:19","nodeType":"YulIdentifier","src":"5099:6:19"}],"functionName":{"name":"iszero","nativeSrc":"5092:6:19","nodeType":"YulIdentifier","src":"5092:6:19"},"nativeSrc":"5092:14:19","nodeType":"YulFunctionCall","src":"5092:14:19"}],"functionName":{"name":"iszero","nativeSrc":"5085:6:19","nodeType":"YulIdentifier","src":"5085:6:19"},"nativeSrc":"5085:22:19","nodeType":"YulFunctionCall","src":"5085:22:19"}],"functionName":{"name":"mstore","nativeSrc":"5058:6:19","nodeType":"YulIdentifier","src":"5058:6:19"},"nativeSrc":"5058:50:19","nodeType":"YulFunctionCall","src":"5058:50:19"},"nativeSrc":"5058:50:19","nodeType":"YulExpressionStatement","src":"5058:50:19"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$1831_t_contract$_IERC20_$1831_t_bool__to_t_address_t_address_t_bool__fromStack_reversed","nativeSrc":"4676:438:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4810:9:19","nodeType":"YulTypedName","src":"4810:9:19","type":""},{"name":"value2","nativeSrc":"4821:6:19","nodeType":"YulTypedName","src":"4821:6:19","type":""},{"name":"value1","nativeSrc":"4829:6:19","nodeType":"YulTypedName","src":"4829:6:19","type":""},{"name":"value0","nativeSrc":"4837:6:19","nodeType":"YulTypedName","src":"4837:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4848:4:19","nodeType":"YulTypedName","src":"4848:4:19","type":""}],"src":"4676:438:19"},{"body":{"nativeSrc":"5200:103:19","nodeType":"YulBlock","src":"5200:103:19","statements":[{"body":{"nativeSrc":"5246:16:19","nodeType":"YulBlock","src":"5246:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5255:1:19","nodeType":"YulLiteral","src":"5255:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5258:1:19","nodeType":"YulLiteral","src":"5258:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5248:6:19","nodeType":"YulIdentifier","src":"5248:6:19"},"nativeSrc":"5248:12:19","nodeType":"YulFunctionCall","src":"5248:12:19"},"nativeSrc":"5248:12:19","nodeType":"YulExpressionStatement","src":"5248:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5221:7:19","nodeType":"YulIdentifier","src":"5221:7:19"},{"name":"headStart","nativeSrc":"5230:9:19","nodeType":"YulIdentifier","src":"5230:9:19"}],"functionName":{"name":"sub","nativeSrc":"5217:3:19","nodeType":"YulIdentifier","src":"5217:3:19"},"nativeSrc":"5217:23:19","nodeType":"YulFunctionCall","src":"5217:23:19"},{"kind":"number","nativeSrc":"5242:2:19","nodeType":"YulLiteral","src":"5242:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5213:3:19","nodeType":"YulIdentifier","src":"5213:3:19"},"nativeSrc":"5213:32:19","nodeType":"YulFunctionCall","src":"5213:32:19"},"nativeSrc":"5210:52:19","nodeType":"YulIf","src":"5210:52:19"},{"nativeSrc":"5271:26:19","nodeType":"YulAssignment","src":"5271:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"5287:9:19","nodeType":"YulIdentifier","src":"5287:9:19"}],"functionName":{"name":"mload","nativeSrc":"5281:5:19","nodeType":"YulIdentifier","src":"5281:5:19"},"nativeSrc":"5281:16:19","nodeType":"YulFunctionCall","src":"5281:16:19"},"variableNames":[{"name":"value0","nativeSrc":"5271:6:19","nodeType":"YulIdentifier","src":"5271:6:19"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"5119:184:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5166:9:19","nodeType":"YulTypedName","src":"5166:9:19","type":""},{"name":"dataEnd","nativeSrc":"5177:7:19","nodeType":"YulTypedName","src":"5177:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5189:6:19","nodeType":"YulTypedName","src":"5189:6:19","type":""}],"src":"5119:184:19"},{"body":{"nativeSrc":"5340:152:19","nodeType":"YulBlock","src":"5340:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5357:1:19","nodeType":"YulLiteral","src":"5357:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5360:77:19","nodeType":"YulLiteral","src":"5360:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5350:6:19","nodeType":"YulIdentifier","src":"5350:6:19"},"nativeSrc":"5350:88:19","nodeType":"YulFunctionCall","src":"5350:88:19"},"nativeSrc":"5350:88:19","nodeType":"YulExpressionStatement","src":"5350:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5454:1:19","nodeType":"YulLiteral","src":"5454:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"5457:4:19","nodeType":"YulLiteral","src":"5457:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5447:6:19","nodeType":"YulIdentifier","src":"5447:6:19"},"nativeSrc":"5447:15:19","nodeType":"YulFunctionCall","src":"5447:15:19"},"nativeSrc":"5447:15:19","nodeType":"YulExpressionStatement","src":"5447:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5478:1:19","nodeType":"YulLiteral","src":"5478:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5481:4:19","nodeType":"YulLiteral","src":"5481:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5471:6:19","nodeType":"YulIdentifier","src":"5471:6:19"},"nativeSrc":"5471:15:19","nodeType":"YulFunctionCall","src":"5471:15:19"},"nativeSrc":"5471:15:19","nodeType":"YulExpressionStatement","src":"5471:15:19"}]},"name":"panic_error_0x11","nativeSrc":"5308:184:19","nodeType":"YulFunctionDefinition","src":"5308:184:19"},{"body":{"nativeSrc":"5561:412:19","nodeType":"YulBlock","src":"5561:412:19","statements":[{"nativeSrc":"5571:16:19","nodeType":"YulVariableDeclaration","src":"5571:16:19","value":{"kind":"number","nativeSrc":"5586:1:19","nodeType":"YulLiteral","src":"5586:1:19","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"5575:7:19","nodeType":"YulTypedName","src":"5575:7:19","type":""}]},{"nativeSrc":"5596:10:19","nodeType":"YulAssignment","src":"5596:10:19","value":{"kind":"number","nativeSrc":"5605:1:19","nodeType":"YulLiteral","src":"5605:1:19","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"5596:5:19","nodeType":"YulIdentifier","src":"5596:5:19"}]},{"nativeSrc":"5615:13:19","nodeType":"YulAssignment","src":"5615:13:19","value":{"name":"_base","nativeSrc":"5623:5:19","nodeType":"YulIdentifier","src":"5623:5:19"},"variableNames":[{"name":"base","nativeSrc":"5615:4:19","nodeType":"YulIdentifier","src":"5615:4:19"}]},{"body":{"nativeSrc":"5679:288:19","nodeType":"YulBlock","src":"5679:288:19","statements":[{"body":{"nativeSrc":"5784:22:19","nodeType":"YulBlock","src":"5784:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"5786:16:19","nodeType":"YulIdentifier","src":"5786:16:19"},"nativeSrc":"5786:18:19","nodeType":"YulFunctionCall","src":"5786:18:19"},"nativeSrc":"5786:18:19","nodeType":"YulExpressionStatement","src":"5786:18:19"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"5699:4:19","nodeType":"YulIdentifier","src":"5699:4:19"},{"arguments":[{"kind":"number","nativeSrc":"5709:66:19","nodeType":"YulLiteral","src":"5709:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nativeSrc":"5777:4:19","nodeType":"YulIdentifier","src":"5777:4:19"}],"functionName":{"name":"div","nativeSrc":"5705:3:19","nodeType":"YulIdentifier","src":"5705:3:19"},"nativeSrc":"5705:77:19","nodeType":"YulFunctionCall","src":"5705:77:19"}],"functionName":{"name":"gt","nativeSrc":"5696:2:19","nodeType":"YulIdentifier","src":"5696:2:19"},"nativeSrc":"5696:87:19","nodeType":"YulFunctionCall","src":"5696:87:19"},"nativeSrc":"5693:113:19","nodeType":"YulIf","src":"5693:113:19"},{"body":{"nativeSrc":"5845:29:19","nodeType":"YulBlock","src":"5845:29:19","statements":[{"nativeSrc":"5847:25:19","nodeType":"YulAssignment","src":"5847:25:19","value":{"arguments":[{"name":"power","nativeSrc":"5860:5:19","nodeType":"YulIdentifier","src":"5860:5:19"},{"name":"base","nativeSrc":"5867:4:19","nodeType":"YulIdentifier","src":"5867:4:19"}],"functionName":{"name":"mul","nativeSrc":"5856:3:19","nodeType":"YulIdentifier","src":"5856:3:19"},"nativeSrc":"5856:16:19","nodeType":"YulFunctionCall","src":"5856:16:19"},"variableNames":[{"name":"power","nativeSrc":"5847:5:19","nodeType":"YulIdentifier","src":"5847:5:19"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5826:8:19","nodeType":"YulIdentifier","src":"5826:8:19"},{"name":"power_1","nativeSrc":"5836:7:19","nodeType":"YulIdentifier","src":"5836:7:19"}],"functionName":{"name":"and","nativeSrc":"5822:3:19","nodeType":"YulIdentifier","src":"5822:3:19"},"nativeSrc":"5822:22:19","nodeType":"YulFunctionCall","src":"5822:22:19"},"nativeSrc":"5819:55:19","nodeType":"YulIf","src":"5819:55:19"},{"nativeSrc":"5887:23:19","nodeType":"YulAssignment","src":"5887:23:19","value":{"arguments":[{"name":"base","nativeSrc":"5899:4:19","nodeType":"YulIdentifier","src":"5899:4:19"},{"name":"base","nativeSrc":"5905:4:19","nodeType":"YulIdentifier","src":"5905:4:19"}],"functionName":{"name":"mul","nativeSrc":"5895:3:19","nodeType":"YulIdentifier","src":"5895:3:19"},"nativeSrc":"5895:15:19","nodeType":"YulFunctionCall","src":"5895:15:19"},"variableNames":[{"name":"base","nativeSrc":"5887:4:19","nodeType":"YulIdentifier","src":"5887:4:19"}]},{"nativeSrc":"5923:34:19","nodeType":"YulAssignment","src":"5923:34:19","value":{"arguments":[{"name":"power_1","nativeSrc":"5939:7:19","nodeType":"YulIdentifier","src":"5939:7:19"},{"name":"exponent","nativeSrc":"5948:8:19","nodeType":"YulIdentifier","src":"5948:8:19"}],"functionName":{"name":"shr","nativeSrc":"5935:3:19","nodeType":"YulIdentifier","src":"5935:3:19"},"nativeSrc":"5935:22:19","nodeType":"YulFunctionCall","src":"5935:22:19"},"variableNames":[{"name":"exponent","nativeSrc":"5923:8:19","nodeType":"YulIdentifier","src":"5923:8:19"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"5648:8:19","nodeType":"YulIdentifier","src":"5648:8:19"},{"name":"power_1","nativeSrc":"5658:7:19","nodeType":"YulIdentifier","src":"5658:7:19"}],"functionName":{"name":"gt","nativeSrc":"5645:2:19","nodeType":"YulIdentifier","src":"5645:2:19"},"nativeSrc":"5645:21:19","nodeType":"YulFunctionCall","src":"5645:21:19"},"nativeSrc":"5637:330:19","nodeType":"YulForLoop","post":{"nativeSrc":"5667:3:19","nodeType":"YulBlock","src":"5667:3:19","statements":[]},"pre":{"nativeSrc":"5641:3:19","nodeType":"YulBlock","src":"5641:3:19","statements":[]},"src":"5637:330:19"}]},"name":"checked_exp_helper","nativeSrc":"5497:476:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"5525:5:19","nodeType":"YulTypedName","src":"5525:5:19","type":""},{"name":"exponent","nativeSrc":"5532:8:19","nodeType":"YulTypedName","src":"5532:8:19","type":""}],"returnVariables":[{"name":"power","nativeSrc":"5545:5:19","nodeType":"YulTypedName","src":"5545:5:19","type":""},{"name":"base","nativeSrc":"5552:4:19","nodeType":"YulTypedName","src":"5552:4:19","type":""}],"src":"5497:476:19"},{"body":{"nativeSrc":"6037:807:19","nodeType":"YulBlock","src":"6037:807:19","statements":[{"body":{"nativeSrc":"6075:52:19","nodeType":"YulBlock","src":"6075:52:19","statements":[{"nativeSrc":"6089:10:19","nodeType":"YulAssignment","src":"6089:10:19","value":{"kind":"number","nativeSrc":"6098:1:19","nodeType":"YulLiteral","src":"6098:1:19","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"6089:5:19","nodeType":"YulIdentifier","src":"6089:5:19"}]},{"nativeSrc":"6112:5:19","nodeType":"YulLeave","src":"6112:5:19"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6057:8:19","nodeType":"YulIdentifier","src":"6057:8:19"}],"functionName":{"name":"iszero","nativeSrc":"6050:6:19","nodeType":"YulIdentifier","src":"6050:6:19"},"nativeSrc":"6050:16:19","nodeType":"YulFunctionCall","src":"6050:16:19"},"nativeSrc":"6047:80:19","nodeType":"YulIf","src":"6047:80:19"},{"body":{"nativeSrc":"6160:52:19","nodeType":"YulBlock","src":"6160:52:19","statements":[{"nativeSrc":"6174:10:19","nodeType":"YulAssignment","src":"6174:10:19","value":{"kind":"number","nativeSrc":"6183:1:19","nodeType":"YulLiteral","src":"6183:1:19","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"6174:5:19","nodeType":"YulIdentifier","src":"6174:5:19"}]},{"nativeSrc":"6197:5:19","nodeType":"YulLeave","src":"6197:5:19"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"6146:4:19","nodeType":"YulIdentifier","src":"6146:4:19"}],"functionName":{"name":"iszero","nativeSrc":"6139:6:19","nodeType":"YulIdentifier","src":"6139:6:19"},"nativeSrc":"6139:12:19","nodeType":"YulFunctionCall","src":"6139:12:19"},"nativeSrc":"6136:76:19","nodeType":"YulIf","src":"6136:76:19"},{"cases":[{"body":{"nativeSrc":"6248:52:19","nodeType":"YulBlock","src":"6248:52:19","statements":[{"nativeSrc":"6262:10:19","nodeType":"YulAssignment","src":"6262:10:19","value":{"kind":"number","nativeSrc":"6271:1:19","nodeType":"YulLiteral","src":"6271:1:19","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"6262:5:19","nodeType":"YulIdentifier","src":"6262:5:19"}]},{"nativeSrc":"6285:5:19","nodeType":"YulLeave","src":"6285:5:19"}]},"nativeSrc":"6241:59:19","nodeType":"YulCase","src":"6241:59:19","value":{"kind":"number","nativeSrc":"6246:1:19","nodeType":"YulLiteral","src":"6246:1:19","type":"","value":"1"}},{"body":{"nativeSrc":"6316:123:19","nodeType":"YulBlock","src":"6316:123:19","statements":[{"body":{"nativeSrc":"6351:22:19","nodeType":"YulBlock","src":"6351:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6353:16:19","nodeType":"YulIdentifier","src":"6353:16:19"},"nativeSrc":"6353:18:19","nodeType":"YulFunctionCall","src":"6353:18:19"},"nativeSrc":"6353:18:19","nodeType":"YulExpressionStatement","src":"6353:18:19"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"6336:8:19","nodeType":"YulIdentifier","src":"6336:8:19"},{"kind":"number","nativeSrc":"6346:3:19","nodeType":"YulLiteral","src":"6346:3:19","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"6333:2:19","nodeType":"YulIdentifier","src":"6333:2:19"},"nativeSrc":"6333:17:19","nodeType":"YulFunctionCall","src":"6333:17:19"},"nativeSrc":"6330:43:19","nodeType":"YulIf","src":"6330:43:19"},{"nativeSrc":"6386:25:19","nodeType":"YulAssignment","src":"6386:25:19","value":{"arguments":[{"name":"exponent","nativeSrc":"6399:8:19","nodeType":"YulIdentifier","src":"6399:8:19"},{"kind":"number","nativeSrc":"6409:1:19","nodeType":"YulLiteral","src":"6409:1:19","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"6395:3:19","nodeType":"YulIdentifier","src":"6395:3:19"},"nativeSrc":"6395:16:19","nodeType":"YulFunctionCall","src":"6395:16:19"},"variableNames":[{"name":"power","nativeSrc":"6386:5:19","nodeType":"YulIdentifier","src":"6386:5:19"}]},{"nativeSrc":"6424:5:19","nodeType":"YulLeave","src":"6424:5:19"}]},"nativeSrc":"6309:130:19","nodeType":"YulCase","src":"6309:130:19","value":{"kind":"number","nativeSrc":"6314:1:19","nodeType":"YulLiteral","src":"6314:1:19","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"6228:4:19","nodeType":"YulIdentifier","src":"6228:4:19"},"nativeSrc":"6221:218:19","nodeType":"YulSwitch","src":"6221:218:19"},{"body":{"nativeSrc":"6537:70:19","nodeType":"YulBlock","src":"6537:70:19","statements":[{"nativeSrc":"6551:28:19","nodeType":"YulAssignment","src":"6551:28:19","value":{"arguments":[{"name":"base","nativeSrc":"6564:4:19","nodeType":"YulIdentifier","src":"6564:4:19"},{"name":"exponent","nativeSrc":"6570:8:19","nodeType":"YulIdentifier","src":"6570:8:19"}],"functionName":{"name":"exp","nativeSrc":"6560:3:19","nodeType":"YulIdentifier","src":"6560:3:19"},"nativeSrc":"6560:19:19","nodeType":"YulFunctionCall","src":"6560:19:19"},"variableNames":[{"name":"power","nativeSrc":"6551:5:19","nodeType":"YulIdentifier","src":"6551:5:19"}]},{"nativeSrc":"6592:5:19","nodeType":"YulLeave","src":"6592:5:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"6461:4:19","nodeType":"YulIdentifier","src":"6461:4:19"},{"kind":"number","nativeSrc":"6467:2:19","nodeType":"YulLiteral","src":"6467:2:19","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"6458:2:19","nodeType":"YulIdentifier","src":"6458:2:19"},"nativeSrc":"6458:12:19","nodeType":"YulFunctionCall","src":"6458:12:19"},{"arguments":[{"name":"exponent","nativeSrc":"6475:8:19","nodeType":"YulIdentifier","src":"6475:8:19"},{"kind":"number","nativeSrc":"6485:2:19","nodeType":"YulLiteral","src":"6485:2:19","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"6472:2:19","nodeType":"YulIdentifier","src":"6472:2:19"},"nativeSrc":"6472:16:19","nodeType":"YulFunctionCall","src":"6472:16:19"}],"functionName":{"name":"and","nativeSrc":"6454:3:19","nodeType":"YulIdentifier","src":"6454:3:19"},"nativeSrc":"6454:35:19","nodeType":"YulFunctionCall","src":"6454:35:19"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"6498:4:19","nodeType":"YulIdentifier","src":"6498:4:19"},{"kind":"number","nativeSrc":"6504:3:19","nodeType":"YulLiteral","src":"6504:3:19","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"6495:2:19","nodeType":"YulIdentifier","src":"6495:2:19"},"nativeSrc":"6495:13:19","nodeType":"YulFunctionCall","src":"6495:13:19"},{"arguments":[{"name":"exponent","nativeSrc":"6513:8:19","nodeType":"YulIdentifier","src":"6513:8:19"},{"kind":"number","nativeSrc":"6523:2:19","nodeType":"YulLiteral","src":"6523:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6510:2:19","nodeType":"YulIdentifier","src":"6510:2:19"},"nativeSrc":"6510:16:19","nodeType":"YulFunctionCall","src":"6510:16:19"}],"functionName":{"name":"and","nativeSrc":"6491:3:19","nodeType":"YulIdentifier","src":"6491:3:19"},"nativeSrc":"6491:36:19","nodeType":"YulFunctionCall","src":"6491:36:19"}],"functionName":{"name":"or","nativeSrc":"6451:2:19","nodeType":"YulIdentifier","src":"6451:2:19"},"nativeSrc":"6451:77:19","nodeType":"YulFunctionCall","src":"6451:77:19"},"nativeSrc":"6448:159:19","nodeType":"YulIf","src":"6448:159:19"},{"nativeSrc":"6616:57:19","nodeType":"YulVariableDeclaration","src":"6616:57:19","value":{"arguments":[{"name":"base","nativeSrc":"6658:4:19","nodeType":"YulIdentifier","src":"6658:4:19"},{"name":"exponent","nativeSrc":"6664:8:19","nodeType":"YulIdentifier","src":"6664:8:19"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"6639:18:19","nodeType":"YulIdentifier","src":"6639:18:19"},"nativeSrc":"6639:34:19","nodeType":"YulFunctionCall","src":"6639:34:19"},"variables":[{"name":"power_1","nativeSrc":"6620:7:19","nodeType":"YulTypedName","src":"6620:7:19","type":""},{"name":"base_1","nativeSrc":"6629:6:19","nodeType":"YulTypedName","src":"6629:6:19","type":""}]},{"body":{"nativeSrc":"6778:22:19","nodeType":"YulBlock","src":"6778:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6780:16:19","nodeType":"YulIdentifier","src":"6780:16:19"},"nativeSrc":"6780:18:19","nodeType":"YulFunctionCall","src":"6780:18:19"},"nativeSrc":"6780:18:19","nodeType":"YulExpressionStatement","src":"6780:18:19"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"6688:7:19","nodeType":"YulIdentifier","src":"6688:7:19"},{"arguments":[{"kind":"number","nativeSrc":"6701:66:19","nodeType":"YulLiteral","src":"6701:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nativeSrc":"6769:6:19","nodeType":"YulIdentifier","src":"6769:6:19"}],"functionName":{"name":"div","nativeSrc":"6697:3:19","nodeType":"YulIdentifier","src":"6697:3:19"},"nativeSrc":"6697:79:19","nodeType":"YulFunctionCall","src":"6697:79:19"}],"functionName":{"name":"gt","nativeSrc":"6685:2:19","nodeType":"YulIdentifier","src":"6685:2:19"},"nativeSrc":"6685:92:19","nodeType":"YulFunctionCall","src":"6685:92:19"},"nativeSrc":"6682:118:19","nodeType":"YulIf","src":"6682:118:19"},{"nativeSrc":"6809:29:19","nodeType":"YulAssignment","src":"6809:29:19","value":{"arguments":[{"name":"power_1","nativeSrc":"6822:7:19","nodeType":"YulIdentifier","src":"6822:7:19"},{"name":"base_1","nativeSrc":"6831:6:19","nodeType":"YulIdentifier","src":"6831:6:19"}],"functionName":{"name":"mul","nativeSrc":"6818:3:19","nodeType":"YulIdentifier","src":"6818:3:19"},"nativeSrc":"6818:20:19","nodeType":"YulFunctionCall","src":"6818:20:19"},"variableNames":[{"name":"power","nativeSrc":"6809:5:19","nodeType":"YulIdentifier","src":"6809:5:19"}]}]},"name":"checked_exp_unsigned","nativeSrc":"5978:866:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6008:4:19","nodeType":"YulTypedName","src":"6008:4:19","type":""},{"name":"exponent","nativeSrc":"6014:8:19","nodeType":"YulTypedName","src":"6014:8:19","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6027:5:19","nodeType":"YulTypedName","src":"6027:5:19","type":""}],"src":"5978:866:19"},{"body":{"nativeSrc":"6917:72:19","nodeType":"YulBlock","src":"6917:72:19","statements":[{"nativeSrc":"6927:56:19","nodeType":"YulAssignment","src":"6927:56:19","value":{"arguments":[{"name":"base","nativeSrc":"6957:4:19","nodeType":"YulIdentifier","src":"6957:4:19"},{"arguments":[{"name":"exponent","nativeSrc":"6967:8:19","nodeType":"YulIdentifier","src":"6967:8:19"},{"kind":"number","nativeSrc":"6977:4:19","nodeType":"YulLiteral","src":"6977:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"6963:3:19","nodeType":"YulIdentifier","src":"6963:3:19"},"nativeSrc":"6963:19:19","nodeType":"YulFunctionCall","src":"6963:19:19"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"6936:20:19","nodeType":"YulIdentifier","src":"6936:20:19"},"nativeSrc":"6936:47:19","nodeType":"YulFunctionCall","src":"6936:47:19"},"variableNames":[{"name":"power","nativeSrc":"6927:5:19","nodeType":"YulIdentifier","src":"6927:5:19"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"6849:140:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"6888:4:19","nodeType":"YulTypedName","src":"6888:4:19","type":""},{"name":"exponent","nativeSrc":"6894:8:19","nodeType":"YulTypedName","src":"6894:8:19","type":""}],"returnVariables":[{"name":"power","nativeSrc":"6907:5:19","nodeType":"YulTypedName","src":"6907:5:19","type":""}],"src":"6849:140:19"},{"body":{"nativeSrc":"7046:116:19","nodeType":"YulBlock","src":"7046:116:19","statements":[{"nativeSrc":"7056:20:19","nodeType":"YulAssignment","src":"7056:20:19","value":{"arguments":[{"name":"x","nativeSrc":"7071:1:19","nodeType":"YulIdentifier","src":"7071:1:19"},{"name":"y","nativeSrc":"7074:1:19","nodeType":"YulIdentifier","src":"7074:1:19"}],"functionName":{"name":"mul","nativeSrc":"7067:3:19","nodeType":"YulIdentifier","src":"7067:3:19"},"nativeSrc":"7067:9:19","nodeType":"YulFunctionCall","src":"7067:9:19"},"variableNames":[{"name":"product","nativeSrc":"7056:7:19","nodeType":"YulIdentifier","src":"7056:7:19"}]},{"body":{"nativeSrc":"7134:22:19","nodeType":"YulBlock","src":"7134:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7136:16:19","nodeType":"YulIdentifier","src":"7136:16:19"},"nativeSrc":"7136:18:19","nodeType":"YulFunctionCall","src":"7136:18:19"},"nativeSrc":"7136:18:19","nodeType":"YulExpressionStatement","src":"7136:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7105:1:19","nodeType":"YulIdentifier","src":"7105:1:19"}],"functionName":{"name":"iszero","nativeSrc":"7098:6:19","nodeType":"YulIdentifier","src":"7098:6:19"},"nativeSrc":"7098:9:19","nodeType":"YulFunctionCall","src":"7098:9:19"},{"arguments":[{"name":"y","nativeSrc":"7112:1:19","nodeType":"YulIdentifier","src":"7112:1:19"},{"arguments":[{"name":"product","nativeSrc":"7119:7:19","nodeType":"YulIdentifier","src":"7119:7:19"},{"name":"x","nativeSrc":"7128:1:19","nodeType":"YulIdentifier","src":"7128:1:19"}],"functionName":{"name":"div","nativeSrc":"7115:3:19","nodeType":"YulIdentifier","src":"7115:3:19"},"nativeSrc":"7115:15:19","nodeType":"YulFunctionCall","src":"7115:15:19"}],"functionName":{"name":"eq","nativeSrc":"7109:2:19","nodeType":"YulIdentifier","src":"7109:2:19"},"nativeSrc":"7109:22:19","nodeType":"YulFunctionCall","src":"7109:22:19"}],"functionName":{"name":"or","nativeSrc":"7095:2:19","nodeType":"YulIdentifier","src":"7095:2:19"},"nativeSrc":"7095:37:19","nodeType":"YulFunctionCall","src":"7095:37:19"}],"functionName":{"name":"iszero","nativeSrc":"7088:6:19","nodeType":"YulIdentifier","src":"7088:6:19"},"nativeSrc":"7088:45:19","nodeType":"YulFunctionCall","src":"7088:45:19"},"nativeSrc":"7085:71:19","nodeType":"YulIf","src":"7085:71:19"}]},"name":"checked_mul_t_uint256","nativeSrc":"6994:168:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7025:1:19","nodeType":"YulTypedName","src":"7025:1:19","type":""},{"name":"y","nativeSrc":"7028:1:19","nodeType":"YulTypedName","src":"7028:1:19","type":""}],"returnVariables":[{"name":"product","nativeSrc":"7034:7:19","nodeType":"YulTypedName","src":"7034:7:19","type":""}],"src":"6994:168:19"},{"body":{"nativeSrc":"7213:228:19","nodeType":"YulBlock","src":"7213:228:19","statements":[{"body":{"nativeSrc":"7244:168:19","nodeType":"YulBlock","src":"7244:168:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7265:1:19","nodeType":"YulLiteral","src":"7265:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7268:77:19","nodeType":"YulLiteral","src":"7268:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7258:6:19","nodeType":"YulIdentifier","src":"7258:6:19"},"nativeSrc":"7258:88:19","nodeType":"YulFunctionCall","src":"7258:88:19"},"nativeSrc":"7258:88:19","nodeType":"YulExpressionStatement","src":"7258:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7366:1:19","nodeType":"YulLiteral","src":"7366:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"7369:4:19","nodeType":"YulLiteral","src":"7369:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"7359:6:19","nodeType":"YulIdentifier","src":"7359:6:19"},"nativeSrc":"7359:15:19","nodeType":"YulFunctionCall","src":"7359:15:19"},"nativeSrc":"7359:15:19","nodeType":"YulExpressionStatement","src":"7359:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7394:1:19","nodeType":"YulLiteral","src":"7394:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7397:4:19","nodeType":"YulLiteral","src":"7397:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7387:6:19","nodeType":"YulIdentifier","src":"7387:6:19"},"nativeSrc":"7387:15:19","nodeType":"YulFunctionCall","src":"7387:15:19"},"nativeSrc":"7387:15:19","nodeType":"YulExpressionStatement","src":"7387:15:19"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"7233:1:19","nodeType":"YulIdentifier","src":"7233:1:19"}],"functionName":{"name":"iszero","nativeSrc":"7226:6:19","nodeType":"YulIdentifier","src":"7226:6:19"},"nativeSrc":"7226:9:19","nodeType":"YulFunctionCall","src":"7226:9:19"},"nativeSrc":"7223:189:19","nodeType":"YulIf","src":"7223:189:19"},{"nativeSrc":"7421:14:19","nodeType":"YulAssignment","src":"7421:14:19","value":{"arguments":[{"name":"x","nativeSrc":"7430:1:19","nodeType":"YulIdentifier","src":"7430:1:19"},{"name":"y","nativeSrc":"7433:1:19","nodeType":"YulIdentifier","src":"7433:1:19"}],"functionName":{"name":"div","nativeSrc":"7426:3:19","nodeType":"YulIdentifier","src":"7426:3:19"},"nativeSrc":"7426:9:19","nodeType":"YulFunctionCall","src":"7426:9:19"},"variableNames":[{"name":"r","nativeSrc":"7421:1:19","nodeType":"YulIdentifier","src":"7421:1:19"}]}]},"name":"checked_div_t_uint256","nativeSrc":"7167:274:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7198:1:19","nodeType":"YulTypedName","src":"7198:1:19","type":""},{"name":"y","nativeSrc":"7201:1:19","nodeType":"YulTypedName","src":"7201:1:19","type":""}],"returnVariables":[{"name":"r","nativeSrc":"7207:1:19","nodeType":"YulTypedName","src":"7207:1:19","type":""}],"src":"7167:274:19"},{"body":{"nativeSrc":"7493:104:19","nodeType":"YulBlock","src":"7493:104:19","statements":[{"nativeSrc":"7503:39:19","nodeType":"YulAssignment","src":"7503:39:19","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7519:1:19","nodeType":"YulIdentifier","src":"7519:1:19"},{"kind":"number","nativeSrc":"7522:4:19","nodeType":"YulLiteral","src":"7522:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7515:3:19","nodeType":"YulIdentifier","src":"7515:3:19"},"nativeSrc":"7515:12:19","nodeType":"YulFunctionCall","src":"7515:12:19"},{"arguments":[{"name":"y","nativeSrc":"7533:1:19","nodeType":"YulIdentifier","src":"7533:1:19"},{"kind":"number","nativeSrc":"7536:4:19","nodeType":"YulLiteral","src":"7536:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"7529:3:19","nodeType":"YulIdentifier","src":"7529:3:19"},"nativeSrc":"7529:12:19","nodeType":"YulFunctionCall","src":"7529:12:19"}],"functionName":{"name":"sub","nativeSrc":"7511:3:19","nodeType":"YulIdentifier","src":"7511:3:19"},"nativeSrc":"7511:31:19","nodeType":"YulFunctionCall","src":"7511:31:19"},"variableNames":[{"name":"diff","nativeSrc":"7503:4:19","nodeType":"YulIdentifier","src":"7503:4:19"}]},{"body":{"nativeSrc":"7569:22:19","nodeType":"YulBlock","src":"7569:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7571:16:19","nodeType":"YulIdentifier","src":"7571:16:19"},"nativeSrc":"7571:18:19","nodeType":"YulFunctionCall","src":"7571:18:19"},"nativeSrc":"7571:18:19","nodeType":"YulExpressionStatement","src":"7571:18:19"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"7557:4:19","nodeType":"YulIdentifier","src":"7557:4:19"},{"kind":"number","nativeSrc":"7563:4:19","nodeType":"YulLiteral","src":"7563:4:19","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"7554:2:19","nodeType":"YulIdentifier","src":"7554:2:19"},"nativeSrc":"7554:14:19","nodeType":"YulFunctionCall","src":"7554:14:19"},"nativeSrc":"7551:40:19","nodeType":"YulIf","src":"7551:40:19"}]},"name":"checked_sub_t_uint8","nativeSrc":"7446:151:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7475:1:19","nodeType":"YulTypedName","src":"7475:1:19","type":""},{"name":"y","nativeSrc":"7478:1:19","nodeType":"YulTypedName","src":"7478:1:19","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"7484:4:19","nodeType":"YulTypedName","src":"7484:4:19","type":""}],"src":"7446:151:19"},{"body":{"nativeSrc":"7759:241:19","nodeType":"YulBlock","src":"7759:241:19","statements":[{"nativeSrc":"7769:26:19","nodeType":"YulAssignment","src":"7769:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"7781:9:19","nodeType":"YulIdentifier","src":"7781:9:19"},{"kind":"number","nativeSrc":"7792:2:19","nodeType":"YulLiteral","src":"7792:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7777:3:19","nodeType":"YulIdentifier","src":"7777:3:19"},"nativeSrc":"7777:18:19","nodeType":"YulFunctionCall","src":"7777:18:19"},"variableNames":[{"name":"tail","nativeSrc":"7769:4:19","nodeType":"YulIdentifier","src":"7769:4:19"}]},{"nativeSrc":"7804:52:19","nodeType":"YulVariableDeclaration","src":"7804:52:19","value":{"kind":"number","nativeSrc":"7814:42:19","nodeType":"YulLiteral","src":"7814:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"7808:2:19","nodeType":"YulTypedName","src":"7808:2:19","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"7872:9:19","nodeType":"YulIdentifier","src":"7872:9:19"},{"arguments":[{"name":"value0","nativeSrc":"7887:6:19","nodeType":"YulIdentifier","src":"7887:6:19"},{"name":"_1","nativeSrc":"7895:2:19","nodeType":"YulIdentifier","src":"7895:2:19"}],"functionName":{"name":"and","nativeSrc":"7883:3:19","nodeType":"YulIdentifier","src":"7883:3:19"},"nativeSrc":"7883:15:19","nodeType":"YulFunctionCall","src":"7883:15:19"}],"functionName":{"name":"mstore","nativeSrc":"7865:6:19","nodeType":"YulIdentifier","src":"7865:6:19"},"nativeSrc":"7865:34:19","nodeType":"YulFunctionCall","src":"7865:34:19"},"nativeSrc":"7865:34:19","nodeType":"YulExpressionStatement","src":"7865:34:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7919:9:19","nodeType":"YulIdentifier","src":"7919:9:19"},{"kind":"number","nativeSrc":"7930:2:19","nodeType":"YulLiteral","src":"7930:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7915:3:19","nodeType":"YulIdentifier","src":"7915:3:19"},"nativeSrc":"7915:18:19","nodeType":"YulFunctionCall","src":"7915:18:19"},{"arguments":[{"name":"value1","nativeSrc":"7939:6:19","nodeType":"YulIdentifier","src":"7939:6:19"},{"name":"_1","nativeSrc":"7947:2:19","nodeType":"YulIdentifier","src":"7947:2:19"}],"functionName":{"name":"and","nativeSrc":"7935:3:19","nodeType":"YulIdentifier","src":"7935:3:19"},"nativeSrc":"7935:15:19","nodeType":"YulFunctionCall","src":"7935:15:19"}],"functionName":{"name":"mstore","nativeSrc":"7908:6:19","nodeType":"YulIdentifier","src":"7908:6:19"},"nativeSrc":"7908:43:19","nodeType":"YulFunctionCall","src":"7908:43:19"},"nativeSrc":"7908:43:19","nodeType":"YulExpressionStatement","src":"7908:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7971:9:19","nodeType":"YulIdentifier","src":"7971:9:19"},{"kind":"number","nativeSrc":"7982:2:19","nodeType":"YulLiteral","src":"7982:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7967:3:19","nodeType":"YulIdentifier","src":"7967:3:19"},"nativeSrc":"7967:18:19","nodeType":"YulFunctionCall","src":"7967:18:19"},{"name":"value2","nativeSrc":"7987:6:19","nodeType":"YulIdentifier","src":"7987:6:19"}],"functionName":{"name":"mstore","nativeSrc":"7960:6:19","nodeType":"YulIdentifier","src":"7960:6:19"},"nativeSrc":"7960:34:19","nodeType":"YulFunctionCall","src":"7960:34:19"},"nativeSrc":"7960:34:19","nodeType":"YulExpressionStatement","src":"7960:34:19"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"7602:398:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7712:9:19","nodeType":"YulTypedName","src":"7712:9:19","type":""},{"name":"value2","nativeSrc":"7723:6:19","nodeType":"YulTypedName","src":"7723:6:19","type":""},{"name":"value1","nativeSrc":"7731:6:19","nodeType":"YulTypedName","src":"7731:6:19","type":""},{"name":"value0","nativeSrc":"7739:6:19","nodeType":"YulTypedName","src":"7739:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7750:4:19","nodeType":"YulTypedName","src":"7750:4:19","type":""}],"src":"7602:398:19"},{"body":{"nativeSrc":"8104:101:19","nodeType":"YulBlock","src":"8104:101:19","statements":[{"nativeSrc":"8114:26:19","nodeType":"YulAssignment","src":"8114:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"8126:9:19","nodeType":"YulIdentifier","src":"8126:9:19"},{"kind":"number","nativeSrc":"8137:2:19","nodeType":"YulLiteral","src":"8137:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8122:3:19","nodeType":"YulIdentifier","src":"8122:3:19"},"nativeSrc":"8122:18:19","nodeType":"YulFunctionCall","src":"8122:18:19"},"variableNames":[{"name":"tail","nativeSrc":"8114:4:19","nodeType":"YulIdentifier","src":"8114:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8156:9:19","nodeType":"YulIdentifier","src":"8156:9:19"},{"arguments":[{"name":"value0","nativeSrc":"8171:6:19","nodeType":"YulIdentifier","src":"8171:6:19"},{"kind":"number","nativeSrc":"8179:18:19","nodeType":"YulLiteral","src":"8179:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8167:3:19","nodeType":"YulIdentifier","src":"8167:3:19"},"nativeSrc":"8167:31:19","nodeType":"YulFunctionCall","src":"8167:31:19"}],"functionName":{"name":"mstore","nativeSrc":"8149:6:19","nodeType":"YulIdentifier","src":"8149:6:19"},"nativeSrc":"8149:50:19","nodeType":"YulFunctionCall","src":"8149:50:19"},"nativeSrc":"8149:50:19","nodeType":"YulExpressionStatement","src":"8149:50:19"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"8005:200:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8073:9:19","nodeType":"YulTypedName","src":"8073:9:19","type":""},{"name":"value0","nativeSrc":"8084:6:19","nodeType":"YulTypedName","src":"8084:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8095:4:19","nodeType":"YulTypedName","src":"8095:4:19","type":""}],"src":"8005:200:19"},{"body":{"nativeSrc":"8318:101:19","nodeType":"YulBlock","src":"8318:101:19","statements":[{"nativeSrc":"8328:26:19","nodeType":"YulAssignment","src":"8328:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"8340:9:19","nodeType":"YulIdentifier","src":"8340:9:19"},{"kind":"number","nativeSrc":"8351:2:19","nodeType":"YulLiteral","src":"8351:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8336:3:19","nodeType":"YulIdentifier","src":"8336:3:19"},"nativeSrc":"8336:18:19","nodeType":"YulFunctionCall","src":"8336:18:19"},"variableNames":[{"name":"tail","nativeSrc":"8328:4:19","nodeType":"YulIdentifier","src":"8328:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8370:9:19","nodeType":"YulIdentifier","src":"8370:9:19"},{"arguments":[{"name":"value0","nativeSrc":"8385:6:19","nodeType":"YulIdentifier","src":"8385:6:19"},{"kind":"number","nativeSrc":"8393:18:19","nodeType":"YulLiteral","src":"8393:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8381:3:19","nodeType":"YulIdentifier","src":"8381:3:19"},"nativeSrc":"8381:31:19","nodeType":"YulFunctionCall","src":"8381:31:19"}],"functionName":{"name":"mstore","nativeSrc":"8363:6:19","nodeType":"YulIdentifier","src":"8363:6:19"},"nativeSrc":"8363:50:19","nodeType":"YulFunctionCall","src":"8363:50:19"},"nativeSrc":"8363:50:19","nodeType":"YulExpressionStatement","src":"8363:50:19"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"8210:209:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8287:9:19","nodeType":"YulTypedName","src":"8287:9:19","type":""},{"name":"value0","nativeSrc":"8298:6:19","nodeType":"YulTypedName","src":"8298:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8309:4:19","nodeType":"YulTypedName","src":"8309:4:19","type":""}],"src":"8210:209:19"},{"body":{"nativeSrc":"8598:170:19","nodeType":"YulBlock","src":"8598:170:19","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8615:9:19","nodeType":"YulIdentifier","src":"8615:9:19"},{"kind":"number","nativeSrc":"8626:2:19","nodeType":"YulLiteral","src":"8626:2:19","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"8608:6:19","nodeType":"YulIdentifier","src":"8608:6:19"},"nativeSrc":"8608:21:19","nodeType":"YulFunctionCall","src":"8608:21:19"},"nativeSrc":"8608:21:19","nodeType":"YulExpressionStatement","src":"8608:21:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8649:9:19","nodeType":"YulIdentifier","src":"8649:9:19"},{"kind":"number","nativeSrc":"8660:2:19","nodeType":"YulLiteral","src":"8660:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8645:3:19","nodeType":"YulIdentifier","src":"8645:3:19"},"nativeSrc":"8645:18:19","nodeType":"YulFunctionCall","src":"8645:18:19"},{"kind":"number","nativeSrc":"8665:2:19","nodeType":"YulLiteral","src":"8665:2:19","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"8638:6:19","nodeType":"YulIdentifier","src":"8638:6:19"},"nativeSrc":"8638:30:19","nodeType":"YulFunctionCall","src":"8638:30:19"},"nativeSrc":"8638:30:19","nodeType":"YulExpressionStatement","src":"8638:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8688:9:19","nodeType":"YulIdentifier","src":"8688:9:19"},{"kind":"number","nativeSrc":"8699:2:19","nodeType":"YulLiteral","src":"8699:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8684:3:19","nodeType":"YulIdentifier","src":"8684:3:19"},"nativeSrc":"8684:18:19","nodeType":"YulFunctionCall","src":"8684:18:19"},{"hexValue":"5374617469634f7261636c65206e6f7420736574","kind":"string","nativeSrc":"8704:22:19","nodeType":"YulLiteral","src":"8704:22:19","type":"","value":"StaticOracle not set"}],"functionName":{"name":"mstore","nativeSrc":"8677:6:19","nodeType":"YulIdentifier","src":"8677:6:19"},"nativeSrc":"8677:50:19","nodeType":"YulFunctionCall","src":"8677:50:19"},"nativeSrc":"8677:50:19","nodeType":"YulExpressionStatement","src":"8677:50:19"},{"nativeSrc":"8736:26:19","nodeType":"YulAssignment","src":"8736:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"8748:9:19","nodeType":"YulIdentifier","src":"8748:9:19"},{"kind":"number","nativeSrc":"8759:2:19","nodeType":"YulLiteral","src":"8759:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8744:3:19","nodeType":"YulIdentifier","src":"8744:3:19"},"nativeSrc":"8744:18:19","nodeType":"YulFunctionCall","src":"8744:18:19"},"variableNames":[{"name":"tail","nativeSrc":"8736:4:19","nodeType":"YulIdentifier","src":"8736:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0bf731e51c3bdddc9de437c8fbd8fb76f6af6aa4bb4b0f5a60fe643d06ce9ff8__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8424:344:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8575:9:19","nodeType":"YulTypedName","src":"8575:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8589:4:19","nodeType":"YulTypedName","src":"8589:4:19","type":""}],"src":"8424:344:19"},{"body":{"nativeSrc":"8968:343:19","nodeType":"YulBlock","src":"8968:343:19","statements":[{"nativeSrc":"8978:27:19","nodeType":"YulAssignment","src":"8978:27:19","value":{"arguments":[{"name":"headStart","nativeSrc":"8990:9:19","nodeType":"YulIdentifier","src":"8990:9:19"},{"kind":"number","nativeSrc":"9001:3:19","nodeType":"YulLiteral","src":"9001:3:19","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"8986:3:19","nodeType":"YulIdentifier","src":"8986:3:19"},"nativeSrc":"8986:19:19","nodeType":"YulFunctionCall","src":"8986:19:19"},"variableNames":[{"name":"tail","nativeSrc":"8978:4:19","nodeType":"YulIdentifier","src":"8978:4:19"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9021:9:19","nodeType":"YulIdentifier","src":"9021:9:19"},{"arguments":[{"name":"value0","nativeSrc":"9036:6:19","nodeType":"YulIdentifier","src":"9036:6:19"},{"kind":"number","nativeSrc":"9044:34:19","nodeType":"YulLiteral","src":"9044:34:19","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"9032:3:19","nodeType":"YulIdentifier","src":"9032:3:19"},"nativeSrc":"9032:47:19","nodeType":"YulFunctionCall","src":"9032:47:19"}],"functionName":{"name":"mstore","nativeSrc":"9014:6:19","nodeType":"YulIdentifier","src":"9014:6:19"},"nativeSrc":"9014:66:19","nodeType":"YulFunctionCall","src":"9014:66:19"},"nativeSrc":"9014:66:19","nodeType":"YulExpressionStatement","src":"9014:66:19"},{"nativeSrc":"9089:52:19","nodeType":"YulVariableDeclaration","src":"9089:52:19","value":{"kind":"number","nativeSrc":"9099:42:19","nodeType":"YulLiteral","src":"9099:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"9093:2:19","nodeType":"YulTypedName","src":"9093:2:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9161:9:19","nodeType":"YulIdentifier","src":"9161:9:19"},{"kind":"number","nativeSrc":"9172:2:19","nodeType":"YulLiteral","src":"9172:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9157:3:19","nodeType":"YulIdentifier","src":"9157:3:19"},"nativeSrc":"9157:18:19","nodeType":"YulFunctionCall","src":"9157:18:19"},{"arguments":[{"name":"value1","nativeSrc":"9181:6:19","nodeType":"YulIdentifier","src":"9181:6:19"},{"name":"_1","nativeSrc":"9189:2:19","nodeType":"YulIdentifier","src":"9189:2:19"}],"functionName":{"name":"and","nativeSrc":"9177:3:19","nodeType":"YulIdentifier","src":"9177:3:19"},"nativeSrc":"9177:15:19","nodeType":"YulFunctionCall","src":"9177:15:19"}],"functionName":{"name":"mstore","nativeSrc":"9150:6:19","nodeType":"YulIdentifier","src":"9150:6:19"},"nativeSrc":"9150:43:19","nodeType":"YulFunctionCall","src":"9150:43:19"},"nativeSrc":"9150:43:19","nodeType":"YulExpressionStatement","src":"9150:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9213:9:19","nodeType":"YulIdentifier","src":"9213:9:19"},{"kind":"number","nativeSrc":"9224:2:19","nodeType":"YulLiteral","src":"9224:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9209:3:19","nodeType":"YulIdentifier","src":"9209:3:19"},"nativeSrc":"9209:18:19","nodeType":"YulFunctionCall","src":"9209:18:19"},{"arguments":[{"name":"value2","nativeSrc":"9233:6:19","nodeType":"YulIdentifier","src":"9233:6:19"},{"name":"_1","nativeSrc":"9241:2:19","nodeType":"YulIdentifier","src":"9241:2:19"}],"functionName":{"name":"and","nativeSrc":"9229:3:19","nodeType":"YulIdentifier","src":"9229:3:19"},"nativeSrc":"9229:15:19","nodeType":"YulFunctionCall","src":"9229:15:19"}],"functionName":{"name":"mstore","nativeSrc":"9202:6:19","nodeType":"YulIdentifier","src":"9202:6:19"},"nativeSrc":"9202:43:19","nodeType":"YulFunctionCall","src":"9202:43:19"},"nativeSrc":"9202:43:19","nodeType":"YulExpressionStatement","src":"9202:43:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9265:9:19","nodeType":"YulIdentifier","src":"9265:9:19"},{"kind":"number","nativeSrc":"9276:2:19","nodeType":"YulLiteral","src":"9276:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9261:3:19","nodeType":"YulIdentifier","src":"9261:3:19"},"nativeSrc":"9261:18:19","nodeType":"YulFunctionCall","src":"9261:18:19"},{"arguments":[{"name":"value3","nativeSrc":"9285:6:19","nodeType":"YulIdentifier","src":"9285:6:19"},{"kind":"number","nativeSrc":"9293:10:19","nodeType":"YulLiteral","src":"9293:10:19","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"9281:3:19","nodeType":"YulIdentifier","src":"9281:3:19"},"nativeSrc":"9281:23:19","nodeType":"YulFunctionCall","src":"9281:23:19"}],"functionName":{"name":"mstore","nativeSrc":"9254:6:19","nodeType":"YulIdentifier","src":"9254:6:19"},"nativeSrc":"9254:51:19","nodeType":"YulFunctionCall","src":"9254:51:19"},"nativeSrc":"9254:51:19","nodeType":"YulExpressionStatement","src":"9254:51:19"}]},"name":"abi_encode_tuple_t_uint128_t_address_t_address_t_rational_3600_by_1__to_t_uint128_t_address_t_address_t_uint32__fromStack_reversed","nativeSrc":"8773:538:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8913:9:19","nodeType":"YulTypedName","src":"8913:9:19","type":""},{"name":"value3","nativeSrc":"8924:6:19","nodeType":"YulTypedName","src":"8924:6:19","type":""},{"name":"value2","nativeSrc":"8932:6:19","nodeType":"YulTypedName","src":"8932:6:19","type":""},{"name":"value1","nativeSrc":"8940:6:19","nodeType":"YulTypedName","src":"8940:6:19","type":""},{"name":"value0","nativeSrc":"8948:6:19","nodeType":"YulTypedName","src":"8948:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8959:4:19","nodeType":"YulTypedName","src":"8959:4:19","type":""}],"src":"8773:538:19"},{"body":{"nativeSrc":"9439:949:19","nodeType":"YulBlock","src":"9439:949:19","statements":[{"body":{"nativeSrc":"9485:16:19","nodeType":"YulBlock","src":"9485:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9494:1:19","nodeType":"YulLiteral","src":"9494:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"9497:1:19","nodeType":"YulLiteral","src":"9497:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9487:6:19","nodeType":"YulIdentifier","src":"9487:6:19"},"nativeSrc":"9487:12:19","nodeType":"YulFunctionCall","src":"9487:12:19"},"nativeSrc":"9487:12:19","nodeType":"YulExpressionStatement","src":"9487:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9460:7:19","nodeType":"YulIdentifier","src":"9460:7:19"},{"name":"headStart","nativeSrc":"9469:9:19","nodeType":"YulIdentifier","src":"9469:9:19"}],"functionName":{"name":"sub","nativeSrc":"9456:3:19","nodeType":"YulIdentifier","src":"9456:3:19"},"nativeSrc":"9456:23:19","nodeType":"YulFunctionCall","src":"9456:23:19"},{"kind":"number","nativeSrc":"9481:2:19","nodeType":"YulLiteral","src":"9481:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"9452:3:19","nodeType":"YulIdentifier","src":"9452:3:19"},"nativeSrc":"9452:32:19","nodeType":"YulFunctionCall","src":"9452:32:19"},"nativeSrc":"9449:52:19","nodeType":"YulIf","src":"9449:52:19"},{"nativeSrc":"9510:26:19","nodeType":"YulAssignment","src":"9510:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"9526:9:19","nodeType":"YulIdentifier","src":"9526:9:19"}],"functionName":{"name":"mload","nativeSrc":"9520:5:19","nodeType":"YulIdentifier","src":"9520:5:19"},"nativeSrc":"9520:16:19","nodeType":"YulFunctionCall","src":"9520:16:19"},"variableNames":[{"name":"value0","nativeSrc":"9510:6:19","nodeType":"YulIdentifier","src":"9510:6:19"}]},{"nativeSrc":"9545:12:19","nodeType":"YulVariableDeclaration","src":"9545:12:19","value":{"kind":"number","nativeSrc":"9555:2:19","nodeType":"YulLiteral","src":"9555:2:19","type":"","value":"32"},"variables":[{"name":"_1","nativeSrc":"9549:2:19","nodeType":"YulTypedName","src":"9549:2:19","type":""}]},{"nativeSrc":"9566:39:19","nodeType":"YulVariableDeclaration","src":"9566:39:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9590:9:19","nodeType":"YulIdentifier","src":"9590:9:19"},{"name":"_1","nativeSrc":"9601:2:19","nodeType":"YulIdentifier","src":"9601:2:19"}],"functionName":{"name":"add","nativeSrc":"9586:3:19","nodeType":"YulIdentifier","src":"9586:3:19"},"nativeSrc":"9586:18:19","nodeType":"YulFunctionCall","src":"9586:18:19"}],"functionName":{"name":"mload","nativeSrc":"9580:5:19","nodeType":"YulIdentifier","src":"9580:5:19"},"nativeSrc":"9580:25:19","nodeType":"YulFunctionCall","src":"9580:25:19"},"variables":[{"name":"offset","nativeSrc":"9570:6:19","nodeType":"YulTypedName","src":"9570:6:19","type":""}]},{"nativeSrc":"9614:28:19","nodeType":"YulVariableDeclaration","src":"9614:28:19","value":{"kind":"number","nativeSrc":"9624:18:19","nodeType":"YulLiteral","src":"9624:18:19","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nativeSrc":"9618:2:19","nodeType":"YulTypedName","src":"9618:2:19","type":""}]},{"body":{"nativeSrc":"9669:16:19","nodeType":"YulBlock","src":"9669:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9678:1:19","nodeType":"YulLiteral","src":"9678:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"9681:1:19","nodeType":"YulLiteral","src":"9681:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9671:6:19","nodeType":"YulIdentifier","src":"9671:6:19"},"nativeSrc":"9671:12:19","nodeType":"YulFunctionCall","src":"9671:12:19"},"nativeSrc":"9671:12:19","nodeType":"YulExpressionStatement","src":"9671:12:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9657:6:19","nodeType":"YulIdentifier","src":"9657:6:19"},{"name":"_2","nativeSrc":"9665:2:19","nodeType":"YulIdentifier","src":"9665:2:19"}],"functionName":{"name":"gt","nativeSrc":"9654:2:19","nodeType":"YulIdentifier","src":"9654:2:19"},"nativeSrc":"9654:14:19","nodeType":"YulFunctionCall","src":"9654:14:19"},"nativeSrc":"9651:34:19","nodeType":"YulIf","src":"9651:34:19"},{"nativeSrc":"9694:32:19","nodeType":"YulVariableDeclaration","src":"9694:32:19","value":{"arguments":[{"name":"headStart","nativeSrc":"9708:9:19","nodeType":"YulIdentifier","src":"9708:9:19"},{"name":"offset","nativeSrc":"9719:6:19","nodeType":"YulIdentifier","src":"9719:6:19"}],"functionName":{"name":"add","nativeSrc":"9704:3:19","nodeType":"YulIdentifier","src":"9704:3:19"},"nativeSrc":"9704:22:19","nodeType":"YulFunctionCall","src":"9704:22:19"},"variables":[{"name":"_3","nativeSrc":"9698:2:19","nodeType":"YulTypedName","src":"9698:2:19","type":""}]},{"body":{"nativeSrc":"9774:16:19","nodeType":"YulBlock","src":"9774:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9783:1:19","nodeType":"YulLiteral","src":"9783:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"9786:1:19","nodeType":"YulLiteral","src":"9786:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9776:6:19","nodeType":"YulIdentifier","src":"9776:6:19"},"nativeSrc":"9776:12:19","nodeType":"YulFunctionCall","src":"9776:12:19"},"nativeSrc":"9776:12:19","nodeType":"YulExpressionStatement","src":"9776:12:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"9753:2:19","nodeType":"YulIdentifier","src":"9753:2:19"},{"kind":"number","nativeSrc":"9757:4:19","nodeType":"YulLiteral","src":"9757:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"9749:3:19","nodeType":"YulIdentifier","src":"9749:3:19"},"nativeSrc":"9749:13:19","nodeType":"YulFunctionCall","src":"9749:13:19"},{"name":"dataEnd","nativeSrc":"9764:7:19","nodeType":"YulIdentifier","src":"9764:7:19"}],"functionName":{"name":"slt","nativeSrc":"9745:3:19","nodeType":"YulIdentifier","src":"9745:3:19"},"nativeSrc":"9745:27:19","nodeType":"YulFunctionCall","src":"9745:27:19"}],"functionName":{"name":"iszero","nativeSrc":"9738:6:19","nodeType":"YulIdentifier","src":"9738:6:19"},"nativeSrc":"9738:35:19","nodeType":"YulFunctionCall","src":"9738:35:19"},"nativeSrc":"9735:55:19","nodeType":"YulIf","src":"9735:55:19"},{"nativeSrc":"9799:19:19","nodeType":"YulVariableDeclaration","src":"9799:19:19","value":{"arguments":[{"name":"_3","nativeSrc":"9815:2:19","nodeType":"YulIdentifier","src":"9815:2:19"}],"functionName":{"name":"mload","nativeSrc":"9809:5:19","nodeType":"YulIdentifier","src":"9809:5:19"},"nativeSrc":"9809:9:19","nodeType":"YulFunctionCall","src":"9809:9:19"},"variables":[{"name":"_4","nativeSrc":"9803:2:19","nodeType":"YulTypedName","src":"9803:2:19","type":""}]},{"body":{"nativeSrc":"9841:22:19","nodeType":"YulBlock","src":"9841:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9843:16:19","nodeType":"YulIdentifier","src":"9843:16:19"},"nativeSrc":"9843:18:19","nodeType":"YulFunctionCall","src":"9843:18:19"},"nativeSrc":"9843:18:19","nodeType":"YulExpressionStatement","src":"9843:18:19"}]},"condition":{"arguments":[{"name":"_4","nativeSrc":"9833:2:19","nodeType":"YulIdentifier","src":"9833:2:19"},{"name":"_2","nativeSrc":"9837:2:19","nodeType":"YulIdentifier","src":"9837:2:19"}],"functionName":{"name":"gt","nativeSrc":"9830:2:19","nodeType":"YulIdentifier","src":"9830:2:19"},"nativeSrc":"9830:10:19","nodeType":"YulFunctionCall","src":"9830:10:19"},"nativeSrc":"9827:36:19","nodeType":"YulIf","src":"9827:36:19"},{"nativeSrc":"9872:20:19","nodeType":"YulVariableDeclaration","src":"9872:20:19","value":{"arguments":[{"kind":"number","nativeSrc":"9886:1:19","nodeType":"YulLiteral","src":"9886:1:19","type":"","value":"5"},{"name":"_4","nativeSrc":"9889:2:19","nodeType":"YulIdentifier","src":"9889:2:19"}],"functionName":{"name":"shl","nativeSrc":"9882:3:19","nodeType":"YulIdentifier","src":"9882:3:19"},"nativeSrc":"9882:10:19","nodeType":"YulFunctionCall","src":"9882:10:19"},"variables":[{"name":"_5","nativeSrc":"9876:2:19","nodeType":"YulTypedName","src":"9876:2:19","type":""}]},{"nativeSrc":"9901:39:19","nodeType":"YulVariableDeclaration","src":"9901:39:19","value":{"arguments":[{"arguments":[{"name":"_5","nativeSrc":"9932:2:19","nodeType":"YulIdentifier","src":"9932:2:19"},{"name":"_1","nativeSrc":"9936:2:19","nodeType":"YulIdentifier","src":"9936:2:19"}],"functionName":{"name":"add","nativeSrc":"9928:3:19","nodeType":"YulIdentifier","src":"9928:3:19"},"nativeSrc":"9928:11:19","nodeType":"YulFunctionCall","src":"9928:11:19"}],"functionName":{"name":"allocate_memory","nativeSrc":"9912:15:19","nodeType":"YulIdentifier","src":"9912:15:19"},"nativeSrc":"9912:28:19","nodeType":"YulFunctionCall","src":"9912:28:19"},"variables":[{"name":"dst","nativeSrc":"9905:3:19","nodeType":"YulTypedName","src":"9905:3:19","type":""}]},{"nativeSrc":"9949:16:19","nodeType":"YulVariableDeclaration","src":"9949:16:19","value":{"name":"dst","nativeSrc":"9962:3:19","nodeType":"YulIdentifier","src":"9962:3:19"},"variables":[{"name":"dst_1","nativeSrc":"9953:5:19","nodeType":"YulTypedName","src":"9953:5:19","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"9981:3:19","nodeType":"YulIdentifier","src":"9981:3:19"},{"name":"_4","nativeSrc":"9986:2:19","nodeType":"YulIdentifier","src":"9986:2:19"}],"functionName":{"name":"mstore","nativeSrc":"9974:6:19","nodeType":"YulIdentifier","src":"9974:6:19"},"nativeSrc":"9974:15:19","nodeType":"YulFunctionCall","src":"9974:15:19"},"nativeSrc":"9974:15:19","nodeType":"YulExpressionStatement","src":"9974:15:19"},{"nativeSrc":"9998:19:19","nodeType":"YulAssignment","src":"9998:19:19","value":{"arguments":[{"name":"dst","nativeSrc":"10009:3:19","nodeType":"YulIdentifier","src":"10009:3:19"},{"name":"_1","nativeSrc":"10014:2:19","nodeType":"YulIdentifier","src":"10014:2:19"}],"functionName":{"name":"add","nativeSrc":"10005:3:19","nodeType":"YulIdentifier","src":"10005:3:19"},"nativeSrc":"10005:12:19","nodeType":"YulFunctionCall","src":"10005:12:19"},"variableNames":[{"name":"dst","nativeSrc":"9998:3:19","nodeType":"YulIdentifier","src":"9998:3:19"}]},{"nativeSrc":"10026:34:19","nodeType":"YulVariableDeclaration","src":"10026:34:19","value":{"arguments":[{"arguments":[{"name":"_3","nativeSrc":"10048:2:19","nodeType":"YulIdentifier","src":"10048:2:19"},{"name":"_5","nativeSrc":"10052:2:19","nodeType":"YulIdentifier","src":"10052:2:19"}],"functionName":{"name":"add","nativeSrc":"10044:3:19","nodeType":"YulIdentifier","src":"10044:3:19"},"nativeSrc":"10044:11:19","nodeType":"YulFunctionCall","src":"10044:11:19"},{"name":"_1","nativeSrc":"10057:2:19","nodeType":"YulIdentifier","src":"10057:2:19"}],"functionName":{"name":"add","nativeSrc":"10040:3:19","nodeType":"YulIdentifier","src":"10040:3:19"},"nativeSrc":"10040:20:19","nodeType":"YulFunctionCall","src":"10040:20:19"},"variables":[{"name":"srcEnd","nativeSrc":"10030:6:19","nodeType":"YulTypedName","src":"10030:6:19","type":""}]},{"body":{"nativeSrc":"10092:16:19","nodeType":"YulBlock","src":"10092:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10101:1:19","nodeType":"YulLiteral","src":"10101:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"10104:1:19","nodeType":"YulLiteral","src":"10104:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10094:6:19","nodeType":"YulIdentifier","src":"10094:6:19"},"nativeSrc":"10094:12:19","nodeType":"YulFunctionCall","src":"10094:12:19"},"nativeSrc":"10094:12:19","nodeType":"YulExpressionStatement","src":"10094:12:19"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"10075:6:19","nodeType":"YulIdentifier","src":"10075:6:19"},{"name":"dataEnd","nativeSrc":"10083:7:19","nodeType":"YulIdentifier","src":"10083:7:19"}],"functionName":{"name":"gt","nativeSrc":"10072:2:19","nodeType":"YulIdentifier","src":"10072:2:19"},"nativeSrc":"10072:19:19","nodeType":"YulFunctionCall","src":"10072:19:19"},"nativeSrc":"10069:39:19","nodeType":"YulIf","src":"10069:39:19"},{"nativeSrc":"10117:22:19","nodeType":"YulVariableDeclaration","src":"10117:22:19","value":{"arguments":[{"name":"_3","nativeSrc":"10132:2:19","nodeType":"YulIdentifier","src":"10132:2:19"},{"name":"_1","nativeSrc":"10136:2:19","nodeType":"YulIdentifier","src":"10136:2:19"}],"functionName":{"name":"add","nativeSrc":"10128:3:19","nodeType":"YulIdentifier","src":"10128:3:19"},"nativeSrc":"10128:11:19","nodeType":"YulFunctionCall","src":"10128:11:19"},"variables":[{"name":"src","nativeSrc":"10121:3:19","nodeType":"YulTypedName","src":"10121:3:19","type":""}]},{"body":{"nativeSrc":"10204:154:19","nodeType":"YulBlock","src":"10204:154:19","statements":[{"nativeSrc":"10218:23:19","nodeType":"YulVariableDeclaration","src":"10218:23:19","value":{"arguments":[{"name":"src","nativeSrc":"10237:3:19","nodeType":"YulIdentifier","src":"10237:3:19"}],"functionName":{"name":"mload","nativeSrc":"10231:5:19","nodeType":"YulIdentifier","src":"10231:5:19"},"nativeSrc":"10231:10:19","nodeType":"YulFunctionCall","src":"10231:10:19"},"variables":[{"name":"value","nativeSrc":"10222:5:19","nodeType":"YulTypedName","src":"10222:5:19","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10279:5:19","nodeType":"YulIdentifier","src":"10279:5:19"}],"functionName":{"name":"validator_revert_address","nativeSrc":"10254:24:19","nodeType":"YulIdentifier","src":"10254:24:19"},"nativeSrc":"10254:31:19","nodeType":"YulFunctionCall","src":"10254:31:19"},"nativeSrc":"10254:31:19","nodeType":"YulExpressionStatement","src":"10254:31:19"},{"expression":{"arguments":[{"name":"dst","nativeSrc":"10305:3:19","nodeType":"YulIdentifier","src":"10305:3:19"},{"name":"value","nativeSrc":"10310:5:19","nodeType":"YulIdentifier","src":"10310:5:19"}],"functionName":{"name":"mstore","nativeSrc":"10298:6:19","nodeType":"YulIdentifier","src":"10298:6:19"},"nativeSrc":"10298:18:19","nodeType":"YulFunctionCall","src":"10298:18:19"},"nativeSrc":"10298:18:19","nodeType":"YulExpressionStatement","src":"10298:18:19"},{"nativeSrc":"10329:19:19","nodeType":"YulAssignment","src":"10329:19:19","value":{"arguments":[{"name":"dst","nativeSrc":"10340:3:19","nodeType":"YulIdentifier","src":"10340:3:19"},{"name":"_1","nativeSrc":"10345:2:19","nodeType":"YulIdentifier","src":"10345:2:19"}],"functionName":{"name":"add","nativeSrc":"10336:3:19","nodeType":"YulIdentifier","src":"10336:3:19"},"nativeSrc":"10336:12:19","nodeType":"YulFunctionCall","src":"10336:12:19"},"variableNames":[{"name":"dst","nativeSrc":"10329:3:19","nodeType":"YulIdentifier","src":"10329:3:19"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"10159:3:19","nodeType":"YulIdentifier","src":"10159:3:19"},{"name":"srcEnd","nativeSrc":"10164:6:19","nodeType":"YulIdentifier","src":"10164:6:19"}],"functionName":{"name":"lt","nativeSrc":"10156:2:19","nodeType":"YulIdentifier","src":"10156:2:19"},"nativeSrc":"10156:15:19","nodeType":"YulFunctionCall","src":"10156:15:19"},"nativeSrc":"10148:210:19","nodeType":"YulForLoop","post":{"nativeSrc":"10172:23:19","nodeType":"YulBlock","src":"10172:23:19","statements":[{"nativeSrc":"10174:19:19","nodeType":"YulAssignment","src":"10174:19:19","value":{"arguments":[{"name":"src","nativeSrc":"10185:3:19","nodeType":"YulIdentifier","src":"10185:3:19"},{"name":"_1","nativeSrc":"10190:2:19","nodeType":"YulIdentifier","src":"10190:2:19"}],"functionName":{"name":"add","nativeSrc":"10181:3:19","nodeType":"YulIdentifier","src":"10181:3:19"},"nativeSrc":"10181:12:19","nodeType":"YulFunctionCall","src":"10181:12:19"},"variableNames":[{"name":"src","nativeSrc":"10174:3:19","nodeType":"YulIdentifier","src":"10174:3:19"}]}]},"pre":{"nativeSrc":"10152:3:19","nodeType":"YulBlock","src":"10152:3:19","statements":[]},"src":"10148:210:19"},{"nativeSrc":"10367:15:19","nodeType":"YulAssignment","src":"10367:15:19","value":{"name":"dst_1","nativeSrc":"10377:5:19","nodeType":"YulIdentifier","src":"10377:5:19"},"variableNames":[{"name":"value1","nativeSrc":"10367:6:19","nodeType":"YulIdentifier","src":"10367:6:19"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory","nativeSrc":"9316:1072:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9397:9:19","nodeType":"YulTypedName","src":"9397:9:19","type":""},{"name":"dataEnd","nativeSrc":"9408:7:19","nodeType":"YulTypedName","src":"9408:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9420:6:19","nodeType":"YulTypedName","src":"9420:6:19","type":""},{"name":"value1","nativeSrc":"9428:6:19","nodeType":"YulTypedName","src":"9428:6:19","type":""}],"src":"9316:1072:19"},{"body":{"nativeSrc":"10474:103:19","nodeType":"YulBlock","src":"10474:103:19","statements":[{"body":{"nativeSrc":"10520:16:19","nodeType":"YulBlock","src":"10520:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10529:1:19","nodeType":"YulLiteral","src":"10529:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"10532:1:19","nodeType":"YulLiteral","src":"10532:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10522:6:19","nodeType":"YulIdentifier","src":"10522:6:19"},"nativeSrc":"10522:12:19","nodeType":"YulFunctionCall","src":"10522:12:19"},"nativeSrc":"10522:12:19","nodeType":"YulExpressionStatement","src":"10522:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10495:7:19","nodeType":"YulIdentifier","src":"10495:7:19"},{"name":"headStart","nativeSrc":"10504:9:19","nodeType":"YulIdentifier","src":"10504:9:19"}],"functionName":{"name":"sub","nativeSrc":"10491:3:19","nodeType":"YulIdentifier","src":"10491:3:19"},"nativeSrc":"10491:23:19","nodeType":"YulFunctionCall","src":"10491:23:19"},{"kind":"number","nativeSrc":"10516:2:19","nodeType":"YulLiteral","src":"10516:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10487:3:19","nodeType":"YulIdentifier","src":"10487:3:19"},"nativeSrc":"10487:32:19","nodeType":"YulFunctionCall","src":"10487:32:19"},"nativeSrc":"10484:52:19","nodeType":"YulIf","src":"10484:52:19"},{"nativeSrc":"10545:26:19","nodeType":"YulAssignment","src":"10545:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"10561:9:19","nodeType":"YulIdentifier","src":"10561:9:19"}],"functionName":{"name":"mload","nativeSrc":"10555:5:19","nodeType":"YulIdentifier","src":"10555:5:19"},"nativeSrc":"10555:16:19","nodeType":"YulFunctionCall","src":"10555:16:19"},"variableNames":[{"name":"value0","nativeSrc":"10545:6:19","nodeType":"YulIdentifier","src":"10545:6:19"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"10393:184:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10440:9:19","nodeType":"YulTypedName","src":"10440:9:19","type":""},{"name":"dataEnd","nativeSrc":"10451:7:19","nodeType":"YulTypedName","src":"10451:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10463:6:19","nodeType":"YulTypedName","src":"10463:6:19","type":""}],"src":"10393:184:19"},{"body":{"nativeSrc":"10631:79:19","nodeType":"YulBlock","src":"10631:79:19","statements":[{"nativeSrc":"10641:17:19","nodeType":"YulAssignment","src":"10641:17:19","value":{"arguments":[{"name":"x","nativeSrc":"10653:1:19","nodeType":"YulIdentifier","src":"10653:1:19"},{"name":"y","nativeSrc":"10656:1:19","nodeType":"YulIdentifier","src":"10656:1:19"}],"functionName":{"name":"sub","nativeSrc":"10649:3:19","nodeType":"YulIdentifier","src":"10649:3:19"},"nativeSrc":"10649:9:19","nodeType":"YulFunctionCall","src":"10649:9:19"},"variableNames":[{"name":"diff","nativeSrc":"10641:4:19","nodeType":"YulIdentifier","src":"10641:4:19"}]},{"body":{"nativeSrc":"10682:22:19","nodeType":"YulBlock","src":"10682:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10684:16:19","nodeType":"YulIdentifier","src":"10684:16:19"},"nativeSrc":"10684:18:19","nodeType":"YulFunctionCall","src":"10684:18:19"},"nativeSrc":"10684:18:19","nodeType":"YulExpressionStatement","src":"10684:18:19"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"10673:4:19","nodeType":"YulIdentifier","src":"10673:4:19"},{"name":"x","nativeSrc":"10679:1:19","nodeType":"YulIdentifier","src":"10679:1:19"}],"functionName":{"name":"gt","nativeSrc":"10670:2:19","nodeType":"YulIdentifier","src":"10670:2:19"},"nativeSrc":"10670:11:19","nodeType":"YulFunctionCall","src":"10670:11:19"},"nativeSrc":"10667:37:19","nodeType":"YulIf","src":"10667:37:19"}]},"name":"checked_sub_t_uint256","nativeSrc":"10582:128:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10613:1:19","nodeType":"YulTypedName","src":"10613:1:19","type":""},{"name":"y","nativeSrc":"10616:1:19","nodeType":"YulTypedName","src":"10616:1:19","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"10622:4:19","nodeType":"YulTypedName","src":"10622:4:19","type":""}],"src":"10582:128:19"},{"body":{"nativeSrc":"10852:164:19","nodeType":"YulBlock","src":"10852:164:19","statements":[{"nativeSrc":"10862:27:19","nodeType":"YulVariableDeclaration","src":"10862:27:19","value":{"arguments":[{"name":"value0","nativeSrc":"10882:6:19","nodeType":"YulIdentifier","src":"10882:6:19"}],"functionName":{"name":"mload","nativeSrc":"10876:5:19","nodeType":"YulIdentifier","src":"10876:5:19"},"nativeSrc":"10876:13:19","nodeType":"YulFunctionCall","src":"10876:13:19"},"variables":[{"name":"length","nativeSrc":"10866:6:19","nodeType":"YulTypedName","src":"10866:6:19","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"10904:3:19","nodeType":"YulIdentifier","src":"10904:3:19"},{"arguments":[{"name":"value0","nativeSrc":"10913:6:19","nodeType":"YulIdentifier","src":"10913:6:19"},{"kind":"number","nativeSrc":"10921:4:19","nodeType":"YulLiteral","src":"10921:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10909:3:19","nodeType":"YulIdentifier","src":"10909:3:19"},"nativeSrc":"10909:17:19","nodeType":"YulFunctionCall","src":"10909:17:19"},{"name":"length","nativeSrc":"10928:6:19","nodeType":"YulIdentifier","src":"10928:6:19"}],"functionName":{"name":"mcopy","nativeSrc":"10898:5:19","nodeType":"YulIdentifier","src":"10898:5:19"},"nativeSrc":"10898:37:19","nodeType":"YulFunctionCall","src":"10898:37:19"},"nativeSrc":"10898:37:19","nodeType":"YulExpressionStatement","src":"10898:37:19"},{"nativeSrc":"10944:26:19","nodeType":"YulVariableDeclaration","src":"10944:26:19","value":{"arguments":[{"name":"pos","nativeSrc":"10958:3:19","nodeType":"YulIdentifier","src":"10958:3:19"},{"name":"length","nativeSrc":"10963:6:19","nodeType":"YulIdentifier","src":"10963:6:19"}],"functionName":{"name":"add","nativeSrc":"10954:3:19","nodeType":"YulIdentifier","src":"10954:3:19"},"nativeSrc":"10954:16:19","nodeType":"YulFunctionCall","src":"10954:16:19"},"variables":[{"name":"_1","nativeSrc":"10948:2:19","nodeType":"YulTypedName","src":"10948:2:19","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"10986:2:19","nodeType":"YulIdentifier","src":"10986:2:19"},{"kind":"number","nativeSrc":"10990:1:19","nodeType":"YulLiteral","src":"10990:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"10979:6:19","nodeType":"YulIdentifier","src":"10979:6:19"},"nativeSrc":"10979:13:19","nodeType":"YulFunctionCall","src":"10979:13:19"},"nativeSrc":"10979:13:19","nodeType":"YulExpressionStatement","src":"10979:13:19"},{"nativeSrc":"11001:9:19","nodeType":"YulAssignment","src":"11001:9:19","value":{"name":"_1","nativeSrc":"11008:2:19","nodeType":"YulIdentifier","src":"11008:2:19"},"variableNames":[{"name":"end","nativeSrc":"11001:3:19","nodeType":"YulIdentifier","src":"11001:3:19"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"10715:301:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10828:3:19","nodeType":"YulTypedName","src":"10828:3:19","type":""},{"name":"value0","nativeSrc":"10833:6:19","nodeType":"YulTypedName","src":"10833:6:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10844:3:19","nodeType":"YulTypedName","src":"10844:3:19","type":""}],"src":"10715:301:19"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBaluniV1Registry_$3104__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_uint64(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1831_t_contract$_IERC20_$1831_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_0bf731e51c3bdddc9de437c8fbd8fb76f6af6aa4bb4b0f5a60fe643d06ce9ff8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"StaticOracle not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128_t_address_t_address_t_rational_3600_by_1__to_t_uint128_t_address_t_address_t_uint32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, 0xffffffff))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":4606},{"length":32,"start":4647},{"length":32,"start":5084}]},"linkReferences":{},"object":"6080604052600436106100e4575f3560e01c80638da5cb5b11610087578063c4d66de811610057578063c4d66de81461029a578063ca66d9a8146102b9578063f2fde38b146102d8578063fac0ba74146102f7575f80fd5b80638da5cb5b146101cb5780638f2248bc14610207578063ad3cb1cc14610226578063b27b5e751461027b575f80fd5b806352d1902d116100c257806352d1902d1461014e578063715018a6146101625780637b103999146101765780638c41a354146101ac575f80fd5b80631f0e3cd2146100e8578063248391ff1461011a5780634f1ef28614610139575b5f80fd5b3480156100f3575f80fd5b50610107610102366004611845565b610316565b6040519081526020015b60405180910390f35b348015610125575f80fd5b50610107610134366004611845565b6105d6565b61014c6101473660046118e1565b6106fa565b005b348015610159575f80fd5b50610107610719565b34801561016d575f80fd5b5061014c610747565b348015610181575f80fd5b505f54610194906001600160a01b031681565b6040516001600160a01b039091168152602001610111565b3480156101b7575f80fd5b506101076101c6366004611845565b61075a565b3480156101d6575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610194565b348015610212575f80fd5b5061014c610221366004611983565b610adc565b348015610231575f80fd5b5061026e6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161011191906119c6565b348015610286575f80fd5b50610107610295366004611845565b610c4a565b3480156102a5575f80fd5b5061014c6102b43660046119fb565b610d2c565b3480156102c4575f80fd5b506101076102d3366004611845565b610ee4565b3480156102e3575f80fd5b5061014c6102f23660046119fb565b610fed565b348015610302575f80fd5b50610107610311366004611845565b611048565b5f826001600160a01b0316846001600160a01b0316036103375750806105cf565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316638e1c3a8a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610387573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ab9190611a16565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061040e9190611a31565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561044d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104719190611a31565b6040517f802431fb0000000000000000000000000000000000000000000000000000000081526001600160a01b03898116600483015288811660248301525f6044830181905292935085169063802431fb90606401602060405180830381865afa1580156104e1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105059190611a51565b905061051282600a611bb3565b61051d84600a611bb3565b6105279083611bc1565b6105319190611bd8565b90505f8260ff168460ff16106105875761054b8385611c10565b61055690600a611bb3565b9050670de0b6b3a76400008261056c838a611bd8565b6105769190611bc1565b6105809190611bd8565b95506105c9565b6105918484611c10565b61059c90600a611bb3565b9050670de0b6b3a7640000826105b2838a611bc1565b6105bc9190611bc1565b6105c69190611bd8565b95505b50505050505b9392505050565b6040517ffac0ba740000000000000000000000000000000000000000000000000000000081526001600160a01b03808516600483015283166024820152604481018290525f90309063fac0ba7490606401602060405180830381865afa925050508015610660575060408051601f3d908101601f1916820190925261065d91810190611a51565b60015b6106f3576040517f1f0e3cd20000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152604481018390523090631f0e3cd2906064015b602060405180830381865afa1580156106cf573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f39190611a51565b90506105cf565b6107026111f3565b61070b826112c3565b61071582826112cb565b5050565b5f6107226113d1565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61074f611433565b6107585f6114a7565b565b5f826001600160a01b0316846001600160a01b0316036107f457826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156107b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107d49190611a31565b6107df906012611c10565b6107ea90600a611bb3565b6106f39083611bc1565b5f805f9054906101000a90046001600160a01b03166001600160a01b0316638e1c3a8a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610844573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108689190611a16565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108cb9190611a31565b90505f856001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561090a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061092e9190611a31565b6040517f802431fb0000000000000000000000000000000000000000000000000000000081526001600160a01b03898116600483015288811660248301525f6044830181905292935085169063802431fb90606401602060405180830381865afa15801561099e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109c29190611a51565b90506109cf82600a611bb3565b6109da84600a611bb3565b6109e49083611bc1565b6109ee9190611bd8565b90505f80806109fe856012611c10565b610a0990600a611bb3565b90508460ff168660ff1603610a3c57670de0b6b3a7640000610a2b858b611bc1565b610a359190611bd8565b9750610ac3565b8460ff168660ff161115610a8057610a548587611c10565b610a5f90600a611bb3565b9250610a6b838a611bd8565b9150670de0b6b3a7640000610a2b8584611bc1565b610a8a8686611c10565b610a9590600a611bb3565b9250610aa1838a611bc1565b9150670de0b6b3a7640000610ab68584611bc1565b610ac09190611bd8565b97505b610acd8189611bc1565b9b9a5050505050505050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805482919068010000000000000000900460ff1680610b2a5750805467ffffffffffffffff808416911610155b15610b61576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80547fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001667ffffffffffffffff83161768010000000000000000178155610ba73361152f565b610baf611540565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03861617905580547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16815560405167ffffffffffffffff831681527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a150505050565b6040517fca66d9a80000000000000000000000000000000000000000000000000000000081526001600160a01b03808516600483015283166024820152604481018290525f90309063ca66d9a890606401602060405180830381865afa925050508015610cd4575060408051601f3d908101601f19168201909252610cd191810190611a51565b60015b6106f3576040517f8c41a3540000000000000000000000000000000000000000000000000000000081526001600160a01b03808616600483015284166024820152604481018390523090638c41a354906064016106b4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f81158015610d765750825b90505f8267ffffffffffffffff166001148015610d925750303b155b905081158015610da0575080155b15610dd7576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001660011785558315610e385784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff16680100000000000000001785555b610e413361152f565b610e49611540565b5f80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0388161790558315610edc5784547fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6040517ffac0ba740000000000000000000000000000000000000000000000000000000081526001600160a01b03808516600483015283166024820152604481018290525f908190309063fac0ba7490606401602060405180830381865afa158015610f52573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f769190611a51565b9050610fe481866001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fdc9190611a31565b60ff16611548565b95945050505050565b610ff5611433565b6001600160a01b03811661103c576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f60048201526024015b60405180910390fd5b611045816114a7565b50565b5f8054604080517fa5d2236f000000000000000000000000000000000000000000000000000000008152905183926001600160a01b03169163a5d2236f9160048083019260209291908290030181865afa1580156110a8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110cc9190611a16565b90506001600160a01b03811661113e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5374617469634f7261636c65206e6f74207365740000000000000000000000006044820152606401611033565b6040517f0757bc810000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff841660048201526001600160a01b0386811660248301528581166044830152610e106064830152821690630757bc81906084015f60405180830381865afa1580156111c2573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526111e99190810190611c29565b5095945050505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061128c57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166112807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b15610758576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611045611433565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611325575060408051601f3d908101601f1916820190925261132291810190611a51565b60015b611366576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401611033565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146113c2576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401611033565b6113cc838361156e565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610758576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336114657f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610758576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401611033565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080547fffffffffffffffffffffffff000000000000000000000000000000000000000081166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b6115376115c3565b6110458161162a565b6107586115c3565b5f61155b82670de0b6b3a7640000611ce2565b6115659084611bc1565b90505b92915050565b61157782611632565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156115bb576113cc82826116d9565b610715611742565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610758576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ff56115c3565b806001600160a01b03163b5f03611680576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401611033565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516116f59190611cf5565b5f60405180830381855af49150503d805f811461172d576040519150601f19603f3d011682016040523d82523d5f602084013e611732565b606091505b5091509150610fe485838361177a565b3415610758576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60608261178f5761178a826117ef565b6105cf565b81511580156117a657506001600160a01b0384163b155b156117e8576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401611033565b50806105cf565b8051156117ff5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0381168114611045575f80fd5b5f805f60608486031215611857575f80fd5b833561186281611831565b9250602084013561187281611831565b929592945050506040919091013590565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118d9576118d9611883565b604052919050565b5f80604083850312156118f2575f80fd5b82356118fd81611831565b915060208381013567ffffffffffffffff8082111561191a575f80fd5b818601915086601f83011261192d575f80fd5b81358181111561193f5761193f611883565b61195184601f19601f840116016118b0565b91508082528784828501011115611966575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f8060408385031215611994575f80fd5b823561199f81611831565b9150602083013567ffffffffffffffff811681146119bb575f80fd5b809150509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f60208284031215611a0b575f80fd5b81356105cf81611831565b5f60208284031215611a26575f80fd5b81516105cf81611831565b5f60208284031215611a41575f80fd5b815160ff811681146105cf575f80fd5b5f60208284031215611a61575f80fd5b5051919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b600181815b80851115611aee57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611ad457611ad4611a68565b80851615611ae157918102915b93841c9390800290611a9a565b509250929050565b5f82611b0457506001611568565b81611b1057505f611568565b8160018114611b265760028114611b3057611b4c565b6001915050611568565b60ff841115611b4157611b41611a68565b50506001821b611568565b5060208310610133831016604e8410600b8410161715611b6f575081810a611568565b611b798383611a95565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115611bab57611bab611a68565b029392505050565b5f61156560ff841683611af6565b808202811582820484141761156857611568611a68565b5f82611c0b577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b60ff828116828216039081111561156857611568611a68565b5f8060408385031215611c3a575f80fd5b8251915060208084015167ffffffffffffffff80821115611c59575f80fd5b818601915086601f830112611c6c575f80fd5b815181811115611c7e57611c7e611883565b8060051b9150611c8f8483016118b0565b8181529183018401918481019089841115611ca8575f80fd5b938501935b83851015611cd25784519250611cc283611831565b8282529385019390850190611cad565b8096505050505050509250929050565b8181038181111561156857611568611a68565b5f82518060208501845e5f92019182525091905056fea2646970667358221220b7390934f91cdc7732d3aca742c9d03e33d166d0d3031a3b30d78be9ab56c79b64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xC4D66DE8 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xCA66D9A8 EQ PUSH2 0x2B9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0xFAC0BA74 EQ PUSH2 0x2F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xB27B5E75 EQ PUSH2 0x27B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52D1902D GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8C41A354 EQ PUSH2 0x1AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F0E3CD2 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x248391FF EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH2 0x14C PUSH2 0x147 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x719 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x747 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x181 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x111 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x1C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x212 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1983 JUMP JUMPDEST PUSH2 0xADC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x19C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0xC4A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x2B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0xEE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x14C PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FB JUMP JUMPDEST PUSH2 0xFED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x1048 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x337 JUMPI POP DUP1 PUSH2 0x5CF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E1C3A8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x387 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x44D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x471 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x802431FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP DUP6 AND SWAP1 PUSH4 0x802431FB SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4E1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x505 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0x512 DUP3 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x51D DUP5 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x527 SWAP1 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0xFF AND DUP5 PUSH1 0xFF AND LT PUSH2 0x587 JUMPI PUSH2 0x54B DUP4 DUP6 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x556 SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x56C DUP4 DUP11 PUSH2 0x1BD8 JUMP JUMPDEST PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x580 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP6 POP PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x591 DUP5 DUP5 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x59C SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP3 PUSH2 0x5B2 DUP4 DUP11 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x5BC SWAP2 SWAP1 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP6 POP JUMPDEST POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFAC0BA7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xFAC0BA74 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x660 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x65D SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F0E3CD200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0x1F0E3CD2 SWAP1 PUSH1 0x64 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0x5CF JUMP JUMPDEST PUSH2 0x702 PUSH2 0x11F3 JUMP JUMPDEST PUSH2 0x70B DUP3 PUSH2 0x12C3 JUMP JUMPDEST PUSH2 0x715 DUP3 DUP3 PUSH2 0x12CB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x722 PUSH2 0x13D1 JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x74F PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x758 PUSH0 PUSH2 0x14A7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x7F4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7B0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D4 SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x7DF SWAP1 PUSH1 0x12 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0x7EA SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x6F3 SWAP1 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8E1C3A8A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x844 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x868 SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8CB SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST SWAP1 POP PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x802431FB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH0 PUSH1 0x44 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 SWAP4 POP DUP6 AND SWAP1 PUSH4 0x802431FB SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x99E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C2 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0x9CF DUP3 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x9DA DUP5 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST PUSH2 0x9E4 SWAP1 DUP4 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x9EE SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP1 PUSH2 0x9FE DUP6 PUSH1 0x12 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0xA09 SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0xFF AND DUP7 PUSH1 0xFF AND SUB PUSH2 0xA3C JUMPI PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2B DUP6 DUP12 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP8 POP PUSH2 0xAC3 JUMP JUMPDEST DUP5 PUSH1 0xFF AND DUP7 PUSH1 0xFF AND GT ISZERO PUSH2 0xA80 JUMPI PUSH2 0xA54 DUP6 DUP8 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0xA5F SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP PUSH2 0xA6B DUP4 DUP11 PUSH2 0x1BD8 JUMP JUMPDEST SWAP2 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xA2B DUP6 DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0xA8A DUP7 DUP7 PUSH2 0x1C10 JUMP JUMPDEST PUSH2 0xA95 SWAP1 PUSH1 0xA PUSH2 0x1BB3 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA1 DUP4 DUP11 PUSH2 0x1BC1 JUMP JUMPDEST SWAP2 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0xAB6 DUP6 DUP5 PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0xAC0 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST SWAP8 POP JUMPDEST PUSH2 0xACD DUP2 DUP10 PUSH2 0x1BC1 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xB2A JUMPI POP DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP2 AND LT ISZERO JUMPDEST ISZERO PUSH2 0xB61 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND OR PUSH9 0x10000000000000000 OR DUP2 SSTORE PUSH2 0xBA7 CALLER PUSH2 0x152F JUMP JUMPDEST PUSH2 0xBAF PUSH2 0x1540 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xCA66D9A800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 ADDRESS SWAP1 PUSH4 0xCA66D9A8 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCD4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCD1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C41A35400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS SWAP1 PUSH4 0x8C41A354 SWAP1 PUSH1 0x64 ADD PUSH2 0x6B4 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xD76 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xD92 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xDA0 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xDD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xE38 JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0xE41 CALLER PUSH2 0x152F JUMP JUMPDEST PUSH2 0xE49 PUSH2 0x1540 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xEDC JUMPI DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFAC0BA7400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH0 SWAP1 DUP2 SWAP1 ADDRESS SWAP1 PUSH4 0xFAC0BA74 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1A51 JUMP JUMPDEST SWAP1 POP PUSH2 0xFE4 DUP2 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFB8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0xFF AND PUSH2 0x1548 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFF5 PUSH2 0x1433 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x103C JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x14A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xA5D2236F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xA5D2236F SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10A8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1A16 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x113E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374617469634F7261636C65206E6F7420736574000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x757BC8100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH2 0xE10 PUSH1 0x64 DUP4 ADD MSTORE DUP3 AND SWAP1 PUSH4 0x757BC81 SWAP1 PUSH1 0x84 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x11E9 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1C29 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x128C JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1280 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1045 PUSH2 0x1433 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1325 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1322 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1A51 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1366 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x13C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH2 0x13CC DUP4 DUP4 PUSH2 0x156E JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x1465 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1537 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x758 PUSH2 0x15C3 JUMP JUMPDEST PUSH0 PUSH2 0x155B DUP3 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1CE2 JUMP JUMPDEST PUSH2 0x1565 SWAP1 DUP5 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1577 DUP3 PUSH2 0x1632 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x15BB JUMPI PUSH2 0x13CC DUP3 DUP3 PUSH2 0x16D9 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x1742 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFF5 PUSH2 0x15C3 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1680 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x172D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xFE4 DUP6 DUP4 DUP4 PUSH2 0x177A JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x758 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x178F JUMPI PUSH2 0x178A DUP3 PUSH2 0x17EF JUMP JUMPDEST PUSH2 0x5CF JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x17A6 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x17E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x1033 JUMP JUMPDEST POP DUP1 PUSH2 0x5CF JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x17FF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1045 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1857 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1862 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1872 DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x18D9 JUMPI PUSH2 0x18D9 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18FD DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x191A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x192D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x193F JUMPI PUSH2 0x193F PUSH2 0x1883 JUMP JUMPDEST PUSH2 0x1951 DUP5 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x18B0 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1966 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1994 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x199F DUP2 PUSH2 0x1831 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x19BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5CF DUP2 PUSH2 0x1831 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A26 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x5CF DUP2 PUSH2 0x1831 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x5CF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A61 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1AEE JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x1AD4 JUMPI PUSH2 0x1AD4 PUSH2 0x1A68 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1AE1 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1A9A JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1B04 JUMPI POP PUSH1 0x1 PUSH2 0x1568 JUMP JUMPDEST DUP2 PUSH2 0x1B10 JUMPI POP PUSH0 PUSH2 0x1568 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1B26 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1B30 JUMPI PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1568 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1B41 JUMPI PUSH2 0x1B41 PUSH2 0x1A68 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1568 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1B6F JUMPI POP DUP2 DUP2 EXP PUSH2 0x1568 JUMP JUMPDEST PUSH2 0x1B79 DUP4 DUP4 PUSH2 0x1A95 JUMP JUMPDEST DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT ISZERO PUSH2 0x1BAB JUMPI PUSH2 0x1BAB PUSH2 0x1A68 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1565 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1AF6 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1568 JUMPI PUSH2 0x1568 PUSH2 0x1A68 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1C0B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1568 PUSH2 0x1A68 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C3A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C59 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C6C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1C7E JUMPI PUSH2 0x1C7E PUSH2 0x1883 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x1C8F DUP5 DUP4 ADD PUSH2 0x18B0 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x1CA8 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x1CD2 JUMPI DUP5 MLOAD SWAP3 POP PUSH2 0x1CC2 DUP4 PUSH2 0x1831 JUMP JUMPDEST DUP3 DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1CAD JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1568 JUMPI PUSH2 0x1568 PUSH2 0x1A68 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 CODECOPY MULMOD CALLVALUE 0xF9 SHR 0xDC PUSH24 0x32D3ACA742C9D03E33D166D0D3031A3B30D78BE9AB56C79B PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1959:7954:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4731:934;;;;;;;;;;-1:-1:-1;4731:934:14;;;;;:::i;:::-;;:::i;:::-;;;780:25:19;;;768:2;753:18;4731:934:14;;;;;;;;3003:392;;;;;;;;;;-1:-1:-1;3003:392:14;;;;;:::i;:::-;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;:::-;;3705:134;;;;;;;;;;;;;:::i;3155:101:0:-;;;;;;;;;;;;;:::i;2061:33:14:-;;;;;;;;;;-1:-1:-1;2061:33:14;;;;-1:-1:-1;;;;;2061:33:14;;;;;;-1:-1:-1;;;;;2678:55:19;;;2660:74;;2648:2;2633:18;2061:33:14;2488:252:19;6086:1344:14;;;;;;;;;;-1:-1:-1;6086:1344:14;;;;;:::i;:::-;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;2299:217:14;;;;;;;;;;-1:-1:-1;2299:217:14;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3928:412:14:-;;;;;;;;;;-1:-1:-1;3928:412:14;;;;;:::i;:::-;;:::i;2103:188::-;;;;;;;;;;-1:-1:-1;2103:188:14;;;;;:::i;:::-;;:::i;8630:370::-;;;;;;;;;;-1:-1:-1;8630:370:14;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;7794:475:14:-;;;;;;;;;;-1:-1:-1;7794:475:14;;;;;:::i;:::-;;:::i;4731:934::-;4864:17;4911:7;-1:-1:-1;;;;;4898:20:14;:9;-1:-1:-1;;;;;4898:20:14;;4894:39;;-1:-1:-1;4927:6:14;4920:13;;4894:39;4946:21;4970:8;;;;;;;;;-1:-1:-1;;;;;4970:8:14;-1:-1:-1;;;;;4970:24:14;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4946:50;;5007:17;5042:9;-1:-1:-1;;;;;5027:34:14;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5007:56;;5074:15;5107:7;-1:-1:-1;;;;;5092:32:14;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5154:79;;;;;-1:-1:-1;;;;;4981:15:19;;;5154:79:14;;;4963:34:19;5033:15;;;5013:18;;;5006:43;5139:12:14;5065:18:19;;;5058:50;;;5074:52:14;;-1:-1:-1;5154:36:14;;;;;4875:18:19;;5154:79:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5139:94;-1:-1:-1;5285:15:14;5291:9;5285:2;:15;:::i;:::-;5262:17;5268:11;5262:2;:17;:::i;:::-;5254:26;;:4;:26;:::i;:::-;5253:48;;;;:::i;:::-;5246:55;;5314:14;5358:9;5343:24;;:11;:24;;;5339:290;;5400:23;5414:9;5400:11;:23;:::i;:::-;5393:31;;:2;:31;:::i;:::-;5384:40;-1:-1:-1;5480:4:14;5472;5453:15;5384:40;5453:6;:15;:::i;:::-;5452:24;;;;:::i;:::-;5451:33;;;;:::i;:::-;5439:45;;5339:290;;;5533:23;5545:11;5533:9;:23;:::i;:::-;5526:31;;:2;:31;:::i;:::-;5517:40;-1:-1:-1;5613:4:14;5605;5586:15;5517:40;5586:6;:15;:::i;:::-;5585:24;;;;:::i;:::-;5584:33;;;;:::i;:::-;5572:45;;5339:290;5641:16;;;;;4731:934;;;;;;:::o;3003:392::-;3170:56;;;;;-1:-1:-1;;;;;7883:15:19;;;3170:56:14;;;7865:34:19;7935:15;;7915:18;;;7908:43;7967:18;;;7960:34;;;3136:17:14;;3170:4;;:28;;7777:18:19;;3170:56:14;;;;;;;;;;;;;;;;;;-1:-1:-1;3170:56:14;;;;;;;;-1:-1:-1;;3170:56:14;;;;;;;;;;;;:::i;:::-;;;3166:222;;3329:47;;;;;-1:-1:-1;;;;;7883:15:19;;;3329:47:14;;;7865:34:19;7935:15;;7915:18;;;7908:43;7967:18;;;7960:34;;;3329:4:14;;:19;;7777:18:19;;3329:47:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3322:54;;;;4158:214:2;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;1327:66:7::1;3705:134:2::0;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;6086:1344:14:-;6225:17;6272:7;-1:-1:-1;;;;;6259:20:14;:9;-1:-1:-1;;;;;6259:20:14;;6255:89;;6324:7;-1:-1:-1;;;;;6309:32:14;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6304:39;;:2;:39;:::i;:::-;6297:47;;:2;:47;:::i;:::-;6288:56;;:6;:56;:::i;6255:89::-;6357:21;6381:8;;;;;;;;;-1:-1:-1;;;;;6381:8:14;-1:-1:-1;;;;;6381:24:14;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6357:50;;6418:17;6453:9;-1:-1:-1;;;;;6438:34:14;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6418:56;;6485:15;6518:7;-1:-1:-1;;;;;6503:32:14;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6563:79;;;;;-1:-1:-1;;;;;4981:15:19;;;6563:79:14;;;4963:34:19;5033:15;;;5013:18;;;5006:43;6548:12:14;5065:18:19;;;5058:50;;;6485:52:14;;-1:-1:-1;6563:36:14;;;;;4875:18:19;;6563:79:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6548:94;-1:-1:-1;6694:15:14;6700:9;6694:2;:15;:::i;:::-;6671:17;6677:11;6671:2;:17;:::i;:::-;6663:26;;:4;:26;:::i;:::-;6662:48;;;;:::i;:::-;6655:55;-1:-1:-1;6723:21:14;;;6821:14;6826:9;6821:2;:14;:::i;:::-;6814:22;;:2;:22;:::i;:::-;6785:51;;6868:9;6853:24;;:11;:24;;;6849:490;;6924:4;6907:13;6916:4;6907:6;:13;:::i;:::-;6906:22;;;;:::i;:::-;6894:34;;6849:490;;;6964:9;6950:23;;:11;:23;;;6946:393;;;7013:23;7027:9;7013:11;:23;:::i;:::-;7006:31;;:2;:31;:::i;:::-;6990:47;-1:-1:-1;7066:22:14;6990:47;7066:6;:22;:::i;:::-;7052:36;-1:-1:-1;7138:4:14;7116:18;7130:4;7052:36;7116:18;:::i;6946:393::-;7198:23;7210:11;7198:9;:23;:::i;:::-;7191:31;;:2;:31;:::i;:::-;7175:47;-1:-1:-1;7251:22:14;7175:47;7251:6;:22;:::i;:::-;7237:36;-1:-1:-1;7323:4:14;7301:18;7315:4;7237:36;7301:18;:::i;:::-;7300:27;;;;:::i;:::-;7288:39;;6946:393;7363:30;7375:18;7363:9;:30;:::i;:::-;7351:42;6086:1344;-1:-1:-1;;;;;;;;;;;6086:1344:14:o;2299:217::-;8870:21:1;6431:15;;2377:7:14;;8870:21:1;6431:15;;;;;;:44;;-1:-1:-1;6450:14:1;;:25;;;;:14;;:25;;6431:44;6427:105;;;6498:23;;;;;;;;;;;;;;6427:105;6541:24;;6575:22;;6541:24;;;6575:22;;;;;2397:26:14::1;2412:10;2397:14;:26::i;:::-;2434:24;:22;:24::i;:::-;2469:8;:39:::0;;;::::1;-1:-1:-1::0;;;;;2469:39:14;::::1;;::::0;;6618:23:1;;;;;;6656:20;;8179:18:19;8167:31;;8149:50;;6656:20:1;;8137:2:19;8122:18;6656:20:1;;;;;;;6291:392;2299:217:14;;;:::o;3928:412::-;4103:62;;;;;-1:-1:-1;;;;;7883:15:19;;;4103:62:14;;;7865:34:19;7935:15;;7915:18;;;7908:43;7967:18;;;7960:34;;;4069:17:14;;4103:4;;:34;;7777:18:19;;4103:62:14;;;;;;;;;;;;;;;;;;-1:-1:-1;4103:62:14;;;;;;;;-1:-1:-1;;4103:62:14;;;;;;;;;;;;:::i;:::-;;;4099:234;;4268:53;;;;;-1:-1:-1;;;;;7883:15:19;;;4268:53:14;;;7865:34:19;7935:15;;7915:18;;;7908:43;7967:18;;;7960:34;;;4268:4:14;;:25;;7777:18:19;;4268:53:14;7602:398:19;2103:188:14;8870:21:1;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;;;;;;;4979:67;2172:26:14::1;2187:10;2172:14;:26::i;:::-;2209:24;:22;:24::i;:::-;2244:8;:39:::0;;;::::1;-1:-1:-1::0;;;;;2244:39:14;::::1;;::::0;;5066:101:1;;;;5100:23;;;;;;5142:14;;-1:-1:-1;8149:50:19;;5142:14:1;;8137:2:19;8122:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2103:188:14;:::o;8630:370::-;8829:56;;;;;-1:-1:-1;;;;;7883:15:19;;;8829:56:14;;;7865:34:19;7935:15;;7915:18;;;7908:43;7967:18;;;7960:34;;;8778:17:14;;;;8829:4;;:28;;7777:18:19;;8829:56:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8808:77;;8908:57;8916:10;8943:9;-1:-1:-1;;;;;8928:34:14;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8908:57;;:7;:57::i;:::-;8896:69;8630:370;-1:-1:-1;;;;;8630:370:14:o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;::::1;::::0;;3562:1:::1;3534:31;::::0;::::1;2660:74:19::0;2633:18;;3534:31:0::1;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;7794:475:14:-;7936:17;8009:8;;:26;;;;;;;;7936:17;;-1:-1:-1;;;;;8009:8:14;;:24;;:26;;;;;;;;;;;;;;:8;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7966:70;-1:-1:-1;;;;;;8055:35:14;;8047:68;;;;;;;8626:2:19;8047:68:14;;;8608:21:19;8665:2;8645:18;;;8638:30;8704:22;8684:18;;;8677:50;8744:18;;8047:68:14;8424:344:19;8047:68:14;8142:92;;;;;9044:34:19;9032:47;;8142:92:14;;;9014:66:19;-1:-1:-1;;;;;9177:15:19;;;9157:18;;;9150:43;9229:15;;;9209:18;;;9202:43;8229:4:14;9261:18:19;;;9254:51;8142:49:14;;;;;8986:19:19;;8142:92:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8142:92:14;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8126:108:14;7794:475;-1:-1:-1;;;;;7794:475:14:o;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;1327:66:7;2035:53;-1:-1:-1;;;;;2035:53:7;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;9826:84:14;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;;;;-1:-1:-1;;;;;2678:55:19;;6513:60:2;;;2660:74:19;2633:18;;6513:60:2;2488:252:19;6147:437:2;1327:66:7;6245:40:2;;6241:120;;6312:34;;;;;;;;780:25:19;;;753:18;;6312:34:2;634:177:19;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;;;;;;;;;;;;;2658:162:0;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;;;;966:10:4;2763:40:0;;;2660:74:19;2633:18;;2763:40:0;2488:252:19;3774:248:0;1313:22;3923:8;;3941:19;;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;1847:127::-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2968:67:2:-:0;6931:20:1;:18;:20::i;9248:139:14:-;9322:7;9359:19;9370:8;9359;:19;:::i;:::-;9349:30;;:6;:30;:::i;:::-;9342:37;;9248:139;;;;;:::o;2779:335:7:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:7;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2186:281:7:-;2263:17;-1:-1:-1;;;;;2263:29:7;;2296:1;2263:34;2259:119;;2320:47;;;;;-1:-1:-1;;;;;2678:55:19;;2320:47:7;;;2660:74:19;2633:18;;2320:47:7;2488:252:19;2259:119:7;1327:66;2387:73;;;;-1:-1:-1;;;;;2387:73:7;;;;;;;;;;2186:281::o;4106:253:11:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:11;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;6598:122:7:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;4625:582:11;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:11;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;2678:55:19;;5121:24:11;;;2660:74:19;2633:18;;5121:24:11;2488:252:19;5041:119:11;-1:-1:-1;5180:10:11;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:154:19;-1:-1:-1;;;;;93:5:19;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:456;250:6;258;266;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;374:9;361:23;393:31;418:5;393:31;:::i;:::-;443:5;-1:-1:-1;500:2:19;485:18;;472:32;513:33;472:32;513:33;:::i;:::-;173:456;;565:7;;-1:-1:-1;;;619:2:19;604:18;;;;591:32;;173:456::o;816:184::-;868:77;865:1;858:88;965:4;962:1;955:15;989:4;986:1;979:15;1005:334;1076:2;1070:9;1132:2;1122:13;;-1:-1:-1;;1118:86:19;1106:99;;1235:18;1220:34;;1256:22;;;1217:62;1214:88;;;1282:18;;:::i;:::-;1318:2;1311:22;1005:334;;-1:-1:-1;1005:334:19:o;1344:957::-;1421:6;1429;1482:2;1470:9;1461:7;1457:23;1453:32;1450:52;;;1498:1;1495;1488:12;1450:52;1537:9;1524:23;1556:31;1581:5;1556:31;:::i;:::-;1606:5;-1:-1:-1;1630:2:19;1668:18;;;1655:32;1706:18;1736:14;;;1733:34;;;1763:1;1760;1753:12;1733:34;1801:6;1790:9;1786:22;1776:32;;1846:7;1839:4;1835:2;1831:13;1827:27;1817:55;;1868:1;1865;1858:12;1817:55;1904:2;1891:16;1926:2;1922;1919:10;1916:36;;;1932:18;;:::i;:::-;1974:112;2082:2;-1:-1:-1;;2006:4:19;2002:2;1998:13;1994:86;1990:95;1974:112;:::i;:::-;1961:125;;2109:2;2102:5;2095:17;2149:7;2144:2;2139;2135;2131:11;2127:20;2124:33;2121:53;;;2170:1;2167;2160:12;2121:53;2225:2;2220;2216;2212:11;2207:2;2200:5;2196:14;2183:45;2269:1;2264:2;2259;2252:5;2248:14;2244:23;2237:34;;2290:5;2280:15;;;;;1344:957;;;;;:::o;2976:427::-;3043:6;3051;3104:2;3092:9;3083:7;3079:23;3075:32;3072:52;;;3120:1;3117;3110:12;3072:52;3159:9;3146:23;3178:31;3203:5;3178:31;:::i;:::-;3228:5;-1:-1:-1;3285:2:19;3270:18;;3257:32;3333:18;3320:32;;3308:45;;3298:73;;3367:1;3364;3357:12;3298:73;3390:7;3380:17;;;2976:427;;;;;:::o;3408:477::-;3557:2;3546:9;3539:21;3520:4;3589:6;3583:13;3632:6;3627:2;3616:9;3612:18;3605:34;3691:6;3686:2;3678:6;3674:15;3669:2;3658:9;3654:18;3648:50;3747:1;3742:2;3733:6;3722:9;3718:22;3714:31;3707:42;3876:2;-1:-1:-1;;3801:2:19;3793:6;3789:15;3785:88;3774:9;3770:104;3766:113;3758:121;;;3408:477;;;;:::o;3890:247::-;3949:6;4002:2;3990:9;3981:7;3977:23;3973:32;3970:52;;;4018:1;4015;4008:12;3970:52;4057:9;4044:23;4076:31;4101:5;4076:31;:::i;4142:251::-;4212:6;4265:2;4253:9;4244:7;4240:23;4236:32;4233:52;;;4281:1;4278;4271:12;4233:52;4313:9;4307:16;4332:31;4357:5;4332:31;:::i;4398:273::-;4466:6;4519:2;4507:9;4498:7;4494:23;4490:32;4487:52;;;4535:1;4532;4525:12;4487:52;4567:9;4561:16;4617:4;4610:5;4606:16;4599:5;4596:27;4586:55;;4637:1;4634;4627:12;5119:184;5189:6;5242:2;5230:9;5221:7;5217:23;5213:32;5210:52;;;5258:1;5255;5248:12;5210:52;-1:-1:-1;5281:16:19;;5119:184;-1:-1:-1;5119:184:19:o;5308:::-;5360:77;5357:1;5350:88;5457:4;5454:1;5447:15;5481:4;5478:1;5471:15;5497:476;5586:1;5623:5;5586:1;5637:330;5658:7;5648:8;5645:21;5637:330;;;5777:4;5709:66;5705:77;5699:4;5696:87;5693:113;;;5786:18;;:::i;:::-;5836:7;5826:8;5822:22;5819:55;;;5856:16;;;;5819:55;5935:22;;;;5895:15;;;;5637:330;;;5641:3;5497:476;;;;;:::o;5978:866::-;6027:5;6057:8;6047:80;;-1:-1:-1;6098:1:19;6112:5;;6047:80;6146:4;6136:76;;-1:-1:-1;6183:1:19;6197:5;;6136:76;6228:4;6246:1;6241:59;;;;6314:1;6309:130;;;;6221:218;;6241:59;6271:1;6262:10;;6285:5;;;6309:130;6346:3;6336:8;6333:17;6330:43;;;6353:18;;:::i;:::-;-1:-1:-1;;6409:1:19;6395:16;;6424:5;;6221:218;;6523:2;6513:8;6510:16;6504:3;6498:4;6495:13;6491:36;6485:2;6475:8;6472:16;6467:2;6461:4;6458:12;6454:35;6451:77;6448:159;;;-1:-1:-1;6560:19:19;;;6592:5;;6448:159;6639:34;6664:8;6658:4;6639:34;:::i;:::-;6769:6;6701:66;6697:79;6688:7;6685:92;6682:118;;;6780:18;;:::i;:::-;6818:20;;5978:866;-1:-1:-1;;;5978:866:19:o;6849:140::-;6907:5;6936:47;6977:4;6967:8;6963:19;6957:4;6936:47;:::i;6994:168::-;7067:9;;;7098;;7115:15;;;7109:22;;7095:37;7085:71;;7136:18;;:::i;7167:274::-;7207:1;7233;7223:189;;7268:77;7265:1;7258:88;7369:4;7366:1;7359:15;7397:4;7394:1;7387:15;7223:189;-1:-1:-1;7426:9:19;;7167:274::o;7446:151::-;7536:4;7529:12;;;7515;;;7511:31;;7554:14;;7551:40;;;7571:18;;:::i;9316:1072::-;9420:6;9428;9481:2;9469:9;9460:7;9456:23;9452:32;9449:52;;;9497:1;9494;9487:12;9449:52;9526:9;9520:16;9510:26;;9555:2;9601;9590:9;9586:18;9580:25;9624:18;9665:2;9657:6;9654:14;9651:34;;;9681:1;9678;9671:12;9651:34;9719:6;9708:9;9704:22;9694:32;;9764:7;9757:4;9753:2;9749:13;9745:27;9735:55;;9786:1;9783;9776:12;9735:55;9815:2;9809:9;9837:2;9833;9830:10;9827:36;;;9843:18;;:::i;:::-;9889:2;9886:1;9882:10;9872:20;;9912:28;9936:2;9932;9928:11;9912:28;:::i;:::-;9974:15;;;10044:11;;;10040:20;;;10005:12;;;;10072:19;;;10069:39;;;10104:1;10101;10094:12;10069:39;10128:11;;;;10148:210;10164:6;10159:3;10156:15;10148:210;;;10237:3;10231:10;10218:23;;10254:31;10279:5;10254:31;:::i;:::-;10298:18;;;10181:12;;;;10336;;;;10148:210;;;10377:5;10367:15;;;;;;;;9316:1072;;;;;:::o;10582:128::-;10649:9;;;10670:11;;;10667:37;;;10684:18;;:::i;10715:301::-;10844:3;10882:6;10876:13;10928:6;10921:4;10913:6;10909:17;10904:3;10898:37;10990:1;10954:16;;10979:13;;;-1:-1:-1;10954:16:19;10715:301;-1:-1:-1;10715:301:19:o"},"gasEstimates":{"creation":{"codeDepositCost":"1497800","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","convert(address,address,uint256)":"infinite","convertScaled(address,address,uint256)":"infinite","convertScaledWithAgg(address,address,uint256)":"infinite","convertScaledWithStaticOracle(address,address,uint256)":"infinite","convertWithAgg(address,address,uint256)":"infinite","convertWithStaticOracle(address,address,uint256)":"infinite","initialize(address)":"infinite","owner()":"2353","proxiableUUID()":"infinite","registry()":"2402","reinitialize(address,uint64)":"infinite","renounceOwnership()":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","scaleDown(uint256,uint256)":"infinite","scaleUp(uint256,uint256)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75","convertScaledWithAgg(address,address,uint256)":"8c41a354","convertScaledWithStaticOracle(address,address,uint256)":"ca66d9a8","convertWithAgg(address,address,uint256)":"1f0e3cd2","convertWithStaticOracle(address,address,uint256)":"fac0ba74","initialize(address)":"c4d66de8","owner()":"8da5cb5b","proxiableUUID()":"52d1902d","registry()":"7b103999","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaledWithAgg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaledWithStaticOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertWithAgg\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertWithStaticOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IBaluniV1Registry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"convert(address,address,uint256)\":{\"details\":\"Converts the specified amount of `fromToken` to `toToken` using the available oracle. If the conversion fails with the static oracle, it falls back to the aggregator oracle.\",\"params\":{\"amount\":\"The amount of `fromToken` to convert.\",\"fromToken\":\"The address of the token to convert from.\",\"toToken\":\"The address of the token to convert to.\"},\"returns\":{\"valuation\":\"The converted valuation of `amount` in `toToken`.\"}},\"convertScaled(address,address,uint256)\":{\"details\":\"Converts the specified amount of `fromToken` to `toToken` using the available oracle. If the conversion fails with the static oracle, it falls back to the aggregator oracle. This function is externally callable.\",\"params\":{\"amount\":\"The amount of `fromToken` to convert.\",\"fromToken\":\"The address of the token to convert from.\",\"toToken\":\"The address of the token to convert to.\"},\"returns\":{\"valuation\":\"The converted valuation of `amount` in `toToken`.\"}},\"convertScaledWithAgg(address,address,uint256)\":{\"details\":\"Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator and scales the result.\",\"params\":{\"amount\":\"The amount of `fromToken` to convert.\",\"fromToken\":\"The address of the token to convert from.\",\"toToken\":\"The address of the token to convert to.\"},\"returns\":{\"valuation\":\" The scaled converted valuation of `amount` in `toToken`.\"}},\"convertScaledWithStaticOracle(address,address,uint256)\":{\"details\":\"Converts the given amount of tokens from one token to another using a static oracle.\",\"params\":{\"amount\":\"The amount of tokens to convert.\",\"fromToken\":\"The address of the token to convert from.\",\"toToken\":\"The address of the token to convert to.\"},\"returns\":{\"valuation\":\"of the converted tokens.\"}},\"convertWithAgg(address,address,uint256)\":{\"details\":\"Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator.\",\"params\":{\"amount\":\"The amount of `fromToken` to convert.\",\"fromToken\":\"The address of the token to convert from.\",\"toToken\":\"The address of the token to convert to.\"},\"returns\":{\"valuation\":\"The converted valuation of `amount` in `toToken`.\"}},\"convertWithStaticOracle(address,address,uint256)\":{\"details\":\"Converts the specified amount of `fromToken` to `toToken` using the static oracle.\",\"params\":{\"amount\":\"The amount of `fromToken` to convert.\",\"fromToken\":\"The address of the token to convert from.\",\"toToken\":\"The address of the token to convert to.\"},\"returns\":{\"valuation\":\"of the converted amount.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Oracle.sol\":\"BaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"contracts/BaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\n\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport './interfaces/I1inchSpotAgg.sol';\\r\\nimport './interfaces/IBaluniV1Registry.sol';\\r\\nimport './interfaces/IBaluniV1Oracle.sol';\\r\\nimport './interfaces/IStaticOracle.sol';\\r\\n\\r\\ncontract BaluniV1Oracle is Initializable, OwnableUpgradeable, UUPSUpgradeable, IBaluniV1Oracle {\\r\\n    IBaluniV1Registry public registry;\\r\\n\\r\\n    function initialize(address _registry) public initializer {\\r\\n        __Ownable_init(msg.sender);\\r\\n        __UUPSUpgradeable_init();\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n    }\\r\\n\\r\\n    function reinitialize(address _registry, uint64 version) public reinitializer(version) {\\r\\n        __Ownable_init(msg.sender);\\r\\n        __UUPSUpgradeable_init();\\r\\n        registry = IBaluniV1Registry(_registry);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the available oracle.\\r\\n     * If the conversion fails with the static oracle, it falls back to the aggregator oracle.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param toToken The address of the token to convert to.\\r\\n     * @param amount The amount of `fromToken` to convert.\\r\\n     * @return valuation The converted valuation of `amount` in `toToken`.\\r\\n     */\\r\\n    function convert(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) public view override returns (uint256 valuation) {\\r\\n        try this.convertWithStaticOracle(fromToken, toToken, amount) returns (uint256 _valuation) {\\r\\n            return _valuation;\\r\\n        } catch {\\r\\n            return this.convertWithAgg(fromToken, toToken, amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the available oracle.\\r\\n     * If the conversion fails with the static oracle, it falls back to the aggregator oracle.\\r\\n     * This function is externally callable.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param toToken The address of the token to convert to.\\r\\n     * @param amount The amount of `fromToken` to convert.\\r\\n     * @return valuation The converted valuation of `amount` in `toToken`.\\r\\n     */\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view override returns (uint256 valuation) {\\r\\n        try this.convertScaledWithStaticOracle(fromToken, toToken, amount) returns (uint256 _valuation) {\\r\\n            return _valuation;\\r\\n        } catch {\\r\\n            return this.convertScaledWithAgg(fromToken, toToken, amount);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param toToken The address of the token to convert to.\\r\\n     * @param amount The amount of `fromToken` to convert.\\r\\n     * @return valuation The converted valuation of `amount` in `toToken`.\\r\\n     */\\r\\n    function convertWithAgg(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation) {\\r\\n        if (fromToken == toToken) return amount;\\r\\n\\r\\n        address _1InchSpotAgg = registry.get1inchSpotAgg();\\r\\n        uint8 fromDecimal = IERC20Metadata(fromToken).decimals();\\r\\n        uint8 toDecimal = IERC20Metadata(toToken).decimals();\\r\\n\\r\\n        uint256 rate = I1inchSpotAgg(_1InchSpotAgg).getRate(IERC20(fromToken), IERC20(toToken), false);\\r\\n\\r\\n        rate = (rate * (10 ** fromDecimal)) / (10 ** toDecimal);\\r\\n\\r\\n        uint256 factor;\\r\\n        if (fromDecimal >= toDecimal) {\\r\\n            factor = 10 ** (fromDecimal - toDecimal);\\r\\n            valuation = ((amount / factor) * rate) / 1e18;\\r\\n        } else {\\r\\n            factor = 10 ** (toDecimal - fromDecimal);\\r\\n            valuation = ((amount * factor) * rate) / 1e18;\\r\\n        }\\r\\n\\r\\n        return valuation;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the 1inch aggregator and scales the result.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param toToken The address of the token to convert to.\\r\\n     * @param amount The amount of `fromToken` to convert.\\r\\n     * @return valuation  The scaled converted valuation of `amount` in `toToken`.\\r\\n     */\\r\\n    function convertScaledWithAgg(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation) {\\r\\n        if (fromToken == toToken) return amount * 10 ** (18 - IERC20Metadata(toToken).decimals());\\r\\n\\r\\n        address _1InchSpotAgg = registry.get1inchSpotAgg();\\r\\n        uint8 fromDecimal = IERC20Metadata(fromToken).decimals();\\r\\n        uint8 toDecimal = IERC20Metadata(toToken).decimals();\\r\\n        uint256 rate = I1inchSpotAgg(_1InchSpotAgg).getRate(IERC20(fromToken), IERC20(toToken), false);\\r\\n\\r\\n        rate = (rate * (10 ** fromDecimal)) / (10 ** toDecimal);\\r\\n\\r\\n        uint256 scalingFactor;\\r\\n        uint256 tokenAmount;\\r\\n        uint256 finalScalingFactor = 10 ** (18 - toDecimal);\\r\\n\\r\\n        if (fromDecimal == toDecimal) {\\r\\n            valuation = (amount * rate) / 1e18;\\r\\n        } else if (fromDecimal > toDecimal) {\\r\\n            scalingFactor = 10 ** (fromDecimal - toDecimal);\\r\\n            tokenAmount = amount / scalingFactor;\\r\\n            valuation = (tokenAmount * rate) / 1e18;\\r\\n        } else {\\r\\n            scalingFactor = 10 ** (toDecimal - fromDecimal);\\r\\n            tokenAmount = amount * scalingFactor;\\r\\n            valuation = (tokenAmount * rate) / 1e18;\\r\\n        }\\r\\n\\r\\n        valuation = valuation * finalScalingFactor;\\r\\n\\r\\n        return valuation;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of `fromToken` to `toToken` using the static oracle.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param toToken The address of the token to convert to.\\r\\n     * @param amount The amount of `fromToken` to convert.\\r\\n     * @return  valuation of the converted amount.\\r\\n     */\\r\\n    function convertWithStaticOracle(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation) {\\r\\n        IStaticOracle staticOracle = IStaticOracle(registry.getStaticOracle());\\r\\n        require(address(staticOracle) != address(0), 'StaticOracle not set');\\r\\n        (valuation, ) = staticOracle.quoteAllAvailablePoolsWithTimePeriod(uint128(amount), fromToken, toToken, 3600);\\r\\n        return valuation;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the given amount of tokens from one token to another using a static oracle.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param toToken The address of the token to convert to.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return  valuation of the converted tokens.\\r\\n     */\\r\\n    function convertScaledWithStaticOracle(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation) {\\r\\n        uint256 _valuation = this.convertWithStaticOracle(fromToken, toToken, amount);\\r\\n        valuation = scaleUp(_valuation, IERC20Metadata(fromToken).decimals());\\r\\n        return valuation;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Scales up the given amount by subtracting the decimals.\\r\\n     * @param amount The amount to be scaled up.\\r\\n     * @param decimals The number of decimals to be subtracted.\\r\\n     * @return The scaled up amount.\\r\\n     */\\r\\n    function scaleUp(uint256 amount, uint256 decimals) internal pure returns (uint256) {\\r\\n        return amount * (10 ** 18 - decimals);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Scales down the given amount by dividing it by the difference between 10^18 and the decimals.\\r\\n     * @param amount The amount to be scaled down.\\r\\n     * @param decimals The number of decimals to be subtracted.\\r\\n     * @return The scaled down amount.\\r\\n     */\\r\\n    function scaleDown(uint256 amount, uint256 decimals) internal pure returns (uint256) {\\r\\n        return amount / (10 ** 18 - decimals);\\r\\n    }\\r\\n\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n}\\r\\n\",\"keccak256\":\"0x4701bfa2256440dc3f9df94f448f88fa5a1747fb5f56d6575a643e16cc8462f3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IStaticOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\\r\\n\\r\\n/// @title Uniswap V3 Static Oracle\\r\\n/// @notice Oracle contract for calculating price quoting against Uniswap V3\\r\\ninterface IStaticOracle {\\r\\n    /// @notice Returns the address of the Uniswap V3 factory\\r\\n    /// @dev This value is assigned during deployment and cannot be changed\\r\\n    /// @return The address of the Uniswap V3 factory\\r\\n    function UNISWAP_V3_FACTORY() external view returns (IUniswapV3Factory);\\r\\n\\r\\n    /// @notice Returns how many observations are needed per minute in Uniswap V3 oracles, on the deployed chain\\r\\n    /// @dev This value is assigned during deployment and cannot be changed\\r\\n    /// @return Number of observation that are needed per minute\\r\\n    function CARDINALITY_PER_MINUTE() external view returns (uint8);\\r\\n\\r\\n    /// @notice Returns all supported fee tiers\\r\\n    /// @return The supported fee tiers\\r\\n    function supportedFeeTiers() external view returns (uint24[] memory);\\r\\n\\r\\n    /// @notice Returns whether a specific pair can be supported by the oracle\\r\\n    /// @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\\r\\n    /// @return Whether the given pair can be supported by the oracle\\r\\n    function isPairSupported(address tokenA, address tokenB) external view returns (bool);\\r\\n\\r\\n    /// @notice Returns all existing pools for the given pair\\r\\n    /// @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\\r\\n    /// @return All existing pools for the given pair\\r\\n    function getAllPoolsForPair(address tokenA, address tokenB) external view returns (address[] memory);\\r\\n\\r\\n    /// @notice Returns a quote, based on the given tokens and amount, by querying all of the pair's pools\\r\\n    /// @dev If some pools are not configured correctly for the given period, then they will be ignored\\r\\n    /// @dev Will revert if there are no pools available/configured for the pair and period combination\\r\\n    /// @param baseAmount Amount of token to be converted\\r\\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\\r\\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\\r\\n    /// @param period Number of seconds from which to calculate the TWAP\\r\\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\\r\\n    /// @return queriedPools The pools that were queried to calculate the quote\\r\\n    function quoteAllAvailablePoolsWithTimePeriod(\\r\\n        uint128 baseAmount,\\r\\n        address baseToken,\\r\\n        address quoteToken,\\r\\n        uint32 period\\r\\n    ) external view returns (uint256 quoteAmount, address[] memory queriedPools);\\r\\n\\r\\n    /// @notice Returns a quote, based on the given tokens and amount, by querying only the specified fee tiers\\r\\n    /// @dev Will revert if the pair does not have a pool for one of the given fee tiers, or if one of the pools\\r\\n    /// is not prepared/configured correctly for the given period\\r\\n    /// @param baseAmount Amount of token to be converted\\r\\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\\r\\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\\r\\n    /// @param feeTiers The fee tiers to consider when calculating the quote\\r\\n    /// @param period Number of seconds from which to calculate the TWAP\\r\\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\\r\\n    /// @return queriedPools The pools that were queried to calculate the quote\\r\\n    function quoteSpecificFeeTiersWithTimePeriod(\\r\\n        uint128 baseAmount,\\r\\n        address baseToken,\\r\\n        address quoteToken,\\r\\n        uint24[] calldata feeTiers,\\r\\n        uint32 period\\r\\n    ) external view returns (uint256 quoteAmount, address[] memory queriedPools);\\r\\n\\r\\n    /// @notice Returns a quote, based on the given tokens and amount, by querying only the specified pools\\r\\n    /// @dev Will revert if one of the pools is not prepared/configured correctly for the given period\\r\\n    /// @param baseAmount Amount of token to be converted\\r\\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\\r\\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\\r\\n    /// @param pools The pools to consider when calculating the quote\\r\\n    /// @param period Number of seconds from which to calculate the TWAP\\r\\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\\r\\n    function quoteSpecificPoolsWithTimePeriod(\\r\\n        uint128 baseAmount,\\r\\n        address baseToken,\\r\\n        address quoteToken,\\r\\n        address[] calldata pools,\\r\\n        uint32 period\\r\\n    ) external view returns (uint256 quoteAmount);\\r\\n\\r\\n    /// @notice Will initialize all existing pools for the given pair, so that they can be queried with the given period in the future\\r\\n    /// @dev Will revert if there are no pools available for the pair and period combination\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param period The period that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareAllAvailablePoolsWithTimePeriod(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint32 period\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will initialize the pair's pools with the specified fee tiers, so that they can be queried with the given period in the future\\r\\n    /// @dev Will revert if the pair does not have a pool for a given fee tier\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param feeTiers The fee tiers to consider when searching for the pair's pools\\r\\n    /// @param period The period that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareSpecificFeeTiersWithTimePeriod(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint24[] calldata feeTiers,\\r\\n        uint32 period\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will initialize all given pools, so that they can be queried with the given period in the future\\r\\n    /// @param pools The pools to initialize\\r\\n    /// @param period The period that will be guaranteed when quoting\\r\\n    function prepareSpecificPoolsWithTimePeriod(address[] calldata pools, uint32 period) external;\\r\\n\\r\\n    /// @notice Will increase observations for all existing pools for the given pair, so they start accruing information for twap calculations\\r\\n    /// @dev Will revert if there are no pools available for the pair and period combination\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param cardinality The cardinality that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareAllAvailablePoolsWithCardinality(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint16 cardinality\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will increase the pair's pools with the specified fee tiers observations, so they start accruing information for twap calculations\\r\\n    /// @dev Will revert if the pair does not have a pool for a given fee tier\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param feeTiers The fee tiers to consider when searching for the pair's pools\\r\\n    /// @param cardinality The cardinality that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareSpecificFeeTiersWithCardinality(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint24[] calldata feeTiers,\\r\\n        uint16 cardinality\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will increase all given pools observations, so they start accruing information for twap calculations\\r\\n    /// @param pools The pools to initialize\\r\\n    /// @param cardinality The cardinality that will be guaranteed when quoting\\r\\n    function prepareSpecificPoolsWithCardinality(address[] calldata pools, uint16 cardinality) external;\\r\\n\\r\\n    /// @notice Adds support for a new fee tier\\r\\n    /// @dev Will revert if the given tier is invalid, or already supported\\r\\n    /// @param feeTier The new fee tier to add\\r\\n    function addNewFeeTier(uint24 feeTier) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x592a6d2e0bfc7781db8700e7932c20e8c15f8de8307c5db562079f95f232877b\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2324,"contract":"contracts/BaluniV1Oracle.sol:BaluniV1Oracle","label":"registry","offset":0,"slot":"0","type":"t_contract(IBaluniV1Registry)3104"}],"types":{"t_contract(IBaluniV1Registry)3104":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/I1inchSpotAgg.sol":{"I1inchSpotAgg":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1inchSpotAgg.sol\":\"I1inchSpotAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Oracle.sol":{"IBaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":\"IBaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Registry.sol":{"IBaluniV1Registry":{"abi":[{"inputs":[],"name":"get1inchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniAgentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"__1inchSpotAgg","type":"address"}],"name":"set1inchSpotAgg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"__BPS_FEE","type":"uint256"}],"name":"setBPS_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniAgentFactory","type":"address"}],"name":"setBaluniAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniOracle","type":"address"}],"name":"setBaluniOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolFactory","type":"address"}],"name":"setBaluniPoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolPeriphery","type":"address"}],"name":"setBaluniPoolPeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRebalancer","type":"address"}],"name":"setBaluniRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRegistry","type":"address"}],"name":"setBaluniRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRouter","type":"address"}],"name":"setBaluniRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniSwapper","type":"address"}],"name":"setBaluniSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staticOracle","type":"address"}],"name":"setStaticOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_USDC","type":"address"}],"name":"setUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"}],"name":"setUniswapFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WNATIVE","type":"address"}],"name":"setWNATIVE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1Registry contract.","kind":"dev","methods":{},"title":"IBaluniV1Registry","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get1inchSpotAgg()":"8e1c3a8a","getBPS_BASE()":"4f4608a2","getBPS_FEE()":"85462d6f","getBaluniAgentFactory()":"f5d2d998","getBaluniOracle()":"bb3ba04c","getBaluniPoolFactory()":"7c6fd308","getBaluniPoolPeriphery()":"1acb6141","getBaluniRebalancer()":"cff49d68","getBaluniRegistry()":"c9aba8ae","getBaluniRouter()":"04cc7325","getBaluniSwapper()":"82755ebb","getMAX_BPS_FEE()":"9380fb6f","getStaticOracle()":"a5d2236f","getTreasury()":"3b19e84a","getUSDC()":"1bf01e9b","getUniswapFactory()":"3e6dfa36","getUniswapRouter()":"524900b5","getWNATIVE()":"6c9c0078","set1inchSpotAgg(address)":"c08f786b","setBPS_FEE(uint256)":"9e6453f8","setBaluniAgentFactory(address)":"f1dccde7","setBaluniOracle(address)":"f5b84f64","setBaluniPoolFactory(address)":"8267c2c8","setBaluniPoolPeriphery(address)":"588c5b70","setBaluniRebalancer(address)":"0241bffa","setBaluniRegistry(address)":"6c43274c","setBaluniRouter(address)":"400fb668","setBaluniSwapper(address)":"c3f5df5c","setStaticOracle(address)":"cc01e9a6","setTreasury(address)":"f0f44260","setUSDC(address)":"b3e089a2","setUniswapFactory(address)":"e04b677f","setUniswapRouter(address)":"bea9849e","setWNATIVE(address)":"b6fe9cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get1inchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniAgentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__1inchSpotAgg\",\"type\":\"address\"}],\"name\":\"set1inchSpotAgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__BPS_FEE\",\"type\":\"uint256\"}],\"name\":\"setBPS_FEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniAgentFactory\",\"type\":\"address\"}],\"name\":\"setBaluniAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniOracle\",\"type\":\"address\"}],\"name\":\"setBaluniOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolFactory\",\"type\":\"address\"}],\"name\":\"setBaluniPoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolPeriphery\",\"type\":\"address\"}],\"name\":\"setBaluniPoolPeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRebalancer\",\"type\":\"address\"}],\"name\":\"setBaluniRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRouter\",\"type\":\"address\"}],\"name\":\"setBaluniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniSwapper\",\"type\":\"address\"}],\"name\":\"setBaluniSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staticOracle\",\"type\":\"address\"}],\"name\":\"setStaticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"setUniswapFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"name\":\"setUniswapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNATIVE\",\"type\":\"address\"}],\"name\":\"setWNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1Registry contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IBaluniV1Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Registry.sol\":\"IBaluniV1Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolFactory(address _baluniPoolFactory) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x846d9e23f2a9579307f6f9b453f9426e1083b2f550bb999315a4abc32a648570\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IStaticOracle.sol":{"IStaticOracle":{"abi":[{"inputs":[],"name":"CARDINALITY_PER_MINUTE","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"UNISWAP_V3_FACTORY","outputs":[{"internalType":"contract IUniswapV3Factory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint24","name":"feeTier","type":"uint24"}],"name":"addNewFeeTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"getAllPoolsForPair","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"}],"name":"isPairSupported","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint16","name":"cardinality","type":"uint16"}],"name":"prepareAllAvailablePoolsWithCardinality","outputs":[{"internalType":"address[]","name":"preparedPools","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint32","name":"period","type":"uint32"}],"name":"prepareAllAvailablePoolsWithTimePeriod","outputs":[{"internalType":"address[]","name":"preparedPools","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24[]","name":"feeTiers","type":"uint24[]"},{"internalType":"uint16","name":"cardinality","type":"uint16"}],"name":"prepareSpecificFeeTiersWithCardinality","outputs":[{"internalType":"address[]","name":"preparedPools","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24[]","name":"feeTiers","type":"uint24[]"},{"internalType":"uint32","name":"period","type":"uint32"}],"name":"prepareSpecificFeeTiersWithTimePeriod","outputs":[{"internalType":"address[]","name":"preparedPools","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"pools","type":"address[]"},{"internalType":"uint16","name":"cardinality","type":"uint16"}],"name":"prepareSpecificPoolsWithCardinality","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"pools","type":"address[]"},{"internalType":"uint32","name":"period","type":"uint32"}],"name":"prepareSpecificPoolsWithTimePeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"baseAmount","type":"uint128"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"uint32","name":"period","type":"uint32"}],"name":"quoteAllAvailablePoolsWithTimePeriod","outputs":[{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"address[]","name":"queriedPools","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint128","name":"baseAmount","type":"uint128"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"uint24[]","name":"feeTiers","type":"uint24[]"},{"internalType":"uint32","name":"period","type":"uint32"}],"name":"quoteSpecificFeeTiersWithTimePeriod","outputs":[{"internalType":"uint256","name":"quoteAmount","type":"uint256"},{"internalType":"address[]","name":"queriedPools","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint128","name":"baseAmount","type":"uint128"},{"internalType":"address","name":"baseToken","type":"address"},{"internalType":"address","name":"quoteToken","type":"address"},{"internalType":"address[]","name":"pools","type":"address[]"},{"internalType":"uint32","name":"period","type":"uint32"}],"name":"quoteSpecificPoolsWithTimePeriod","outputs":[{"internalType":"uint256","name":"quoteAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"supportedFeeTiers","outputs":[{"internalType":"uint24[]","name":"","type":"uint24[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"CARDINALITY_PER_MINUTE()":{"details":"This value is assigned during deployment and cannot be changed","returns":{"_0":"Number of observation that are needed per minute"}},"UNISWAP_V3_FACTORY()":{"details":"This value is assigned during deployment and cannot be changed","returns":{"_0":"The address of the Uniswap V3 factory"}},"addNewFeeTier(uint24)":{"details":"Will revert if the given tier is invalid, or already supported","params":{"feeTier":"The new fee tier to add"}},"getAllPoolsForPair(address,address)":{"details":"The pair can be provided in tokenA/tokenB or tokenB/tokenA order","returns":{"_0":"All existing pools for the given pair"}},"isPairSupported(address,address)":{"details":"The pair can be provided in tokenA/tokenB or tokenB/tokenA order","returns":{"_0":"Whether the given pair can be supported by the oracle"}},"prepareAllAvailablePoolsWithCardinality(address,address,uint16)":{"details":"Will revert if there are no pools available for the pair and period combination","params":{"cardinality":"The cardinality that will be guaranteed when quoting","tokenA":"One of the pair's tokens","tokenB":"The other of the pair's tokens"},"returns":{"preparedPools":"The pools that were prepared"}},"prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)":{"details":"Will revert if there are no pools available for the pair and period combination","params":{"period":"The period that will be guaranteed when quoting","tokenA":"One of the pair's tokens","tokenB":"The other of the pair's tokens"},"returns":{"preparedPools":"The pools that were prepared"}},"prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)":{"details":"Will revert if the pair does not have a pool for a given fee tier","params":{"cardinality":"The cardinality that will be guaranteed when quoting","feeTiers":"The fee tiers to consider when searching for the pair's pools","tokenA":"One of the pair's tokens","tokenB":"The other of the pair's tokens"},"returns":{"preparedPools":"The pools that were prepared"}},"prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)":{"details":"Will revert if the pair does not have a pool for a given fee tier","params":{"feeTiers":"The fee tiers to consider when searching for the pair's pools","period":"The period that will be guaranteed when quoting","tokenA":"One of the pair's tokens","tokenB":"The other of the pair's tokens"},"returns":{"preparedPools":"The pools that were prepared"}},"prepareSpecificPoolsWithCardinality(address[],uint16)":{"params":{"cardinality":"The cardinality that will be guaranteed when quoting","pools":"The pools to initialize"}},"prepareSpecificPoolsWithTimePeriod(address[],uint32)":{"params":{"period":"The period that will be guaranteed when quoting","pools":"The pools to initialize"}},"quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)":{"details":"If some pools are not configured correctly for the given period, then they will be ignoredWill revert if there are no pools available/configured for the pair and period combination","params":{"baseAmount":"Amount of token to be converted","baseToken":"Address of an ERC20 token contract used as the baseAmount denomination","period":"Number of seconds from which to calculate the TWAP","quoteToken":"Address of an ERC20 token contract used as the quoteAmount denomination"},"returns":{"queriedPools":"The pools that were queried to calculate the quote","quoteAmount":"Amount of quoteToken received for baseAmount of baseToken"}},"quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)":{"details":"Will revert if the pair does not have a pool for one of the given fee tiers, or if one of the pools is not prepared/configured correctly for the given period","params":{"baseAmount":"Amount of token to be converted","baseToken":"Address of an ERC20 token contract used as the baseAmount denomination","feeTiers":"The fee tiers to consider when calculating the quote","period":"Number of seconds from which to calculate the TWAP","quoteToken":"Address of an ERC20 token contract used as the quoteAmount denomination"},"returns":{"queriedPools":"The pools that were queried to calculate the quote","quoteAmount":"Amount of quoteToken received for baseAmount of baseToken"}},"quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)":{"details":"Will revert if one of the pools is not prepared/configured correctly for the given period","params":{"baseAmount":"Amount of token to be converted","baseToken":"Address of an ERC20 token contract used as the baseAmount denomination","period":"Number of seconds from which to calculate the TWAP","pools":"The pools to consider when calculating the quote","quoteToken":"Address of an ERC20 token contract used as the quoteAmount denomination"},"returns":{"quoteAmount":"Amount of quoteToken received for baseAmount of baseToken"}},"supportedFeeTiers()":{"returns":{"_0":"The supported fee tiers"}}},"title":"Uniswap V3 Static Oracle","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"CARDINALITY_PER_MINUTE()":"b7604e53","UNISWAP_V3_FACTORY()":"f73e5aab","addNewFeeTier(uint24)":"43dfc58d","getAllPoolsForPair(address,address)":"62d99119","isPairSupported(address,address)":"9446994a","prepareAllAvailablePoolsWithCardinality(address,address,uint16)":"1b2a933c","prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)":"1c49cbb5","prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)":"33e4c28e","prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)":"e85dd383","prepareSpecificPoolsWithCardinality(address[],uint16)":"55eba792","prepareSpecificPoolsWithTimePeriod(address[],uint32)":"354b1a7d","quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)":"0757bc81","quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)":"d8045eca","quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)":"07f7ca9f","supportedFeeTiers()":"bc4389f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CARDINALITY_PER_MINUTE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_V3_FACTORY\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"feeTier\",\"type\":\"uint24\"}],\"name\":\"addNewFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getAllPoolsForPair\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"isPairSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"cardinality\",\"type\":\"uint16\"}],\"name\":\"prepareAllAvailablePoolsWithCardinality\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"preparedPools\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"prepareAllAvailablePoolsWithTimePeriod\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"preparedPools\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24[]\",\"name\":\"feeTiers\",\"type\":\"uint24[]\"},{\"internalType\":\"uint16\",\"name\":\"cardinality\",\"type\":\"uint16\"}],\"name\":\"prepareSpecificFeeTiersWithCardinality\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"preparedPools\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24[]\",\"name\":\"feeTiers\",\"type\":\"uint24[]\"},{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"prepareSpecificFeeTiersWithTimePeriod\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"preparedPools\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint16\",\"name\":\"cardinality\",\"type\":\"uint16\"}],\"name\":\"prepareSpecificPoolsWithCardinality\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"prepareSpecificPoolsWithTimePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"quoteAllAvailablePoolsWithTimePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"queriedPools\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"uint24[]\",\"name\":\"feeTiers\",\"type\":\"uint24[]\"},{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"quoteSpecificFeeTiersWithTimePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"queriedPools\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"baseAmount\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"pools\",\"type\":\"address[]\"},{\"internalType\":\"uint32\",\"name\":\"period\",\"type\":\"uint32\"}],\"name\":\"quoteSpecificPoolsWithTimePeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quoteAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportedFeeTiers\",\"outputs\":[{\"internalType\":\"uint24[]\",\"name\":\"\",\"type\":\"uint24[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"CARDINALITY_PER_MINUTE()\":{\"details\":\"This value is assigned during deployment and cannot be changed\",\"returns\":{\"_0\":\"Number of observation that are needed per minute\"}},\"UNISWAP_V3_FACTORY()\":{\"details\":\"This value is assigned during deployment and cannot be changed\",\"returns\":{\"_0\":\"The address of the Uniswap V3 factory\"}},\"addNewFeeTier(uint24)\":{\"details\":\"Will revert if the given tier is invalid, or already supported\",\"params\":{\"feeTier\":\"The new fee tier to add\"}},\"getAllPoolsForPair(address,address)\":{\"details\":\"The pair can be provided in tokenA/tokenB or tokenB/tokenA order\",\"returns\":{\"_0\":\"All existing pools for the given pair\"}},\"isPairSupported(address,address)\":{\"details\":\"The pair can be provided in tokenA/tokenB or tokenB/tokenA order\",\"returns\":{\"_0\":\"Whether the given pair can be supported by the oracle\"}},\"prepareAllAvailablePoolsWithCardinality(address,address,uint16)\":{\"details\":\"Will revert if there are no pools available for the pair and period combination\",\"params\":{\"cardinality\":\"The cardinality that will be guaranteed when quoting\",\"tokenA\":\"One of the pair's tokens\",\"tokenB\":\"The other of the pair's tokens\"},\"returns\":{\"preparedPools\":\"The pools that were prepared\"}},\"prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)\":{\"details\":\"Will revert if there are no pools available for the pair and period combination\",\"params\":{\"period\":\"The period that will be guaranteed when quoting\",\"tokenA\":\"One of the pair's tokens\",\"tokenB\":\"The other of the pair's tokens\"},\"returns\":{\"preparedPools\":\"The pools that were prepared\"}},\"prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)\":{\"details\":\"Will revert if the pair does not have a pool for a given fee tier\",\"params\":{\"cardinality\":\"The cardinality that will be guaranteed when quoting\",\"feeTiers\":\"The fee tiers to consider when searching for the pair's pools\",\"tokenA\":\"One of the pair's tokens\",\"tokenB\":\"The other of the pair's tokens\"},\"returns\":{\"preparedPools\":\"The pools that were prepared\"}},\"prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)\":{\"details\":\"Will revert if the pair does not have a pool for a given fee tier\",\"params\":{\"feeTiers\":\"The fee tiers to consider when searching for the pair's pools\",\"period\":\"The period that will be guaranteed when quoting\",\"tokenA\":\"One of the pair's tokens\",\"tokenB\":\"The other of the pair's tokens\"},\"returns\":{\"preparedPools\":\"The pools that were prepared\"}},\"prepareSpecificPoolsWithCardinality(address[],uint16)\":{\"params\":{\"cardinality\":\"The cardinality that will be guaranteed when quoting\",\"pools\":\"The pools to initialize\"}},\"prepareSpecificPoolsWithTimePeriod(address[],uint32)\":{\"params\":{\"period\":\"The period that will be guaranteed when quoting\",\"pools\":\"The pools to initialize\"}},\"quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)\":{\"details\":\"If some pools are not configured correctly for the given period, then they will be ignoredWill revert if there are no pools available/configured for the pair and period combination\",\"params\":{\"baseAmount\":\"Amount of token to be converted\",\"baseToken\":\"Address of an ERC20 token contract used as the baseAmount denomination\",\"period\":\"Number of seconds from which to calculate the TWAP\",\"quoteToken\":\"Address of an ERC20 token contract used as the quoteAmount denomination\"},\"returns\":{\"queriedPools\":\"The pools that were queried to calculate the quote\",\"quoteAmount\":\"Amount of quoteToken received for baseAmount of baseToken\"}},\"quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)\":{\"details\":\"Will revert if the pair does not have a pool for one of the given fee tiers, or if one of the pools is not prepared/configured correctly for the given period\",\"params\":{\"baseAmount\":\"Amount of token to be converted\",\"baseToken\":\"Address of an ERC20 token contract used as the baseAmount denomination\",\"feeTiers\":\"The fee tiers to consider when calculating the quote\",\"period\":\"Number of seconds from which to calculate the TWAP\",\"quoteToken\":\"Address of an ERC20 token contract used as the quoteAmount denomination\"},\"returns\":{\"queriedPools\":\"The pools that were queried to calculate the quote\",\"quoteAmount\":\"Amount of quoteToken received for baseAmount of baseToken\"}},\"quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)\":{\"details\":\"Will revert if one of the pools is not prepared/configured correctly for the given period\",\"params\":{\"baseAmount\":\"Amount of token to be converted\",\"baseToken\":\"Address of an ERC20 token contract used as the baseAmount denomination\",\"period\":\"Number of seconds from which to calculate the TWAP\",\"pools\":\"The pools to consider when calculating the quote\",\"quoteToken\":\"Address of an ERC20 token contract used as the quoteAmount denomination\"},\"returns\":{\"quoteAmount\":\"Amount of quoteToken received for baseAmount of baseToken\"}},\"supportedFeeTiers()\":{\"returns\":{\"_0\":\"The supported fee tiers\"}}},\"title\":\"Uniswap V3 Static Oracle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CARDINALITY_PER_MINUTE()\":{\"notice\":\"Returns how many observations are needed per minute in Uniswap V3 oracles, on the deployed chain\"},\"UNISWAP_V3_FACTORY()\":{\"notice\":\"Returns the address of the Uniswap V3 factory\"},\"addNewFeeTier(uint24)\":{\"notice\":\"Adds support for a new fee tier\"},\"getAllPoolsForPair(address,address)\":{\"notice\":\"Returns all existing pools for the given pair\"},\"isPairSupported(address,address)\":{\"notice\":\"Returns whether a specific pair can be supported by the oracle\"},\"prepareAllAvailablePoolsWithCardinality(address,address,uint16)\":{\"notice\":\"Will increase observations for all existing pools for the given pair, so they start accruing information for twap calculations\"},\"prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)\":{\"notice\":\"Will initialize all existing pools for the given pair, so that they can be queried with the given period in the future\"},\"prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)\":{\"notice\":\"Will increase the pair's pools with the specified fee tiers observations, so they start accruing information for twap calculations\"},\"prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)\":{\"notice\":\"Will initialize the pair's pools with the specified fee tiers, so that they can be queried with the given period in the future\"},\"prepareSpecificPoolsWithCardinality(address[],uint16)\":{\"notice\":\"Will increase all given pools observations, so they start accruing information for twap calculations\"},\"prepareSpecificPoolsWithTimePeriod(address[],uint32)\":{\"notice\":\"Will initialize all given pools, so that they can be queried with the given period in the future\"},\"quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)\":{\"notice\":\"Returns a quote, based on the given tokens and amount, by querying all of the pair's pools\"},\"quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)\":{\"notice\":\"Returns a quote, based on the given tokens and amount, by querying only the specified fee tiers\"},\"quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)\":{\"notice\":\"Returns a quote, based on the given tokens and amount, by querying only the specified pools\"},\"supportedFeeTiers()\":{\"notice\":\"Returns all supported fee tiers\"}},\"notice\":\"Oracle contract for calculating price quoting against Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IStaticOracle.sol\":\"IStaticOracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"contracts/interfaces/IStaticOracle.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\r\\n\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\\r\\n\\r\\n/// @title Uniswap V3 Static Oracle\\r\\n/// @notice Oracle contract for calculating price quoting against Uniswap V3\\r\\ninterface IStaticOracle {\\r\\n    /// @notice Returns the address of the Uniswap V3 factory\\r\\n    /// @dev This value is assigned during deployment and cannot be changed\\r\\n    /// @return The address of the Uniswap V3 factory\\r\\n    function UNISWAP_V3_FACTORY() external view returns (IUniswapV3Factory);\\r\\n\\r\\n    /// @notice Returns how many observations are needed per minute in Uniswap V3 oracles, on the deployed chain\\r\\n    /// @dev This value is assigned during deployment and cannot be changed\\r\\n    /// @return Number of observation that are needed per minute\\r\\n    function CARDINALITY_PER_MINUTE() external view returns (uint8);\\r\\n\\r\\n    /// @notice Returns all supported fee tiers\\r\\n    /// @return The supported fee tiers\\r\\n    function supportedFeeTiers() external view returns (uint24[] memory);\\r\\n\\r\\n    /// @notice Returns whether a specific pair can be supported by the oracle\\r\\n    /// @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\\r\\n    /// @return Whether the given pair can be supported by the oracle\\r\\n    function isPairSupported(address tokenA, address tokenB) external view returns (bool);\\r\\n\\r\\n    /// @notice Returns all existing pools for the given pair\\r\\n    /// @dev The pair can be provided in tokenA/tokenB or tokenB/tokenA order\\r\\n    /// @return All existing pools for the given pair\\r\\n    function getAllPoolsForPair(address tokenA, address tokenB) external view returns (address[] memory);\\r\\n\\r\\n    /// @notice Returns a quote, based on the given tokens and amount, by querying all of the pair's pools\\r\\n    /// @dev If some pools are not configured correctly for the given period, then they will be ignored\\r\\n    /// @dev Will revert if there are no pools available/configured for the pair and period combination\\r\\n    /// @param baseAmount Amount of token to be converted\\r\\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\\r\\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\\r\\n    /// @param period Number of seconds from which to calculate the TWAP\\r\\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\\r\\n    /// @return queriedPools The pools that were queried to calculate the quote\\r\\n    function quoteAllAvailablePoolsWithTimePeriod(\\r\\n        uint128 baseAmount,\\r\\n        address baseToken,\\r\\n        address quoteToken,\\r\\n        uint32 period\\r\\n    ) external view returns (uint256 quoteAmount, address[] memory queriedPools);\\r\\n\\r\\n    /// @notice Returns a quote, based on the given tokens and amount, by querying only the specified fee tiers\\r\\n    /// @dev Will revert if the pair does not have a pool for one of the given fee tiers, or if one of the pools\\r\\n    /// is not prepared/configured correctly for the given period\\r\\n    /// @param baseAmount Amount of token to be converted\\r\\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\\r\\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\\r\\n    /// @param feeTiers The fee tiers to consider when calculating the quote\\r\\n    /// @param period Number of seconds from which to calculate the TWAP\\r\\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\\r\\n    /// @return queriedPools The pools that were queried to calculate the quote\\r\\n    function quoteSpecificFeeTiersWithTimePeriod(\\r\\n        uint128 baseAmount,\\r\\n        address baseToken,\\r\\n        address quoteToken,\\r\\n        uint24[] calldata feeTiers,\\r\\n        uint32 period\\r\\n    ) external view returns (uint256 quoteAmount, address[] memory queriedPools);\\r\\n\\r\\n    /// @notice Returns a quote, based on the given tokens and amount, by querying only the specified pools\\r\\n    /// @dev Will revert if one of the pools is not prepared/configured correctly for the given period\\r\\n    /// @param baseAmount Amount of token to be converted\\r\\n    /// @param baseToken Address of an ERC20 token contract used as the baseAmount denomination\\r\\n    /// @param quoteToken Address of an ERC20 token contract used as the quoteAmount denomination\\r\\n    /// @param pools The pools to consider when calculating the quote\\r\\n    /// @param period Number of seconds from which to calculate the TWAP\\r\\n    /// @return quoteAmount Amount of quoteToken received for baseAmount of baseToken\\r\\n    function quoteSpecificPoolsWithTimePeriod(\\r\\n        uint128 baseAmount,\\r\\n        address baseToken,\\r\\n        address quoteToken,\\r\\n        address[] calldata pools,\\r\\n        uint32 period\\r\\n    ) external view returns (uint256 quoteAmount);\\r\\n\\r\\n    /// @notice Will initialize all existing pools for the given pair, so that they can be queried with the given period in the future\\r\\n    /// @dev Will revert if there are no pools available for the pair and period combination\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param period The period that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareAllAvailablePoolsWithTimePeriod(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint32 period\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will initialize the pair's pools with the specified fee tiers, so that they can be queried with the given period in the future\\r\\n    /// @dev Will revert if the pair does not have a pool for a given fee tier\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param feeTiers The fee tiers to consider when searching for the pair's pools\\r\\n    /// @param period The period that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareSpecificFeeTiersWithTimePeriod(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint24[] calldata feeTiers,\\r\\n        uint32 period\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will initialize all given pools, so that they can be queried with the given period in the future\\r\\n    /// @param pools The pools to initialize\\r\\n    /// @param period The period that will be guaranteed when quoting\\r\\n    function prepareSpecificPoolsWithTimePeriod(address[] calldata pools, uint32 period) external;\\r\\n\\r\\n    /// @notice Will increase observations for all existing pools for the given pair, so they start accruing information for twap calculations\\r\\n    /// @dev Will revert if there are no pools available for the pair and period combination\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param cardinality The cardinality that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareAllAvailablePoolsWithCardinality(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint16 cardinality\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will increase the pair's pools with the specified fee tiers observations, so they start accruing information for twap calculations\\r\\n    /// @dev Will revert if the pair does not have a pool for a given fee tier\\r\\n    /// @param tokenA One of the pair's tokens\\r\\n    /// @param tokenB The other of the pair's tokens\\r\\n    /// @param feeTiers The fee tiers to consider when searching for the pair's pools\\r\\n    /// @param cardinality The cardinality that will be guaranteed when quoting\\r\\n    /// @return preparedPools The pools that were prepared\\r\\n    function prepareSpecificFeeTiersWithCardinality(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint24[] calldata feeTiers,\\r\\n        uint16 cardinality\\r\\n    ) external returns (address[] memory preparedPools);\\r\\n\\r\\n    /// @notice Will increase all given pools observations, so they start accruing information for twap calculations\\r\\n    /// @param pools The pools to initialize\\r\\n    /// @param cardinality The cardinality that will be guaranteed when quoting\\r\\n    function prepareSpecificPoolsWithCardinality(address[] calldata pools, uint16 cardinality) external;\\r\\n\\r\\n    /// @notice Adds support for a new fee tier\\r\\n    /// @dev Will revert if the given tier is invalid, or already supported\\r\\n    /// @param feeTier The new fee tier to add\\r\\n    function addNewFeeTier(uint24 feeTier) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x592a6d2e0bfc7781db8700e7932c20e8c15f8de8307c5db562079f95f232877b\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"CARDINALITY_PER_MINUTE()":{"notice":"Returns how many observations are needed per minute in Uniswap V3 oracles, on the deployed chain"},"UNISWAP_V3_FACTORY()":{"notice":"Returns the address of the Uniswap V3 factory"},"addNewFeeTier(uint24)":{"notice":"Adds support for a new fee tier"},"getAllPoolsForPair(address,address)":{"notice":"Returns all existing pools for the given pair"},"isPairSupported(address,address)":{"notice":"Returns whether a specific pair can be supported by the oracle"},"prepareAllAvailablePoolsWithCardinality(address,address,uint16)":{"notice":"Will increase observations for all existing pools for the given pair, so they start accruing information for twap calculations"},"prepareAllAvailablePoolsWithTimePeriod(address,address,uint32)":{"notice":"Will initialize all existing pools for the given pair, so that they can be queried with the given period in the future"},"prepareSpecificFeeTiersWithCardinality(address,address,uint24[],uint16)":{"notice":"Will increase the pair's pools with the specified fee tiers observations, so they start accruing information for twap calculations"},"prepareSpecificFeeTiersWithTimePeriod(address,address,uint24[],uint32)":{"notice":"Will initialize the pair's pools with the specified fee tiers, so that they can be queried with the given period in the future"},"prepareSpecificPoolsWithCardinality(address[],uint16)":{"notice":"Will increase all given pools observations, so they start accruing information for twap calculations"},"prepareSpecificPoolsWithTimePeriod(address[],uint32)":{"notice":"Will initialize all given pools, so that they can be queried with the given period in the future"},"quoteAllAvailablePoolsWithTimePeriod(uint128,address,address,uint32)":{"notice":"Returns a quote, based on the given tokens and amount, by querying all of the pair's pools"},"quoteSpecificFeeTiersWithTimePeriod(uint128,address,address,uint24[],uint32)":{"notice":"Returns a quote, based on the given tokens and amount, by querying only the specified fee tiers"},"quoteSpecificPoolsWithTimePeriod(uint128,address,address,address[],uint32)":{"notice":"Returns a quote, based on the given tokens and amount, by querying only the specified pools"},"supportedFeeTiers()":{"notice":"Returns all supported fee tiers"}},"notice":"Oracle contract for calculating price quoting against Uniswap V3","version":1}}}}}}