{"id":"840a3076b8d903c562302f16a5b58493","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\n    struct ReentrancyGuardStorage {\n        uint256 _status;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ReentrancyGuard\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\n\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\n        assembly {\n            $.slot := ReentrancyGuardStorageLocation\n        }\n    }\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if ($._status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        $._status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        $._status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\n        return $._status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/interfaces/IBaluniV1Oracle.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Oracle {\r\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\r\n\r\n    function convertScaled(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) external view returns (uint256 valuation);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Registry.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\n/**\r\n * @title IBaluniV1Registry\r\n * @dev Interface for the BaluniV1Registry contract.\r\n */\r\ninterface IBaluniV1Registry {\r\n    function setUniswapFactory(address _uniswapFactory) external;\r\n\r\n    function setUniswapRouter(address _uniswapRouter) external;\r\n\r\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\r\n\r\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\r\n\r\n    function setBaluniSwapper(address _baluniSwapper) external;\r\n\r\n    function setBaluniOracle(address _baluniOracle) external;\r\n\r\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\r\n\r\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\r\n\r\n    function setBaluniRebalancer(address _baluniRebalancer) external;\r\n\r\n    function setBaluniRouter(address _baluniRouter) external;\r\n\r\n    function setBaluniRegistry(address _baluniRegistry) external;\r\n\r\n    function setWNATIVE(address _WNATIVE) external;\r\n\r\n    function setUSDC(address _USDC) external;\r\n\r\n    function setTreasury(address _treasury) external;\r\n\r\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\r\n\r\n    function setBPS_FEE(uint256 __BPS_FEE) external;\r\n\r\n    function getUniswapFactory() external view returns (address);\r\n\r\n    function getUniswapRouter() external view returns (address);\r\n\r\n    function getBaluniSwapper() external view returns (address);\r\n\r\n    function getBaluniOracle() external view returns (address);\r\n\r\n    function getBaluniAgentFactory() external view returns (address);\r\n\r\n    function getBaluniPoolPeriphery() external view returns (address);\r\n\r\n    function getBaluniVaultRegistry() external view returns (address);\r\n\r\n    function getBaluniPoolRegistry() external view returns (address);\r\n\r\n    function getBaluniRebalancer() external view returns (address);\r\n\r\n    function getBaluniRouter() external view returns (address);\r\n\r\n    function getBaluniRegistry() external view returns (address);\r\n\r\n    function getWNATIVE() external view returns (address);\r\n\r\n    function getUSDC() external view returns (address);\r\n\r\n    function get1inchSpotAgg() external view returns (address);\r\n\r\n    function getBPS_FEE() external view returns (uint256);\r\n\r\n    function getMAX_BPS_FEE() external view returns (uint256);\r\n\r\n    function getBPS_BASE() external view returns (uint256);\r\n\r\n    function getTreasury() external view returns (address);\r\n\r\n    function setStaticOracle(address _staticOracle) external;\r\n\r\n    function getStaticOracle() external view returns (address);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Swapper.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Swapper {\r\n    function singleSwap(\r\n        address token0,\r\n        address token1,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut);\r\n    function multiHopSwap(\r\n        address token0,\r\n        address token1,\r\n        address token2,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 amountOut);\r\n}\r\n"},"contracts/interfaces/IBaluniV1yVault.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1yVault {\r\n    function baseAsset() external view returns (address);\r\n    function yearnVault() external view returns (address);\r\n    function quoteAsset() external view returns (address);\r\n    function registry() external view returns (address);\r\n    function totalDeposits() external view returns (uint256);\r\n    function accumulatedAssetB() external view returns (uint256);\r\n    function deposit(uint256 amount, address to) external;\r\n    function withdraw(uint256 shares, address to) external;\r\n    function buy() external;\r\n    function pause() external;\r\n    function unpause() external;\r\n    function totalValuation() external view returns (uint256);\r\n    function unitPrice() external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IYearnVault.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ninterface IYearnVault {\r\n    function asset() external view returns (address);\r\n\r\n    function balanceOf(address owner) external view returns (uint256);\r\n\r\n    function maxDeposit(address receiver) external view returns (uint256);\r\n\r\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256);\r\n\r\n    function deposit(uint256 assets, address receiver) external returns (uint256);\r\n\r\n    function totalAssets() external view returns (uint256);\r\n\r\n    function convertToAssets(uint256 shares) external view returns (uint256);\r\n\r\n    function convertToShares(uint256 assets) external view returns (uint256);\r\n\r\n    function previewWithdraw(uint256 assets) external view returns (uint256);\r\n\r\n    function maxRedeem(address owner) external view returns (uint256);\r\n}\r\n"},"contracts/vaults/BaluniV1yVault.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol';\r\n\r\nimport '../interfaces/IBaluniV1Registry.sol';\r\nimport '../interfaces/IYearnVault.sol';\r\nimport '../interfaces/IBaluniV1Swapper.sol';\r\nimport '../interfaces/IBaluniV1Oracle.sol';\r\nimport '../interfaces/IBaluniV1yVault.sol';\r\n\r\ncontract BaluniV1yVault is\r\n    Initializable,\r\n    UUPSUpgradeable,\r\n    OwnableUpgradeable,\r\n    ERC20Upgradeable,\r\n    ReentrancyGuardUpgradeable,\r\n    PausableUpgradeable,\r\n    IBaluniV1yVault\r\n{\r\n    // The address of the asset accepted by the pool\r\n    address public baseAsset;\r\n\r\n    // The address of the Yearn Vault for assetA\r\n    IYearnVault private _yearnVault;\r\n\r\n    // The address of the asset to be purchased with interest\r\n    address public quoteAsset;\r\n\r\n    // The registry contract used in the BaluniV1 system\r\n    IBaluniV1Registry private _registry;\r\n\r\n    uint256 public totalDeposits;\r\n\r\n    uint256 public accumulatedAssetB;\r\n\r\n    /**\r\n     * @dev Initializes the BaluniV1Pool contract.\r\n     * @param _assetA The address of the accepted asset.\r\n     * @param _yearnVaultAddress The address of the Yearn Vault for assetA.\r\n     * @param _assetB The address of the asset to be purchased with interest.\r\n     * @param _registryAddress The address of the BaluniV1Registry contract.\r\n     */\r\n    function initialize(\r\n        string memory _name,\r\n        string memory _symbol,\r\n        address _assetA,\r\n        address _yearnVaultAddress,\r\n        address _assetB,\r\n        address _registryAddress\r\n    ) external initializer {\r\n        __Ownable_init(msg.sender);\r\n        __ERC20_init(_name, _symbol);\r\n\r\n        baseAsset = _assetA;\r\n        _yearnVault = IYearnVault(_yearnVaultAddress);\r\n        quoteAsset = _assetB;\r\n        _registry = IBaluniV1Registry(_registryAddress);\r\n\r\n        require(baseAsset != address(0), 'Invalid assetA address');\r\n        require(address(_yearnVault) != address(0), 'Invalid Yearn Vault address');\r\n        require(quoteAsset != address(0), 'Invalid assetB address');\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n     * @param newImplementation The address of the new implementation contract.\r\n     * @notice This function can only be called by the contract owner.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Deposits assetA into the pool and Yearn Vault.\r\n     * @param amount The amount of assetA to deposit.\r\n     * @param to The address to receive pool tokens.\r\n     */\r\n    function deposit(uint256 amount, address to) external override nonReentrant whenNotPaused {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        _processInterest();\r\n\r\n        IERC20(baseAsset).transferFrom(msg.sender, address(this), amount);\r\n\r\n        IERC20(baseAsset).approve(address(_yearnVault), amount);\r\n        _yearnVault.deposit(amount, address(this));\r\n\r\n        _mint(to, amount);\r\n        totalDeposits += amount;\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraws assetA and assetB from the pool and Yearn Vault.\r\n     * @param shares The amount of pool tokens to redeem.\r\n     * @param to The address to receive assetA and assetB.\r\n     */\r\n    function withdraw(uint256 shares, address to) external override nonReentrant whenNotPaused {\r\n        require(shares > 0, 'Shares must be greater than zero');\r\n        require(balanceOf(msg.sender) >= shares, 'Insufficient balance');\r\n\r\n        uint256 withdrawAmountA = (shares * totalDeposits) / totalSupply();\r\n        uint256 withdrawAmountB = (shares * accumulatedAssetB) / totalSupply();\r\n\r\n        _burn(msg.sender, shares);\r\n        totalDeposits -= withdrawAmountA;\r\n        accumulatedAssetB -= withdrawAmountB;\r\n\r\n        uint256 sharesToRedeem = _yearnVault.convertToShares(withdrawAmountA);\r\n        _yearnVault.redeem(sharesToRedeem, address(this), address(this));\r\n        IERC20(baseAsset).transfer(to, withdrawAmountA);\r\n        IERC20(quoteAsset).transfer(to, withdrawAmountB);\r\n    }\r\n\r\n    /**\r\n     * @dev Uses the accumulated interest to purchase assetB.\r\n     */\r\n    function _buy() internal {\r\n        uint256 totalAssets = _yearnVault.convertToAssets(_yearnVault.balanceOf(address(this)));\r\n        uint256 interest = totalAssets > totalDeposits ? totalAssets - totalDeposits : 0;\r\n        require(interest > 0, 'No interest available');\r\n\r\n        uint256 sharesToRedeem = _yearnVault.previewWithdraw(interest);\r\n        _yearnVault.redeem(sharesToRedeem, address(this), address(this));\r\n\r\n        IBaluniV1Swapper swapper = IBaluniV1Swapper(_registry.getBaluniSwapper());\r\n\r\n        IERC20(baseAsset).approve(address(swapper), interest);\r\n\r\n        uint256 amountOut = swapper.singleSwap(baseAsset, quoteAsset, interest, address(this));\r\n\r\n        accumulatedAssetB += amountOut;\r\n    }\r\n\r\n    function buy() external override nonReentrant onlyOwner whenNotPaused {\r\n        _buy();\r\n    }\r\n\r\n    /**\r\n     * @dev Checks and processes accumulated interest.\r\n     */\r\n    function _processInterest() internal {\r\n        uint256 totalAssets = _yearnVault.convertToAssets(_yearnVault.balanceOf(address(this)));\r\n        uint256 interest = totalAssets > totalDeposits ? totalAssets - totalDeposits : 0;\r\n        if (interest > 0) {\r\n            _buy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev pause pool, restricting certain operations\r\n     */\r\n    function pause() external override onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev unpause pool, enabling certain operations\r\n     */\r\n    function unpause() external override onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function totalValuation() public view override returns (uint256) {\r\n        IBaluniV1Oracle oracle = IBaluniV1Oracle(_registry.getBaluniOracle());\r\n        address USDC = _registry.getUSDC();\r\n        uint256 valuation = 0;\r\n        uint balanceBase = IERC20(baseAsset).balanceOf(address(this));\r\n        uint yearnBalance = _yearnVault.balanceOf(address(this));\r\n        uint yearnBalanceConvert = _yearnVault.convertToAssets(yearnBalance);\r\n        uint balanceQuote = IERC20(quoteAsset).balanceOf(address(this));\r\n        valuation += oracle.convert(quoteAsset, baseAsset, yearnBalanceConvert);\r\n        valuation += oracle.convert(quoteAsset, baseAsset, balanceQuote);\r\n        if (baseAsset != USDC) valuation += oracle.convert(baseAsset, USDC, balanceBase);\r\n        valuation += balanceBase;\r\n        return valuation;\r\n    }\r\n\r\n    function unitPrice() external view override returns (uint256) {\r\n        address USDC = _registry.getUSDC();\r\n        uint8 decimals = IERC20Metadata(USDC).decimals();\r\n        uint256 valuationScaledUp = totalValuation() * 10 ** (18 - decimals);\r\n        return (valuationScaledUp / totalSupply()) * 1e18;\r\n    }\r\n\r\n    function registry() external view override returns (address) {\r\n        return address(_registry);\r\n    }\r\n\r\n    function yearnVault() external view override returns (address) {\r\n        return address(_yearnVault);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":2000},"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":1294,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,1293,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[2048],"IERC1822Proxiable":[1608],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1609,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":2049,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":1608,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,1608,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1607],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1806,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1775,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1867,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$2048_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1780,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1608_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1608","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,1780,1793,2175,2178],"usedEvents":[219,1759]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"ERC20Upgradeable":[1247],"IERC20":[2136],"IERC20Errors":[1650],"IERC20Metadata":[2162],"Initializable":[448]},"id":1248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":2137,"src":"131:70:3","symbolAliases":[{"foreign":{"id":633,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":2163,"src":"202:97:3","symbolAliases":[{"foreign":{"id":635,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"210:14:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../../utils/ContextUpgradeable.sol","id":638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1294,"src":"300:70:3","symbolAliases":[{"foreign":{"id":637,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"308:18:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","id":640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":1746,"src":"371:83:3","symbolAliases":[{"foreign":{"id":639,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"379:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1248,"sourceUnit":449,"src":"455:66:3","symbolAliases":[{"foreign":{"id":641,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"463:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":644,"name":"Initializable","nameLocations":["1614:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1614:13:3"},"id":645,"nodeType":"InheritanceSpecifier","src":"1614:13:3"},{"baseName":{"id":646,"name":"ContextUpgradeable","nameLocations":["1629:18:3"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"1629:18:3"},"id":647,"nodeType":"InheritanceSpecifier","src":"1629:18:3"},{"baseName":{"id":648,"name":"IERC20","nameLocations":["1649:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"1649:6:3"},"id":649,"nodeType":"InheritanceSpecifier","src":"1649:6:3"},{"baseName":{"id":650,"name":"IERC20Metadata","nameLocations":["1657:14:3"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"1657:14:3"},"id":651,"nodeType":"InheritanceSpecifier","src":"1657:14:3"},{"baseName":{"id":652,"name":"IERC20Errors","nameLocations":["1673:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1650,"src":"1673:12:3"},"id":653,"nodeType":"InheritanceSpecifier","src":"1673:12:3"}],"canonicalName":"ERC20Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"523:1052:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1247,"linearizedBaseContracts":[1247,1650,2162,2136,1293,448],"name":"ERC20Upgradeable","nameLocation":"1594:16:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC20Upgradeable.ERC20Storage","documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1692:63:3","text":"@custom:storage-location erc7201:openzeppelin.storage.ERC20"},"id":671,"members":[{"constant":false,"id":658,"mutability":"mutable","name":"_balances","nameLocation":"1826:9:3","nodeType":"VariableDeclaration","scope":671,"src":"1790:45:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":657,"keyName":"account","keyNameLocation":"1806:7:3","keyType":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":656,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":664,"mutability":"mutable","name":"_allowances","nameLocation":"1910:11:3","nodeType":"VariableDeclaration","scope":671,"src":"1846:75:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":663,"keyName":"account","keyNameLocation":"1862:7:3","keyType":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"1854:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1846:63:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":662,"keyName":"spender","keyNameLocation":"1889:7:3","keyType":{"id":660,"name":"address","nodeType":"ElementaryTypeName","src":"1881:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1873:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"_totalSupply","nameLocation":"1940:12:3","nodeType":"VariableDeclaration","scope":671,"src":"1932:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1932:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"_name","nameLocation":"1970:5:3","nodeType":"VariableDeclaration","scope":671,"src":"1963:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"1963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"_symbol","nameLocation":"1992:7:3","nodeType":"VariableDeclaration","scope":671,"src":"1985:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":669,"name":"string","nodeType":"ElementaryTypeName","src":"1985:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ERC20Storage","nameLocation":"1767:12:3","nodeType":"StructDefinition","scope":1247,"src":"1760:246:3","visibility":"public"},{"constant":true,"id":674,"mutability":"constant","name":"ERC20StorageLocation","nameLocation":"2146:20:3","nodeType":"VariableDeclaration","scope":1247,"src":"2121:114:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":672,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2121:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2169:66:3","typeDescriptions":{"typeIdentifier":"t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1","typeString":"int_const 3743...(69 digits omitted)...2592"},"value":"0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"},"visibility":"private"},{"body":{"id":681,"nodeType":"Block","src":"2316:79:3","statements":[{"AST":{"nativeSrc":"2335:54:3","nodeType":"YulBlock","src":"2335:54:3","statements":[{"nativeSrc":"2349:30:3","nodeType":"YulAssignment","src":"2349:30:3","value":{"name":"ERC20StorageLocation","nativeSrc":"2359:20:3","nodeType":"YulIdentifier","src":"2359:20:3"},"variableNames":[{"name":"$.slot","nativeSrc":"2349:6:3","nodeType":"YulIdentifier","src":"2349:6:3"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":678,"isOffset":false,"isSlot":true,"src":"2349:6:3","suffix":"slot","valueSize":1},{"declaration":674,"isOffset":false,"isSlot":false,"src":"2359:20:3","valueSize":1}],"id":680,"nodeType":"InlineAssembly","src":"2326:63:3"}]},"id":682,"implemented":true,"kind":"function","modifiers":[],"name":"_getERC20Storage","nameLocation":"2251:16:3","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[],"src":"2267:2:3"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"$","nameLocation":"2313:1:3","nodeType":"VariableDeclaration","scope":682,"src":"2292:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":677,"nodeType":"UserDefinedTypeName","pathNode":{"id":676,"name":"ERC20Storage","nameLocations":["2292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2292:12:3"},"referencedDeclaration":671,"src":"2292:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"src":"2291:24:3"},"scope":1247,"src":"2242:153:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":697,"nodeType":"Block","src":"2669:55:3","statements":[{"expression":{"arguments":[{"id":693,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":685,"src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":694,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"2709:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":692,"name":"__ERC20_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"2679:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2679:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":696,"nodeType":"ExpressionStatement","src":"2679:38:3"}]},"documentation":{"id":683,"nodeType":"StructuredDocumentation","src":"2401:171:3","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":698,"implemented":true,"kind":"function","modifiers":[{"id":690,"kind":"modifierInvocation","modifierName":{"id":689,"name":"onlyInitializing","nameLocations":["2652:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2652:16:3"},"nodeType":"ModifierInvocation","src":"2652:16:3"}],"name":"__ERC20_init","nameLocation":"2586:12:3","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"name_","nameLocation":"2613:5:3","nodeType":"VariableDeclaration","scope":698,"src":"2599:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":684,"name":"string","nodeType":"ElementaryTypeName","src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":687,"mutability":"mutable","name":"symbol_","nameLocation":"2634:7:3","nodeType":"VariableDeclaration","scope":698,"src":"2620:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":686,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2598:44:3"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[],"src":"2669:0:3"},"scope":1247,"src":"2577:147:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":725,"nodeType":"Block","src":"2832:114:3","statements":[{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"$","nameLocation":"2863:1:3","nodeType":"VariableDeclaration","scope":725,"src":"2842:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":708,"nodeType":"UserDefinedTypeName","pathNode":{"id":707,"name":"ERC20Storage","nameLocations":["2842:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"2842:12:3"},"referencedDeclaration":671,"src":"2842:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":712,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":710,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"2867:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2867:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2842:43:3"},{"expression":{"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":713,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2897:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"2895:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":716,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"2905:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2895:15:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":718,"nodeType":"ExpressionStatement","src":"2895:15:3"},{"expression":{"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":719,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"2920:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":721,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2922:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"2920:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":722,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2932:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2920:19:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":724,"nodeType":"ExpressionStatement","src":"2920:19:3"}]},"id":726,"implemented":true,"kind":"function","modifiers":[{"id":705,"kind":"modifierInvocation","modifierName":{"id":704,"name":"onlyInitializing","nameLocations":["2815:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2815:16:3"},"nodeType":"ModifierInvocation","src":"2815:16:3"}],"name":"__ERC20_init_unchained","nameLocation":"2739:22:3","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"name_","nameLocation":"2776:5:3","nodeType":"VariableDeclaration","scope":726,"src":"2762:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":699,"name":"string","nodeType":"ElementaryTypeName","src":"2762:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"symbol_","nameLocation":"2797:7:3","nodeType":"VariableDeclaration","scope":726,"src":"2783:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":701,"name":"string","nodeType":"ElementaryTypeName","src":"2783:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2761:44:3"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[],"src":"2832:0:3"},"scope":1247,"src":"2730:216:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2149],"body":{"id":741,"nodeType":"Block","src":"3071:84:3","statements":[{"assignments":[734],"declarations":[{"constant":false,"id":734,"mutability":"mutable","name":"$","nameLocation":"3102:1:3","nodeType":"VariableDeclaration","scope":741,"src":"3081:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":733,"nodeType":"UserDefinedTypeName","pathNode":{"id":732,"name":"ERC20Storage","nameLocations":["3081:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3081:12:3"},"referencedDeclaration":671,"src":"3081:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":737,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":735,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3106:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3106:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3081:43:3"},{"expression":{"expression":{"id":738,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3141:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3143:5:3","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":668,"src":"3141:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":731,"id":740,"nodeType":"Return","src":"3134:14:3"}]},"documentation":{"id":727,"nodeType":"StructuredDocumentation","src":"2952:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":742,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"3020:4:3","nodeType":"FunctionDefinition","parameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3024:2:3"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":742,"src":"3056:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":729,"name":"string","nodeType":"ElementaryTypeName","src":"3056:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3055:15:3"},"scope":1247,"src":"3011:144:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2155],"body":{"id":757,"nodeType":"Block","src":"3330:86:3","statements":[{"assignments":[750],"declarations":[{"constant":false,"id":750,"mutability":"mutable","name":"$","nameLocation":"3361:1:3","nodeType":"VariableDeclaration","scope":757,"src":"3340:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":749,"nodeType":"UserDefinedTypeName","pathNode":{"id":748,"name":"ERC20Storage","nameLocations":["3340:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"3340:12:3"},"referencedDeclaration":671,"src":"3340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":753,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":751,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"3365:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3365:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3340:43:3"},{"expression":{"expression":{"id":754,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"3400:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3402:7:3","memberName":"_symbol","nodeType":"MemberAccess","referencedDeclaration":670,"src":"3400:9:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":747,"id":756,"nodeType":"Return","src":"3393:16:3"}]},"documentation":{"id":743,"nodeType":"StructuredDocumentation","src":"3161:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":758,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3277:6:3","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[],"src":"3283:2:3"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"3315:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"3315:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3314:15:3"},"scope":1247,"src":"3268:148:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2161],"body":{"id":766,"nodeType":"Block","src":"4105:26:3","statements":[{"expression":{"hexValue":"3138","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4122:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":763,"id":765,"nodeType":"Return","src":"4115:9:3"}]},"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3422:622:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":767,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"4058:8:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[],"src":"4066:2:3"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":767,"src":"4098:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":761,"name":"uint8","nodeType":"ElementaryTypeName","src":"4098:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4097:7:3"},"scope":1247,"src":"4049:82:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2085],"body":{"id":782,"nodeType":"Block","src":"4252:91:3","statements":[{"assignments":[775],"declarations":[{"constant":false,"id":775,"mutability":"mutable","name":"$","nameLocation":"4283:1:3","nodeType":"VariableDeclaration","scope":782,"src":"4262:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":774,"nodeType":"UserDefinedTypeName","pathNode":{"id":773,"name":"ERC20Storage","nameLocations":["4262:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4262:12:3"},"referencedDeclaration":671,"src":"4262:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":776,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4287:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4262:43:3"},{"expression":{"expression":{"id":779,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"4322:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4324:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"4322:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":772,"id":781,"nodeType":"Return","src":"4315:21:3"}]},"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"4137:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":783,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"4200:11:3","nodeType":"FunctionDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"4211:2:3"},"returnParameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":783,"src":"4243:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint256","nodeType":"ElementaryTypeName","src":"4243:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4242:9:3"},"scope":1247,"src":"4191:152:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2093],"body":{"id":802,"nodeType":"Block","src":"4475:97:3","statements":[{"assignments":[793],"declarations":[{"constant":false,"id":793,"mutability":"mutable","name":"$","nameLocation":"4506:1:3","nodeType":"VariableDeclaration","scope":802,"src":"4485:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":792,"nodeType":"UserDefinedTypeName","pathNode":{"id":791,"name":"ERC20Storage","nameLocations":["4485:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"4485:12:3"},"referencedDeclaration":671,"src":"4485:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":796,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":794,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"4510:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4510:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4485:43:3"},{"expression":{"baseExpression":{"expression":{"id":797,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"4545:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4547:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"4545:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"4557:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4545:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":790,"id":801,"nodeType":"Return","src":"4538:27:3"}]},"documentation":{"id":784,"nodeType":"StructuredDocumentation","src":"4349:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":803,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4410:9:3","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":803,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":785,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:17:3"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":803,"src":"4466:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4466:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4465:9:3"},"scope":1247,"src":"4401:171:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2103],"body":{"id":826,"nodeType":"Block","src":"4842:103:3","statements":[{"assignments":[814],"declarations":[{"constant":false,"id":814,"mutability":"mutable","name":"owner","nameLocation":"4860:5:3","nodeType":"VariableDeclaration","scope":826,"src":"4852:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"4852:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":817,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"4868:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4868:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4852:28:3"},{"expression":{"arguments":[{"id":819,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":814,"src":"4900:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"4907:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"4911:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":818,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"4890:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4890:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":823,"nodeType":"ExpressionStatement","src":"4890:27:3"},{"expression":{"hexValue":"74727565","id":824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4934:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":812,"id":825,"nodeType":"Return","src":"4927:11:3"}]},"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"4578:184:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":827,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4776:8:3","nodeType":"FunctionDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"to","nameLocation":"4793:2:3","nodeType":"VariableDeclaration","scope":827,"src":"4785:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"4785:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"value","nameLocation":"4805:5:3","nodeType":"VariableDeclaration","scope":827,"src":"4797:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"4797:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4784:27:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":827,"src":"4836:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":810,"name":"bool","nodeType":"ElementaryTypeName","src":"4836:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4835:6:3"},"scope":1247,"src":"4767:178:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2113],"body":{"id":850,"nodeType":"Block","src":"5092:106:3","statements":[{"assignments":[839],"declarations":[{"constant":false,"id":839,"mutability":"mutable","name":"$","nameLocation":"5123:1:3","nodeType":"VariableDeclaration","scope":850,"src":"5102:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":838,"nodeType":"UserDefinedTypeName","pathNode":{"id":837,"name":"ERC20Storage","nameLocations":["5102:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"5102:12:3"},"referencedDeclaration":671,"src":"5102:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":842,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":840,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5127:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5127:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5102:43:3"},{"expression":{"baseExpression":{"baseExpression":{"expression":{"id":843,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"5162:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"5162:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":846,"indexExpression":{"id":845,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"5176:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":848,"indexExpression":{"id":847,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"5183:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5162:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":836,"id":849,"nodeType":"Return","src":"5155:36:3"}]},"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4951:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"5012:9:3","nodeType":"FunctionDefinition","parameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"owner","nameLocation":"5030:5:3","nodeType":"VariableDeclaration","scope":851,"src":"5022:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"5022:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"spender","nameLocation":"5045:7:3","nodeType":"VariableDeclaration","scope":851,"src":"5037:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":831,"name":"address","nodeType":"ElementaryTypeName","src":"5037:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5021:32:3"},"returnParameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":851,"src":"5083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"5083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5082:9:3"},"scope":1247,"src":"5003:195:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2123],"body":{"id":874,"nodeType":"Block","src":"5584:107:3","statements":[{"assignments":[862],"declarations":[{"constant":false,"id":862,"mutability":"mutable","name":"owner","nameLocation":"5602:5:3","nodeType":"VariableDeclaration","scope":874,"src":"5594:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":865,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":863,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"5610:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:28:3"},{"expression":{"arguments":[{"id":867,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5641:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5648:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5657:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1130,"src":"5632:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"ExpressionStatement","src":"5632:31:3"},{"expression":{"hexValue":"74727565","id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":860,"id":873,"nodeType":"Return","src":"5673:11:3"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"5204:296:3","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":875,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"5514:7:3","nodeType":"FunctionDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"spender","nameLocation":"5530:7:3","nodeType":"VariableDeclaration","scope":875,"src":"5522:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"value","nameLocation":"5547:5:3","nodeType":"VariableDeclaration","scope":875,"src":"5539:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"5539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5521:32:3"},"returnParameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":875,"src":"5578:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":858,"name":"bool","nodeType":"ElementaryTypeName","src":"5578:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5577:6:3"},"scope":1247,"src":"5505:186:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2135],"body":{"id":906,"nodeType":"Block","src":"6344:151:3","statements":[{"assignments":[888],"declarations":[{"constant":false,"id":888,"mutability":"mutable","name":"spender","nameLocation":"6362:7:3","nodeType":"VariableDeclaration","scope":906,"src":"6354:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"6354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":891,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":889,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"6372:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6372:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6354:30:3"},{"expression":{"arguments":[{"id":893,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6410:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":894,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"6416:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":892,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6394:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6394:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"6394:37:3"},{"expression":{"arguments":[{"id":899,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6451:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6457:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"6461:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":898,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6441:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6441:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"6441:26:3"},{"expression":{"hexValue":"74727565","id":904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6484:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":886,"id":905,"nodeType":"Return","src":"6477:11:3"}]},"documentation":{"id":876,"nodeType":"StructuredDocumentation","src":"5697:549:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6260:12:3","nodeType":"FunctionDefinition","parameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":878,"mutability":"mutable","name":"from","nameLocation":"6281:4:3","nodeType":"VariableDeclaration","scope":907,"src":"6273:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"6273:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"to","nameLocation":"6295:2:3","nodeType":"VariableDeclaration","scope":907,"src":"6287:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"6287:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"value","nameLocation":"6307:5:3","nodeType":"VariableDeclaration","scope":907,"src":"6299:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"6299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6272:41:3"},"returnParameters":{"id":886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"6338:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":884,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6337:6:3"},"scope":1247,"src":"6251:244:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":953,"nodeType":"Block","src":"6937:231:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":917,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6951:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6967:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6959:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"6959:7:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6959:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6951:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":931,"nodeType":"IfStatement","src":"6947:86:3","trueBody":{"id":930,"nodeType":"Block","src":"6971:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7019:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7011:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":924,"name":"address","nodeType":"ElementaryTypeName","src":"7011:7:3","typeDescriptions":{}}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"6992:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6992:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":929,"nodeType":"RevertStatement","src":"6985:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":932,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7046:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7060:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7052:7:3","typeDescriptions":{}}},"id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7046:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":946,"nodeType":"IfStatement","src":"7042:86:3","trueBody":{"id":945,"nodeType":"Block","src":"7064:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7114:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7106:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"7106:7:3","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":938,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"7085:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7085:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"RevertStatement","src":"7078:39:3"}]}},{"expression":{"arguments":[{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"7145:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":949,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7151:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"7155:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":947,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"7137:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7137:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":952,"nodeType":"ExpressionStatement","src":"7137:24:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"6501:362:3","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"6877:9:3","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"from","nameLocation":"6895:4:3","nodeType":"VariableDeclaration","scope":954,"src":"6887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"to","nameLocation":"6909:2:3","nodeType":"VariableDeclaration","scope":954,"src":"6901:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6901:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"value","nameLocation":"6921:5:3","nodeType":"VariableDeclaration","scope":954,"src":"6913:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6886:41:3"},"returnParameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"6937:0:3"},"scope":1247,"src":"6868:300:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1045,"nodeType":"Block","src":"7558:1095:3","statements":[{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"$","nameLocation":"7589:1:3","nodeType":"VariableDeclaration","scope":1045,"src":"7568:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"ERC20Storage","nameLocations":["7568:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"7568:12:3"},"referencedDeclaration":671,"src":"7568:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":969,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":967,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"7593:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7568:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7625:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7641:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7633:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":971,"name":"address","nodeType":"ElementaryTypeName","src":"7633:7:3","typeDescriptions":{}}},"id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7625:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1012,"nodeType":"Block","src":"7801:366:3","statements":[{"assignments":[984],"declarations":[{"constant":false,"id":984,"mutability":"mutable","name":"fromBalance","nameLocation":"7823:11:3","nodeType":"VariableDeclaration","scope":1012,"src":"7815:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"7815:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":989,"initialValue":{"baseExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7837:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7839:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"7837:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":988,"indexExpression":{"id":987,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7849:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7837:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7815:39:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":990,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7872:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7886:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7872:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"IfStatement","src":"7868:115:3","trueBody":{"id":999,"nodeType":"Block","src":"7893:90:3","statements":[{"errorCall":{"arguments":[{"id":994,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"7943:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":995,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"7949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7962:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":993,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1620,"src":"7918:24:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7918:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":998,"nodeType":"RevertStatement","src":"7911:57:3"}]}},{"id":1011,"nodeType":"UncheckedBlock","src":"7996:161:3","statements":[{"expression":{"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1001,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8103:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8105:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8103:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1005,"indexExpression":{"id":1003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8115:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8103:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1006,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"8123:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8137:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8123:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8103:39:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1010,"nodeType":"ExpressionStatement","src":"8103:39:3"}]}]},"id":1013,"nodeType":"IfStatement","src":"7621:546:3","trueBody":{"id":982,"nodeType":"Block","src":"7645:150:3","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":976,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7761:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7763:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"7761:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"7779:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7761:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"7761:23:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8181:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8195:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8187:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:3","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8187:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8181:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1037,"nodeType":"Block","src":"8398:208:3","statements":[{"id":1036,"nodeType":"UncheckedBlock","src":"8412:184:3","statements":[{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1028,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8557:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8559:9:3","memberName":"_balances","nodeType":"MemberAccess","referencedDeclaration":658,"src":"8557:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1030,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8569:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8557:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8576:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8557:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"8557:24:3"}]}]},"id":1038,"nodeType":"IfStatement","src":"8177:429:3","trueBody":{"id":1027,"nodeType":"Block","src":"8199:193:3","statements":[{"id":1026,"nodeType":"UncheckedBlock","src":"8213:169:3","statements":[{"expression":{"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1020,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8344:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1022,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8346:12:3","memberName":"_totalSupply","nodeType":"MemberAccess","referencedDeclaration":666,"src":"8344:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8362:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8344:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1025,"nodeType":"ExpressionStatement","src":"8344:23:3"}]}]}},{"eventCall":{"arguments":[{"id":1040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8630:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1041,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8636:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8640:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1039,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"8621:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"8616:30:3"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"7174:304:3","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1046,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"7492:7:3","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"7508:4:3","nodeType":"VariableDeclaration","scope":1046,"src":"7500:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"7500:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"7522:2:3","nodeType":"VariableDeclaration","scope":1046,"src":"7514:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"7514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"7534:5:3","nodeType":"VariableDeclaration","scope":1046,"src":"7526:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"7526:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7499:41:3"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"7558:0:3"},"scope":1247,"src":"7483:1170:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"9052:152:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1054,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9066:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9085:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1055,"name":"address","nodeType":"ElementaryTypeName","src":"9077:7:3","typeDescriptions":{}}},"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9066:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1068,"nodeType":"IfStatement","src":"9062:91:3","trueBody":{"id":1067,"nodeType":"Block","src":"9089:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9139:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9131:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1061,"name":"address","nodeType":"ElementaryTypeName","src":"9131:7:3","typeDescriptions":{}}},"id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9131:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1060,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"9110:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9110:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1066,"nodeType":"RevertStatement","src":"9103:39:3"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9170:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"9170:7:3","typeDescriptions":{}}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9170:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"9191:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1069,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9162:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"9162:35:3"}]},"documentation":{"id":1047,"nodeType":"StructuredDocumentation","src":"8659:332:3","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9005:5:3","nodeType":"FunctionDefinition","parameters":{"id":1052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"account","nameLocation":"9019:7:3","nodeType":"VariableDeclaration","scope":1079,"src":"9011:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"9011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"value","nameLocation":"9036:5:3","nodeType":"VariableDeclaration","scope":1079,"src":"9028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1050,"name":"uint256","nodeType":"ElementaryTypeName","src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9010:32:3"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[],"src":"9052:0:3"},"scope":1247,"src":"8996:208:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1111,"nodeType":"Block","src":"9578:150:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9592:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9611:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9603:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9603:7:3","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9603:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9592:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1101,"nodeType":"IfStatement","src":"9588:89:3","trueBody":{"id":1100,"nodeType":"Block","src":"9615:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9663:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:3","typeDescriptions":{}}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9655:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1093,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1625,"src":"9636:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9636:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"RevertStatement","src":"9629:37:3"}]}},{"expression":{"arguments":[{"id":1103,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"9694:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9703:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"9703:7:3","typeDescriptions":{}}},"id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9703:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"9715:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1102,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"9686:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9686:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1110,"nodeType":"ExpressionStatement","src":"9686:35:3"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"9210:307:3","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1112,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9531:5:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"account","nameLocation":"9545:7:3","nodeType":"VariableDeclaration","scope":1112,"src":"9537:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"9537:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"value","nameLocation":"9562:5:3","nodeType":"VariableDeclaration","scope":1112,"src":"9554:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9536:32:3"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"9578:0:3"},"scope":1247,"src":"9522:206:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1129,"nodeType":"Block","src":"10338:54:3","statements":[{"expression":{"arguments":[{"id":1123,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"10357:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"10364:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10373:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10380:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1122,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"10348:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10348:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1128,"nodeType":"ExpressionStatement","src":"10348:37:3"}]},"documentation":{"id":1113,"nodeType":"StructuredDocumentation","src":"9734:525:3","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1130,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10273:8:3","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1115,"mutability":"mutable","name":"owner","nameLocation":"10290:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10282:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"10282:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"spender","nameLocation":"10305:7:3","nodeType":"VariableDeclaration","scope":1130,"src":"10297:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1116,"name":"address","nodeType":"ElementaryTypeName","src":"10297:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"value","nameLocation":"10322:5:3","nodeType":"VariableDeclaration","scope":1130,"src":"10314:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"10314:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10281:47:3"},"returnParameters":{"id":1121,"nodeType":"ParameterList","parameters":[],"src":"10338:0:3"},"scope":1247,"src":"10264:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"11322:389:3","statements":[{"assignments":[1144],"declarations":[{"constant":false,"id":1144,"mutability":"mutable","name":"$","nameLocation":"11353:1:3","nodeType":"VariableDeclaration","scope":1197,"src":"11332:22:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"},"typeName":{"id":1143,"nodeType":"UserDefinedTypeName","pathNode":{"id":1142,"name":"ERC20Storage","nameLocations":["11332:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":671,"src":"11332:12:3"},"referencedDeclaration":671,"src":"11332:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage"}},"visibility":"internal"}],"id":1147,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1145,"name":"_getERC20Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"11357:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$","typeString":"function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"}},"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"11332:43:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11389:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11406:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11398:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"11398:7:3","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11398:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11389:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1162,"nodeType":"IfStatement","src":"11385:89:3","trueBody":{"id":1161,"nodeType":"Block","src":"11410:64:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11460:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11452:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"11452:7:3","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11452:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"11431:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11431:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1160,"nodeType":"RevertStatement","src":"11424:39:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11487:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11506:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11498:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"11498:7:3","typeDescriptions":{}}},"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11498:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11487:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1177,"nodeType":"IfStatement","src":"11483:90:3","trueBody":{"id":1176,"nodeType":"Block","src":"11510:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11559:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11551:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:3","typeDescriptions":{}}},"id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11551:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1169,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"11531:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11531:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1175,"nodeType":"RevertStatement","src":"11524:38:3"}]}},{"expression":{"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"expression":{"id":1178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1144,"src":"11582:1:3","typeDescriptions":{"typeIdentifier":"t_struct$_ERC20Storage_$671_storage_ptr","typeString":"struct ERC20Upgradeable.ERC20Storage storage pointer"}},"id":1182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11584:11:3","memberName":"_allowances","nodeType":"MemberAccess","referencedDeclaration":664,"src":"11582:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1183,"indexExpression":{"id":1180,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11596:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11582:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1184,"indexExpression":{"id":1181,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11582:29:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11614:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11582:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1187,"nodeType":"ExpressionStatement","src":"11582:37:3"},{"condition":{"id":1188,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"11633:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"11629:76:3","trueBody":{"id":1195,"nodeType":"Block","src":"11644:61:3","statements":[{"eventCall":{"arguments":[{"id":1190,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11672:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"11679:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"11688:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1189,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"11663:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11663:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1194,"nodeType":"EmitStatement","src":"11658:36:3"}]}}]},"documentation":{"id":1131,"nodeType":"StructuredDocumentation","src":"10398:821:3","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"11233:8:3","nodeType":"FunctionDefinition","parameters":{"id":1140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"owner","nameLocation":"11250:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11242:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"11242:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"spender","nameLocation":"11265:7:3","nodeType":"VariableDeclaration","scope":1198,"src":"11257:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"11257:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"value","nameLocation":"11282:5:3","nodeType":"VariableDeclaration","scope":1198,"src":"11274:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"emitEvent","nameLocation":"11294:9:3","nodeType":"VariableDeclaration","scope":1198,"src":"11289:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"11289:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11241:63:3"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[],"src":"11322:0:3"},"scope":1247,"src":"11224:487:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"12082:388:3","statements":[{"assignments":[1209],"declarations":[{"constant":false,"id":1209,"mutability":"mutable","name":"currentAllowance","nameLocation":"12100:16:3","nodeType":"VariableDeclaration","scope":1245,"src":"12092:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12092:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1214,"initialValue":{"arguments":[{"id":1211,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12129:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12136:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1210,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"12119:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12119:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12092:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1215,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12158:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12183:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12183:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12178:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12178:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12192:3:3","memberName":"max","nodeType":"MemberAccess","src":"12178:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12158:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"IfStatement","src":"12154:310:3","trueBody":{"id":1243,"nodeType":"Block","src":"12197:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12215:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12234:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12215:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1232,"nodeType":"IfStatement","src":"12211:130:3","trueBody":{"id":1231,"nodeType":"Block","src":"12241:100:3","statements":[{"errorCall":{"arguments":[{"id":1226,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12293:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1227,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12302:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12320:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"12266:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"RevertStatement","src":"12259:67:3"}]}},{"id":1242,"nodeType":"UncheckedBlock","src":"12354:100:3","statements":[{"expression":{"arguments":[{"id":1234,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12391:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1235,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"12398:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"12407:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"12426:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12407:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12433:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1233,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1130,1198],"referencedDeclaration":1198,"src":"12382:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1241,"nodeType":"ExpressionStatement","src":"12382:57:3"}]}]}}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"11717:271:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"12002:15:3","nodeType":"FunctionDefinition","parameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"owner","nameLocation":"12026:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12018:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"12018:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"spender","nameLocation":"12041:7:3","nodeType":"VariableDeclaration","scope":1246,"src":"12033:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"12033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"value","nameLocation":"12058:5:3","nodeType":"VariableDeclaration","scope":1246,"src":"12050:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"12050:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12017:47:3"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12082:0:3"},"scope":1247,"src":"11993:477:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1248,"src":"1576:10896:3","usedErrors":[211,214,1620,1625,1630,1639,1644,1649],"usedEvents":[219,2070,2079]}],"src":"105:12368:3"},"id":3},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448]},"id":1294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1249,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1294,"sourceUnit":449,"src":"126:63:4","symbolAliases":[{"foreign":{"id":1250,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1253,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:4"},"id":1254,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1293,"linearizedBaseContracts":[1293,448],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":1259,"nodeType":"Block","src":"800:7:4","statements":[]},"id":1260,"implemented":true,"kind":"function","modifiers":[{"id":1257,"kind":"modifierInvocation","modifierName":{"id":1256,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":1293,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1265,"nodeType":"Block","src":"875:7:4","statements":[]},"id":1266,"implemented":true,"kind":"function","modifiers":[{"id":1263,"kind":"modifierInvocation","modifierName":{"id":1262,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":1261,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":1264,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":1293,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1274,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":1271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1270,"id":1273,"nodeType":"Return","src":"959:17:4"}]},"id":1275,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":1293,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":1280,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1279,"id":1282,"nodeType":"Return","src":"1066:15:4"}]},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":1276,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1277,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":1293,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1288,"id":1290,"nodeType":"Return","src":"1176:8:4"}]},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":1285,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":1293,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1294,"src":"688:505:4","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:4"},"id":4},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[1293],"Initializable":[448],"PausableUpgradeable":[1469]},"id":1470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1295,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:5"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":1297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1470,"sourceUnit":1294,"src":"128:67:5","symbolAliases":[{"foreign":{"id":1296,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"136:18:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1470,"sourceUnit":449,"src":"196:63:5","symbolAliases":[{"foreign":{"id":1298,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1301,"name":"Initializable","nameLocations":["742:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"742:13:5"},"id":1302,"nodeType":"InheritanceSpecifier","src":"742:13:5"},{"baseName":{"id":1303,"name":"ContextUpgradeable","nameLocations":["757:18:5"],"nodeType":"IdentifierPath","referencedDeclaration":1293,"src":"757:18:5"},"id":1304,"nodeType":"InheritanceSpecifier","src":"757:18:5"}],"canonicalName":"PausableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1300,"nodeType":"StructuredDocumentation","src":"261:439:5","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1469,"linearizedBaseContracts":[1469,1293,448],"name":"PausableUpgradeable","nameLocation":"719:19:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PausableUpgradeable.PausableStorage","documentation":{"id":1305,"nodeType":"StructuredDocumentation","src":"782:66:5","text":"@custom:storage-location erc7201:openzeppelin.storage.Pausable"},"id":1308,"members":[{"constant":false,"id":1307,"mutability":"mutable","name":"_paused","nameLocation":"891:7:5","nodeType":"VariableDeclaration","scope":1308,"src":"886:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1306,"name":"bool","nodeType":"ElementaryTypeName","src":"886:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PausableStorage","nameLocation":"860:15:5","nodeType":"StructDefinition","scope":1469,"src":"853:52:5","visibility":"public"},{"constant":true,"id":1311,"mutability":"constant","name":"PausableStorageLocation","nameLocation":"1048:23:5","nodeType":"VariableDeclaration","scope":1469,"src":"1023:117:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1309,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1023:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1074:66:5","typeDescriptions":{"typeIdentifier":"t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1","typeString":"int_const 9289...(69 digits omitted)...6832"},"value":"0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"},"visibility":"private"},{"body":{"id":1318,"nodeType":"Block","src":"1227:82:5","statements":[{"AST":{"nativeSrc":"1246:57:5","nodeType":"YulBlock","src":"1246:57:5","statements":[{"nativeSrc":"1260:33:5","nodeType":"YulAssignment","src":"1260:33:5","value":{"name":"PausableStorageLocation","nativeSrc":"1270:23:5","nodeType":"YulIdentifier","src":"1270:23:5"},"variableNames":[{"name":"$.slot","nativeSrc":"1260:6:5","nodeType":"YulIdentifier","src":"1260:6:5"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1315,"isOffset":false,"isSlot":true,"src":"1260:6:5","suffix":"slot","valueSize":1},{"declaration":1311,"isOffset":false,"isSlot":false,"src":"1270:23:5","valueSize":1}],"id":1317,"nodeType":"InlineAssembly","src":"1237:66:5"}]},"id":1319,"implemented":true,"kind":"function","modifiers":[],"name":"_getPausableStorage","nameLocation":"1156:19:5","nodeType":"FunctionDefinition","parameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"1175:2:5"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"$","nameLocation":"1224:1:5","nodeType":"VariableDeclaration","scope":1319,"src":"1200:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1314,"nodeType":"UserDefinedTypeName","pathNode":{"id":1313,"name":"PausableStorage","nameLocations":["1200:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"1200:15:5"},"referencedDeclaration":1308,"src":"1200:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"src":"1199:27:5"},"scope":1469,"src":"1147:162:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"documentation":{"id":1320,"nodeType":"StructuredDocumentation","src":"1315:73:5","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1324,"name":"Paused","nameLocation":"1399:6:5","nodeType":"EventDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1322,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1414:7:5","nodeType":"VariableDeclaration","scope":1324,"src":"1406:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1405:17:5"},"src":"1393:30:5"},{"anonymous":false,"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"1429:70:5","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1329,"name":"Unpaused","nameLocation":"1510:8:5","nodeType":"EventDefinition","parameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"1527:7:5","nodeType":"VariableDeclaration","scope":1329,"src":"1519:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:17:5"},"src":"1504:32:5"},{"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"1542:76:5","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1332,"name":"EnforcedPause","nameLocation":"1629:13:5","nodeType":"ErrorDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"1642:2:5"},"src":"1623:22:5"},{"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"1651:80:5","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1335,"name":"ExpectedPause","nameLocation":"1742:13:5","nodeType":"ErrorDefinition","parameters":{"id":1334,"nodeType":"ParameterList","parameters":[],"src":"1755:2:5"},"src":"1736:22:5"},{"body":{"id":1344,"nodeType":"Block","src":"1889:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1341,"name":"__Pausable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"1899:25:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1899:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1343,"nodeType":"ExpressionStatement","src":"1899:27:5"}]},"documentation":{"id":1336,"nodeType":"StructuredDocumentation","src":"1764:67:5","text":" @dev Initializes the contract in unpaused state."},"id":1345,"implemented":true,"kind":"function","modifiers":[{"id":1339,"kind":"modifierInvocation","modifierName":{"id":1338,"name":"onlyInitializing","nameLocations":["1872:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1872:16:5"},"nodeType":"ModifierInvocation","src":"1872:16:5"}],"name":"__Pausable_init","nameLocation":"1845:15:5","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[],"src":"1860:2:5"},"returnParameters":{"id":1340,"nodeType":"ParameterList","parameters":[],"src":"1889:0:5"},"scope":1469,"src":"1836:97:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1362,"nodeType":"Block","src":"2002:93:5","statements":[{"assignments":[1352],"declarations":[{"constant":false,"id":1352,"mutability":"mutable","name":"$","nameLocation":"2036:1:5","nodeType":"VariableDeclaration","scope":1362,"src":"2012:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1351,"nodeType":"UserDefinedTypeName","pathNode":{"id":1350,"name":"PausableStorage","nameLocations":["2012:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"2012:15:5"},"referencedDeclaration":1308,"src":"2012:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1355,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1353,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"2040:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2040:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2012:49:5"},{"expression":{"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1356,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"2071:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2073:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"2071:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2083:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2071:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1361,"nodeType":"ExpressionStatement","src":"2071:17:5"}]},"id":1363,"implemented":true,"kind":"function","modifiers":[{"id":1348,"kind":"modifierInvocation","modifierName":{"id":1347,"name":"onlyInitializing","nameLocations":["1985:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1985:16:5"},"nodeType":"ModifierInvocation","src":"1985:16:5"}],"name":"__Pausable_init_unchained","nameLocation":"1948:25:5","nodeType":"FunctionDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[],"src":"1973:2:5"},"returnParameters":{"id":1349,"nodeType":"ParameterList","parameters":[],"src":"2002:0:5"},"scope":1469,"src":"1939:156:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1370,"nodeType":"Block","src":"2306:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1366,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"2316:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2316:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1368,"nodeType":"ExpressionStatement","src":"2316:19:5"},{"id":1369,"nodeType":"PlaceholderStatement","src":"2345:1:5"}]},"documentation":{"id":1364,"nodeType":"StructuredDocumentation","src":"2101:175:5","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1371,"name":"whenNotPaused","nameLocation":"2290:13:5","nodeType":"ModifierDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[],"src":"2303:2:5"},"src":"2281:72:5","virtual":false,"visibility":"internal"},{"body":{"id":1378,"nodeType":"Block","src":"2553:44:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1374,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"2563:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2563:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1376,"nodeType":"ExpressionStatement","src":"2563:16:5"},{"id":1377,"nodeType":"PlaceholderStatement","src":"2589:1:5"}]},"documentation":{"id":1372,"nodeType":"StructuredDocumentation","src":"2359:167:5","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1379,"name":"whenPaused","nameLocation":"2540:10:5","nodeType":"ModifierDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"2550:2:5"},"src":"2531:66:5","virtual":false,"visibility":"internal"},{"body":{"id":1394,"nodeType":"Block","src":"2745:92:5","statements":[{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"$","nameLocation":"2779:1:5","nodeType":"VariableDeclaration","scope":1394,"src":"2755:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1386,"nodeType":"UserDefinedTypeName","pathNode":{"id":1385,"name":"PausableStorage","nameLocations":["2755:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"2755:15:5"},"referencedDeclaration":1308,"src":"2755:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1390,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1388,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"2783:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2755:49:5"},{"expression":{"expression":{"id":1391,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"2821:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2823:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"2821:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1384,"id":1393,"nodeType":"Return","src":"2814:16:5"}]},"documentation":{"id":1380,"nodeType":"StructuredDocumentation","src":"2603:84:5","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1395,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"2701:6:5","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"2707:2:5"},"returnParameters":{"id":1384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"2739:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1382,"name":"bool","nodeType":"ElementaryTypeName","src":"2739:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2738:6:5"},"scope":1469,"src":"2692:145:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1406,"nodeType":"Block","src":"2956:77:5","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1399,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"2970:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1405,"nodeType":"IfStatement","src":"2966:61:5","trueBody":{"id":1404,"nodeType":"Block","src":"2980:47:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1401,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"3001:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3001:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1403,"nodeType":"RevertStatement","src":"2994:22:5"}]}}]},"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"2843:57:5","text":" @dev Throws if the contract is paused."},"id":1407,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"2914:17:5","nodeType":"FunctionDefinition","parameters":{"id":1397,"nodeType":"ParameterList","parameters":[],"src":"2931:2:5"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[],"src":"2956:0:5"},"scope":1469,"src":"2905:128:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1419,"nodeType":"Block","src":"3153:78:5","statements":[{"condition":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3167:9:5","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1411,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"3168:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:8:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"3163:62:5","trueBody":{"id":1417,"nodeType":"Block","src":"3178:47:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1414,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"3199:13:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3199:15:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"3192:22:5"}]}}]},"documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"3039:61:5","text":" @dev Throws if the contract is not paused."},"id":1420,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"3114:14:5","nodeType":"FunctionDefinition","parameters":{"id":1409,"nodeType":"ParameterList","parameters":[],"src":"3128:2:5"},"returnParameters":{"id":1410,"nodeType":"ParameterList","parameters":[],"src":"3153:0:5"},"scope":1469,"src":"3105:126:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"3415:127:5","statements":[{"assignments":[1428],"declarations":[{"constant":false,"id":1428,"mutability":"mutable","name":"$","nameLocation":"3449:1:5","nodeType":"VariableDeclaration","scope":1443,"src":"3425:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1427,"nodeType":"UserDefinedTypeName","pathNode":{"id":1426,"name":"PausableStorage","nameLocations":["3425:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"3425:15:5"},"referencedDeclaration":1308,"src":"3425:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1431,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1429,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3453:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3425:49:5"},{"expression":{"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1432,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"3484:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3486:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"3484:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3496:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1437,"nodeType":"ExpressionStatement","src":"3484:16:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1439,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3522:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3522:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1438,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"3515:6:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3515:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1442,"nodeType":"EmitStatement","src":"3510:25:5"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"3237:124:5","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1444,"implemented":true,"kind":"function","modifiers":[{"id":1424,"kind":"modifierInvocation","modifierName":{"id":1423,"name":"whenNotPaused","nameLocations":["3401:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"3401:13:5"},"nodeType":"ModifierInvocation","src":"3401:13:5"}],"name":"_pause","nameLocation":"3375:6:5","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"3381:2:5"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[],"src":"3415:0:5"},"scope":1469,"src":"3366:176:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1467,"nodeType":"Block","src":"3722:130:5","statements":[{"assignments":[1452],"declarations":[{"constant":false,"id":1452,"mutability":"mutable","name":"$","nameLocation":"3756:1:5","nodeType":"VariableDeclaration","scope":1467,"src":"3732:25:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"},"typeName":{"id":1451,"nodeType":"UserDefinedTypeName","pathNode":{"id":1450,"name":"PausableStorage","nameLocations":["3732:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":1308,"src":"3732:15:5"},"referencedDeclaration":1308,"src":"3732:15:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage"}},"visibility":"internal"}],"id":1455,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1453,"name":"_getPausableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1319,"src":"3760:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1308_storage_ptr_$","typeString":"function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3760:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3732:49:5"},{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1456,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3791:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_PausableStorage_$1308_storage_ptr","typeString":"struct PausableUpgradeable.PausableStorage storage pointer"}},"id":1458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3793:7:5","memberName":"_paused","nodeType":"MemberAccess","referencedDeclaration":1307,"src":"3791:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3803:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3791:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"nodeType":"ExpressionStatement","src":"3791:17:5"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"3832:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3832:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1462,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"3823:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3823:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"EmitStatement","src":"3818:27:5"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"3548:121:5","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1468,"implemented":true,"kind":"function","modifiers":[{"id":1448,"kind":"modifierInvocation","modifierName":{"id":1447,"name":"whenPaused","nameLocations":["3711:10:5"],"nodeType":"IdentifierPath","referencedDeclaration":1379,"src":"3711:10:5"},"nodeType":"ModifierInvocation","src":"3711:10:5"}],"name":"_unpause","nameLocation":"3683:8:5","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"3691:2:5"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"3722:0:5"},"scope":1469,"src":"3674:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1470,"src":"701:3153:5","usedErrors":[211,214,1332,1335],"usedEvents":[219,1324,1329]}],"src":"102:3753:5"},"id":5},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","exportedSymbols":{"Initializable":[448],"ReentrancyGuardUpgradeable":[1598]},"id":1599,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1471,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":1473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1599,"sourceUnit":449,"src":"134:63:6","symbolAliases":[{"foreign":{"id":1472,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"142:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1475,"name":"Initializable","nameLocations":["998:13:6"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"998:13:6"},"id":1476,"nodeType":"InheritanceSpecifier","src":"998:13:6"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"199:750:6","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1598,"linearizedBaseContracts":[1598,448],"name":"ReentrancyGuardUpgradeable","nameLocation":"968:26:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1479,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1791:11:6","nodeType":"VariableDeclaration","scope":1598,"src":"1766:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"1766:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1805:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1482,"mutability":"constant","name":"ENTERED","nameLocation":"1837:7:6","nodeType":"VariableDeclaration","scope":1598,"src":"1812:36:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"1812:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1847:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"canonicalName":"ReentrancyGuardUpgradeable.ReentrancyGuardStorage","documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"1855:73:6","text":"@custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard"},"id":1486,"members":[{"constant":false,"id":1485,"mutability":"mutable","name":"_status","nameLocation":"1981:7:6","nodeType":"VariableDeclaration","scope":1486,"src":"1973:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1484,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReentrancyGuardStorage","nameLocation":"1940:22:6","nodeType":"StructDefinition","scope":1598,"src":"1933:62:6","visibility":"public"},{"constant":true,"id":1489,"mutability":"constant","name":"ReentrancyGuardStorageLocation","nameLocation":"2145:30:6","nodeType":"VariableDeclaration","scope":1598,"src":"2120:124:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1487,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2120:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839623737396231373432326430646639323232333031386233326234643166613436653037313732336436383137653234383664303033626563633535663030","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2178:66:6","typeDescriptions":{"typeIdentifier":"t_rational_70319816728846589445362000750570655803700195216363692647688146666176345628416_by_1","typeString":"int_const 7031...(69 digits omitted)...8416"},"value":"0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00"},"visibility":"private"},{"body":{"id":1496,"nodeType":"Block","src":"2345:89:6","statements":[{"AST":{"nativeSrc":"2364:64:6","nodeType":"YulBlock","src":"2364:64:6","statements":[{"nativeSrc":"2378:40:6","nodeType":"YulAssignment","src":"2378:40:6","value":{"name":"ReentrancyGuardStorageLocation","nativeSrc":"2388:30:6","nodeType":"YulIdentifier","src":"2388:30:6"},"variableNames":[{"name":"$.slot","nativeSrc":"2378:6:6","nodeType":"YulIdentifier","src":"2378:6:6"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":1493,"isOffset":false,"isSlot":true,"src":"2378:6:6","suffix":"slot","valueSize":1},{"declaration":1489,"isOffset":false,"isSlot":false,"src":"2388:30:6","valueSize":1}],"id":1495,"nodeType":"InlineAssembly","src":"2355:73:6"}]},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"_getReentrancyGuardStorage","nameLocation":"2260:26:6","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[],"src":"2286:2:6"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"$","nameLocation":"2342:1:6","nodeType":"VariableDeclaration","scope":1497,"src":"2311:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1492,"nodeType":"UserDefinedTypeName","pathNode":{"id":1491,"name":"ReentrancyGuardStorage","nameLocations":["2311:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"2311:22:6"},"referencedDeclaration":1486,"src":"2311:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"src":"2310:34:6"},"scope":1598,"src":"2251:183:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":1498,"nodeType":"StructuredDocumentation","src":"2440:52:6","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1500,"name":"ReentrancyGuardReentrantCall","nameLocation":"2503:28:6","nodeType":"ErrorDefinition","parameters":{"id":1499,"nodeType":"ParameterList","parameters":[],"src":"2531:2:6"},"src":"2497:37:6"},{"body":{"id":1508,"nodeType":"Block","src":"2600:51:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1505,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"2610:32:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2610:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"ExpressionStatement","src":"2610:34:6"}]},"id":1509,"implemented":true,"kind":"function","modifiers":[{"id":1503,"kind":"modifierInvocation","modifierName":{"id":1502,"name":"onlyInitializing","nameLocations":["2583:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2583:16:6"},"nodeType":"ModifierInvocation","src":"2583:16:6"}],"name":"__ReentrancyGuard_init","nameLocation":"2549:22:6","nodeType":"FunctionDefinition","parameters":{"id":1501,"nodeType":"ParameterList","parameters":[],"src":"2571:2:6"},"returnParameters":{"id":1504,"nodeType":"ParameterList","parameters":[],"src":"2600:0:6"},"scope":1598,"src":"2540:111:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1526,"nodeType":"Block","src":"2727:113:6","statements":[{"assignments":[1516],"declarations":[{"constant":false,"id":1516,"mutability":"mutable","name":"$","nameLocation":"2768:1:6","nodeType":"VariableDeclaration","scope":1526,"src":"2737:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1515,"nodeType":"UserDefinedTypeName","pathNode":{"id":1514,"name":"ReentrancyGuardStorage","nameLocations":["2737:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"2737:22:6"},"referencedDeclaration":1486,"src":"2737:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1519,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1517,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"2772:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2737:63:6"},{"expression":{"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1520,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1516,"src":"2810:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2812:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"2810:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1523,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2822:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2810:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1525,"nodeType":"ExpressionStatement","src":"2810:23:6"}]},"id":1527,"implemented":true,"kind":"function","modifiers":[{"id":1512,"kind":"modifierInvocation","modifierName":{"id":1511,"name":"onlyInitializing","nameLocations":["2710:16:6"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2710:16:6"},"nodeType":"ModifierInvocation","src":"2710:16:6"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2666:32:6","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[],"src":"2698:2:6"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"2727:0:6"},"scope":1598,"src":"2657:183:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1537,"nodeType":"Block","src":"3241:79:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1530,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"3251:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3251:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1532,"nodeType":"ExpressionStatement","src":"3251:21:6"},{"id":1533,"nodeType":"PlaceholderStatement","src":"3282:1:6"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1534,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"3293:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3293:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1536,"nodeType":"ExpressionStatement","src":"3293:20:6"}]},"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"2846:366:6","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1538,"name":"nonReentrant","nameLocation":"3226:12:6","nodeType":"ModifierDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"3238:2:6"},"src":"3217:103:6","virtual":false,"visibility":"internal"},{"body":{"id":1562,"nodeType":"Block","src":"3365:345:6","statements":[{"assignments":[1543],"declarations":[{"constant":false,"id":1543,"mutability":"mutable","name":"$","nameLocation":"3406:1:6","nodeType":"VariableDeclaration","scope":1562,"src":"3375:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1542,"nodeType":"UserDefinedTypeName","pathNode":{"id":1541,"name":"ReentrancyGuardStorage","nameLocations":["3375:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"3375:22:6"},"referencedDeclaration":1486,"src":"3375:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1546,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1544,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3410:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3375:63:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1547,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"3526:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3528:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"3526:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1549,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3539:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3526:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1555,"nodeType":"IfStatement","src":"3522:88:6","trueBody":{"id":1554,"nodeType":"Block","src":"3548:62:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1551,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"3569:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3569:30:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"RevertStatement","src":"3562:37:6"}]}},{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1556,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"3684:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3686:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"3684:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1559,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"3696:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3684:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1561,"nodeType":"ExpressionStatement","src":"3684:19:6"}]},"id":1563,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"3335:19:6","nodeType":"FunctionDefinition","parameters":{"id":1539,"nodeType":"ParameterList","parameters":[],"src":"3354:2:6"},"returnParameters":{"id":1540,"nodeType":"ParameterList","parameters":[],"src":"3365:0:6"},"scope":1598,"src":"3326:384:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1578,"nodeType":"Block","src":"3754:245:6","statements":[{"assignments":[1568],"declarations":[{"constant":false,"id":1568,"mutability":"mutable","name":"$","nameLocation":"3795:1:6","nodeType":"VariableDeclaration","scope":1578,"src":"3764:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1567,"nodeType":"UserDefinedTypeName","pathNode":{"id":1566,"name":"ReentrancyGuardStorage","nameLocations":["3764:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"3764:22:6"},"referencedDeclaration":1486,"src":"3764:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1569,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"3799:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3764:63:6"},{"expression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1572,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"3969:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3971:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"3969:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1575,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3981:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3969:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1577,"nodeType":"ExpressionStatement","src":"3969:23:6"}]},"id":1579,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"3725:18:6","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"3743:2:6"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[],"src":"3754:0:6"},"scope":1598,"src":"3716:283:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1596,"nodeType":"Block","src":"4242:117:6","statements":[{"assignments":[1587],"declarations":[{"constant":false,"id":1587,"mutability":"mutable","name":"$","nameLocation":"4283:1:6","nodeType":"VariableDeclaration","scope":1596,"src":"4252:32:6","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"},"typeName":{"id":1586,"nodeType":"UserDefinedTypeName","pathNode":{"id":1585,"name":"ReentrancyGuardStorage","nameLocations":["4252:22:6"],"nodeType":"IdentifierPath","referencedDeclaration":1486,"src":"4252:22:6"},"referencedDeclaration":1486,"src":"4252:22:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage"}},"visibility":"internal"}],"id":1590,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1588,"name":"_getReentrancyGuardStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"4287:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_ReentrancyGuardStorage_$1486_storage_ptr_$","typeString":"function () pure returns (struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer)"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4287:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4252:63:6"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1591,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"4332:1:6","typeDescriptions":{"typeIdentifier":"t_struct$_ReentrancyGuardStorage_$1486_storage_ptr","typeString":"struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage storage pointer"}},"id":1592,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4334:7:6","memberName":"_status","nodeType":"MemberAccess","referencedDeclaration":1485,"src":"4332:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1593,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"4345:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4332:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1584,"id":1595,"nodeType":"Return","src":"4325:27:6"}]},"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"4005:168:6","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"4187:23:6","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[],"src":"4210:2:6"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"4236:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1582,"name":"bool","nodeType":"ElementaryTypeName","src":"4236:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:6:6"},"scope":1598,"src":"4178:181:6","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1599,"src":"950:3411:6","usedErrors":[211,214,1500],"usedEvents":[219]}],"src":"109:4253:6"},"id":6},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1608]},"id":1609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1600,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1601,"nodeType":"StructuredDocumentation","src":"139:203:7","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1608,"linearizedBaseContracts":[1608],"name":"IERC1822Proxiable","nameLocation":"353:17:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"377:438:7","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1607,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:7","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[],"src":"842:2:7"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1607,"src":"868:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1604,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:7"},"scope":1608,"src":"820:57:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1609,"src":"343:536:7","usedErrors":[],"usedEvents":[]}],"src":"113:767:7"},"id":7},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[1745],"IERC20Errors":[1650],"IERC721Errors":[1698]},"id":1746,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1610,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1611,"nodeType":"StructuredDocumentation","src":"138:139:8","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":1650,"linearizedBaseContracts":[1650],"name":"IERC20Errors","nameLocation":"288:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1612,"nodeType":"StructuredDocumentation","src":"307:309:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":1620,"name":"ERC20InsufficientBalance","nameLocation":"627:24:8","nodeType":"ErrorDefinition","parameters":{"id":1619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"sender","nameLocation":"660:6:8","nodeType":"VariableDeclaration","scope":1620,"src":"652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1613,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1616,"mutability":"mutable","name":"balance","nameLocation":"676:7:8","nodeType":"VariableDeclaration","scope":1620,"src":"668:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1618,"mutability":"mutable","name":"needed","nameLocation":"693:6:8","nodeType":"VariableDeclaration","scope":1620,"src":"685:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:8"},"src":"621:80:8"},{"documentation":{"id":1621,"nodeType":"StructuredDocumentation","src":"707:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":1625,"name":"ERC20InvalidSender","nameLocation":"870:18:8","nodeType":"ErrorDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1623,"mutability":"mutable","name":"sender","nameLocation":"897:6:8","nodeType":"VariableDeclaration","scope":1625,"src":"889:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:8"},"src":"864:41:8"},{"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"911:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":1630,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:8","nodeType":"ErrorDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1628,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:8","nodeType":"VariableDeclaration","scope":1630,"src":"1102:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1627,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:8"},"src":"1075:45:8"},{"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"1126:345:8","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":1639,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:8","nodeType":"ErrorDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"spender","nameLocation":"1517:7:8","nodeType":"VariableDeclaration","scope":1639,"src":"1509:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:8","nodeType":"VariableDeclaration","scope":1639,"src":"1526:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"needed","nameLocation":"1553:6:8","nodeType":"VariableDeclaration","scope":1639,"src":"1545:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:8"},"src":"1476:85:8"},{"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"1567:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":1644,"name":"ERC20InvalidApprover","nameLocation":"1752:20:8","nodeType":"ErrorDefinition","parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"approver","nameLocation":"1781:8:8","nodeType":"VariableDeclaration","scope":1644,"src":"1773:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:8"},"src":"1746:45:8"},{"documentation":{"id":1645,"nodeType":"StructuredDocumentation","src":"1797:195:8","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":1649,"name":"ERC20InvalidSpender","nameLocation":"2003:19:8","nodeType":"ErrorDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"spender","nameLocation":"2031:7:8","nodeType":"VariableDeclaration","scope":1649,"src":"2023:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:8"},"src":"1997:43:8"}],"scope":1746,"src":"278:1764:8","usedErrors":[1620,1625,1630,1639,1644,1649],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1651,"nodeType":"StructuredDocumentation","src":"2044:141:8","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":1698,"linearizedBaseContracts":[1698],"name":"IERC721Errors","nameLocation":"2196:13:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1652,"nodeType":"StructuredDocumentation","src":"2216:219:8","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":1656,"name":"ERC721InvalidOwner","nameLocation":"2446:18:8","nodeType":"ErrorDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1654,"mutability":"mutable","name":"owner","nameLocation":"2473:5:8","nodeType":"VariableDeclaration","scope":1656,"src":"2465:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1653,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:8"},"src":"2440:40:8"},{"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"2486:132:8","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":1661,"name":"ERC721NonexistentToken","nameLocation":"2629:22:8","nodeType":"ErrorDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:8","nodeType":"VariableDeclaration","scope":1661,"src":"2652:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1658,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:8"},"src":"2623:46:8"},{"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"2675:289:8","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":1670,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:8","nodeType":"ErrorDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1664,"mutability":"mutable","name":"sender","nameLocation":"3004:6:8","nodeType":"VariableDeclaration","scope":1670,"src":"2996:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1663,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1666,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:8","nodeType":"VariableDeclaration","scope":1670,"src":"3012:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1668,"mutability":"mutable","name":"owner","nameLocation":"3037:5:8","nodeType":"VariableDeclaration","scope":1670,"src":"3029:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:8"},"src":"2969:75:8"},{"documentation":{"id":1671,"nodeType":"StructuredDocumentation","src":"3050:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":1675,"name":"ERC721InvalidSender","nameLocation":"3213:19:8","nodeType":"ErrorDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1673,"mutability":"mutable","name":"sender","nameLocation":"3241:6:8","nodeType":"VariableDeclaration","scope":1675,"src":"3233:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1672,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:8"},"src":"3207:42:8"},{"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"3255:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":1680,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:8","nodeType":"ErrorDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:8","nodeType":"VariableDeclaration","scope":1680,"src":"3447:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:8"},"src":"3419:46:8"},{"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"3471:247:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":1687,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:8","nodeType":"ErrorDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1683,"mutability":"mutable","name":"operator","nameLocation":"3764:8:8","nodeType":"VariableDeclaration","scope":1687,"src":"3756:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1682,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:8","nodeType":"VariableDeclaration","scope":1687,"src":"3774:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:8"},"src":"3723:68:8"},{"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"3797:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":1692,"name":"ERC721InvalidApprover","nameLocation":"3982:21:8","nodeType":"ErrorDefinition","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"approver","nameLocation":"4012:8:8","nodeType":"VariableDeclaration","scope":1692,"src":"4004:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1689,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:8"},"src":"3976:46:8"},{"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"4028:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":1697,"name":"ERC721InvalidOperator","nameLocation":"4236:21:8","nodeType":"ErrorDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"operator","nameLocation":"4266:8:8","nodeType":"VariableDeclaration","scope":1697,"src":"4258:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1694,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:8"},"src":"4230:46:8"}],"scope":1746,"src":"2186:2092:8","usedErrors":[1656,1661,1670,1675,1680,1687,1692,1697],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"4280:143:8","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":1745,"linearizedBaseContracts":[1745],"name":"IERC1155Errors","nameLocation":"4434:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"4455:361:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":1710,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:8","nodeType":"ErrorDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"sender","nameLocation":"4862:6:8","nodeType":"VariableDeclaration","scope":1710,"src":"4854:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"balance","nameLocation":"4878:7:8","nodeType":"VariableDeclaration","scope":1710,"src":"4870:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"needed","nameLocation":"4895:6:8","nodeType":"VariableDeclaration","scope":1710,"src":"4887:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:8","nodeType":"VariableDeclaration","scope":1710,"src":"4903:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:8"},"src":"4821:99:8"},{"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"4926:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":1715,"name":"ERC1155InvalidSender","nameLocation":"5089:20:8","nodeType":"ErrorDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"sender","nameLocation":"5118:6:8","nodeType":"VariableDeclaration","scope":1715,"src":"5110:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:8"},"src":"5083:43:8"},{"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"5132:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":1720,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:8","nodeType":"ErrorDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:8","nodeType":"VariableDeclaration","scope":1720,"src":"5325:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:8"},"src":"5296:47:8"},{"documentation":{"id":1721,"nodeType":"StructuredDocumentation","src":"5349:256:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":1727,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:8","nodeType":"ErrorDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"operator","nameLocation":"5653:8:8","nodeType":"VariableDeclaration","scope":1727,"src":"5645:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"owner","nameLocation":"5671:5:8","nodeType":"VariableDeclaration","scope":1727,"src":"5663:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1724,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:8"},"src":"5610:68:8"},{"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"5684:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":1732,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:8","nodeType":"ErrorDefinition","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"approver","nameLocation":"5900:8:8","nodeType":"VariableDeclaration","scope":1732,"src":"5892:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1729,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:8"},"src":"5863:47:8"},{"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"5916:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":1737,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:8","nodeType":"ErrorDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1735,"mutability":"mutable","name":"operator","nameLocation":"6155:8:8","nodeType":"VariableDeclaration","scope":1737,"src":"6147:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1734,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:8"},"src":"6118:47:8"},{"documentation":{"id":1738,"nodeType":"StructuredDocumentation","src":"6171:280:8","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":1744,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:8","nodeType":"ErrorDefinition","parameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:8","nodeType":"VariableDeclaration","scope":1744,"src":"6488:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:8","nodeType":"VariableDeclaration","scope":1744,"src":"6507:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1741,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:8"},"src":"6456:73:8"}],"scope":1746,"src":"4424:2107:8","usedErrors":[1710,1715,1720,1727,1732,1737,1744],"usedEvents":[]}],"src":"112:6420:8"},"id":8},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2415],"ERC1967Utils":[2048],"IBeacon":[2058],"StorageSlot":[2525]},"id":2049,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1747,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:9"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1749,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2049,"sourceUnit":2059,"src":"140:46:9","symbolAliases":[{"foreign":{"id":1748,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"148:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1751,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2049,"sourceUnit":2416,"src":"187:48:9","symbolAliases":[{"foreign":{"id":1750,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"195:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2049,"sourceUnit":2526,"src":"236:56:9","symbolAliases":[{"foreign":{"id":1752,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"244:11:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1754,"nodeType":"StructuredDocumentation","src":"294:154:9","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":2048,"linearizedBaseContracts":[2048],"name":"ERC1967Utils","nameLocation":"457:12:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"660:68:9","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1759,"name":"Upgraded","nameLocation":"739:8:9","nodeType":"EventDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:9","nodeType":"VariableDeclaration","scope":1759,"src":"748:30:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:9"},"src":"733:47:9"},{"anonymous":false,"documentation":{"id":1760,"nodeType":"StructuredDocumentation","src":"786:67:9","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1766,"name":"AdminChanged","nameLocation":"864:12:9","nodeType":"EventDefinition","parameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1762,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:9","nodeType":"VariableDeclaration","scope":1766,"src":"877:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1761,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1764,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:9","nodeType":"VariableDeclaration","scope":1766,"src":"900:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:9"},"src":"858:60:9"},{"anonymous":false,"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"924:59:9","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1771,"name":"BeaconUpgraded","nameLocation":"994:14:9","nodeType":"EventDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:9","nodeType":"VariableDeclaration","scope":1771,"src":"1009:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:9"},"src":"988:45:9"},{"constant":true,"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"1039:170:9","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1775,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:9","nodeType":"VariableDeclaration","scope":2048,"src":"1279:114:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:9","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"1400:69:9","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1780,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:9","nodeType":"ErrorDefinition","parameters":{"id":1779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1778,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:9","nodeType":"VariableDeclaration","scope":1780,"src":"1509:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1777,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:9"},"src":"1474:59:9"},{"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"1539:60:9","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1785,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:9","nodeType":"ErrorDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"admin","nameLocation":"1638:5:9","nodeType":"VariableDeclaration","scope":1785,"src":"1630:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1782,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:9"},"src":"1604:41:9"},{"documentation":{"id":1786,"nodeType":"StructuredDocumentation","src":"1651:61:9","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1790,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:9","nodeType":"ErrorDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1788,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:9","nodeType":"VariableDeclaration","scope":1790,"src":"1744:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:9"},"src":"1717:43:9"},{"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"1766:82:9","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1793,"name":"ERC1967NonPayable","nameLocation":"1859:17:9","nodeType":"ErrorDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[],"src":"1876:2:9"},"src":"1853:26:9"},{"body":{"id":1805,"nodeType":"Block","src":"2018:77:9","statements":[{"expression":{"expression":{"arguments":[{"id":1801,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2062:19:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1799,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2035:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"2035:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"2035:53:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1798,"id":1804,"nodeType":"Return","src":"2028:60:9"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"1885:67:9","text":" @dev Returns the current implementation address."},"id":1806,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:9","nodeType":"FunctionDefinition","parameters":{"id":1795,"nodeType":"ParameterList","parameters":[],"src":"1983:2:9"},"returnParameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1806,"src":"2009:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:9"},"scope":2048,"src":"1957:138:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1832,"nodeType":"Block","src":"2249:218:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1812,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2263:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:9","memberName":"code","nodeType":"MemberAccess","src":"2263:22:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:9","memberName":"length","nodeType":"MemberAccess","src":"2263:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1822,"nodeType":"IfStatement","src":"2259:119:9","trueBody":{"id":1821,"nodeType":"Block","src":"2299:79:9","statements":[{"errorCall":{"arguments":[{"id":1818,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2349:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1817,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"2320:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"RevertStatement","src":"2313:54:9"}]}},{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1826,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"2414:19:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1823,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2387:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"2387:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1828,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"2387:53:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1829,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2443:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1831,"nodeType":"ExpressionStatement","src":"2387:73:9"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"2101:80:9","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:9","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:9","nodeType":"VariableDeclaration","scope":1833,"src":"2214:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:9"},"returnParameters":{"id":1811,"nodeType":"ParameterList","parameters":[],"src":"2249:0:9"},"scope":2048,"src":"2186:281:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1866,"nodeType":"Block","src":"2860:254:9","statements":[{"expression":{"arguments":[{"id":1842,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2889:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1841,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"2870:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1844,"nodeType":"ExpressionStatement","src":"2870:37:9"},{"eventCall":{"arguments":[{"id":1846,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"2931:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1845,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1759,"src":"2922:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1848,"nodeType":"EmitStatement","src":"2917:32:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1849,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"2964:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:9","memberName":"length","nodeType":"MemberAccess","src":"2964:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1864,"nodeType":"Block","src":"3065:43:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1861,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3079:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"ExpressionStatement","src":"3079:18:9"}]},"id":1865,"nodeType":"IfStatement","src":"2960:148:9","trueBody":{"id":1860,"nodeType":"Block","src":"2981:78:9","statements":[{"expression":{"arguments":[{"id":1856,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3024:17:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1857,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"3043:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1853,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"2995:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2415_$","typeString":"type(library Address)"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:9","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"2995:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1859,"nodeType":"ExpressionStatement","src":"2995:53:9"}]}}]},"documentation":{"id":1834,"nodeType":"StructuredDocumentation","src":"2473:301:9","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:9","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:9","nodeType":"VariableDeclaration","scope":1867,"src":"2805:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1835,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"data","nameLocation":"2845:4:9","nodeType":"VariableDeclaration","scope":1867,"src":"2832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1837,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:9"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"2860:0:9"},"scope":2048,"src":"2779:335:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"3120:145:9","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1871,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:9","nodeType":"VariableDeclaration","scope":2048,"src":"3335:105:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1869,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:9","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1883,"nodeType":"Block","src":"3844:68:9","statements":[{"expression":{"expression":{"arguments":[{"id":1879,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"3888:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"3861:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"3861:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"3861:44:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1876,"id":1882,"nodeType":"Return","src":"3854:51:9"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"3447:340:9","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1884,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:9","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[],"src":"3809:2:9"},"returnParameters":{"id":1876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1884,"src":"3835:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:9"},"scope":2048,"src":"3792:120:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1914,"nodeType":"Block","src":"4039:172:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1890,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"4053:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1891,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:9","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1904,"nodeType":"IfStatement","src":"4049:91:9","trueBody":{"id":1903,"nodeType":"Block","src":"4077:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1897,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:9","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1896,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"4098:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"RevertStatement","src":"4091:38:9"}]}},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1908,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"4176:10:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1905,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4149:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"4149:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"4149:44:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1911,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1887,"src":"4196:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1913,"nodeType":"ExpressionStatement","src":"4149:55:9"}]},"documentation":{"id":1885,"nodeType":"StructuredDocumentation","src":"3918:71:9","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":1915,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:9","nodeType":"FunctionDefinition","parameters":{"id":1888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1887,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:9","nodeType":"VariableDeclaration","scope":1915,"src":"4013:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1886,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:9"},"returnParameters":{"id":1889,"nodeType":"ParameterList","parameters":[],"src":"4039:0:9"},"scope":2048,"src":"3994:217:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1931,"nodeType":"Block","src":"4379:85:9","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1922,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1884,"src":"4407:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1924,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"4419:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1921,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1766,"src":"4394:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1926,"nodeType":"EmitStatement","src":"4389:39:9"},{"expression":{"arguments":[{"id":1928,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"4448:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1927,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"4438:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1930,"nodeType":"ExpressionStatement","src":"4438:19:9"}]},"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"4217:109:9","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1932,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:9","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:9","nodeType":"VariableDeclaration","scope":1932,"src":"4352:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1917,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:9"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"4379:0:9"},"scope":2048,"src":"4331:133:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1933,"nodeType":"StructuredDocumentation","src":"4470:201:9","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1936,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:9","nodeType":"VariableDeclaration","scope":2048,"src":"4741:106:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1934,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:9","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1948,"nodeType":"Block","src":"4963:69:9","statements":[{"expression":{"expression":{"arguments":[{"id":1944,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5007:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1942,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"4980:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"4980:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"4980:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1941,"id":1947,"nodeType":"Return","src":"4973:52:9"}]},"documentation":{"id":1937,"nodeType":"StructuredDocumentation","src":"4854:51:9","text":" @dev Returns the current beacon."},"id":1949,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:9","nodeType":"FunctionDefinition","parameters":{"id":1938,"nodeType":"ParameterList","parameters":[],"src":"4928:2:9"},"returnParameters":{"id":1941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1949,"src":"4954:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:9"},"scope":2048,"src":"4910:122:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1994,"nodeType":"Block","src":"5161:390:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1955,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5175:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:9","memberName":"code","nodeType":"MemberAccess","src":"5175:14:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:9","memberName":"length","nodeType":"MemberAccess","src":"5175:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1965,"nodeType":"IfStatement","src":"5171:95:9","trueBody":{"id":1964,"nodeType":"Block","src":"5203:63:9","statements":[{"errorCall":{"arguments":[{"id":1961,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5245:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1960,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5224:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1963,"nodeType":"RevertStatement","src":"5217:38:9"}]}},{"expression":{"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1969,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"5303:11:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1966,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5276:11:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2525_$","typeString":"type(library StorageSlot)"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:9","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2447,"src":"5276:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2421_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:9","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2420,"src":"5276:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1972,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5324:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1974,"nodeType":"ExpressionStatement","src":"5276:57:9"},{"assignments":[1976],"declarations":[{"constant":false,"id":1976,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:9","nodeType":"VariableDeclaration","scope":1994,"src":"5344:28:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1975,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1982,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1978,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1952,"src":"5383:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1977,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"5375:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2058_$","typeString":"type(contract IBeacon)"}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2058","typeString":"contract IBeacon"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:9","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"5375:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1983,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5424:20:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:9","memberName":"code","nodeType":"MemberAccess","src":"5424:25:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:9","memberName":"length","nodeType":"MemberAccess","src":"5424:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"5420:125:9","trueBody":{"id":1992,"nodeType":"Block","src":"5463:82:9","statements":[{"errorCall":{"arguments":[{"id":1989,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5513:20:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1988,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"5484:28:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1991,"nodeType":"RevertStatement","src":"5477:57:9"}]}}]},"documentation":{"id":1950,"nodeType":"StructuredDocumentation","src":"5038:71:9","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1995,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:9","nodeType":"FunctionDefinition","parameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:9","nodeType":"VariableDeclaration","scope":1995,"src":"5134:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1951,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:9"},"returnParameters":{"id":1954,"nodeType":"ParameterList","parameters":[],"src":"5161:0:9"},"scope":2048,"src":"5114:437:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2032,"nodeType":"Block","src":"6155:254:9","statements":[{"expression":{"arguments":[{"id":2004,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6176:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2003,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1995,"src":"6165:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2006,"nodeType":"ExpressionStatement","src":"6165:21:9"},{"eventCall":{"arguments":[{"id":2008,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6216:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2007,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6201:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2010,"nodeType":"EmitStatement","src":"6196:30:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2011,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"6241:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:9","memberName":"length","nodeType":"MemberAccess","src":"6241:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2030,"nodeType":"Block","src":"6360:43:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2027,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"6374:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"ExpressionStatement","src":"6374:18:9"}]},"id":2031,"nodeType":"IfStatement","src":"6237:166:9","trueBody":{"id":2026,"nodeType":"Block","src":"6258:96:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2019,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"6309:9:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2018,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"6301:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$2058_$","typeString":"type(contract IBeacon)"}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$2058","typeString":"contract IBeacon"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:9","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":2057,"src":"6301:33:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2023,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2015,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"6272:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2415_$","typeString":"type(library Address)"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:9","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":2334,"src":"6272:28:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2025,"nodeType":"ExpressionStatement","src":"6272:71:9"}]}}]},"documentation":{"id":1996,"nodeType":"StructuredDocumentation","src":"5557:514:9","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:9","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1998,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:9","nodeType":"VariableDeclaration","scope":2033,"src":"6108:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1997,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2000,"mutability":"mutable","name":"data","nameLocation":"6140:4:9","nodeType":"VariableDeclaration","scope":2033,"src":"6127:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1999,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:9"},"returnParameters":{"id":2002,"nodeType":"ParameterList","parameters":[],"src":"6155:0:9"},"scope":2048,"src":"6076:333:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2046,"nodeType":"Block","src":"6634:86:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2037,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:9","memberName":"value","nodeType":"MemberAccess","src":"6648:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2045,"nodeType":"IfStatement","src":"6644:70:9","trueBody":{"id":2044,"nodeType":"Block","src":"6663:51:9","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2041,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"6684:17:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2043,"nodeType":"RevertStatement","src":"6677:26:9"}]}}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"6415:178:9","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":2047,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:9","nodeType":"FunctionDefinition","parameters":{"id":2035,"nodeType":"ParameterList","parameters":[],"src":"6623:2:9"},"returnParameters":{"id":2036,"nodeType":"ParameterList","parameters":[],"src":"6634:0:9"},"scope":2048,"src":"6598:122:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":2049,"src":"449:6273:9","usedErrors":[1780,1785,1790,1793],"usedEvents":[1759,1766,1771]}],"src":"114:6609:9"},"id":9},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[2058]},"id":2059,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2050,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":2051,"nodeType":"StructuredDocumentation","src":"134:79:10","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":2058,"linearizedBaseContracts":[2058],"name":"IBeacon","nameLocation":"224:7:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"238:168:10","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":2057,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:10","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"434:2:10"},"returnParameters":{"id":2056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2057,"src":"460:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2054,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:10"},"scope":2058,"src":"411:58:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2059,"src":"214:257:10","usedErrors":[],"usedEvents":[]}],"src":"108:364:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2136]},"id":2137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2060,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"132:70:11","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":2136,"linearizedBaseContracts":[2136],"name":"IERC20","nameLocation":"213:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"226:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2070,"name":"Transfer","nameLocation":"395:8:11","nodeType":"EventDefinition","parameters":{"id":2069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:11","nodeType":"VariableDeclaration","scope":2070,"src":"404:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:11","nodeType":"VariableDeclaration","scope":2070,"src":"426:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2065,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2068,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:11","nodeType":"VariableDeclaration","scope":2070,"src":"446:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:11"},"src":"389:72:11"},{"anonymous":false,"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"467:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2079,"name":"Approval","nameLocation":"626:8:11","nodeType":"EventDefinition","parameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:11","nodeType":"VariableDeclaration","scope":2079,"src":"635:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2072,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2075,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:11","nodeType":"VariableDeclaration","scope":2079,"src":"658:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2074,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2077,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:11","nodeType":"VariableDeclaration","scope":2079,"src":"683:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2076,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:11"},"src":"620:78:11"},{"documentation":{"id":2080,"nodeType":"StructuredDocumentation","src":"704:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2085,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:11","nodeType":"FunctionDefinition","parameters":{"id":2081,"nodeType":"ParameterList","parameters":[],"src":"794:2:11"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2085,"src":"820:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2082,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:11"},"scope":2136,"src":"774:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2086,"nodeType":"StructuredDocumentation","src":"835:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2093,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:11","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"account","nameLocation":"938:7:11","nodeType":"VariableDeclaration","scope":2093,"src":"930:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:11"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"970:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:11"},"scope":2136,"src":"911:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"985:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2103,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:11","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"to","nameLocation":"1229:2:11","nodeType":"VariableDeclaration","scope":2103,"src":"1221:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"value","nameLocation":"1241:5:11","nodeType":"VariableDeclaration","scope":2103,"src":"1233:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:11"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2103,"src":"1266:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2100,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:11"},"scope":2136,"src":"1203:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"1278:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2113,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:11","nodeType":"FunctionDefinition","parameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"owner","nameLocation":"1574:5:11","nodeType":"VariableDeclaration","scope":2113,"src":"1566:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2108,"mutability":"mutable","name":"spender","nameLocation":"1589:7:11","nodeType":"VariableDeclaration","scope":2113,"src":"1581:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2107,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:11"},"returnParameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2113,"src":"1621:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:11"},"scope":2136,"src":"1547:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2114,"nodeType":"StructuredDocumentation","src":"1636:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2123,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:11","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"spender","nameLocation":"2333:7:11","nodeType":"VariableDeclaration","scope":2123,"src":"2325:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"2350:5:11","nodeType":"VariableDeclaration","scope":2123,"src":"2342:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:11"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2123,"src":"2375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2120,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:11"},"scope":2136,"src":"2308:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"2387:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2135,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:11","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"from","nameLocation":"2719:4:11","nodeType":"VariableDeclaration","scope":2135,"src":"2711:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"to","nameLocation":"2733:2:11","nodeType":"VariableDeclaration","scope":2135,"src":"2725:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2127,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"value","nameLocation":"2745:5:11","nodeType":"VariableDeclaration","scope":2135,"src":"2737:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:11"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"2770:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2132,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:11"},"scope":2136,"src":"2689:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2137,"src":"203:2575:11","usedErrors":[],"usedEvents":[2070,2079]}],"src":"106:2673:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2136],"IERC20Metadata":[2162]},"id":2163,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2163,"sourceUnit":2137,"src":"151:37:12","symbolAliases":[{"foreign":{"id":2139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2142,"name":"IERC20","nameLocations":["305:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2136,"src":"305:6:12"},"id":2143,"nodeType":"InheritanceSpecifier","src":"305:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2141,"nodeType":"StructuredDocumentation","src":"190:86:12","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":2162,"linearizedBaseContracts":[2162,2136],"name":"IERC20Metadata","nameLocation":"287:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"318:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2149,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:12","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[],"src":"390:2:12"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2149,"src":"416:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2146,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:12"},"scope":2162,"src":"377:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2150,"nodeType":"StructuredDocumentation","src":"437:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2155,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:12","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[],"src":"513:2:12"},"returnParameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2155,"src":"539:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2152,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:12"},"scope":2162,"src":"498:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"560:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2161,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:12","nodeType":"FunctionDefinition","parameters":{"id":2157,"nodeType":"ParameterList","parameters":[],"src":"647:2:12"},"returnParameters":{"id":2160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2161,"src":"673:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2158,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:12"},"scope":2162,"src":"630:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2163,"src":"277:405:12","usedErrors":[],"usedEvents":[2070,2079]}],"src":"125:558:12"},"id":12},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2415]},"id":2416,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2164,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"127:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2415,"linearizedBaseContracts":[2415],"name":"Address","nameLocation":"203:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"217:94:13","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":2170,"name":"AddressInsufficientBalance","nameLocation":"322:26:13","nodeType":"ErrorDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"account","nameLocation":"357:7:13","nodeType":"VariableDeclaration","scope":2170,"src":"349:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:13"},"src":"316:50:13"},{"documentation":{"id":2171,"nodeType":"StructuredDocumentation","src":"372:75:13","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":2175,"name":"AddressEmptyCode","nameLocation":"458:16:13","nodeType":"ErrorDefinition","parameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"target","nameLocation":"483:6:13","nodeType":"VariableDeclaration","scope":2175,"src":"475:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2172,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:13"},"src":"452:39:13"},{"documentation":{"id":2176,"nodeType":"StructuredDocumentation","src":"497:89:13","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":2178,"name":"FailedInnerCall","nameLocation":"597:15:13","nodeType":"ErrorDefinition","parameters":{"id":2177,"nodeType":"ParameterList","parameters":[],"src":"612:2:13"},"src":"591:24:13"},{"body":{"id":2218,"nodeType":"Block","src":"1602:260:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2188,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2186,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:13","typeDescriptions":{}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:13","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2191,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"1640:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2201,"nodeType":"IfStatement","src":"1612:109:13","trueBody":{"id":2200,"nodeType":"Block","src":"1648:73:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2196,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2194,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:13","typeDescriptions":{}}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2193,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"1669:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"RevertStatement","src":"1662:48:13"}]}},{"assignments":[2203,null],"declarations":[{"constant":false,"id":2203,"mutability":"mutable","name":"success","nameLocation":"1737:7:13","nodeType":"VariableDeclaration","scope":2218,"src":"1732:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2202,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2210,"initialValue":{"arguments":[{"hexValue":"","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2204,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2181,"src":"1750:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:13","memberName":"call","nodeType":"MemberAccess","src":"1750:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2206,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"1772:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:13"},{"condition":{"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:13","subExpression":{"id":2211,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"1798:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2217,"nodeType":"IfStatement","src":"1793:63:13","trueBody":{"id":2216,"nodeType":"Block","src":"1807:49:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2213,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"1828:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2215,"nodeType":"RevertStatement","src":"1821:24:13"}]}}]},"documentation":{"id":2179,"nodeType":"StructuredDocumentation","src":"621:905:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2219,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:13","nodeType":"FunctionDefinition","parameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2181,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:13","nodeType":"VariableDeclaration","scope":2219,"src":"1550:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2180,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2183,"mutability":"mutable","name":"amount","nameLocation":"1585:6:13","nodeType":"VariableDeclaration","scope":2219,"src":"1577:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:13"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[],"src":"1602:0:13"},"scope":2415,"src":"1531:331:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2235,"nodeType":"Block","src":"2794:62:13","statements":[{"expression":{"arguments":[{"id":2230,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"2833:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2231,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"2841:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2229,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"2811:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2228,"id":2234,"nodeType":"Return","src":"2804:45:13"}]},"documentation":{"id":2220,"nodeType":"StructuredDocumentation","src":"1868:832:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":2236,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:13","nodeType":"FunctionDefinition","parameters":{"id":2225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2222,"mutability":"mutable","name":"target","nameLocation":"2735:6:13","nodeType":"VariableDeclaration","scope":2236,"src":"2727:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2224,"mutability":"mutable","name":"data","nameLocation":"2756:4:13","nodeType":"VariableDeclaration","scope":2236,"src":"2743:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2223,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:13"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2236,"src":"2780:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2226,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:13"},"scope":2415,"src":"2705:151:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2281,"nodeType":"Block","src":"3293:279:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2250,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:13","typeDescriptions":{}}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3331:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2263,"nodeType":"IfStatement","src":"3303:108:13","trueBody":{"id":2262,"nodeType":"Block","src":"3338:73:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2258,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2415","typeString":"library Address"}],"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2256,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:13","typeDescriptions":{}}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2255,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"3359:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2261,"nodeType":"RevertStatement","src":"3352:48:13"}]}},{"assignments":[2265,2267],"declarations":[{"constant":false,"id":2265,"mutability":"mutable","name":"success","nameLocation":"3426:7:13","nodeType":"VariableDeclaration","scope":2281,"src":"3421:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2264,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2267,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:13","nodeType":"VariableDeclaration","scope":2281,"src":"3435:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2266,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2274,"initialValue":{"arguments":[{"id":2272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"3488:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2268,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3462:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:13","memberName":"call","nodeType":"MemberAccess","src":"3462:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"3481:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:13"},{"expression":{"arguments":[{"id":2276,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"3537:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2277,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3545:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2278,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2267,"src":"3554:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2275,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3510:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2247,"id":2280,"nodeType":"Return","src":"3503:62:13"}]},"documentation":{"id":2237,"nodeType":"StructuredDocumentation","src":"2862:313:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":2282,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:13","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2239,"mutability":"mutable","name":"target","nameLocation":"3219:6:13","nodeType":"VariableDeclaration","scope":2282,"src":"3211:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"data","nameLocation":"3240:4:13","nodeType":"VariableDeclaration","scope":2282,"src":"3227:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2240,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"value","nameLocation":"3254:5:13","nodeType":"VariableDeclaration","scope":2282,"src":"3246:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:13"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2282,"src":"3279:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2245,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:13"},"scope":2415,"src":"3180:392:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"3811:154:13","statements":[{"assignments":[2293,2295],"declarations":[{"constant":false,"id":2293,"mutability":"mutable","name":"success","nameLocation":"3827:7:13","nodeType":"VariableDeclaration","scope":2307,"src":"3822:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2292,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2295,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:13","nodeType":"VariableDeclaration","scope":2307,"src":"3836:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2294,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2300,"initialValue":{"arguments":[{"id":2298,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"3881:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2296,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"3863:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:13"},{"expression":{"arguments":[{"id":2302,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"3930:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2303,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2293,"src":"3938:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2304,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2295,"src":"3947:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2301,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"3903:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2291,"id":2306,"nodeType":"Return","src":"3896:62:13"}]},"documentation":{"id":2283,"nodeType":"StructuredDocumentation","src":"3578:128:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:13","nodeType":"FunctionDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2285,"mutability":"mutable","name":"target","nameLocation":"3747:6:13","nodeType":"VariableDeclaration","scope":2308,"src":"3739:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2284,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2287,"mutability":"mutable","name":"data","nameLocation":"3768:4:13","nodeType":"VariableDeclaration","scope":2308,"src":"3755:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2286,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:13"},"returnParameters":{"id":2291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"3797:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2289,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:13"},"scope":2415,"src":"3711:254:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2333,"nodeType":"Block","src":"4203:156:13","statements":[{"assignments":[2319,2321],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"success","nameLocation":"4219:7:13","nodeType":"VariableDeclaration","scope":2333,"src":"4214:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:13","nodeType":"VariableDeclaration","scope":2333,"src":"4228:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2320,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2326,"initialValue":{"arguments":[{"id":2324,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2313,"src":"4275:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2322,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4255:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:13"},{"expression":{"arguments":[{"id":2328,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"4324:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2329,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"4332:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2330,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"4341:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2327,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2374,"src":"4297:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2317,"id":2332,"nodeType":"Return","src":"4290:62:13"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"3971:130:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":2334,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:13","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"target","nameLocation":"4144:6:13","nodeType":"VariableDeclaration","scope":2334,"src":"4136:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"data","nameLocation":"4165:4:13","nodeType":"VariableDeclaration","scope":2334,"src":"4152:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2312,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:13"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2334,"src":"4189:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2315,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:13"},"scope":2415,"src":"4106:253:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2373,"nodeType":"Block","src":"4783:424:13","statements":[{"condition":{"id":2347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:13","subExpression":{"id":2346,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"4798:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2371,"nodeType":"Block","src":"4857:344:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2353,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"5045:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:13","memberName":"length","nodeType":"MemberAccess","src":"5045:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2357,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5071:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:13","memberName":"code","nodeType":"MemberAccess","src":"5071:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:13","memberName":"length","nodeType":"MemberAccess","src":"5071:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2368,"nodeType":"IfStatement","src":"5041:119:13","trueBody":{"id":2367,"nodeType":"Block","src":"5096:64:13","statements":[{"errorCall":{"arguments":[{"id":2364,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2337,"src":"5138:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2363,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5121:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2366,"nodeType":"RevertStatement","src":"5114:31:13"}]}},{"expression":{"id":2369,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"5180:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2345,"id":2370,"nodeType":"Return","src":"5173:17:13"}]},"id":2372,"nodeType":"IfStatement","src":"4793:408:13","trueBody":{"id":2352,"nodeType":"Block","src":"4807:44:13","statements":[{"expression":{"arguments":[{"id":2349,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"4829:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2348,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"4821:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2351,"nodeType":"ExpressionStatement","src":"4821:19:13"}]}}]},"documentation":{"id":2335,"nodeType":"StructuredDocumentation","src":"4365:255:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":2374,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:13","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2337,"mutability":"mutable","name":"target","nameLocation":"4678:6:13","nodeType":"VariableDeclaration","scope":2374,"src":"4670:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2339,"mutability":"mutable","name":"success","nameLocation":"4699:7:13","nodeType":"VariableDeclaration","scope":2374,"src":"4694:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2338,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2341,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:13","nodeType":"VariableDeclaration","scope":2374,"src":"4716:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2340,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:13"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2374,"src":"4769:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2343,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:13"},"scope":2415,"src":"4625:582:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2395,"nodeType":"Block","src":"5509:122:13","statements":[{"condition":{"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:13","subExpression":{"id":2384,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"5524:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2393,"nodeType":"Block","src":"5583:42:13","statements":[{"expression":{"id":2391,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"5604:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2383,"id":2392,"nodeType":"Return","src":"5597:17:13"}]},"id":2394,"nodeType":"IfStatement","src":"5519:106:13","trueBody":{"id":2390,"nodeType":"Block","src":"5533:44:13","statements":[{"expression":{"arguments":[{"id":2387,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2379,"src":"5555:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2386,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"5547:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2389,"nodeType":"ExpressionStatement","src":"5547:19:13"}]}}]},"documentation":{"id":2375,"nodeType":"StructuredDocumentation","src":"5213:189:13","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":2396,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:13","nodeType":"FunctionDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2377,"mutability":"mutable","name":"success","nameLocation":"5438:7:13","nodeType":"VariableDeclaration","scope":2396,"src":"5433:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2376,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:13","nodeType":"VariableDeclaration","scope":2396,"src":"5447:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2378,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:13"},"returnParameters":{"id":2383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2396,"src":"5495:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2381,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:13"},"scope":2415,"src":"5407:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2413,"nodeType":"Block","src":"5798:461:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2402,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"5874:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:13","memberName":"length","nodeType":"MemberAccess","src":"5874:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2411,"nodeType":"Block","src":"6204:49:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2408,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"6225:15:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2410,"nodeType":"RevertStatement","src":"6218:24:13"}]},"id":2412,"nodeType":"IfStatement","src":"5870:383:13","trueBody":{"id":2407,"nodeType":"Block","src":"5897:301:13","statements":[{"AST":{"nativeSrc":"6055:133:13","nodeType":"YulBlock","src":"6055:133:13","statements":[{"nativeSrc":"6073:40:13","nodeType":"YulVariableDeclaration","src":"6073:40:13","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:13","nodeType":"YulIdentifier","src":"6102:10:13"}],"functionName":{"name":"mload","nativeSrc":"6096:5:13","nodeType":"YulIdentifier","src":"6096:5:13"},"nativeSrc":"6096:17:13","nodeType":"YulFunctionCall","src":"6096:17:13"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:13","nodeType":"YulTypedName","src":"6077:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:13","nodeType":"YulLiteral","src":"6141:2:13","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:13","nodeType":"YulIdentifier","src":"6145:10:13"}],"functionName":{"name":"add","nativeSrc":"6137:3:13","nodeType":"YulIdentifier","src":"6137:3:13"},"nativeSrc":"6137:19:13","nodeType":"YulFunctionCall","src":"6137:19:13"},{"name":"returndata_size","nativeSrc":"6158:15:13","nodeType":"YulIdentifier","src":"6158:15:13"}],"functionName":{"name":"revert","nativeSrc":"6130:6:13","nodeType":"YulIdentifier","src":"6130:6:13"},"nativeSrc":"6130:44:13","nodeType":"YulFunctionCall","src":"6130:44:13"},"nativeSrc":"6130:44:13","nodeType":"YulExpressionStatement","src":"6130:44:13"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2399,"isOffset":false,"isSlot":false,"src":"6102:10:13","valueSize":1},{"declaration":2399,"isOffset":false,"isSlot":false,"src":"6145:10:13","valueSize":1}],"id":2406,"nodeType":"InlineAssembly","src":"6046:142:13"}]}}]},"documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"5637:101:13","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2414,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:13","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2399,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:13","nodeType":"VariableDeclaration","scope":2414,"src":"5760:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2398,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:13"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[],"src":"5798:0:13"},"scope":2415,"src":"5743:516:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2416,"src":"195:6066:13","usedErrors":[2170,2175,2178],"usedEvents":[]}],"src":"101:6161:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2525]},"id":2526,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2417,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2525,"linearizedBaseContracts":[2525],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2421,"members":[{"constant":false,"id":2420,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2421,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2419,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2525,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2424,"members":[{"constant":false,"id":2423,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2424,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2422,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2525,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2427,"members":[{"constant":false,"id":2426,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2427,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2525,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2430,"members":[{"constant":false,"id":2429,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2430,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2525,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2433,"members":[{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2433,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2431,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2525,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2436,"members":[{"constant":false,"id":2435,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2436,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2434,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2525,"src":"1541:45:14","visibility":"public"},{"body":{"id":2446,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2443,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2439,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2445,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2437,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2447,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2447,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2443,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2447,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2442,"nodeType":"UserDefinedTypeName","pathNode":{"id":2441,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2421,"src":"1745:11:14"},"referencedDeclaration":2421,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2421_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2525,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2457,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2454,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2456,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2448,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2450,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2458,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2458,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2424_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2453,"nodeType":"UserDefinedTypeName","pathNode":{"id":2452,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2424,"src":"2033:11:14"},"referencedDeclaration":2424,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2424_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2525,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2468,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2465,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2461,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2467,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2469,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2469,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2469,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2427_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2464,"nodeType":"UserDefinedTypeName","pathNode":{"id":2463,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2427,"src":"2321:11:14"},"referencedDeclaration":2427,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2427_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2525,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2479,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2476,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2472,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2478,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2470,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2480,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2480,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2476,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2480,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2430_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2475,"nodeType":"UserDefinedTypeName","pathNode":{"id":2474,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2430,"src":"2609:11:14"},"referencedDeclaration":2430,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2430_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2525,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2490,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2487,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2483,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2489,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2481,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2483,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2491,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2491,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2486,"nodeType":"UserDefinedTypeName","pathNode":{"id":2485,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"2895:10:14"},"referencedDeclaration":2433,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2525,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2501,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2498,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2494,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2500,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2502,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2502,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2493,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2502,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2497,"nodeType":"UserDefinedTypeName","pathNode":{"id":2496,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"3203:10:14"},"referencedDeclaration":2433,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2433_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2525,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2512,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2509,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2505,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2511,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2513,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2513,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2513,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2508,"nodeType":"UserDefinedTypeName","pathNode":{"id":2507,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"3492:9:14"},"referencedDeclaration":2436,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2525,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2523,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2520,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2516,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2522,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2514,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2524,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2524,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2515,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2520,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2524,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2519,"nodeType":"UserDefinedTypeName","pathNode":{"id":2518,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2436,"src":"3795:9:14"},"referencedDeclaration":2436,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2436_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2525,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2526,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/interfaces/IBaluniV1Oracle.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","exportedSymbols":{"IBaluniV1Oracle":[2550]},"id":2551,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2527,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Oracle","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2550,"linearizedBaseContracts":[2550],"name":"IBaluniV1Oracle","nameLocation":"77:15:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"248391ff","id":2538,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"109:7:15","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2529,"mutability":"mutable","name":"fromToken","nameLocation":"125:9:15","nodeType":"VariableDeclaration","scope":2538,"src":"117:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"117:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"toToken","nameLocation":"144:7:15","nodeType":"VariableDeclaration","scope":2538,"src":"136:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2530,"name":"address","nodeType":"ElementaryTypeName","src":"136:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"amount","nameLocation":"161:6:15","nodeType":"VariableDeclaration","scope":2538,"src":"153:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"153:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:52:15"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"valuation","nameLocation":"200:9:15","nodeType":"VariableDeclaration","scope":2538,"src":"192:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"191:19:15"},"scope":2550,"src":"100:111:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b27b5e75","id":2549,"implemented":false,"kind":"function","modifiers":[],"name":"convertScaled","nameLocation":"228:13:15","nodeType":"FunctionDefinition","parameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2540,"mutability":"mutable","name":"fromToken","nameLocation":"260:9:15","nodeType":"VariableDeclaration","scope":2549,"src":"252:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2539,"name":"address","nodeType":"ElementaryTypeName","src":"252:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"toToken","nameLocation":"288:7:15","nodeType":"VariableDeclaration","scope":2549,"src":"280:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2541,"name":"address","nodeType":"ElementaryTypeName","src":"280:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"amount","nameLocation":"314:6:15","nodeType":"VariableDeclaration","scope":2549,"src":"306:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"241:86:15"},"returnParameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"valuation","nameLocation":"359:9:15","nodeType":"VariableDeclaration","scope":2549,"src":"351:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2546,"name":"uint256","nodeType":"ElementaryTypeName","src":"351:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"350:19:15"},"scope":2550,"src":"219:151:15","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2551,"src":"67:306:15","usedErrors":[],"usedEvents":[]}],"src":"40:335:15"},"id":15},"contracts/interfaces/IBaluniV1Registry.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","exportedSymbols":{"IBaluniV1Registry":[2734]},"id":2735,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2552,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":2553,"nodeType":"StructuredDocumentation","src":"67:91:16","text":" @title IBaluniV1Registry\n @dev Interface for the BaluniV1Registry contract."},"fullyImplemented":false,"id":2734,"linearizedBaseContracts":[2734],"name":"IBaluniV1Registry","nameLocation":"170:17:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e04b677f","id":2558,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapFactory","nameLocation":"204:17:16","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"_uniswapFactory","nameLocation":"230:15:16","nodeType":"VariableDeclaration","scope":2558,"src":"222:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"222:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"221:25:16"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[],"src":"255:0:16"},"scope":2734,"src":"195:61:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"bea9849e","id":2563,"implemented":false,"kind":"function","modifiers":[],"name":"setUniswapRouter","nameLocation":"273:16:16","nodeType":"FunctionDefinition","parameters":{"id":2561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"_uniswapRouter","nameLocation":"298:14:16","nodeType":"VariableDeclaration","scope":2563,"src":"290:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"289:24:16"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[],"src":"322:0:16"},"scope":2734,"src":"264:59:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f1dccde7","id":2568,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniAgentFactory","nameLocation":"340:21:16","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"_baluniAgentFactory","nameLocation":"370:19:16","nodeType":"VariableDeclaration","scope":2568,"src":"362:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2564,"name":"address","nodeType":"ElementaryTypeName","src":"362:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"361:29:16"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[],"src":"399:0:16"},"scope":2734,"src":"331:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"588c5b70","id":2573,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolPeriphery","nameLocation":"417:22:16","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2570,"mutability":"mutable","name":"_baluniPoolPeriphery","nameLocation":"448:20:16","nodeType":"VariableDeclaration","scope":2573,"src":"440:28:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"439:30:16"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[],"src":"478:0:16"},"scope":2734,"src":"408:71:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c3f5df5c","id":2578,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniSwapper","nameLocation":"496:16:16","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"_baluniSwapper","nameLocation":"521:14:16","nodeType":"VariableDeclaration","scope":2578,"src":"513:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2574,"name":"address","nodeType":"ElementaryTypeName","src":"513:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"512:24:16"},"returnParameters":{"id":2577,"nodeType":"ParameterList","parameters":[],"src":"545:0:16"},"scope":2734,"src":"487:59:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f5b84f64","id":2583,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniOracle","nameLocation":"563:15:16","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"_baluniOracle","nameLocation":"587:13:16","nodeType":"VariableDeclaration","scope":2583,"src":"579:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2579,"name":"address","nodeType":"ElementaryTypeName","src":"579:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"578:23:16"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"610:0:16"},"scope":2734,"src":"554:57:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f98977a9","id":2588,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniPoolRegistry","nameLocation":"628:21:16","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"_baluniPoolRegistry","nameLocation":"658:19:16","nodeType":"VariableDeclaration","scope":2588,"src":"650:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2584,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"649:29:16"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[],"src":"687:0:16"},"scope":2734,"src":"619:69:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5055fe98","id":2593,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniVaultRegistry","nameLocation":"705:22:16","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"_baluniPoolRegistry","nameLocation":"736:19:16","nodeType":"VariableDeclaration","scope":2593,"src":"728:27:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"728:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"727:29:16"},"returnParameters":{"id":2592,"nodeType":"ParameterList","parameters":[],"src":"765:0:16"},"scope":2734,"src":"696:70:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0241bffa","id":2598,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRebalancer","nameLocation":"783:19:16","nodeType":"FunctionDefinition","parameters":{"id":2596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2595,"mutability":"mutable","name":"_baluniRebalancer","nameLocation":"811:17:16","nodeType":"VariableDeclaration","scope":2598,"src":"803:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2594,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"802:27:16"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[],"src":"838:0:16"},"scope":2734,"src":"774:65:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"400fb668","id":2603,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRouter","nameLocation":"856:15:16","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2600,"mutability":"mutable","name":"_baluniRouter","nameLocation":"880:13:16","nodeType":"VariableDeclaration","scope":2603,"src":"872:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2599,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"871:23:16"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[],"src":"903:0:16"},"scope":2734,"src":"847:57:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6c43274c","id":2608,"implemented":false,"kind":"function","modifiers":[],"name":"setBaluniRegistry","nameLocation":"921:17:16","nodeType":"FunctionDefinition","parameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"_baluniRegistry","nameLocation":"947:15:16","nodeType":"VariableDeclaration","scope":2608,"src":"939:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"938:25:16"},"returnParameters":{"id":2607,"nodeType":"ParameterList","parameters":[],"src":"972:0:16"},"scope":2734,"src":"912:61:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b6fe9cc7","id":2613,"implemented":false,"kind":"function","modifiers":[],"name":"setWNATIVE","nameLocation":"990:10:16","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2610,"mutability":"mutable","name":"_WNATIVE","nameLocation":"1009:8:16","nodeType":"VariableDeclaration","scope":2613,"src":"1001:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2609,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1000:18:16"},"returnParameters":{"id":2612,"nodeType":"ParameterList","parameters":[],"src":"1027:0:16"},"scope":2734,"src":"981:47:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3e089a2","id":2618,"implemented":false,"kind":"function","modifiers":[],"name":"setUSDC","nameLocation":"1045:7:16","nodeType":"FunctionDefinition","parameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"_USDC","nameLocation":"1061:5:16","nodeType":"VariableDeclaration","scope":2618,"src":"1053:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1052:15:16"},"returnParameters":{"id":2617,"nodeType":"ParameterList","parameters":[],"src":"1076:0:16"},"scope":2734,"src":"1036:41:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f0f44260","id":2623,"implemented":false,"kind":"function","modifiers":[],"name":"setTreasury","nameLocation":"1094:11:16","nodeType":"FunctionDefinition","parameters":{"id":2621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2620,"mutability":"mutable","name":"_treasury","nameLocation":"1114:9:16","nodeType":"VariableDeclaration","scope":2623,"src":"1106:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2619,"name":"address","nodeType":"ElementaryTypeName","src":"1106:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1105:19:16"},"returnParameters":{"id":2622,"nodeType":"ParameterList","parameters":[],"src":"1133:0:16"},"scope":2734,"src":"1085:49:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c08f786b","id":2628,"implemented":false,"kind":"function","modifiers":[],"name":"set1inchSpotAgg","nameLocation":"1151:15:16","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"__1inchSpotAgg","nameLocation":"1175:14:16","nodeType":"VariableDeclaration","scope":2628,"src":"1167:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"1167:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1166:24:16"},"returnParameters":{"id":2627,"nodeType":"ParameterList","parameters":[],"src":"1199:0:16"},"scope":2734,"src":"1142:58:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"9e6453f8","id":2633,"implemented":false,"kind":"function","modifiers":[],"name":"setBPS_FEE","nameLocation":"1217:10:16","nodeType":"FunctionDefinition","parameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"__BPS_FEE","nameLocation":"1236:9:16","nodeType":"VariableDeclaration","scope":2633,"src":"1228:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"1228:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1227:19:16"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[],"src":"1255:0:16"},"scope":2734,"src":"1208:48:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3e6dfa36","id":2638,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapFactory","nameLocation":"1273:17:16","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"1290:2:16"},"returnParameters":{"id":2637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2638,"src":"1316:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2635,"name":"address","nodeType":"ElementaryTypeName","src":"1316:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1315:9:16"},"scope":2734,"src":"1264:61:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"524900b5","id":2643,"implemented":false,"kind":"function","modifiers":[],"name":"getUniswapRouter","nameLocation":"1342:16:16","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[],"src":"1358:2:16"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2643,"src":"1384:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2640,"name":"address","nodeType":"ElementaryTypeName","src":"1384:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1383:9:16"},"scope":2734,"src":"1333:60:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"82755ebb","id":2648,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniSwapper","nameLocation":"1410:16:16","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"1426:2:16"},"returnParameters":{"id":2647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2648,"src":"1452:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2645,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1451:9:16"},"scope":2734,"src":"1401:60:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bb3ba04c","id":2653,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniOracle","nameLocation":"1478:15:16","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[],"src":"1493:2:16"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2653,"src":"1519:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2650,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1518:9:16"},"scope":2734,"src":"1469:59:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f5d2d998","id":2658,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniAgentFactory","nameLocation":"1545:21:16","nodeType":"FunctionDefinition","parameters":{"id":2654,"nodeType":"ParameterList","parameters":[],"src":"1566:2:16"},"returnParameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2658,"src":"1592:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"1592:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1591:9:16"},"scope":2734,"src":"1536:65:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1acb6141","id":2663,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolPeriphery","nameLocation":"1618:22:16","nodeType":"FunctionDefinition","parameters":{"id":2659,"nodeType":"ParameterList","parameters":[],"src":"1640:2:16"},"returnParameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2663,"src":"1666:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2660,"name":"address","nodeType":"ElementaryTypeName","src":"1666:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1665:9:16"},"scope":2734,"src":"1609:66:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1cc2b00d","id":2668,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniVaultRegistry","nameLocation":"1692:22:16","nodeType":"FunctionDefinition","parameters":{"id":2664,"nodeType":"ParameterList","parameters":[],"src":"1714:2:16"},"returnParameters":{"id":2667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2668,"src":"1740:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"1740:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1739:9:16"},"scope":2734,"src":"1683:66:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"32569e02","id":2673,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniPoolRegistry","nameLocation":"1766:21:16","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[],"src":"1787:2:16"},"returnParameters":{"id":2672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2673,"src":"1813:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2670,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1812:9:16"},"scope":2734,"src":"1757:65:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cff49d68","id":2678,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRebalancer","nameLocation":"1839:19:16","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[],"src":"1858:2:16"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2678,"src":"1884:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"1884:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1883:9:16"},"scope":2734,"src":"1830:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"04cc7325","id":2683,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRouter","nameLocation":"1910:15:16","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"1925:2:16"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2683,"src":"1951:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2680,"name":"address","nodeType":"ElementaryTypeName","src":"1951:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1950:9:16"},"scope":2734,"src":"1901:59:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c9aba8ae","id":2688,"implemented":false,"kind":"function","modifiers":[],"name":"getBaluniRegistry","nameLocation":"1977:17:16","nodeType":"FunctionDefinition","parameters":{"id":2684,"nodeType":"ParameterList","parameters":[],"src":"1994:2:16"},"returnParameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2688,"src":"2020:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2685,"name":"address","nodeType":"ElementaryTypeName","src":"2020:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2019:9:16"},"scope":2734,"src":"1968:61:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6c9c0078","id":2693,"implemented":false,"kind":"function","modifiers":[],"name":"getWNATIVE","nameLocation":"2046:10:16","nodeType":"FunctionDefinition","parameters":{"id":2689,"nodeType":"ParameterList","parameters":[],"src":"2056:2:16"},"returnParameters":{"id":2692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2693,"src":"2082:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2690,"name":"address","nodeType":"ElementaryTypeName","src":"2082:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2081:9:16"},"scope":2734,"src":"2037:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1bf01e9b","id":2698,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDC","nameLocation":"2108:7:16","nodeType":"FunctionDefinition","parameters":{"id":2694,"nodeType":"ParameterList","parameters":[],"src":"2115:2:16"},"returnParameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2696,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2698,"src":"2141:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2695,"name":"address","nodeType":"ElementaryTypeName","src":"2141:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2140:9:16"},"scope":2734,"src":"2099:51:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8e1c3a8a","id":2703,"implemented":false,"kind":"function","modifiers":[],"name":"get1inchSpotAgg","nameLocation":"2167:15:16","nodeType":"FunctionDefinition","parameters":{"id":2699,"nodeType":"ParameterList","parameters":[],"src":"2182:2:16"},"returnParameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2703,"src":"2208:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2700,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2207:9:16"},"scope":2734,"src":"2158:59:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85462d6f","id":2708,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_FEE","nameLocation":"2234:10:16","nodeType":"FunctionDefinition","parameters":{"id":2704,"nodeType":"ParameterList","parameters":[],"src":"2244:2:16"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2708,"src":"2270:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2705,"name":"uint256","nodeType":"ElementaryTypeName","src":"2270:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2269:9:16"},"scope":2734,"src":"2225:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9380fb6f","id":2713,"implemented":false,"kind":"function","modifiers":[],"name":"getMAX_BPS_FEE","nameLocation":"2296:14:16","nodeType":"FunctionDefinition","parameters":{"id":2709,"nodeType":"ParameterList","parameters":[],"src":"2310:2:16"},"returnParameters":{"id":2712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"2336:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:9:16"},"scope":2734,"src":"2287:58:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4f4608a2","id":2718,"implemented":false,"kind":"function","modifiers":[],"name":"getBPS_BASE","nameLocation":"2362:11:16","nodeType":"FunctionDefinition","parameters":{"id":2714,"nodeType":"ParameterList","parameters":[],"src":"2373:2:16"},"returnParameters":{"id":2717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"2399:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2399:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2398:9:16"},"scope":2734,"src":"2353:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3b19e84a","id":2723,"implemented":false,"kind":"function","modifiers":[],"name":"getTreasury","nameLocation":"2425:11:16","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[],"src":"2436:2:16"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2723,"src":"2462:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2720,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2461:9:16"},"scope":2734,"src":"2416:55:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc01e9a6","id":2728,"implemented":false,"kind":"function","modifiers":[],"name":"setStaticOracle","nameLocation":"2488:15:16","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"_staticOracle","nameLocation":"2512:13:16","nodeType":"VariableDeclaration","scope":2728,"src":"2504:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2724,"name":"address","nodeType":"ElementaryTypeName","src":"2504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2503:23:16"},"returnParameters":{"id":2727,"nodeType":"ParameterList","parameters":[],"src":"2535:0:16"},"scope":2734,"src":"2479:57:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a5d2236f","id":2733,"implemented":false,"kind":"function","modifiers":[],"name":"getStaticOracle","nameLocation":"2553:15:16","nodeType":"FunctionDefinition","parameters":{"id":2729,"nodeType":"ParameterList","parameters":[],"src":"2568:2:16"},"returnParameters":{"id":2732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2731,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2733,"src":"2594:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2730,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2593:9:16"},"scope":2734,"src":"2544:59:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2735,"src":"160:2446:16","usedErrors":[],"usedEvents":[]}],"src":"40:2568:16"},"id":16},"contracts/interfaces/IBaluniV1Swapper.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Swapper.sol","exportedSymbols":{"IBaluniV1Swapper":[2765]},"id":2766,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2736,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Swapper","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2765,"linearizedBaseContracts":[2765],"name":"IBaluniV1Swapper","nameLocation":"77:16:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2d6bc8ea","id":2749,"implemented":false,"kind":"function","modifiers":[],"name":"singleSwap","nameLocation":"110:10:17","nodeType":"FunctionDefinition","parameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2738,"mutability":"mutable","name":"token0","nameLocation":"139:6:17","nodeType":"VariableDeclaration","scope":2749,"src":"131:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"token1","nameLocation":"164:6:17","nodeType":"VariableDeclaration","scope":2749,"src":"156:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2739,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"amount","nameLocation":"189:6:17","nodeType":"VariableDeclaration","scope":2749,"src":"181:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"181:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"receiver","nameLocation":"214:8:17","nodeType":"VariableDeclaration","scope":2749,"src":"206:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"206:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"120:109:17"},"returnParameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2747,"mutability":"mutable","name":"amountOut","nameLocation":"256:9:17","nodeType":"VariableDeclaration","scope":2749,"src":"248:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2746,"name":"uint256","nodeType":"ElementaryTypeName","src":"248:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"247:19:17"},"scope":2765,"src":"101:166:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"5efaaebb","id":2764,"implemented":false,"kind":"function","modifiers":[],"name":"multiHopSwap","nameLocation":"282:12:17","nodeType":"FunctionDefinition","parameters":{"id":2760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2751,"mutability":"mutable","name":"token0","nameLocation":"313:6:17","nodeType":"VariableDeclaration","scope":2764,"src":"305:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2750,"name":"address","nodeType":"ElementaryTypeName","src":"305:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2753,"mutability":"mutable","name":"token1","nameLocation":"338:6:17","nodeType":"VariableDeclaration","scope":2764,"src":"330:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2752,"name":"address","nodeType":"ElementaryTypeName","src":"330:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"token2","nameLocation":"363:6:17","nodeType":"VariableDeclaration","scope":2764,"src":"355:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"amount","nameLocation":"388:6:17","nodeType":"VariableDeclaration","scope":2764,"src":"380:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint256","nodeType":"ElementaryTypeName","src":"380:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"receiver","nameLocation":"413:8:17","nodeType":"VariableDeclaration","scope":2764,"src":"405:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2758,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"294:134:17"},"returnParameters":{"id":2763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"amountOut","nameLocation":"455:9:17","nodeType":"VariableDeclaration","scope":2764,"src":"447:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2761,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"446:19:17"},"scope":2765,"src":"273:193:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2766,"src":"67:402:17","usedErrors":[],"usedEvents":[]}],"src":"40:431:17"},"id":17},"contracts/interfaces/IBaluniV1yVault.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1yVault.sol","exportedSymbols":{"IBaluniV1yVault":[2831]},"id":2832,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2767,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1yVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2831,"linearizedBaseContracts":[2831],"name":"IBaluniV1yVault","nameLocation":"77:15:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"cdf456e1","id":2772,"implemented":false,"kind":"function","modifiers":[],"name":"baseAsset","nameLocation":"109:9:18","nodeType":"FunctionDefinition","parameters":{"id":2768,"nodeType":"ParameterList","parameters":[],"src":"118:2:18"},"returnParameters":{"id":2771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2772,"src":"144:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2769,"name":"address","nodeType":"ElementaryTypeName","src":"144:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"143:9:18"},"scope":2831,"src":"100:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9db5df46","id":2777,"implemented":false,"kind":"function","modifiers":[],"name":"yearnVault","nameLocation":"168:10:18","nodeType":"FunctionDefinition","parameters":{"id":2773,"nodeType":"ParameterList","parameters":[],"src":"178:2:18"},"returnParameters":{"id":2776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2777,"src":"204:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2774,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"203:9:18"},"scope":2831,"src":"159:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fdf262b7","id":2782,"implemented":false,"kind":"function","modifiers":[],"name":"quoteAsset","nameLocation":"228:10:18","nodeType":"FunctionDefinition","parameters":{"id":2778,"nodeType":"ParameterList","parameters":[],"src":"238:2:18"},"returnParameters":{"id":2781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2782,"src":"264:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2779,"name":"address","nodeType":"ElementaryTypeName","src":"264:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"263:9:18"},"scope":2831,"src":"219:54:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7b103999","id":2787,"implemented":false,"kind":"function","modifiers":[],"name":"registry","nameLocation":"288:8:18","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[],"src":"296:2:18"},"returnParameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2787,"src":"322:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2784,"name":"address","nodeType":"ElementaryTypeName","src":"322:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"321:9:18"},"scope":2831,"src":"279:52:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7d882097","id":2792,"implemented":false,"kind":"function","modifiers":[],"name":"totalDeposits","nameLocation":"346:13:18","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[],"src":"359:2:18"},"returnParameters":{"id":2791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"385:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"384:9:18"},"scope":2831,"src":"337:57:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f7fde10f","id":2797,"implemented":false,"kind":"function","modifiers":[],"name":"accumulatedAssetB","nameLocation":"409:17:18","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[],"src":"426:2:18"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2797,"src":"452:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2794,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"451:9:18"},"scope":2831,"src":"400:61:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e553f65","id":2804,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"476:7:18","nodeType":"FunctionDefinition","parameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"amount","nameLocation":"492:6:18","nodeType":"VariableDeclaration","scope":2804,"src":"484:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"484:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"to","nameLocation":"508:2:18","nodeType":"VariableDeclaration","scope":2804,"src":"500:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"483:28:18"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[],"src":"520:0:18"},"scope":2831,"src":"467:54:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"00f714ce","id":2811,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"536:8:18","nodeType":"FunctionDefinition","parameters":{"id":2809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"shares","nameLocation":"553:6:18","nodeType":"VariableDeclaration","scope":2811,"src":"545:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2805,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2808,"mutability":"mutable","name":"to","nameLocation":"569:2:18","nodeType":"VariableDeclaration","scope":2811,"src":"561:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"544:28:18"},"returnParameters":{"id":2810,"nodeType":"ParameterList","parameters":[],"src":"581:0:18"},"scope":2831,"src":"527:55:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a6f2ae3a","id":2814,"implemented":false,"kind":"function","modifiers":[],"name":"buy","nameLocation":"597:3:18","nodeType":"FunctionDefinition","parameters":{"id":2812,"nodeType":"ParameterList","parameters":[],"src":"600:2:18"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[],"src":"611:0:18"},"scope":2831,"src":"588:24:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"8456cb59","id":2817,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"627:5:18","nodeType":"FunctionDefinition","parameters":{"id":2815,"nodeType":"ParameterList","parameters":[],"src":"632:2:18"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[],"src":"643:0:18"},"scope":2831,"src":"618:26:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3f4ba83a","id":2820,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"659:7:18","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[],"src":"666:2:18"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[],"src":"677:0:18"},"scope":2831,"src":"650:28:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"295b9300","id":2825,"implemented":false,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"693:14:18","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[],"src":"707:2:18"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2825,"src":"733:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2822,"name":"uint256","nodeType":"ElementaryTypeName","src":"733:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"732:9:18"},"scope":2831,"src":"684:58:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":2830,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"757:9:18","nodeType":"FunctionDefinition","parameters":{"id":2826,"nodeType":"ParameterList","parameters":[],"src":"766:2:18"},"returnParameters":{"id":2829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"792:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"792:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"791:9:18"},"scope":2831,"src":"748:53:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2832,"src":"67:737:18","usedErrors":[],"usedEvents":[]}],"src":"40:766:18"},"id":18},"contracts/interfaces/IYearnVault.sol":{"ast":{"absolutePath":"contracts/interfaces/IYearnVault.sol","exportedSymbols":{"IYearnVault":[2906]},"id":2907,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2833,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IYearnVault","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2906,"linearizedBaseContracts":[2906],"name":"IYearnVault","nameLocation":"70:11:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"38d52e0f","id":2838,"implemented":false,"kind":"function","modifiers":[],"name":"asset","nameLocation":"98:5:19","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[],"src":"103:2:19"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2838,"src":"129:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2835,"name":"address","nodeType":"ElementaryTypeName","src":"129:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"128:9:19"},"scope":2906,"src":"89:49:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":2845,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"155:9:19","nodeType":"FunctionDefinition","parameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"owner","nameLocation":"173:5:19","nodeType":"VariableDeclaration","scope":2845,"src":"165:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2839,"name":"address","nodeType":"ElementaryTypeName","src":"165:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"164:15:19"},"returnParameters":{"id":2844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2845,"src":"203:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"203:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"202:9:19"},"scope":2906,"src":"146:66:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"402d267d","id":2852,"implemented":false,"kind":"function","modifiers":[],"name":"maxDeposit","nameLocation":"229:10:19","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"receiver","nameLocation":"248:8:19","nodeType":"VariableDeclaration","scope":2852,"src":"240:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"240:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"239:18:19"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2852,"src":"281:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"280:9:19"},"scope":2906,"src":"220:70:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"ba087652","id":2863,"implemented":false,"kind":"function","modifiers":[],"name":"redeem","nameLocation":"307:6:19","nodeType":"FunctionDefinition","parameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"shares","nameLocation":"322:6:19","nodeType":"VariableDeclaration","scope":2863,"src":"314:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"receiver","nameLocation":"338:8:19","nodeType":"VariableDeclaration","scope":2863,"src":"330:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"330:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"owner","nameLocation":"356:5:19","nodeType":"VariableDeclaration","scope":2863,"src":"348:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2857,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"313:49:19"},"returnParameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2863,"src":"381:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"381:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"380:9:19"},"scope":2906,"src":"298:92:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"6e553f65","id":2872,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"407:7:19","nodeType":"FunctionDefinition","parameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2865,"mutability":"mutable","name":"assets","nameLocation":"423:6:19","nodeType":"VariableDeclaration","scope":2872,"src":"415:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"receiver","nameLocation":"439:8:19","nodeType":"VariableDeclaration","scope":2872,"src":"431:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2866,"name":"address","nodeType":"ElementaryTypeName","src":"431:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"414:34:19"},"returnParameters":{"id":2871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2872,"src":"467:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2869,"name":"uint256","nodeType":"ElementaryTypeName","src":"467:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"466:9:19"},"scope":2906,"src":"398:78:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"01e1d114","id":2877,"implemented":false,"kind":"function","modifiers":[],"name":"totalAssets","nameLocation":"493:11:19","nodeType":"FunctionDefinition","parameters":{"id":2873,"nodeType":"ParameterList","parameters":[],"src":"504:2:19"},"returnParameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2877,"src":"530:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"530:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"529:9:19"},"scope":2906,"src":"484:55:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"07a2d13a","id":2884,"implemented":false,"kind":"function","modifiers":[],"name":"convertToAssets","nameLocation":"556:15:19","nodeType":"FunctionDefinition","parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"shares","nameLocation":"580:6:19","nodeType":"VariableDeclaration","scope":2884,"src":"572:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"572:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"571:16:19"},"returnParameters":{"id":2883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"611:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"610:9:19"},"scope":2906,"src":"547:73:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c6e6f592","id":2891,"implemented":false,"kind":"function","modifiers":[],"name":"convertToShares","nameLocation":"637:15:19","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2886,"mutability":"mutable","name":"assets","nameLocation":"661:6:19","nodeType":"VariableDeclaration","scope":2891,"src":"653:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"652:16:19"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2891,"src":"692:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2888,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:9:19"},"scope":2906,"src":"628:73:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0a28a477","id":2898,"implemented":false,"kind":"function","modifiers":[],"name":"previewWithdraw","nameLocation":"718:15:19","nodeType":"FunctionDefinition","parameters":{"id":2894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2893,"mutability":"mutable","name":"assets","nameLocation":"742:6:19","nodeType":"VariableDeclaration","scope":2898,"src":"734:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2892,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:16:19"},"returnParameters":{"id":2897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"773:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2895,"name":"uint256","nodeType":"ElementaryTypeName","src":"773:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"772:9:19"},"scope":2906,"src":"709:73:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d905777e","id":2905,"implemented":false,"kind":"function","modifiers":[],"name":"maxRedeem","nameLocation":"799:9:19","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"owner","nameLocation":"817:5:19","nodeType":"VariableDeclaration","scope":2905,"src":"809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"809:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"808:15:19"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"847:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2902,"name":"uint256","nodeType":"ElementaryTypeName","src":"847:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"846:9:19"},"scope":2906,"src":"790:66:19","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2907,"src":"60:799:19","usedErrors":[],"usedEvents":[]}],"src":"33:828:19"},"id":19},"contracts/vaults/BaluniV1yVault.sol":{"ast":{"absolutePath":"contracts/vaults/BaluniV1yVault.sol","exportedSymbols":{"BaluniV1yVault":[3545],"ContextUpgradeable":[1293],"ERC1967Utils":[2048],"ERC20Upgradeable":[1247],"IBaluniV1Oracle":[2550],"IBaluniV1Registry":[2734],"IBaluniV1Swapper":[2765],"IBaluniV1yVault":[2831],"IERC1822Proxiable":[1608],"IERC20":[2136],"IERC20Errors":[1650],"IERC20Metadata":[2162],"IYearnVault":[2906],"Initializable":[448],"OwnableUpgradeable":[194],"PausableUpgradeable":[1469],"ReentrancyGuardUpgradeable":[1598],"UUPSUpgradeable":[630]},"id":3546,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2908,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"absolutePath":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol","id":2909,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":1248,"src":"67:78:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2910,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":195,"src":"147:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":2911,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":1599,"src":"224:82:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2912,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":449,"src":"308:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2913,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":631,"src":"385:77:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol","id":2914,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":1470,"src":"464:75:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Registry.sol","file":"../interfaces/IBaluniV1Registry.sol","id":2915,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":2735,"src":"543:45:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IYearnVault.sol","file":"../interfaces/IYearnVault.sol","id":2916,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":2907,"src":"590:39:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Swapper.sol","file":"../interfaces/IBaluniV1Swapper.sol","id":2917,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":2766,"src":"631:44:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Oracle.sol","file":"../interfaces/IBaluniV1Oracle.sol","id":2918,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":2551,"src":"677:43:20","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1yVault.sol","file":"../interfaces/IBaluniV1yVault.sol","id":2919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3546,"sourceUnit":2832,"src":"722:43:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2920,"name":"Initializable","nameLocations":["801:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"801:13:20"},"id":2921,"nodeType":"InheritanceSpecifier","src":"801:13:20"},{"baseName":{"id":2922,"name":"UUPSUpgradeable","nameLocations":["821:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"821:15:20"},"id":2923,"nodeType":"InheritanceSpecifier","src":"821:15:20"},{"baseName":{"id":2924,"name":"OwnableUpgradeable","nameLocations":["843:18:20"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"843:18:20"},"id":2925,"nodeType":"InheritanceSpecifier","src":"843:18:20"},{"baseName":{"id":2926,"name":"ERC20Upgradeable","nameLocations":["868:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":1247,"src":"868:16:20"},"id":2927,"nodeType":"InheritanceSpecifier","src":"868:16:20"},{"baseName":{"id":2928,"name":"ReentrancyGuardUpgradeable","nameLocations":["891:26:20"],"nodeType":"IdentifierPath","referencedDeclaration":1598,"src":"891:26:20"},"id":2929,"nodeType":"InheritanceSpecifier","src":"891:26:20"},{"baseName":{"id":2930,"name":"PausableUpgradeable","nameLocations":["924:19:20"],"nodeType":"IdentifierPath","referencedDeclaration":1469,"src":"924:19:20"},"id":2931,"nodeType":"InheritanceSpecifier","src":"924:19:20"},{"baseName":{"id":2932,"name":"IBaluniV1yVault","nameLocations":["950:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":2831,"src":"950:15:20"},"id":2933,"nodeType":"InheritanceSpecifier","src":"950:15:20"}],"canonicalName":"BaluniV1yVault","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3545,"linearizedBaseContracts":[3545,2831,1469,1598,1247,1650,2162,2136,194,1293,630,1608,448],"name":"BaluniV1yVault","nameLocation":"778:14:20","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2772],"constant":false,"functionSelector":"cdf456e1","id":2935,"mutability":"mutable","name":"baseAsset","nameLocation":"1043:9:20","nodeType":"VariableDeclaration","scope":3545,"src":"1028:24:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2934,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2938,"mutability":"mutable","name":"_yearnVault","nameLocation":"1131:11:20","nodeType":"VariableDeclaration","scope":3545,"src":"1111:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"},"typeName":{"id":2937,"nodeType":"UserDefinedTypeName","pathNode":{"id":2936,"name":"IYearnVault","nameLocations":["1111:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":2906,"src":"1111:11:20"},"referencedDeclaration":2906,"src":"1111:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"visibility":"private"},{"baseFunctions":[2782],"constant":false,"functionSelector":"fdf262b7","id":2940,"mutability":"mutable","name":"quoteAsset","nameLocation":"1229:10:20","nodeType":"VariableDeclaration","scope":3545,"src":"1214:25:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"1214:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"id":2943,"mutability":"mutable","name":"_registry","nameLocation":"1332:9:20","nodeType":"VariableDeclaration","scope":3545,"src":"1306:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"},"typeName":{"id":2942,"nodeType":"UserDefinedTypeName","pathNode":{"id":2941,"name":"IBaluniV1Registry","nameLocations":["1306:17:20"],"nodeType":"IdentifierPath","referencedDeclaration":2734,"src":"1306:17:20"},"referencedDeclaration":2734,"src":"1306:17:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"visibility":"private"},{"baseFunctions":[2792],"constant":false,"functionSelector":"7d882097","id":2945,"mutability":"mutable","name":"totalDeposits","nameLocation":"1365:13:20","nodeType":"VariableDeclaration","scope":3545,"src":"1350:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"baseFunctions":[2797],"constant":false,"functionSelector":"f7fde10f","id":2947,"mutability":"mutable","name":"accumulatedAssetB","nameLocation":"1402:17:20","nodeType":"VariableDeclaration","scope":3545,"src":"1387:32:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2946,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":3028,"nodeType":"Block","src":"2024:487:20","statements":[{"expression":{"arguments":[{"expression":{"id":2966,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2050:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2054:6:20","memberName":"sender","nodeType":"MemberAccess","src":"2050:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2965,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2035:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2969,"nodeType":"ExpressionStatement","src":"2035:26:20"},{"expression":{"arguments":[{"id":2971,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"2085:5:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2972,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"2092:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2970,"name":"__ERC20_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"2072:12:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2072:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2974,"nodeType":"ExpressionStatement","src":"2072:28:20"},{"expression":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2975,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"2113:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2976,"name":"_assetA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"2125:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2113:19:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2978,"nodeType":"ExpressionStatement","src":"2113:19:20"},{"expression":{"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2979,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"2143:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2981,"name":"_yearnVaultAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"2169:18:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2980,"name":"IYearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"2157:11:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IYearnVault_$2906_$","typeString":"type(contract IYearnVault)"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2157:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"src":"2143:45:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":2984,"nodeType":"ExpressionStatement","src":"2143:45:20"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2985,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"2199:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2986,"name":"_assetB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"2212:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2199:20:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2988,"nodeType":"ExpressionStatement","src":"2199:20:20"},{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"2230:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2991,"name":"_registryAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"2260:16:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2990,"name":"IBaluniV1Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2242:17:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Registry_$2734_$","typeString":"type(contract IBaluniV1Registry)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2242:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"src":"2230:47:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"id":2994,"nodeType":"ExpressionStatement","src":"2230:47:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2996,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"2298:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2311:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2997,"name":"address","nodeType":"ElementaryTypeName","src":"2311:7:20","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2311:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206173736574412061646472657373","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2323:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f9fc9be991fb15edd8b6c78e603f09bcc597989ed5b6a9e284f87c92e42b3b89","typeString":"literal_string \"Invalid assetA address\""},"value":"Invalid assetA address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f9fc9be991fb15edd8b6c78e603f09bcc597989ed5b6a9e284f87c92e42b3b89","typeString":"literal_string \"Invalid assetA address\""}],"id":2995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2290:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3004,"nodeType":"ExpressionStatement","src":"2290:58:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3008,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"2375:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}],"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2367:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3006,"name":"address","nodeType":"ElementaryTypeName","src":"2367:7:20","typeDescriptions":{}}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2367:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2399:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2391:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:20","typeDescriptions":{}}},"id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2367:34:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420596561726e205661756c742061646472657373","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2403:29:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_89141ec2c606ec003f6f5f1768c23192e8ad9a256043aab9d456c1693f9c79ae","typeString":"literal_string \"Invalid Yearn Vault address\""},"value":"Invalid Yearn Vault address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_89141ec2c606ec003f6f5f1768c23192e8ad9a256043aab9d456c1693f9c79ae","typeString":"literal_string \"Invalid Yearn Vault address\""}],"id":3005,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2359:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2359:74:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3017,"nodeType":"ExpressionStatement","src":"2359:74:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"2452:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2474:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2466:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:20","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2466:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2452:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206173736574422061646472657373","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2478:24:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_53fb86809bff5dc62f76bc95bbc7b572a1cc94bf1175d9568e8046d7847ef4ec","typeString":"literal_string \"Invalid assetB address\""},"value":"Invalid assetB address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_53fb86809bff5dc62f76bc95bbc7b572a1cc94bf1175d9568e8046d7847ef4ec","typeString":"literal_string \"Invalid assetB address\""}],"id":3018,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2444:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2444:59:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3027,"nodeType":"ExpressionStatement","src":"2444:59:20"}]},"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"1428:356:20","text":" @dev Initializes the BaluniV1Pool contract.\n @param _assetA The address of the accepted asset.\n @param _yearnVaultAddress The address of the Yearn Vault for assetA.\n @param _assetB The address of the asset to be purchased with interest.\n @param _registryAddress The address of the BaluniV1Registry contract."},"functionSelector":"e56f2fe4","id":3029,"implemented":true,"kind":"function","modifiers":[{"id":2963,"kind":"modifierInvocation","modifierName":{"id":2962,"name":"initializer","nameLocations":["2012:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2012:11:20"},"nodeType":"ModifierInvocation","src":"2012:11:20"}],"name":"initialize","nameLocation":"1799:10:20","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2950,"mutability":"mutable","name":"_name","nameLocation":"1834:5:20","nodeType":"VariableDeclaration","scope":3029,"src":"1820:19:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2949,"name":"string","nodeType":"ElementaryTypeName","src":"1820:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2952,"mutability":"mutable","name":"_symbol","nameLocation":"1864:7:20","nodeType":"VariableDeclaration","scope":3029,"src":"1850:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2951,"name":"string","nodeType":"ElementaryTypeName","src":"1850:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2954,"mutability":"mutable","name":"_assetA","nameLocation":"1890:7:20","nodeType":"VariableDeclaration","scope":3029,"src":"1882:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2953,"name":"address","nodeType":"ElementaryTypeName","src":"1882:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2956,"mutability":"mutable","name":"_yearnVaultAddress","nameLocation":"1916:18:20","nodeType":"VariableDeclaration","scope":3029,"src":"1908:26:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"1908:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"_assetB","nameLocation":"1953:7:20","nodeType":"VariableDeclaration","scope":3029,"src":"1945:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"_registryAddress","nameLocation":"1979:16:20","nodeType":"VariableDeclaration","scope":3029,"src":"1971:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2959,"name":"address","nodeType":"ElementaryTypeName","src":"1971:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1809:193:20"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[],"src":"2024:0:20"},"scope":3545,"src":"1790:721:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[584],"body":{"id":3038,"nodeType":"Block","src":"2861:2:20","statements":[]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"2519:254:20","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":3039,"implemented":true,"kind":"function","modifiers":[{"id":3036,"kind":"modifierInvocation","modifierName":{"id":3035,"name":"onlyOwner","nameLocations":["2851:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2851:9:20"},"nodeType":"ModifierInvocation","src":"2851:9:20"}],"name":"_authorizeUpgrade","nameLocation":"2788:17:20","nodeType":"FunctionDefinition","overrides":{"id":3034,"nodeType":"OverrideSpecifier","overrides":[],"src":"2842:8:20"},"parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"newImplementation","nameLocation":"2814:17:20","nodeType":"VariableDeclaration","scope":3039,"src":"2806:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"2806:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2805:27:20"},"returnParameters":{"id":3037,"nodeType":"ParameterList","parameters":[],"src":"2861:0:20"},"scope":3545,"src":"2779:84:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2804],"body":{"id":3105,"nodeType":"Block","src":"3148:368:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3053,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3167:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3176:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3167:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3179:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":3052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3159:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3159:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3058,"nodeType":"ExpressionStatement","src":"3159:55:20"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3059,"name":"_processInterest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"3227:16:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3227:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3061,"nodeType":"ExpressionStatement","src":"3227:18:20"},{"expression":{"arguments":[{"expression":{"id":3066,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3289:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3293:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3289:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3070,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3309:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3301:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3068,"name":"address","nodeType":"ElementaryTypeName","src":"3301:7:20","typeDescriptions":{}}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3301:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3072,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3316:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3063,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"3265:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3062,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"3258:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3276:12:20","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":2135,"src":"3258:30:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3074,"nodeType":"ExpressionStatement","src":"3258:65:20"},{"expression":{"arguments":[{"arguments":[{"id":3081,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3370:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}],"id":3080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3362:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"3362:7:20","typeDescriptions":{}}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3362:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3083,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3384:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3076,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"3343:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3075,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"3336:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3354:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2123,"src":"3336:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3336:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3085,"nodeType":"ExpressionStatement","src":"3336:55:20"},{"expression":{"arguments":[{"id":3089,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3422:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3092,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3438:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3430:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"3430:7:20","typeDescriptions":{}}},"id":3093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3430:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3086,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"3402:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3414:7:20","memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2872,"src":"3402:19:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) external returns (uint256)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3095,"nodeType":"ExpressionStatement","src":"3402:42:20"},{"expression":{"arguments":[{"id":3097,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"3463:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3467:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3096,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1079,"src":"3457:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3457:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3100,"nodeType":"ExpressionStatement","src":"3457:17:20"},{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3101,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"3485:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3102,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"3502:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3485:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ExpressionStatement","src":"3485:23:20"}]},"documentation":{"id":3040,"nodeType":"StructuredDocumentation","src":"2871:181:20","text":" @dev Deposits assetA into the pool and Yearn Vault.\n @param amount The amount of assetA to deposit.\n @param to The address to receive pool tokens."},"functionSelector":"6e553f65","id":3106,"implemented":true,"kind":"function","modifiers":[{"id":3048,"kind":"modifierInvocation","modifierName":{"id":3047,"name":"nonReentrant","nameLocations":["3121:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"3121:12:20"},"nodeType":"ModifierInvocation","src":"3121:12:20"},{"id":3050,"kind":"modifierInvocation","modifierName":{"id":3049,"name":"whenNotPaused","nameLocations":["3134:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"3134:13:20"},"nodeType":"ModifierInvocation","src":"3134:13:20"}],"name":"deposit","nameLocation":"3067:7:20","nodeType":"FunctionDefinition","overrides":{"id":3046,"nodeType":"OverrideSpecifier","overrides":[],"src":"3112:8:20"},"parameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"amount","nameLocation":"3083:6:20","nodeType":"VariableDeclaration","scope":3106,"src":"3075:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3044,"mutability":"mutable","name":"to","nameLocation":"3099:2:20","nodeType":"VariableDeclaration","scope":3106,"src":"3091:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3074:28:20"},"returnParameters":{"id":3051,"nodeType":"ParameterList","parameters":[],"src":"3148:0:20"},"scope":3545,"src":"3058:458:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2811],"body":{"id":3207,"nodeType":"Block","src":"3824:711:20","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3120,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3843:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3852:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3843:10:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536861726573206d7573742062652067726561746572207468616e207a65726f","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3855:34:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6","typeString":"literal_string \"Shares must be greater than zero\""},"value":"Shares must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6","typeString":"literal_string \"Shares must be greater than zero\""}],"id":3119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3835:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3125,"nodeType":"ExpressionStatement","src":"3835:55:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3128,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3919:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3923:6:20","memberName":"sender","nodeType":"MemberAccess","src":"3919:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3127,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"3909:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3909:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3131,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"3934:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3909:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3942:22:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":3126,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3901:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3901:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3135,"nodeType":"ExpressionStatement","src":"3901:64:20"},{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"withdrawAmountA","nameLocation":"3986:15:20","nodeType":"VariableDeclaration","scope":3207,"src":"3978:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3978:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3145,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"4005:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3139,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4014:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4005:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3141,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4004:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3142,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4031:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4004:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3978:66:20"},{"assignments":[3147],"declarations":[{"constant":false,"id":3147,"mutability":"mutable","name":"withdrawAmountB","nameLocation":"4063:15:20","nodeType":"VariableDeclaration","scope":3207,"src":"4055:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"4055:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3155,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3148,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"4082:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3149,"name":"accumulatedAssetB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"4091:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4082:26:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4081:28:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3152,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"4112:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4112:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4081:44:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4055:70:20"},{"expression":{"arguments":[{"expression":{"id":3157,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4144:3:20","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4148:6:20","memberName":"sender","nodeType":"MemberAccess","src":"4144:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3159,"name":"shares","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"4156:6:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3156,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"4138:5:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3161,"nodeType":"ExpressionStatement","src":"4138:25:20"},{"expression":{"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3162,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4174:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3163,"name":"withdrawAmountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4191:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4174:32:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3165,"nodeType":"ExpressionStatement","src":"4174:32:20"},{"expression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3166,"name":"accumulatedAssetB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"4217:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3167,"name":"withdrawAmountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"4238:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4217:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3169,"nodeType":"ExpressionStatement","src":"4217:36:20"},{"assignments":[3171],"declarations":[{"constant":false,"id":3171,"mutability":"mutable","name":"sharesToRedeem","nameLocation":"4274:14:20","nodeType":"VariableDeclaration","scope":3207,"src":"4266:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4266:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3176,"initialValue":{"arguments":[{"id":3174,"name":"withdrawAmountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4319:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3172,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4291:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4303:15:20","memberName":"convertToShares","nodeType":"MemberAccess","referencedDeclaration":2891,"src":"4291:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4266:69:20"},{"expression":{"arguments":[{"id":3180,"name":"sharesToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"4365:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3183,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4389:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4381:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3181,"name":"address","nodeType":"ElementaryTypeName","src":"4381:7:20","typeDescriptions":{}}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4381:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3187,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4404:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4396:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3185,"name":"address","nodeType":"ElementaryTypeName","src":"4396:7:20","typeDescriptions":{}}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4396:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3177,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4346:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4358:6:20","memberName":"redeem","nodeType":"MemberAccess","referencedDeclaration":2863,"src":"4346:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address,address) external returns (uint256)"}},"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4346:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3190,"nodeType":"ExpressionStatement","src":"4346:64:20"},{"expression":{"arguments":[{"id":3195,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4448:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3196,"name":"withdrawAmountA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"4452:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3192,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"4428:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3191,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"4421:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4439:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"4421:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3198,"nodeType":"ExpressionStatement","src":"4421:47:20"},{"expression":{"arguments":[{"id":3203,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"4507:2:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3204,"name":"withdrawAmountB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"4511:15:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3200,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"4486:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3199,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"4479:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4498:8:20","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2103,"src":"4479:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4479:48:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3206,"nodeType":"ExpressionStatement","src":"4479:48:20"}]},"documentation":{"id":3107,"nodeType":"StructuredDocumentation","src":"3524:203:20","text":" @dev Withdraws assetA and assetB from the pool and Yearn Vault.\n @param shares The amount of pool tokens to redeem.\n @param to The address to receive assetA and assetB."},"functionSelector":"00f714ce","id":3208,"implemented":true,"kind":"function","modifiers":[{"id":3115,"kind":"modifierInvocation","modifierName":{"id":3114,"name":"nonReentrant","nameLocations":["3797:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"3797:12:20"},"nodeType":"ModifierInvocation","src":"3797:12:20"},{"id":3117,"kind":"modifierInvocation","modifierName":{"id":3116,"name":"whenNotPaused","nameLocations":["3810:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"3810:13:20"},"nodeType":"ModifierInvocation","src":"3810:13:20"}],"name":"withdraw","nameLocation":"3742:8:20","nodeType":"FunctionDefinition","overrides":{"id":3113,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:20"},"parameters":{"id":3112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3109,"mutability":"mutable","name":"shares","nameLocation":"3759:6:20","nodeType":"VariableDeclaration","scope":3208,"src":"3751:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"3751:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3111,"mutability":"mutable","name":"to","nameLocation":"3775:2:20","nodeType":"VariableDeclaration","scope":3208,"src":"3767:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3110,"name":"address","nodeType":"ElementaryTypeName","src":"3767:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3750:28:20"},"returnParameters":{"id":3118,"nodeType":"ParameterList","parameters":[],"src":"3824:0:20"},"scope":3545,"src":"3733:802:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3301,"nodeType":"Block","src":"4649:698:20","statements":[{"assignments":[3213],"declarations":[{"constant":false,"id":3213,"mutability":"mutable","name":"totalAssets","nameLocation":"4668:11:20","nodeType":"VariableDeclaration","scope":3301,"src":"4660:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3224,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3220,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4740:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4732:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3218,"name":"address","nodeType":"ElementaryTypeName","src":"4732:7:20","typeDescriptions":{}}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4732:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3216,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4710:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4722:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2845,"src":"4710:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4710:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3214,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4682:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4694:15:20","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":2884,"src":"4682:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4682:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4660:87:20"},{"assignments":[3226],"declarations":[{"constant":false,"id":3226,"mutability":"mutable","name":"interest","nameLocation":"4766:8:20","nodeType":"VariableDeclaration","scope":3301,"src":"4758:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"4758:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3235,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"4777:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3228,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4791:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4777:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4837:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4777:61:20","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"4807:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3231,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"4821:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4807:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4758:80:20"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3237,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4857:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4868:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4857:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20696e74657265737420617661696c61626c65","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4871:23:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_6726a167108c8ad6de2228a073643036d59da7cba84af5bdb159063458980d8c","typeString":"literal_string \"No interest available\""},"value":"No interest available"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6726a167108c8ad6de2228a073643036d59da7cba84af5bdb159063458980d8c","typeString":"literal_string \"No interest available\""}],"id":3236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4849:7:20","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4849:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3242,"nodeType":"ExpressionStatement","src":"4849:46:20"},{"assignments":[3244],"declarations":[{"constant":false,"id":3244,"mutability":"mutable","name":"sharesToRedeem","nameLocation":"4916:14:20","nodeType":"VariableDeclaration","scope":3301,"src":"4908:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"4908:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3249,"initialValue":{"arguments":[{"id":3247,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"4961:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3245,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4933:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4945:15:20","memberName":"previewWithdraw","nodeType":"MemberAccess","referencedDeclaration":2898,"src":"4933:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4908:62:20"},{"expression":{"arguments":[{"id":3253,"name":"sharesToRedeem","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3244,"src":"5000:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3256,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5024:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5016:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3254,"name":"address","nodeType":"ElementaryTypeName","src":"5016:7:20","typeDescriptions":{}}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5016:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3260,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5039:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5031:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"5031:7:20","typeDescriptions":{}}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5031:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3250,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"4981:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4993:6:20","memberName":"redeem","nodeType":"MemberAccess","referencedDeclaration":2863,"src":"4981:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address,address) external returns (uint256)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4981:64:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3263,"nodeType":"ExpressionStatement","src":"4981:64:20"},{"assignments":[3266],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"swapper","nameLocation":"5075:7:20","nodeType":"VariableDeclaration","scope":3301,"src":"5058:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2765","typeString":"contract IBaluniV1Swapper"},"typeName":{"id":3265,"nodeType":"UserDefinedTypeName","pathNode":{"id":3264,"name":"IBaluniV1Swapper","nameLocations":["5058:16:20"],"nodeType":"IdentifierPath","referencedDeclaration":2765,"src":"5058:16:20"},"referencedDeclaration":2765,"src":"5058:16:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2765","typeString":"contract IBaluniV1Swapper"}},"visibility":"internal"}],"id":3272,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3268,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"5102:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5112:16:20","memberName":"getBaluniSwapper","nodeType":"MemberAccess","referencedDeclaration":2648,"src":"5102:26:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5102:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3267,"name":"IBaluniV1Swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"5085:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Swapper_$2765_$","typeString":"type(contract IBaluniV1Swapper)"}},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5085:46:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2765","typeString":"contract IBaluniV1Swapper"}},"nodeType":"VariableDeclarationStatement","src":"5058:73:20"},{"expression":{"arguments":[{"arguments":[{"id":3279,"name":"swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"5178:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2765","typeString":"contract IBaluniV1Swapper"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2765","typeString":"contract IBaluniV1Swapper"}],"id":3278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5170:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3277,"name":"address","nodeType":"ElementaryTypeName","src":"5170:7:20","typeDescriptions":{}}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5170:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3281,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"5188:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3274,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5151:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3273,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"5144:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5144:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5162:7:20","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":2123,"src":"5144:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5144:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"ExpressionStatement","src":"5144:53:20"},{"assignments":[3285],"declarations":[{"constant":false,"id":3285,"mutability":"mutable","name":"amountOut","nameLocation":"5218:9:20","nodeType":"VariableDeclaration","scope":3301,"src":"5210:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"5210:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3296,"initialValue":{"arguments":[{"id":3288,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"5249:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3289,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"5260:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3290,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"5272:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3293,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5290:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5282:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"5282:7:20","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3286,"name":"swapper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"5230:7:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Swapper_$2765","typeString":"contract IBaluniV1Swapper"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5238:10:20","memberName":"singleSwap","nodeType":"MemberAccess","referencedDeclaration":2749,"src":"5230:18:20","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5230:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5210:86:20"},{"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"accumulatedAssetB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2947,"src":"5309:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3298,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"5330:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5309:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3300,"nodeType":"ExpressionStatement","src":"5309:30:20"}]},"documentation":{"id":3209,"nodeType":"StructuredDocumentation","src":"4543:75:20","text":" @dev Uses the accumulated interest to purchase assetB."},"id":3302,"implemented":true,"kind":"function","modifiers":[],"name":"_buy","nameLocation":"4633:4:20","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[],"src":"4637:2:20"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[],"src":"4649:0:20"},"scope":3545,"src":"4624:723:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2814],"body":{"id":3315,"nodeType":"Block","src":"5425:25:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3312,"name":"_buy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"5436:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5436:6:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3314,"nodeType":"ExpressionStatement","src":"5436:6:20"}]},"functionSelector":"a6f2ae3a","id":3316,"implemented":true,"kind":"function","modifiers":[{"id":3306,"kind":"modifierInvocation","modifierName":{"id":3305,"name":"nonReentrant","nameLocations":["5388:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":1538,"src":"5388:12:20"},"nodeType":"ModifierInvocation","src":"5388:12:20"},{"id":3308,"kind":"modifierInvocation","modifierName":{"id":3307,"name":"onlyOwner","nameLocations":["5401:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5401:9:20"},"nodeType":"ModifierInvocation","src":"5401:9:20"},{"id":3310,"kind":"modifierInvocation","modifierName":{"id":3309,"name":"whenNotPaused","nameLocations":["5411:13:20"],"nodeType":"IdentifierPath","referencedDeclaration":1371,"src":"5411:13:20"},"nodeType":"ModifierInvocation","src":"5411:13:20"}],"name":"buy","nameLocation":"5364:3:20","nodeType":"FunctionDefinition","overrides":{"id":3304,"nodeType":"OverrideSpecifier","overrides":[],"src":"5379:8:20"},"parameters":{"id":3303,"nodeType":"ParameterList","parameters":[],"src":"5367:2:20"},"returnParameters":{"id":3311,"nodeType":"ParameterList","parameters":[],"src":"5425:0:20"},"scope":3545,"src":"5355:95:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3352,"nodeType":"Block","src":"5569:258:20","statements":[{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"totalAssets","nameLocation":"5588:11:20","nodeType":"VariableDeclaration","scope":3352,"src":"5580:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"5580:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3332,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3328,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5660:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5652:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3326,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:20","typeDescriptions":{}}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5652:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3324,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"5630:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5642:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2845,"src":"5630:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5630:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3322,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"5602:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5614:15:20","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":2884,"src":"5602:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5602:65:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5580:87:20"},{"assignments":[3334],"declarations":[{"constant":false,"id":3334,"mutability":"mutable","name":"interest","nameLocation":"5686:8:20","nodeType":"VariableDeclaration","scope":3352,"src":"5678:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3333,"name":"uint256","nodeType":"ElementaryTypeName","src":"5678:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3343,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3335,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"5697:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3336,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"5711:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5697:27:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5757:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5697:61:20","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"totalAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"5727:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3339,"name":"totalDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"5741:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5727:27:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5678:80:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"interest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"5773:8:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5784:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5773:12:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3351,"nodeType":"IfStatement","src":"5769:51:20","trueBody":{"id":3350,"nodeType":"Block","src":"5787:33:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3347,"name":"_buy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3302,"src":"5802:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5802:6:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3349,"nodeType":"ExpressionStatement","src":"5802:6:20"}]}}]},"documentation":{"id":3317,"nodeType":"StructuredDocumentation","src":"5458:68:20","text":" @dev Checks and processes accumulated interest."},"id":3353,"implemented":true,"kind":"function","modifiers":[],"name":"_processInterest","nameLocation":"5541:16:20","nodeType":"FunctionDefinition","parameters":{"id":3318,"nodeType":"ParameterList","parameters":[],"src":"5557:2:20"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"5569:0:20"},"scope":3545,"src":"5532:295:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2817],"body":{"id":3363,"nodeType":"Block","src":"5954:27:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3360,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"5965:6:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5965:8:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3362,"nodeType":"ExpressionStatement","src":"5965:8:20"}]},"documentation":{"id":3354,"nodeType":"StructuredDocumentation","src":"5835:68:20","text":" @dev pause pool, restricting certain operations"},"functionSelector":"8456cb59","id":3364,"implemented":true,"kind":"function","modifiers":[{"id":3358,"kind":"modifierInvocation","modifierName":{"id":3357,"name":"onlyOwner","nameLocations":["5944:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5944:9:20"},"nodeType":"ModifierInvocation","src":"5944:9:20"}],"name":"pause","nameLocation":"5918:5:20","nodeType":"FunctionDefinition","overrides":{"id":3356,"nodeType":"OverrideSpecifier","overrides":[],"src":"5935:8:20"},"parameters":{"id":3355,"nodeType":"ParameterList","parameters":[],"src":"5923:2:20"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[],"src":"5954:0:20"},"scope":3545,"src":"5909:72:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2820],"body":{"id":3374,"nodeType":"Block","src":"6109:29:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3371,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"6120:8:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6120:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3373,"nodeType":"ExpressionStatement","src":"6120:10:20"}]},"documentation":{"id":3365,"nodeType":"StructuredDocumentation","src":"5989:67:20","text":" @dev unpause pool, enabling certain operations"},"functionSelector":"3f4ba83a","id":3375,"implemented":true,"kind":"function","modifiers":[{"id":3369,"kind":"modifierInvocation","modifierName":{"id":3368,"name":"onlyOwner","nameLocations":["6099:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6099:9:20"},"nodeType":"ModifierInvocation","src":"6099:9:20"}],"name":"unpause","nameLocation":"6071:7:20","nodeType":"FunctionDefinition","overrides":{"id":3367,"nodeType":"OverrideSpecifier","overrides":[],"src":"6090:8:20"},"parameters":{"id":3366,"nodeType":"ParameterList","parameters":[],"src":"6078:2:20"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[],"src":"6109:0:20"},"scope":3545,"src":"6062:76:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2825],"body":{"id":3478,"nodeType":"Block","src":"6211:767:20","statements":[{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"oracle","nameLocation":"6238:6:20","nodeType":"VariableDeclaration","scope":3478,"src":"6222:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2550","typeString":"contract IBaluniV1Oracle"},"typeName":{"id":3382,"nodeType":"UserDefinedTypeName","pathNode":{"id":3381,"name":"IBaluniV1Oracle","nameLocations":["6222:15:20"],"nodeType":"IdentifierPath","referencedDeclaration":2550,"src":"6222:15:20"},"referencedDeclaration":2550,"src":"6222:15:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2550","typeString":"contract IBaluniV1Oracle"}},"visibility":"internal"}],"id":3389,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3385,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"6263:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6273:15:20","memberName":"getBaluniOracle","nodeType":"MemberAccess","referencedDeclaration":2653,"src":"6263:25:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6263:27:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3384,"name":"IBaluniV1Oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6247:15:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Oracle_$2550_$","typeString":"type(contract IBaluniV1Oracle)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6247:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2550","typeString":"contract IBaluniV1Oracle"}},"nodeType":"VariableDeclarationStatement","src":"6222:69:20"},{"assignments":[3391],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"USDC","nameLocation":"6310:4:20","nodeType":"VariableDeclaration","scope":3478,"src":"6302:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3395,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3392,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"6317:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6327:7:20","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"6317:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6302:34:20"},{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"valuation","nameLocation":"6355:9:20","nodeType":"VariableDeclaration","scope":3478,"src":"6347:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"6347:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3399,"initialValue":{"hexValue":"30","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6367:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6347:21:20"},{"assignments":[3401],"declarations":[{"constant":false,"id":3401,"mutability":"mutable","name":"balanceBase","nameLocation":"6384:11:20","nodeType":"VariableDeclaration","scope":3478,"src":"6379:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3400,"name":"uint","nodeType":"ElementaryTypeName","src":"6379:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3411,"initialValue":{"arguments":[{"arguments":[{"id":3408,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6434:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6426:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"6426:7:20","typeDescriptions":{}}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6426:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3403,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6405:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3402,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6398:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6398:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6416:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"6398:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6398:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6379:61:20"},{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"yearnBalance","nameLocation":"6456:12:20","nodeType":"VariableDeclaration","scope":3478,"src":"6451:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint","nodeType":"ElementaryTypeName","src":"6451:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3421,"initialValue":{"arguments":[{"arguments":[{"id":3418,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6501:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6493:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"6493:7:20","typeDescriptions":{}}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6493:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3414,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"6471:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6483:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2845,"src":"6471:21:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6471:36:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6451:56:20"},{"assignments":[3423],"declarations":[{"constant":false,"id":3423,"mutability":"mutable","name":"yearnBalanceConvert","nameLocation":"6523:19:20","nodeType":"VariableDeclaration","scope":3478,"src":"6518:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint","nodeType":"ElementaryTypeName","src":"6518:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3428,"initialValue":{"arguments":[{"id":3426,"name":"yearnBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"6573:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3424,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"6545:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6557:15:20","memberName":"convertToAssets","nodeType":"MemberAccess","referencedDeclaration":2884,"src":"6545:27:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6545:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6518:68:20"},{"assignments":[3430],"declarations":[{"constant":false,"id":3430,"mutability":"mutable","name":"balanceQuote","nameLocation":"6602:12:20","nodeType":"VariableDeclaration","scope":3478,"src":"6597:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint","nodeType":"ElementaryTypeName","src":"6597:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3440,"initialValue":{"arguments":[{"arguments":[{"id":3437,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6654:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1yVault_$3545","typeString":"contract BaluniV1yVault"}],"id":3436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6646:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3435,"name":"address","nodeType":"ElementaryTypeName","src":"6646:7:20","typeDescriptions":{}}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6646:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3432,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6624:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3431,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"6617:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2136_$","typeString":"type(contract IERC20)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6617:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2136","typeString":"contract IERC20"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6636:9:20","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2093,"src":"6617:28:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6617:43:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6597:63:20"},{"expression":{"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3441,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6671:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3444,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6699:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3445,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6711:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3446,"name":"yearnBalanceConvert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"6722:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3442,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"6684:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2550","typeString":"contract IBaluniV1Oracle"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6691:7:20","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":2538,"src":"6684:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:58:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6671:71:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3449,"nodeType":"ExpressionStatement","src":"6671:71:20"},{"expression":{"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3450,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6753:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3453,"name":"quoteAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6781:10:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3454,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6793:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3455,"name":"balanceQuote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"6804:12:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3451,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"6766:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2550","typeString":"contract IBaluniV1Oracle"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6773:7:20","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":2538,"src":"6766:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6753:64:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3458,"nodeType":"ExpressionStatement","src":"6753:64:20"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3459,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6832:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3460,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6845:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6832:17:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3471,"nodeType":"IfStatement","src":"6828:80:20","trueBody":{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3462,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6851:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3465,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"6879:9:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3466,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6890:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3467,"name":"balanceBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"6896:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3463,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"6864:6:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Oracle_$2550","typeString":"contract IBaluniV1Oracle"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6871:7:20","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":2538,"src":"6864:14:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6864:44:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6851:57:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"6851:57:20"}},{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3472,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6919:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3473,"name":"balanceBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"6932:11:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6919:24:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ExpressionStatement","src":"6919:24:20"},{"expression":{"id":3476,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6961:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3380,"id":3477,"nodeType":"Return","src":"6954:16:20"}]},"functionSelector":"295b9300","id":3479,"implemented":true,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"6155:14:20","nodeType":"FunctionDefinition","overrides":{"id":3377,"nodeType":"OverrideSpecifier","overrides":[],"src":"6184:8:20"},"parameters":{"id":3376,"nodeType":"ParameterList","parameters":[],"src":"6169:2:20"},"returnParameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3479,"src":"6202:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"6202:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6201:9:20"},"scope":3545,"src":"6146:832:20","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[2830],"body":{"id":3519,"nodeType":"Block","src":"7048:251:20","statements":[{"assignments":[3486],"declarations":[{"constant":false,"id":3486,"mutability":"mutable","name":"USDC","nameLocation":"7067:4:20","nodeType":"VariableDeclaration","scope":3519,"src":"7059:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3485,"name":"address","nodeType":"ElementaryTypeName","src":"7059:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3490,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3487,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"7074:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7084:7:20","memberName":"getUSDC","nodeType":"MemberAccess","referencedDeclaration":2698,"src":"7074:17:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7074:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7059:34:20"},{"assignments":[3492],"declarations":[{"constant":false,"id":3492,"mutability":"mutable","name":"decimals","nameLocation":"7110:8:20","nodeType":"VariableDeclaration","scope":3519,"src":"7104:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3491,"name":"uint8","nodeType":"ElementaryTypeName","src":"7104:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3498,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3494,"name":"USDC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"7136:4:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3493,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"7121:14:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$2162_$","typeString":"type(contract IERC20Metadata)"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7121:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$2162","typeString":"contract IERC20Metadata"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7142:8:20","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"7121:29:20","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7121:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7104:48:20"},{"assignments":[3500],"declarations":[{"constant":false,"id":3500,"mutability":"mutable","name":"valuationScaledUp","nameLocation":"7171:17:20","nodeType":"VariableDeclaration","scope":3519,"src":"7163:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3510,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3501,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3479,"src":"7191:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7210:2:20","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3138","id":3504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7217:2:20","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3505,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"7222:8:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7217:13:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7216:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7210:21:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7191:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7163:68:20"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"valuationScaledUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"7250:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3512,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"7270:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7270:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7250:33:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7249:35:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7287:4:20","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"7249:42:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3484,"id":3518,"nodeType":"Return","src":"7242:49:20"}]},"functionSelector":"e73faa2d","id":3520,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"6995:9:20","nodeType":"FunctionDefinition","overrides":{"id":3481,"nodeType":"OverrideSpecifier","overrides":[],"src":"7021:8:20"},"parameters":{"id":3480,"nodeType":"ParameterList","parameters":[],"src":"7004:2:20"},"returnParameters":{"id":3484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3520,"src":"7039:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3482,"name":"uint256","nodeType":"ElementaryTypeName","src":"7039:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7038:9:20"},"scope":3545,"src":"6986:313:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2787],"body":{"id":3531,"nodeType":"Block","src":"7368:44:20","statements":[{"expression":{"arguments":[{"id":3528,"name":"_registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"7394:9:20","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Registry_$2734","typeString":"contract IBaluniV1Registry"}],"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7386:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3526,"name":"address","nodeType":"ElementaryTypeName","src":"7386:7:20","typeDescriptions":{}}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7386:18:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3525,"id":3530,"nodeType":"Return","src":"7379:25:20"}]},"functionSelector":"7b103999","id":3532,"implemented":true,"kind":"function","modifiers":[],"name":"registry","nameLocation":"7316:8:20","nodeType":"FunctionDefinition","overrides":{"id":3522,"nodeType":"OverrideSpecifier","overrides":[],"src":"7341:8:20"},"parameters":{"id":3521,"nodeType":"ParameterList","parameters":[],"src":"7324:2:20"},"returnParameters":{"id":3525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3532,"src":"7359:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3523,"name":"address","nodeType":"ElementaryTypeName","src":"7359:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7358:9:20"},"scope":3545,"src":"7307:105:20","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[2777],"body":{"id":3543,"nodeType":"Block","src":"7483:46:20","statements":[{"expression":{"arguments":[{"id":3540,"name":"_yearnVault","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"7509:11:20","typeDescriptions":{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IYearnVault_$2906","typeString":"contract IYearnVault"}],"id":3539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7501:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3538,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:20","typeDescriptions":{}}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7501:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3537,"id":3542,"nodeType":"Return","src":"7494:27:20"}]},"functionSelector":"9db5df46","id":3544,"implemented":true,"kind":"function","modifiers":[],"name":"yearnVault","nameLocation":"7429:10:20","nodeType":"FunctionDefinition","overrides":{"id":3534,"nodeType":"OverrideSpecifier","overrides":[],"src":"7456:8:20"},"parameters":{"id":3533,"nodeType":"ParameterList","parameters":[],"src":"7439:2:20"},"returnParameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3544,"src":"7474:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3535,"name":"address","nodeType":"ElementaryTypeName","src":"7474:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7473:9:20"},"scope":3545,"src":"7420:109:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3546,"src":"769:6763:20","usedErrors":[30,35,211,214,475,480,1332,1335,1500,1620,1625,1630,1639,1644,1649,1780,1793,2175,2178],"usedEvents":[41,219,1324,1329,1759,2070,2079]}],"src":"40:7494:20"},"id":20}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol":{"ERC20Upgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol":{"PausableUpgradeable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","errors":{"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\\n    struct PausableStorage {\\n        bool _paused;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Pausable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\\n\\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\\n        assembly {\\n            $.slot := PausableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        PausableStorage storage $ = _getPausableStorage();\\n        return $._paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"ReentrancyGuardUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c6ced6292c72a5df5062c5531f11602e1abc0858cc9574df81da14878fc54a64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC6 0xCE 0xD6 0x29 0x2C PUSH19 0xA5DF5062C5531F11602E1ABC0858CC9574DF81 0xDA EQ DUP8 DUP16 0xC5 BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:9;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c6ced6292c72a5df5062c5531f11602e1abc0858cc9574df81da14878fc54a64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC6 0xCE 0xD6 0x29 0x2C PUSH19 0xA5DF5062C5531F11602E1ABC0858CC9574DF81 0xDA EQ DUP8 DUP16 0xC5 BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c04349167677d2822c11c2f99ae3d53f9585061fd9b4d0a1134e59d5aae7d6364736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIV CALLVALUE SWAP2 PUSH8 0x677D2822C11C2F99 0xAE RETURNDATASIZE MSTORE8 0xF9 PC POP PUSH2 0xFD9B 0x4D EXP GT CALLVALUE 0xE5 SWAP14 GAS 0xAE PUSH30 0x6364736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"195:6066:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c04349167677d2822c11c2f99ae3d53f9585061fd9b4d0a1134e59d5aae7d6364736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DIV CALLVALUE SWAP2 PUSH8 0x677D2822C11C2F99 0xAE RETURNDATASIZE MSTORE8 0xF9 PC POP PUSH2 0xFD9B 0x4D EXP GT CALLVALUE 0xE5 SWAP14 GAS 0xAE PUSH30 0x6364736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"195:6066:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c766a8d534da51e6d89f2a7211a3e2cbb05f0ce6c90a7d619a2d9809239f1ec64736f6c63430008190033","opcodes":"PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH23 0x6A8D534DA51E6D89F2A7211A3E2CBB05F0CE6C90A7D619 LOG2 0xD9 DUP1 SWAP3 CODECOPY CALL 0xEC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202c766a8d534da51e6d89f2a7211a3e2cbb05f0ce6c90a7d619a2d9809239f1ec64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C PUSH23 0x6A8D534DA51E6D89F2A7211A3E2CBB05F0CE6C90A7D619 LOG2 0xD9 DUP1 SWAP3 CODECOPY CALL 0xEC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17000","executionCost":"96","totalCost":"17096"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Oracle.sol":{"IBaluniV1Oracle":{"abi":[{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convertScaled","outputs":[{"internalType":"uint256","name":"valuation","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convert(address,address,uint256)":"248391ff","convertScaled(address,address,uint256)":"b27b5e75"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"valuation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":\"IBaluniV1Oracle\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Registry.sol":{"IBaluniV1Registry":{"abi":[{"inputs":[],"name":"get1inchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniAgentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolPeriphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniPoolRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniSwapper","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBaluniVaultRegistry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStaticOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTreasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUSDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"__1inchSpotAgg","type":"address"}],"name":"set1inchSpotAgg","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"__BPS_FEE","type":"uint256"}],"name":"setBPS_FEE","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniAgentFactory","type":"address"}],"name":"setBaluniAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniOracle","type":"address"}],"name":"setBaluniOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolPeriphery","type":"address"}],"name":"setBaluniPoolPeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolRegistry","type":"address"}],"name":"setBaluniPoolRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRebalancer","type":"address"}],"name":"setBaluniRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRegistry","type":"address"}],"name":"setBaluniRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniRouter","type":"address"}],"name":"setBaluniRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniSwapper","type":"address"}],"name":"setBaluniSwapper","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_baluniPoolRegistry","type":"address"}],"name":"setBaluniVaultRegistry","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_staticOracle","type":"address"}],"name":"setStaticOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_USDC","type":"address"}],"name":"setUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapFactory","type":"address"}],"name":"setUniswapFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_uniswapRouter","type":"address"}],"name":"setUniswapRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_WNATIVE","type":"address"}],"name":"setWNATIVE","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the BaluniV1Registry contract.","kind":"dev","methods":{},"title":"IBaluniV1Registry","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"get1inchSpotAgg()":"8e1c3a8a","getBPS_BASE()":"4f4608a2","getBPS_FEE()":"85462d6f","getBaluniAgentFactory()":"f5d2d998","getBaluniOracle()":"bb3ba04c","getBaluniPoolPeriphery()":"1acb6141","getBaluniPoolRegistry()":"32569e02","getBaluniRebalancer()":"cff49d68","getBaluniRegistry()":"c9aba8ae","getBaluniRouter()":"04cc7325","getBaluniSwapper()":"82755ebb","getBaluniVaultRegistry()":"1cc2b00d","getMAX_BPS_FEE()":"9380fb6f","getStaticOracle()":"a5d2236f","getTreasury()":"3b19e84a","getUSDC()":"1bf01e9b","getUniswapFactory()":"3e6dfa36","getUniswapRouter()":"524900b5","getWNATIVE()":"6c9c0078","set1inchSpotAgg(address)":"c08f786b","setBPS_FEE(uint256)":"9e6453f8","setBaluniAgentFactory(address)":"f1dccde7","setBaluniOracle(address)":"f5b84f64","setBaluniPoolPeriphery(address)":"588c5b70","setBaluniPoolRegistry(address)":"f98977a9","setBaluniRebalancer(address)":"0241bffa","setBaluniRegistry(address)":"6c43274c","setBaluniRouter(address)":"400fb668","setBaluniSwapper(address)":"c3f5df5c","setBaluniVaultRegistry(address)":"5055fe98","setStaticOracle(address)":"cc01e9a6","setTreasury(address)":"f0f44260","setUSDC(address)":"b3e089a2","setUniswapFactory(address)":"e04b677f","setUniswapRouter(address)":"bea9849e","setWNATIVE(address)":"b6fe9cc7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"get1inchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniAgentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolPeriphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniSwapper\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBaluniVaultRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStaticOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"__1inchSpotAgg\",\"type\":\"address\"}],\"name\":\"set1inchSpotAgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"__BPS_FEE\",\"type\":\"uint256\"}],\"name\":\"setBPS_FEE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniAgentFactory\",\"type\":\"address\"}],\"name\":\"setBaluniAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniOracle\",\"type\":\"address\"}],\"name\":\"setBaluniOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolPeriphery\",\"type\":\"address\"}],\"name\":\"setBaluniPoolPeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniPoolRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRebalancer\",\"type\":\"address\"}],\"name\":\"setBaluniRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniRouter\",\"type\":\"address\"}],\"name\":\"setBaluniRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniSwapper\",\"type\":\"address\"}],\"name\":\"setBaluniSwapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_baluniPoolRegistry\",\"type\":\"address\"}],\"name\":\"setBaluniVaultRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staticOracle\",\"type\":\"address\"}],\"name\":\"setStaticOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDC\",\"type\":\"address\"}],\"name\":\"setUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapFactory\",\"type\":\"address\"}],\"name\":\"setUniswapFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapRouter\",\"type\":\"address\"}],\"name\":\"setUniswapRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WNATIVE\",\"type\":\"address\"}],\"name\":\"setWNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the BaluniV1Registry contract.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IBaluniV1Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Registry.sol\":\"IBaluniV1Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniVaultRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7e73b74ed81791ac27ab8e6f5877d7d6c969567be86125ee3ce2c77825487127\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Swapper.sol":{"IBaluniV1Swapper":{"abi":[{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"address","name":"token2","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"multiHopSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"singleSwap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"multiHopSwap(address,address,address,uint256,address)":"5efaaebb","singleSwap(address,address,uint256,address)":"2d6bc8ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"multiHopSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"singleSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Swapper.sol\":\"IBaluniV1Swapper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1Swapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Swapper {\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x8113df3342115499d21149fa3fe70412cb6bdbf79766870f929b3845e1d2a0fe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1yVault.sol":{"IBaluniV1yVault":{"abi":[{"inputs":[],"name":"accumulatedAssetB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"quoteAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"yearnVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"accumulatedAssetB()":"f7fde10f","baseAsset()":"cdf456e1","buy()":"a6f2ae3a","deposit(uint256,address)":"6e553f65","pause()":"8456cb59","quoteAsset()":"fdf262b7","registry()":"7b103999","totalDeposits()":"7d882097","totalValuation()":"295b9300","unitPrice()":"e73faa2d","unpause()":"3f4ba83a","withdraw(uint256,address)":"00f714ce","yearnVault()":"9db5df46"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accumulatedAssetB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yearnVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1yVault.sol\":\"IBaluniV1yVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBaluniV1yVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1yVault {\\r\\n    function baseAsset() external view returns (address);\\r\\n    function yearnVault() external view returns (address);\\r\\n    function quoteAsset() external view returns (address);\\r\\n    function registry() external view returns (address);\\r\\n    function totalDeposits() external view returns (uint256);\\r\\n    function accumulatedAssetB() external view returns (uint256);\\r\\n    function deposit(uint256 amount, address to) external;\\r\\n    function withdraw(uint256 shares, address to) external;\\r\\n    function buy() external;\\r\\n    function pause() external;\\r\\n    function unpause() external;\\r\\n    function totalValuation() external view returns (uint256);\\r\\n    function unitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x361b80490f16b8536f68e5b5c814b33615f8866ac345d23765e3edd12b2c6925\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IYearnVault.sol":{"IYearnVault":{"abi":[{"inputs":[],"name":"asset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"}],"name":"convertToAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"convertToShares","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"deposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"maxDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"maxRedeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assets","type":"uint256"}],"name":"previewWithdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"redeem","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalAssets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"asset()":"38d52e0f","balanceOf(address)":"70a08231","convertToAssets(uint256)":"07a2d13a","convertToShares(uint256)":"c6e6f592","deposit(uint256,address)":"6e553f65","maxDeposit(address)":"402d267d","maxRedeem(address)":"d905777e","previewWithdraw(uint256)":"0a28a477","redeem(uint256,address,address)":"ba087652","totalAssets()":"01e1d114"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"convertToAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"convertToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"maxDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"maxRedeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assets\",\"type\":\"uint256\"}],\"name\":\"previewWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IYearnVault.sol\":\"IYearnVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IYearnVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IYearnVault {\\r\\n    function asset() external view returns (address);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function maxDeposit(address receiver) external view returns (uint256);\\r\\n\\r\\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256);\\r\\n\\r\\n    function deposit(uint256 assets, address receiver) external returns (uint256);\\r\\n\\r\\n    function totalAssets() external view returns (uint256);\\r\\n\\r\\n    function convertToAssets(uint256 shares) external view returns (uint256);\\r\\n\\r\\n    function convertToShares(uint256 assets) external view returns (uint256);\\r\\n\\r\\n    function previewWithdraw(uint256 assets) external view returns (uint256);\\r\\n\\r\\n    function maxRedeem(address owner) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x32952c4cf75af24a48eb5ce8ca05358d527dba5532e6f19e4db12ef418b82ab8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/vaults/BaluniV1yVault.sol":{"BaluniV1yVault":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"accumulatedAssetB","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"address","name":"_assetA","type":"address"},{"internalType":"address","name":"_yearnVaultAddress","type":"address"},{"internalType":"address","name":"_assetB","type":"address"},{"internalType":"address","name":"_registryAddress","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quoteAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"registry","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shares","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"yearnVault","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"EnforcedPause()":[{"details":"The operation failed because the contract is paused."}],"ExpectedPause()":[{"details":"The operation failed because the contract is not paused."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"deposit(uint256,address)":{"details":"Deposits assetA into the pool and Yearn Vault.","params":{"amount":"The amount of assetA to deposit.","to":"The address to receive pool tokens."}},"initialize(string,string,address,address,address,address)":{"details":"Initializes the BaluniV1Pool contract.","params":{"_assetA":"The address of the accepted asset.","_assetB":"The address of the asset to be purchased with interest.","_registryAddress":"The address of the BaluniV1Registry contract.","_yearnVaultAddress":"The address of the Yearn Vault for assetA."}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"pause()":{"details":"pause pool, restricting certain operations"},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"unpause()":{"details":"unpause pool, enabling certain operations"},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."},"withdraw(uint256,address)":{"details":"Withdraws assetA and assetB from the pool and Yearn Vault.","params":{"shares":"The amount of pool tokens to redeem.","to":"The address to receive assetA and assetB."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0604052306080523480156012575f80fd5b50608051612fdb6100395f395f8181611aed01528181611b160152611cc60152612fdb5ff3fe6080604052600436106101c4575f3560e01c80637d882097116100f2578063ad3cb1cc11610092578063e73faa2d11610062578063e73faa2d146105a6578063f2fde38b146105ba578063f7fde10f146105d9578063fdf262b7146105ee575f80fd5b8063ad3cb1cc146104be578063cdf456e114610506578063dd62ed3e14610524578063e56f2fe414610587575f80fd5b806395d89b41116100cd57806395d89b411461045a5780639db5df461461046e578063a6f2ae3a1461048b578063a9059cbb1461049f575f80fd5b80637d882097146103f55780638456cb591461040a5780638da5cb5b1461041e575f80fd5b80633f4ba83a116101685780636e553f65116101385780636e553f651461033e57806370a082311461035d578063715018a6146103b05780637b103999146103c4575f80fd5b80633f4ba83a146102cd5780634f1ef286146102e157806352d1902d146102f45780635c975abb14610308575f80fd5b806318160ddd116101a357806318160ddd1461024257806323b872dd1461027f578063295b93001461029e578063313ce567146102b2575f80fd5b8062f714ce146101c857806306fdde03146101e9578063095ea7b314610213575b5f80fd5b3480156101d3575f80fd5b506101e76101e23660046129ab565b61060d565b005b3480156101f4575f80fd5b506101fd610a0d565b60405161020a91906129d9565b60405180910390f35b34801561021e575f80fd5b5061023261022d366004612a0e565b610ae0565b604051901515815260200161020a565b34801561024d575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b60405190815260200161020a565b34801561028a575f80fd5b50610232610299366004612a38565b610af9565b3480156102a9575f80fd5b50610271610b1e565b3480156102bd575f80fd5b506040516012815260200161020a565b3480156102d8575f80fd5b506101e7610fa7565b6101e76102ef366004612afd565b610fb9565b3480156102ff575f80fd5b50610271610fd4565b348015610313575f80fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610232565b348015610349575f80fd5b506101e76103583660046129ab565b611002565b348015610368575f80fd5b50610271610377366004612b5d565b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205490565b3480156103bb575f80fd5b506101e761125d565b3480156103cf575f80fd5b506003546001600160a01b03165b6040516001600160a01b03909116815260200161020a565b348015610400575f80fd5b5061027160045481565b348015610415575f80fd5b506101e761126e565b348015610429575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166103dd565b348015610465575f80fd5b506101fd61127e565b348015610479575f80fd5b506001546001600160a01b03166103dd565b348015610496575f80fd5b506101e76112cf565b3480156104aa575f80fd5b506102326104b9366004612a0e565b611318565b3480156104c9575f80fd5b506101fd6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b348015610511575f80fd5b505f546103dd906001600160a01b031681565b34801561052f575f80fd5b5061027161053e366004612b78565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b348015610592575f80fd5b506101e76105a1366004612bc2565b611325565b3480156105b1575f80fd5b506102716115d6565b3480156105c5575f80fd5b506101e76105d4366004612b5d565b611728565b3480156105e4575f80fd5b5061027160055481565b3480156105f9575f80fd5b506002546103dd906001600160a01b031681565b61061561177e565b61061d6117ff565b5f82116106715760405162461bcd60e51b815260206004820181905260248201527f536861726573206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b335f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260409020548211156106ee5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610668565b5f6107177f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b6004546107249085612c7f565b61072e9190612c96565b90505f6107597f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b6005546107669086612c7f565b6107709190612c96565b905061077c338561185b565b8160045f82825461078d9190612cb5565b925050819055508060055f8282546107a59190612cb5565b90915550506001546040517fc6e6f592000000000000000000000000000000000000000000000000000000008152600481018490525f916001600160a01b03169063c6e6f59290602401602060405180830381865afa15801561080a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082e9190612cc8565b6001546040517fba08765200000000000000000000000000000000000000000000000000000000815260048101839052306024820181905260448201529192506001600160a01b03169063ba087652906064016020604051808303815f875af115801561089d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c19190612cc8565b505f546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af115801561092a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094e9190612cdf565b506002546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018590529091169063a9059cbb906044016020604051808303815f875af11580156109b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109dc9190612cdf565b50505050610a0960017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610a5e90612cfe565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8a90612cfe565b8015610ad55780601f10610aac57610100808354040283529160200191610ad5565b820191905f5260205f20905b815481529060010190602001808311610ab857829003601f168201915b505050505091505090565b5f33610aed8185856118a8565b60019150505b92915050565b5f33610b068582856118ba565b610b1185858561196d565b60019150505b9392505050565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b70573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b949190612d36565b90505f60035f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c0b9190612d36565b5f80546040516370a0823160e01b8152306004820152929350909182916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c56573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c7a9190612cc8565b6001546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce99190612cc8565b6001546040517f07a2d13a000000000000000000000000000000000000000000000000000000008152600481018390529192505f916001600160a01b03909116906307a2d13a90602401602060405180830381865afa158015610d4e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d729190612cc8565b6002546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610dbd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610de19190612cc8565b6002545f5460405163248391ff60e01b81526001600160a01b03928316600482015290821660248201526044810185905291925088169063248391ff90606401602060405180830381865afa158015610e3c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e609190612cc8565b610e6a9086612d51565b6002545f5460405163248391ff60e01b81526001600160a01b03928316600482015290821660248201526044810184905291965088169063248391ff90606401602060405180830381865afa158015610ec5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ee99190612cc8565b610ef39086612d51565b5f549095506001600160a01b03878116911614610f91575f5460405163248391ff60e01b81526001600160a01b0391821660048201528782166024820152604481018690529088169063248391ff90606401602060405180830381865afa158015610f60573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f849190612cc8565b610f8e9086612d51565b94505b610f9b8486612d51565b98975050505050505050565b610faf6119fc565b610fb7611a70565b565b610fc1611ae2565b610fca82611bb2565b610a098282611bba565b5f610fdd611cbb565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61100a61177e565b6110126117ff565b5f82116110615760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610668565b611069611d1d565b5f546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156110d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110f99190612cdf565b505f546001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303815f875af1158015611164573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111889190612cdf565b506001546040517f6e553f65000000000000000000000000000000000000000000000000000000008152600481018490523060248201526001600160a01b0390911690636e553f65906044016020604051808303815f875af11580156111f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112149190612cc8565b5061121f8183611e1b565b8160045f8282546112309190612d51565b909155505060017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00555050565b6112656119fc565b610fb75f611e68565b6112766119fc565b610fb7611ee5565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610a5e90612cfe565b6112d761177e565b6112df6119fc565b6112e76117ff565b6112ef611f40565b610fb760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5f33610aed81858561196d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f8115801561136f5750825b90505f8267ffffffffffffffff16600114801561138b5750303b155b905081158015611399575080155b156113d0576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561141b57845468ff00000000000000001916680100000000000000001785555b61142433612367565b61142e8b8b612378565b5f80546001600160a01b03808c1673ffffffffffffffffffffffffffffffffffffffff199283168117909355600180548c8316908416179055600280548b831690841617905560038054918a16919092161790556114ce5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206173736574412061646472657373000000000000000000006044820152606401610668565b6001546001600160a01b03166115265760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420596561726e205661756c74206164647265737300000000006044820152606401610668565b6002546001600160a01b031661157e5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206173736574422061646472657373000000000000000000006044820152606401610668565b83156115c957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611628573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061164c9190612d36565b90505f816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116af9190612d64565b90505f6116bd826012612d84565b6116c890600a612e7d565b6116d0610b1e565b6116da9190612c7f565b90506117047f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b61170e9082612c96565b61172090670de0b6b3a7640000612c7f565b935050505090565b6117306119fc565b6001600160a01b038116611772576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b61177b81611e68565b50565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080547ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016117f9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60029055565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1615610fb7576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821661189d576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b610a09825f8361238a565b6118b583838360016124ef565b505050565b6001600160a01b038381165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220545f1981146119675781811015611959576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024810182905260448101839052606401610668565b61196784848484035f6124ef565b50505050565b6001600160a01b0383166119af576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6001600160a01b0382166119f1576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6118b583838361238a565b33611a2e7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610fb7576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610668565b611a78612618565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611b7b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611b6f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b15610fb7576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61177b6119fc565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c14575060408051601f3d908101601f19168201909252611c1191810190612cc8565b60015b611c55576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610668565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611cb1576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610668565b6118b58383612673565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fb7576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040516370a0823160e01b81523060048201525f916001600160a01b0316906307a2d13a9082906370a0823190602401602060405180830381865afa158015611d6b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d8f9190612cc8565b6040518263ffffffff1660e01b8152600401611dad91815260200190565b602060405180830381865afa158015611dc8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dec9190612cc8565b90505f6004548211611dfe575f611e0b565b600454611e0b9083612cb5565b90508015610a0957610a09611f40565b6001600160a01b038216611e5d576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b610a095f838361238a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b611eed6117ff565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611ac4565b6001546040516370a0823160e01b81523060048201525f916001600160a01b0316906307a2d13a9082906370a0823190602401602060405180830381865afa158015611f8e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fb29190612cc8565b6040518263ffffffff1660e01b8152600401611fd091815260200190565b602060405180830381865afa158015611feb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061200f9190612cc8565b90505f6004548211612021575f61202e565b60045461202e9083612cb5565b90505f811161207f5760405162461bcd60e51b815260206004820152601560248201527f4e6f20696e74657265737420617661696c61626c6500000000000000000000006044820152606401610668565b6001546040517f0a28a477000000000000000000000000000000000000000000000000000000008152600481018390525f916001600160a01b031690630a28a47790602401602060405180830381865afa1580156120df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121039190612cc8565b6001546040517fba08765200000000000000000000000000000000000000000000000000000000815260048101839052306024820181905260448201529192506001600160a01b03169063ba087652906064016020604051808303815f875af1158015612172573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121969190612cc8565b50600354604080517f82755ebb00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916382755ebb9160048083019260209291908290030181865afa1580156121f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061221b9190612d36565b5f546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0380841660048301526024820187905292935091169063095ea7b3906044016020604051808303815f875af1158015612285573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122a99190612cdf565b505f80546002546040517f2d6bc8ea0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201526044810186905230606482015290831690632d6bc8ea906084016020604051808303815f875af1158015612324573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123489190612cc8565b90508060055f82825461235b9190612d51565b90915550505050505050565b61236f6126c8565b61177b8161272f565b6123806126c8565b610a098282612737565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b0384166123d75781816002015f8282546123cc9190612d51565b909155506124609050565b6001600160a01b0384165f9081526020829052604090205482811015612442576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03861660048201526024810182905260448101849052606401610668565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b03831661247e57600281018054839003905561249c565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124e191815260200190565b60405180910390a350505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b038516612552576040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6001600160a01b038416612594576040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561261157836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161260891815260200190565b60405180910390a35b5050505050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610fb7576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61267c8261279a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156126c0576118b58282612836565b610a096128a8565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610fb7576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117306126c8565b61273f6126c8565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361278b8482612ecf565b50600481016119678382612ecf565b806001600160a01b03163b5f036127e8576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610668565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516128529190612f8f565b5f60405180830381855af49150503d805f811461288a576040519150601f19603f3d011682016040523d82523d5f602084013e61288f565b606091505b509150915061289f8583836128e0565b95945050505050565b3415610fb7576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826128f5576128f082612955565b610b17565b815115801561290c57506001600160a01b0384163b155b1561294e576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610668565b5080610b17565b8051156129655780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038116811461177b575f80fd5b5f80604083850312156129bc575f80fd5b8235915060208301356129ce81612997565b809150509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8060408385031215612a1f575f80fd5b8235612a2a81612997565b946020939093013593505050565b5f805f60608486031215612a4a575f80fd5b8335612a5581612997565b92506020840135612a6581612997565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff80841115612aa457612aa4612a76565b604051601f8501601f19908116603f01168101908282118183101715612acc57612acc612a76565b81604052809350858152868686011115612ae4575f80fd5b858560208301375f602087830101525050509392505050565b5f8060408385031215612b0e575f80fd5b8235612b1981612997565b9150602083013567ffffffffffffffff811115612b34575f80fd5b8301601f81018513612b44575f80fd5b612b5385823560208401612a8a565b9150509250929050565b5f60208284031215612b6d575f80fd5b8135610b1781612997565b5f8060408385031215612b89575f80fd5b8235612b9481612997565b915060208301356129ce81612997565b5f82601f830112612bb3575f80fd5b610b1783833560208501612a8a565b5f805f805f8060c08789031215612bd7575f80fd5b863567ffffffffffffffff80821115612bee575f80fd5b612bfa8a838b01612ba4565b97506020890135915080821115612c0f575f80fd5b50612c1c89828a01612ba4565b9550506040870135612c2d81612997565b93506060870135612c3d81612997565b92506080870135612c4d81612997565b915060a0870135612c5d81612997565b809150509295509295509295565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610af357610af3612c6b565b5f82612cb057634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610af357610af3612c6b565b5f60208284031215612cd8575f80fd5b5051919050565b5f60208284031215612cef575f80fd5b81518015158114610b17575f80fd5b600181811c90821680612d1257607f821691505b602082108103612d3057634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215612d46575f80fd5b8151610b1781612997565b80820180821115610af357610af3612c6b565b5f60208284031215612d74575f80fd5b815160ff81168114610b17575f80fd5b60ff8281168282160390811115610af357610af3612c6b565b600181815b80851115612dd757815f1904821115612dbd57612dbd612c6b565b80851615612dca57918102915b93841c9390800290612da2565b509250929050565b5f82612ded57506001610af3565b81612df957505f610af3565b8160018114612e0f5760028114612e1957612e35565b6001915050610af3565b60ff841115612e2a57612e2a612c6b565b50506001821b610af3565b5060208310610133831016604e8410600b8410161715612e58575081810a610af3565b612e628383612d9d565b805f1904821115612e7557612e75612c6b565b029392505050565b5f610b1760ff841683612ddf565b601f8211156118b557805f5260205f20601f840160051c81016020851015612eb05750805b601f840160051c820191505b81811015612611575f8155600101612ebc565b815167ffffffffffffffff811115612ee957612ee9612a76565b612efd81612ef78454612cfe565b84612e8b565b602080601f831160018114612f30575f8415612f195750858301515b5f19600386901b1c1916600185901b178555612f87565b5f85815260208120601f198616915b82811015612f5e57888601518255948401946001909101908401612f3f565b5085821015612f7b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82518060208501845e5f92019182525091905056fea26469706673582212200945596902d3783f43526c7cef1d344496a28ec01b08fc452791f16b0f4fa7ee64736f6c63430008190033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x2FDB PUSH2 0x39 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1AED ADD MSTORE DUP2 DUP2 PUSH2 0x1B16 ADD MSTORE PUSH2 0x1CC6 ADD MSTORE PUSH2 0x2FDB PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D882097 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE73FAA2D GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xF7FDE10F EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xFDF262B7 EQ PUSH2 0x5EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0xE56F2FE4 EQ PUSH2 0x587 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x9DB5DF46 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D882097 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x6E553F65 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x3C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x308 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0xB1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2AFD JUMP JUMPDEST PUSH2 0xFB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0xFD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x232 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0x1002 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x125D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x126E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x127E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x12CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0x1318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x3DD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x53E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x1325 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x15D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x1728 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3DD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x61D PUSH2 0x17FF JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536861726573206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH0 PUSH2 0x717 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x724 SWAP1 DUP6 PUSH2 0x2C7F JUMP JUMPDEST PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x2C96 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x759 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x766 SWAP1 DUP7 PUSH2 0x2C7F JUMP JUMPDEST PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x2C96 JUMP JUMPDEST SWAP1 POP PUSH2 0x77C CALLER DUP6 PUSH2 0x185B JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x2CB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC6E6F59200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC6E6F592 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBA08765200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xBA087652 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94E SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP POP POP POP PUSH2 0xA09 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xA5E SWAP1 PUSH2 0x2CFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA8A SWAP1 PUSH2 0x2CFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xAED DUP2 DUP6 DUP6 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xB06 DUP6 DUP3 DUP6 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0xB11 DUP6 DUP6 DUP6 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB70 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC56 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7A2D13A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7A2D13A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDBD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP DUP9 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0xE6A SWAP1 DUP7 PUSH2 0x2D51 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP7 POP DUP9 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0xEF3 SWAP1 DUP7 PUSH2 0x2D51 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0xF91 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP9 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF60 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF84 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0xF8E SWAP1 DUP7 PUSH2 0x2D51 JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH2 0xF9B DUP5 DUP7 PUSH2 0x2D51 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFAF PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xFB7 PUSH2 0x1A70 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFC1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH2 0xFCA DUP3 PUSH2 0x1BB2 JUMP JUMPDEST PUSH2 0xA09 DUP3 DUP3 PUSH2 0x1BBA JUMP JUMPDEST PUSH0 PUSH2 0xFDD PUSH2 0x1CBB JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x100A PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1012 PUSH2 0x17FF JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x1D1D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1164 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST POP PUSH2 0x121F DUP2 DUP4 PUSH2 0x1E1B JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1265 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xFB7 PUSH0 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1276 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xFB7 PUSH2 0x1EE5 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xA5E SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x12D7 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x12DF PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x12E7 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x12EF PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0xFB7 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0xAED DUP2 DUP6 DUP6 PUSH2 0x196D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x138B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x141B JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x1424 CALLER PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x142E DUP12 DUP12 PUSH2 0x2378 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP1 SLOAD DUP13 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP12 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP11 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x14CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657441206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420596561726E205661756C7420616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x157E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657442206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x15C9 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1628 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164C SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AF SWAP2 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x16BD DUP3 PUSH1 0x12 PUSH2 0x2D84 JUMP JUMPDEST PUSH2 0x16C8 SWAP1 PUSH1 0xA PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x16D0 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x2C7F JUMP JUMPDEST SWAP1 POP PUSH2 0x1704 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x170E SWAP1 DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH2 0x1720 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C7F JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1730 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x177B DUP2 PUSH2 0x1E68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE ADD PUSH2 0x17F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x189D JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0xA09 DUP3 PUSH0 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x24EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x1967 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1959 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x1967 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x24EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST CALLER PUSH2 0x1A2E PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x1A78 PUSH2 0x2618 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1B7B JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B6F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x177B PUSH2 0x19FC JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C14 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1C11 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x1CB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 PUSH2 0x2673 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7A2D13A SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D6B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D8F SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DC8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DEC SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x1DFE JUMPI PUSH0 PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1E0B SWAP1 DUP4 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA09 JUMPI PUSH2 0xA09 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0xA09 PUSH0 DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1EED PUSH2 0x17FF JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7A2D13A SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB2 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FEB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200F SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x2021 JUMPI PUSH0 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x202E SWAP1 DUP4 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x207F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20696E74657265737420617661696C61626C650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA28A47700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA28A477 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2103 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBA08765200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xBA087652 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2172 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2196 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x82755EBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x82755EBB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x221B SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2285 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22A9 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2324 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2348 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x236F PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x177B DUP2 PUSH2 0x272F JUMP JUMPDEST PUSH2 0x2380 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0xA09 DUP3 DUP3 PUSH2 0x2737 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x23D7 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23CC SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2460 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2442 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x247E JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x249C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24E1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2552 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2594 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x2611 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2608 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x267C DUP3 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x26C0 JUMPI PUSH2 0x18B5 DUP3 DUP3 PUSH2 0x2836 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0x28A8 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1730 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x273F PUSH2 0x26C8 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x278B DUP5 DUP3 PUSH2 0x2ECF JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x1967 DUP4 DUP3 PUSH2 0x2ECF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x27E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2852 SWAP2 SWAP1 PUSH2 0x2F8F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x288A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x288F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x289F DUP6 DUP4 DUP4 PUSH2 0x28E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x28F5 JUMPI PUSH2 0x28F0 DUP3 PUSH2 0x2955 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x290C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x294E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST POP DUP1 PUSH2 0xB17 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2965 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x177B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x29CE DUP2 PUSH2 0x2997 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A2A DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A4A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2A55 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2A65 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA4 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2ACC JUMPI PUSH2 0x2ACC PUSH2 0x2A76 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2AE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B0E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B19 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B34 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B44 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2B53 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB17 DUP2 PUSH2 0x2997 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B89 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B94 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x29CE DUP2 PUSH2 0x2997 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB17 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2A8A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2BD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2BEE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2BFA DUP11 DUP4 DUP12 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1C DUP10 DUP3 DUP11 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2C2D DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x2C3D DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x2C4D DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x2C5D DUP2 PUSH2 0x2997 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2CB0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CEF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB17 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2D12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2D30 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D46 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB17 DUP2 PUSH2 0x2997 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D74 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xB17 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2DD7 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBD PUSH2 0x2C6B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2DCA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2DED JUMPI POP PUSH1 0x1 PUSH2 0xAF3 JUMP JUMPDEST DUP2 PUSH2 0x2DF9 JUMPI POP PUSH0 PUSH2 0xAF3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2E0F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2E19 JUMPI PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2E2A JUMPI PUSH2 0x2E2A PUSH2 0x2C6B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xAF3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E58 JUMPI POP DUP2 DUP2 EXP PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x2E62 DUP4 DUP4 PUSH2 0x2D9D JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x2E75 JUMPI PUSH2 0x2E75 PUSH2 0x2C6B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB17 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18B5 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2EB0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2611 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EBC JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE9 JUMPI PUSH2 0x2EE9 PUSH2 0x2A76 JUMP JUMPDEST PUSH2 0x2EFD DUP2 PUSH2 0x2EF7 DUP5 SLOAD PUSH2 0x2CFE JUMP JUMPDEST DUP5 PUSH2 0x2E8B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F30 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F19 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2F87 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F5E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2F3F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2F7B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD GASLIMIT MSIZE PUSH10 0x2D3783F43526C7CEF1D CALLVALUE PREVRANDAO SWAP7 LOG2 DUP15 0xC0 SHL ADDMOD 0xFC GASLIMIT 0x27 SWAP2 CALL PUSH12 0xF4FA7EE64736F6C63430008 NOT STOP CALLER ","sourceMap":"769:6763:20:-:0;;;1171:4:2;1128:48;;769:6763:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@UPGRADE_INTERFACE_VERSION_472":{"entryPoint":null,"id":472,"parameterSlots":0,"returnSlots":0},"@__ERC20_init_698":{"entryPoint":9080,"id":698,"parameterSlots":2,"returnSlots":0},"@__ERC20_init_unchained_726":{"entryPoint":10039,"id":726,"parameterSlots":2,"returnSlots":0},"@__Ownable_init_54":{"entryPoint":9063,"id":54,"parameterSlots":1,"returnSlots":0},"@__Ownable_init_unchained_81":{"entryPoint":10031,"id":81,"parameterSlots":1,"returnSlots":0},"@_approve_1130":{"entryPoint":6312,"id":1130,"parameterSlots":3,"returnSlots":0},"@_approve_1198":{"entryPoint":9455,"id":1198,"parameterSlots":4,"returnSlots":0},"@_authorizeUpgrade_3039":{"entryPoint":7090,"id":3039,"parameterSlots":1,"returnSlots":0},"@_burn_1112":{"entryPoint":6235,"id":1112,"parameterSlots":2,"returnSlots":0},"@_buy_3302":{"entryPoint":8000,"id":3302,"parameterSlots":0,"returnSlots":0},"@_checkInitializing_370":{"entryPoint":9928,"id":370,"parameterSlots":0,"returnSlots":0},"@_checkNonPayable_2047":{"entryPoint":10408,"id":2047,"parameterSlots":0,"returnSlots":0},"@_checkNotDelegated_578":{"entryPoint":7355,"id":578,"parameterSlots":0,"returnSlots":0},"@_checkOwner_122":{"entryPoint":6652,"id":122,"parameterSlots":0,"returnSlots":0},"@_checkProxy_562":{"entryPoint":6882,"id":562,"parameterSlots":0,"returnSlots":0},"@_getERC20Storage_682":{"entryPoint":null,"id":682,"parameterSlots":0,"returnSlots":1},"@_getInitializableStorage_447":{"entryPoint":null,"id":447,"parameterSlots":0,"returnSlots":1},"@_getOwnableStorage_25":{"entryPoint":null,"id":25,"parameterSlots":0,"returnSlots":1},"@_getPausableStorage_1319":{"entryPoint":null,"id":1319,"parameterSlots":0,"returnSlots":1},"@_getReentrancyGuardStorage_1497":{"entryPoint":null,"id":1497,"parameterSlots":0,"returnSlots":1},"@_isInitializing_438":{"entryPoint":null,"id":438,"parameterSlots":0,"returnSlots":1},"@_mint_1079":{"entryPoint":7707,"id":1079,"parameterSlots":2,"returnSlots":0},"@_msgSender_1275":{"entryPoint":null,"id":1275,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_1579":{"entryPoint":null,"id":1579,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_1563":{"entryPoint":6014,"id":1563,"parameterSlots":0,"returnSlots":0},"@_pause_1444":{"entryPoint":7909,"id":1444,"parameterSlots":0,"returnSlots":0},"@_processInterest_3353":{"entryPoint":7453,"id":3353,"parameterSlots":0,"returnSlots":0},"@_requireNotPaused_1407":{"entryPoint":6143,"id":1407,"parameterSlots":0,"returnSlots":0},"@_requirePaused_1420":{"entryPoint":9752,"id":1420,"parameterSlots":0,"returnSlots":0},"@_revert_2414":{"entryPoint":10581,"id":2414,"parameterSlots":1,"returnSlots":0},"@_setImplementation_1833":{"entryPoint":10138,"id":1833,"parameterSlots":1,"returnSlots":0},"@_spendAllowance_1246":{"entryPoint":6330,"id":1246,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_193":{"entryPoint":7784,"id":193,"parameterSlots":1,"returnSlots":0},"@_transfer_954":{"entryPoint":6509,"id":954,"parameterSlots":3,"returnSlots":0},"@_unpause_1468":{"entryPoint":6768,"id":1468,"parameterSlots":0,"returnSlots":0},"@_update_1046":{"entryPoint":9098,"id":1046,"parameterSlots":3,"returnSlots":0},"@_upgradeToAndCallUUPS_629":{"entryPoint":7098,"id":629,"parameterSlots":2,"returnSlots":0},"@accumulatedAssetB_2947":{"entryPoint":null,"id":2947,"parameterSlots":0,"returnSlots":0},"@allowance_851":{"entryPoint":null,"id":851,"parameterSlots":2,"returnSlots":1},"@approve_875":{"entryPoint":2784,"id":875,"parameterSlots":2,"returnSlots":1},"@balanceOf_803":{"entryPoint":null,"id":803,"parameterSlots":1,"returnSlots":1},"@baseAsset_2935":{"entryPoint":null,"id":2935,"parameterSlots":0,"returnSlots":0},"@buy_3316":{"entryPoint":4815,"id":3316,"parameterSlots":0,"returnSlots":0},"@decimals_767":{"entryPoint":null,"id":767,"parameterSlots":0,"returnSlots":1},"@deposit_3106":{"entryPoint":4098,"id":3106,"parameterSlots":2,"returnSlots":0},"@functionDelegateCall_2334":{"entryPoint":10294,"id":2334,"parameterSlots":2,"returnSlots":1},"@getAddressSlot_2447":{"entryPoint":null,"id":2447,"parameterSlots":1,"returnSlots":1},"@getImplementation_1806":{"entryPoint":null,"id":1806,"parameterSlots":0,"returnSlots":1},"@initialize_3029":{"entryPoint":4901,"id":3029,"parameterSlots":6,"returnSlots":0},"@name_742":{"entryPoint":2573,"id":742,"parameterSlots":0,"returnSlots":1},"@owner_105":{"entryPoint":null,"id":105,"parameterSlots":0,"returnSlots":1},"@pause_3364":{"entryPoint":4718,"id":3364,"parameterSlots":0,"returnSlots":0},"@paused_1395":{"entryPoint":null,"id":1395,"parameterSlots":0,"returnSlots":1},"@proxiableUUID_520":{"entryPoint":4052,"id":520,"parameterSlots":0,"returnSlots":1},"@quoteAsset_2940":{"entryPoint":null,"id":2940,"parameterSlots":0,"returnSlots":0},"@registry_3532":{"entryPoint":null,"id":3532,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_136":{"entryPoint":4701,"id":136,"parameterSlots":0,"returnSlots":0},"@symbol_758":{"entryPoint":4734,"id":758,"parameterSlots":0,"returnSlots":1},"@totalDeposits_2945":{"entryPoint":null,"id":2945,"parameterSlots":0,"returnSlots":0},"@totalSupply_783":{"entryPoint":null,"id":783,"parameterSlots":0,"returnSlots":1},"@totalValuation_3479":{"entryPoint":2846,"id":3479,"parameterSlots":0,"returnSlots":1},"@transferFrom_907":{"entryPoint":2809,"id":907,"parameterSlots":3,"returnSlots":1},"@transferOwnership_164":{"entryPoint":5928,"id":164,"parameterSlots":1,"returnSlots":0},"@transfer_827":{"entryPoint":4888,"id":827,"parameterSlots":2,"returnSlots":1},"@unitPrice_3520":{"entryPoint":5590,"id":3520,"parameterSlots":0,"returnSlots":1},"@unpause_3375":{"entryPoint":4007,"id":3375,"parameterSlots":0,"returnSlots":0},"@upgradeToAndCall_1867":{"entryPoint":9843,"id":1867,"parameterSlots":2,"returnSlots":0},"@upgradeToAndCall_540":{"entryPoint":4025,"id":540,"parameterSlots":2,"returnSlots":0},"@verifyCallResultFromTarget_2374":{"entryPoint":10464,"id":2374,"parameterSlots":3,"returnSlots":1},"@withdraw_3208":{"entryPoint":1549,"id":3208,"parameterSlots":2,"returnSlots":0},"@yearnVault_3544":{"entryPoint":null,"id":3544,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":10890,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string":{"entryPoint":11172,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11101,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":11574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11128,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10808,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_bytes_memory_ptr":{"entryPoint":11005,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10766,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":11487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_address":{"entryPoint":11202,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":11464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":10667,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint8_fromMemory":{"entryPoint":11620,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10713,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_53fb86809bff5dc62f76bc95bbc7b572a1cc94bf1175d9568e8046d7847ef4ec__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6726a167108c8ad6de2228a073643036d59da7cba84af5bdb159063458980d8c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_89141ec2c606ec003f6f5f1768c23192e8ad9a256043aab9d456c1693f9c79ae__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f9fc9be991fb15edd8b6c78e603f09bcc597989ed5b6a9e284f87c92e42b3b89__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":11601,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":11414,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":11677,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":11901,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":11743,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":11391,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":11445,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint8":{"entryPoint":11652,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":11915,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":11983,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11518,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11371,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10870,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":10647,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:17990:21","nodeType":"YulBlock","src":"0:17990:21","statements":[{"nativeSrc":"6:3:21","nodeType":"YulBlock","src":"6:3:21","statements":[]},{"body":{"nativeSrc":"59:109:21","nodeType":"YulBlock","src":"59:109:21","statements":[{"body":{"nativeSrc":"146:16:21","nodeType":"YulBlock","src":"146:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"155:1:21","nodeType":"YulLiteral","src":"155:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"158:1:21","nodeType":"YulLiteral","src":"158:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"148:6:21","nodeType":"YulIdentifier","src":"148:6:21"},"nativeSrc":"148:12:21","nodeType":"YulFunctionCall","src":"148:12:21"},"nativeSrc":"148:12:21","nodeType":"YulExpressionStatement","src":"148:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"82:5:21","nodeType":"YulIdentifier","src":"82:5:21"},{"arguments":[{"name":"value","nativeSrc":"93:5:21","nodeType":"YulIdentifier","src":"93:5:21"},{"kind":"number","nativeSrc":"100:42:21","nodeType":"YulLiteral","src":"100:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"89:3:21","nodeType":"YulIdentifier","src":"89:3:21"},"nativeSrc":"89:54:21","nodeType":"YulFunctionCall","src":"89:54:21"}],"functionName":{"name":"eq","nativeSrc":"79:2:21","nodeType":"YulIdentifier","src":"79:2:21"},"nativeSrc":"79:65:21","nodeType":"YulFunctionCall","src":"79:65:21"}],"functionName":{"name":"iszero","nativeSrc":"72:6:21","nodeType":"YulIdentifier","src":"72:6:21"},"nativeSrc":"72:73:21","nodeType":"YulFunctionCall","src":"72:73:21"},"nativeSrc":"69:93:21","nodeType":"YulIf","src":"69:93:21"}]},"name":"validator_revert_address","nativeSrc":"14:154:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48:5:21","nodeType":"YulTypedName","src":"48:5:21","type":""}],"src":"14:154:21"},{"body":{"nativeSrc":"260:228:21","nodeType":"YulBlock","src":"260:228:21","statements":[{"body":{"nativeSrc":"306:16:21","nodeType":"YulBlock","src":"306:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"315:1:21","nodeType":"YulLiteral","src":"315:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"318:1:21","nodeType":"YulLiteral","src":"318:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"308:6:21","nodeType":"YulIdentifier","src":"308:6:21"},"nativeSrc":"308:12:21","nodeType":"YulFunctionCall","src":"308:12:21"},"nativeSrc":"308:12:21","nodeType":"YulExpressionStatement","src":"308:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"281:7:21","nodeType":"YulIdentifier","src":"281:7:21"},{"name":"headStart","nativeSrc":"290:9:21","nodeType":"YulIdentifier","src":"290:9:21"}],"functionName":{"name":"sub","nativeSrc":"277:3:21","nodeType":"YulIdentifier","src":"277:3:21"},"nativeSrc":"277:23:21","nodeType":"YulFunctionCall","src":"277:23:21"},{"kind":"number","nativeSrc":"302:2:21","nodeType":"YulLiteral","src":"302:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"273:3:21","nodeType":"YulIdentifier","src":"273:3:21"},"nativeSrc":"273:32:21","nodeType":"YulFunctionCall","src":"273:32:21"},"nativeSrc":"270:52:21","nodeType":"YulIf","src":"270:52:21"},{"nativeSrc":"331:33:21","nodeType":"YulAssignment","src":"331:33:21","value":{"arguments":[{"name":"headStart","nativeSrc":"354:9:21","nodeType":"YulIdentifier","src":"354:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"341:12:21","nodeType":"YulIdentifier","src":"341:12:21"},"nativeSrc":"341:23:21","nodeType":"YulFunctionCall","src":"341:23:21"},"variableNames":[{"name":"value0","nativeSrc":"331:6:21","nodeType":"YulIdentifier","src":"331:6:21"}]},{"nativeSrc":"373:45:21","nodeType":"YulVariableDeclaration","src":"373:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"403:9:21","nodeType":"YulIdentifier","src":"403:9:21"},{"kind":"number","nativeSrc":"414:2:21","nodeType":"YulLiteral","src":"414:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"399:3:21","nodeType":"YulIdentifier","src":"399:3:21"},"nativeSrc":"399:18:21","nodeType":"YulFunctionCall","src":"399:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"386:12:21","nodeType":"YulIdentifier","src":"386:12:21"},"nativeSrc":"386:32:21","nodeType":"YulFunctionCall","src":"386:32:21"},"variables":[{"name":"value","nativeSrc":"377:5:21","nodeType":"YulTypedName","src":"377:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"452:5:21","nodeType":"YulIdentifier","src":"452:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"427:24:21","nodeType":"YulIdentifier","src":"427:24:21"},"nativeSrc":"427:31:21","nodeType":"YulFunctionCall","src":"427:31:21"},"nativeSrc":"427:31:21","nodeType":"YulExpressionStatement","src":"427:31:21"},{"nativeSrc":"467:15:21","nodeType":"YulAssignment","src":"467:15:21","value":{"name":"value","nativeSrc":"477:5:21","nodeType":"YulIdentifier","src":"477:5:21"},"variableNames":[{"name":"value1","nativeSrc":"467:6:21","nodeType":"YulIdentifier","src":"467:6:21"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nativeSrc":"173:315:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"218:9:21","nodeType":"YulTypedName","src":"218:9:21","type":""},{"name":"dataEnd","nativeSrc":"229:7:21","nodeType":"YulTypedName","src":"229:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"241:6:21","nodeType":"YulTypedName","src":"241:6:21","type":""},{"name":"value1","nativeSrc":"249:6:21","nodeType":"YulTypedName","src":"249:6:21","type":""}],"src":"173:315:21"},{"body":{"nativeSrc":"614:356:21","nodeType":"YulBlock","src":"614:356:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"631:9:21","nodeType":"YulIdentifier","src":"631:9:21"},{"kind":"number","nativeSrc":"642:2:21","nodeType":"YulLiteral","src":"642:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"624:6:21","nodeType":"YulIdentifier","src":"624:6:21"},"nativeSrc":"624:21:21","nodeType":"YulFunctionCall","src":"624:21:21"},"nativeSrc":"624:21:21","nodeType":"YulExpressionStatement","src":"624:21:21"},{"nativeSrc":"654:27:21","nodeType":"YulVariableDeclaration","src":"654:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"674:6:21","nodeType":"YulIdentifier","src":"674:6:21"}],"functionName":{"name":"mload","nativeSrc":"668:5:21","nodeType":"YulIdentifier","src":"668:5:21"},"nativeSrc":"668:13:21","nodeType":"YulFunctionCall","src":"668:13:21"},"variables":[{"name":"length","nativeSrc":"658:6:21","nodeType":"YulTypedName","src":"658:6:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"701:9:21","nodeType":"YulIdentifier","src":"701:9:21"},{"kind":"number","nativeSrc":"712:2:21","nodeType":"YulLiteral","src":"712:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"697:3:21","nodeType":"YulIdentifier","src":"697:3:21"},"nativeSrc":"697:18:21","nodeType":"YulFunctionCall","src":"697:18:21"},{"name":"length","nativeSrc":"717:6:21","nodeType":"YulIdentifier","src":"717:6:21"}],"functionName":{"name":"mstore","nativeSrc":"690:6:21","nodeType":"YulIdentifier","src":"690:6:21"},"nativeSrc":"690:34:21","nodeType":"YulFunctionCall","src":"690:34:21"},"nativeSrc":"690:34:21","nodeType":"YulExpressionStatement","src":"690:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"743:9:21","nodeType":"YulIdentifier","src":"743:9:21"},{"kind":"number","nativeSrc":"754:2:21","nodeType":"YulLiteral","src":"754:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"739:3:21","nodeType":"YulIdentifier","src":"739:3:21"},"nativeSrc":"739:18:21","nodeType":"YulFunctionCall","src":"739:18:21"},{"arguments":[{"name":"value0","nativeSrc":"763:6:21","nodeType":"YulIdentifier","src":"763:6:21"},{"kind":"number","nativeSrc":"771:2:21","nodeType":"YulLiteral","src":"771:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"759:3:21","nodeType":"YulIdentifier","src":"759:3:21"},"nativeSrc":"759:15:21","nodeType":"YulFunctionCall","src":"759:15:21"},{"name":"length","nativeSrc":"776:6:21","nodeType":"YulIdentifier","src":"776:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"733:5:21","nodeType":"YulIdentifier","src":"733:5:21"},"nativeSrc":"733:50:21","nodeType":"YulFunctionCall","src":"733:50:21"},"nativeSrc":"733:50:21","nodeType":"YulExpressionStatement","src":"733:50:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"807:9:21","nodeType":"YulIdentifier","src":"807:9:21"},{"name":"length","nativeSrc":"818:6:21","nodeType":"YulIdentifier","src":"818:6:21"}],"functionName":{"name":"add","nativeSrc":"803:3:21","nodeType":"YulIdentifier","src":"803:3:21"},"nativeSrc":"803:22:21","nodeType":"YulFunctionCall","src":"803:22:21"},{"kind":"number","nativeSrc":"827:2:21","nodeType":"YulLiteral","src":"827:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"799:3:21","nodeType":"YulIdentifier","src":"799:3:21"},"nativeSrc":"799:31:21","nodeType":"YulFunctionCall","src":"799:31:21"},{"kind":"number","nativeSrc":"832:1:21","nodeType":"YulLiteral","src":"832:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"792:6:21","nodeType":"YulIdentifier","src":"792:6:21"},"nativeSrc":"792:42:21","nodeType":"YulFunctionCall","src":"792:42:21"},"nativeSrc":"792:42:21","nodeType":"YulExpressionStatement","src":"792:42:21"},{"nativeSrc":"843:121:21","nodeType":"YulAssignment","src":"843:121:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"859:9:21","nodeType":"YulIdentifier","src":"859:9:21"},{"arguments":[{"arguments":[{"name":"length","nativeSrc":"878:6:21","nodeType":"YulIdentifier","src":"878:6:21"},{"kind":"number","nativeSrc":"886:2:21","nodeType":"YulLiteral","src":"886:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"874:3:21","nodeType":"YulIdentifier","src":"874:3:21"},"nativeSrc":"874:15:21","nodeType":"YulFunctionCall","src":"874:15:21"},{"kind":"number","nativeSrc":"891:66:21","nodeType":"YulLiteral","src":"891:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"870:3:21","nodeType":"YulIdentifier","src":"870:3:21"},"nativeSrc":"870:88:21","nodeType":"YulFunctionCall","src":"870:88:21"}],"functionName":{"name":"add","nativeSrc":"855:3:21","nodeType":"YulIdentifier","src":"855:3:21"},"nativeSrc":"855:104:21","nodeType":"YulFunctionCall","src":"855:104:21"},{"kind":"number","nativeSrc":"961:2:21","nodeType":"YulLiteral","src":"961:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"851:3:21","nodeType":"YulIdentifier","src":"851:3:21"},"nativeSrc":"851:113:21","nodeType":"YulFunctionCall","src":"851:113:21"},"variableNames":[{"name":"tail","nativeSrc":"843:4:21","nodeType":"YulIdentifier","src":"843:4:21"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"493:477:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"583:9:21","nodeType":"YulTypedName","src":"583:9:21","type":""},{"name":"value0","nativeSrc":"594:6:21","nodeType":"YulTypedName","src":"594:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"605:4:21","nodeType":"YulTypedName","src":"605:4:21","type":""}],"src":"493:477:21"},{"body":{"nativeSrc":"1062:228:21","nodeType":"YulBlock","src":"1062:228:21","statements":[{"body":{"nativeSrc":"1108:16:21","nodeType":"YulBlock","src":"1108:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1117:1:21","nodeType":"YulLiteral","src":"1117:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1120:1:21","nodeType":"YulLiteral","src":"1120:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1110:6:21","nodeType":"YulIdentifier","src":"1110:6:21"},"nativeSrc":"1110:12:21","nodeType":"YulFunctionCall","src":"1110:12:21"},"nativeSrc":"1110:12:21","nodeType":"YulExpressionStatement","src":"1110:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1083:7:21","nodeType":"YulIdentifier","src":"1083:7:21"},{"name":"headStart","nativeSrc":"1092:9:21","nodeType":"YulIdentifier","src":"1092:9:21"}],"functionName":{"name":"sub","nativeSrc":"1079:3:21","nodeType":"YulIdentifier","src":"1079:3:21"},"nativeSrc":"1079:23:21","nodeType":"YulFunctionCall","src":"1079:23:21"},{"kind":"number","nativeSrc":"1104:2:21","nodeType":"YulLiteral","src":"1104:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1075:3:21","nodeType":"YulIdentifier","src":"1075:3:21"},"nativeSrc":"1075:32:21","nodeType":"YulFunctionCall","src":"1075:32:21"},"nativeSrc":"1072:52:21","nodeType":"YulIf","src":"1072:52:21"},{"nativeSrc":"1133:36:21","nodeType":"YulVariableDeclaration","src":"1133:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1159:9:21","nodeType":"YulIdentifier","src":"1159:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1146:12:21","nodeType":"YulIdentifier","src":"1146:12:21"},"nativeSrc":"1146:23:21","nodeType":"YulFunctionCall","src":"1146:23:21"},"variables":[{"name":"value","nativeSrc":"1137:5:21","nodeType":"YulTypedName","src":"1137:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1203:5:21","nodeType":"YulIdentifier","src":"1203:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1178:24:21","nodeType":"YulIdentifier","src":"1178:24:21"},"nativeSrc":"1178:31:21","nodeType":"YulFunctionCall","src":"1178:31:21"},"nativeSrc":"1178:31:21","nodeType":"YulExpressionStatement","src":"1178:31:21"},{"nativeSrc":"1218:15:21","nodeType":"YulAssignment","src":"1218:15:21","value":{"name":"value","nativeSrc":"1228:5:21","nodeType":"YulIdentifier","src":"1228:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1218:6:21","nodeType":"YulIdentifier","src":"1218:6:21"}]},{"nativeSrc":"1242:42:21","nodeType":"YulAssignment","src":"1242:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1269:9:21","nodeType":"YulIdentifier","src":"1269:9:21"},{"kind":"number","nativeSrc":"1280:2:21","nodeType":"YulLiteral","src":"1280:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1265:3:21","nodeType":"YulIdentifier","src":"1265:3:21"},"nativeSrc":"1265:18:21","nodeType":"YulFunctionCall","src":"1265:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1252:12:21","nodeType":"YulIdentifier","src":"1252:12:21"},"nativeSrc":"1252:32:21","nodeType":"YulFunctionCall","src":"1252:32:21"},"variableNames":[{"name":"value1","nativeSrc":"1242:6:21","nodeType":"YulIdentifier","src":"1242:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"975:315:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1020:9:21","nodeType":"YulTypedName","src":"1020:9:21","type":""},{"name":"dataEnd","nativeSrc":"1031:7:21","nodeType":"YulTypedName","src":"1031:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1043:6:21","nodeType":"YulTypedName","src":"1043:6:21","type":""},{"name":"value1","nativeSrc":"1051:6:21","nodeType":"YulTypedName","src":"1051:6:21","type":""}],"src":"975:315:21"},{"body":{"nativeSrc":"1390:92:21","nodeType":"YulBlock","src":"1390:92:21","statements":[{"nativeSrc":"1400:26:21","nodeType":"YulAssignment","src":"1400:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1412:9:21","nodeType":"YulIdentifier","src":"1412:9:21"},{"kind":"number","nativeSrc":"1423:2:21","nodeType":"YulLiteral","src":"1423:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1408:3:21","nodeType":"YulIdentifier","src":"1408:3:21"},"nativeSrc":"1408:18:21","nodeType":"YulFunctionCall","src":"1408:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1400:4:21","nodeType":"YulIdentifier","src":"1400:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1442:9:21","nodeType":"YulIdentifier","src":"1442:9:21"},{"arguments":[{"arguments":[{"name":"value0","nativeSrc":"1467:6:21","nodeType":"YulIdentifier","src":"1467:6:21"}],"functionName":{"name":"iszero","nativeSrc":"1460:6:21","nodeType":"YulIdentifier","src":"1460:6:21"},"nativeSrc":"1460:14:21","nodeType":"YulFunctionCall","src":"1460:14:21"}],"functionName":{"name":"iszero","nativeSrc":"1453:6:21","nodeType":"YulIdentifier","src":"1453:6:21"},"nativeSrc":"1453:22:21","nodeType":"YulFunctionCall","src":"1453:22:21"}],"functionName":{"name":"mstore","nativeSrc":"1435:6:21","nodeType":"YulIdentifier","src":"1435:6:21"},"nativeSrc":"1435:41:21","nodeType":"YulFunctionCall","src":"1435:41:21"},"nativeSrc":"1435:41:21","nodeType":"YulExpressionStatement","src":"1435:41:21"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1295:187:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1359:9:21","nodeType":"YulTypedName","src":"1359:9:21","type":""},{"name":"value0","nativeSrc":"1370:6:21","nodeType":"YulTypedName","src":"1370:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1381:4:21","nodeType":"YulTypedName","src":"1381:4:21","type":""}],"src":"1295:187:21"},{"body":{"nativeSrc":"1588:76:21","nodeType":"YulBlock","src":"1588:76:21","statements":[{"nativeSrc":"1598:26:21","nodeType":"YulAssignment","src":"1598:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1610:9:21","nodeType":"YulIdentifier","src":"1610:9:21"},{"kind":"number","nativeSrc":"1621:2:21","nodeType":"YulLiteral","src":"1621:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1606:3:21","nodeType":"YulIdentifier","src":"1606:3:21"},"nativeSrc":"1606:18:21","nodeType":"YulFunctionCall","src":"1606:18:21"},"variableNames":[{"name":"tail","nativeSrc":"1598:4:21","nodeType":"YulIdentifier","src":"1598:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"1640:9:21","nodeType":"YulIdentifier","src":"1640:9:21"},{"name":"value0","nativeSrc":"1651:6:21","nodeType":"YulIdentifier","src":"1651:6:21"}],"functionName":{"name":"mstore","nativeSrc":"1633:6:21","nodeType":"YulIdentifier","src":"1633:6:21"},"nativeSrc":"1633:25:21","nodeType":"YulFunctionCall","src":"1633:25:21"},"nativeSrc":"1633:25:21","nodeType":"YulExpressionStatement","src":"1633:25:21"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1487:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1557:9:21","nodeType":"YulTypedName","src":"1557:9:21","type":""},{"name":"value0","nativeSrc":"1568:6:21","nodeType":"YulTypedName","src":"1568:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1579:4:21","nodeType":"YulTypedName","src":"1579:4:21","type":""}],"src":"1487:177:21"},{"body":{"nativeSrc":"1773:352:21","nodeType":"YulBlock","src":"1773:352:21","statements":[{"body":{"nativeSrc":"1819:16:21","nodeType":"YulBlock","src":"1819:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1828:1:21","nodeType":"YulLiteral","src":"1828:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"1831:1:21","nodeType":"YulLiteral","src":"1831:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1821:6:21","nodeType":"YulIdentifier","src":"1821:6:21"},"nativeSrc":"1821:12:21","nodeType":"YulFunctionCall","src":"1821:12:21"},"nativeSrc":"1821:12:21","nodeType":"YulExpressionStatement","src":"1821:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1794:7:21","nodeType":"YulIdentifier","src":"1794:7:21"},{"name":"headStart","nativeSrc":"1803:9:21","nodeType":"YulIdentifier","src":"1803:9:21"}],"functionName":{"name":"sub","nativeSrc":"1790:3:21","nodeType":"YulIdentifier","src":"1790:3:21"},"nativeSrc":"1790:23:21","nodeType":"YulFunctionCall","src":"1790:23:21"},{"kind":"number","nativeSrc":"1815:2:21","nodeType":"YulLiteral","src":"1815:2:21","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1786:3:21","nodeType":"YulIdentifier","src":"1786:3:21"},"nativeSrc":"1786:32:21","nodeType":"YulFunctionCall","src":"1786:32:21"},"nativeSrc":"1783:52:21","nodeType":"YulIf","src":"1783:52:21"},{"nativeSrc":"1844:36:21","nodeType":"YulVariableDeclaration","src":"1844:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"1870:9:21","nodeType":"YulIdentifier","src":"1870:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"1857:12:21","nodeType":"YulIdentifier","src":"1857:12:21"},"nativeSrc":"1857:23:21","nodeType":"YulFunctionCall","src":"1857:23:21"},"variables":[{"name":"value","nativeSrc":"1848:5:21","nodeType":"YulTypedName","src":"1848:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1914:5:21","nodeType":"YulIdentifier","src":"1914:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"1889:24:21","nodeType":"YulIdentifier","src":"1889:24:21"},"nativeSrc":"1889:31:21","nodeType":"YulFunctionCall","src":"1889:31:21"},"nativeSrc":"1889:31:21","nodeType":"YulExpressionStatement","src":"1889:31:21"},{"nativeSrc":"1929:15:21","nodeType":"YulAssignment","src":"1929:15:21","value":{"name":"value","nativeSrc":"1939:5:21","nodeType":"YulIdentifier","src":"1939:5:21"},"variableNames":[{"name":"value0","nativeSrc":"1929:6:21","nodeType":"YulIdentifier","src":"1929:6:21"}]},{"nativeSrc":"1953:47:21","nodeType":"YulVariableDeclaration","src":"1953:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1985:9:21","nodeType":"YulIdentifier","src":"1985:9:21"},{"kind":"number","nativeSrc":"1996:2:21","nodeType":"YulLiteral","src":"1996:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1981:3:21","nodeType":"YulIdentifier","src":"1981:3:21"},"nativeSrc":"1981:18:21","nodeType":"YulFunctionCall","src":"1981:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"1968:12:21","nodeType":"YulIdentifier","src":"1968:12:21"},"nativeSrc":"1968:32:21","nodeType":"YulFunctionCall","src":"1968:32:21"},"variables":[{"name":"value_1","nativeSrc":"1957:7:21","nodeType":"YulTypedName","src":"1957:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"2034:7:21","nodeType":"YulIdentifier","src":"2034:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"2009:24:21","nodeType":"YulIdentifier","src":"2009:24:21"},"nativeSrc":"2009:33:21","nodeType":"YulFunctionCall","src":"2009:33:21"},"nativeSrc":"2009:33:21","nodeType":"YulExpressionStatement","src":"2009:33:21"},{"nativeSrc":"2051:17:21","nodeType":"YulAssignment","src":"2051:17:21","value":{"name":"value_1","nativeSrc":"2061:7:21","nodeType":"YulIdentifier","src":"2061:7:21"},"variableNames":[{"name":"value1","nativeSrc":"2051:6:21","nodeType":"YulIdentifier","src":"2051:6:21"}]},{"nativeSrc":"2077:42:21","nodeType":"YulAssignment","src":"2077:42:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2104:9:21","nodeType":"YulIdentifier","src":"2104:9:21"},{"kind":"number","nativeSrc":"2115:2:21","nodeType":"YulLiteral","src":"2115:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2100:3:21","nodeType":"YulIdentifier","src":"2100:3:21"},"nativeSrc":"2100:18:21","nodeType":"YulFunctionCall","src":"2100:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"2087:12:21","nodeType":"YulIdentifier","src":"2087:12:21"},"nativeSrc":"2087:32:21","nodeType":"YulFunctionCall","src":"2087:32:21"},"variableNames":[{"name":"value2","nativeSrc":"2077:6:21","nodeType":"YulIdentifier","src":"2077:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"1669:456:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1723:9:21","nodeType":"YulTypedName","src":"1723:9:21","type":""},{"name":"dataEnd","nativeSrc":"1734:7:21","nodeType":"YulTypedName","src":"1734:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1746:6:21","nodeType":"YulTypedName","src":"1746:6:21","type":""},{"name":"value1","nativeSrc":"1754:6:21","nodeType":"YulTypedName","src":"1754:6:21","type":""},{"name":"value2","nativeSrc":"1762:6:21","nodeType":"YulTypedName","src":"1762:6:21","type":""}],"src":"1669:456:21"},{"body":{"nativeSrc":"2227:87:21","nodeType":"YulBlock","src":"2227:87:21","statements":[{"nativeSrc":"2237:26:21","nodeType":"YulAssignment","src":"2237:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"2249:9:21","nodeType":"YulIdentifier","src":"2249:9:21"},{"kind":"number","nativeSrc":"2260:2:21","nodeType":"YulLiteral","src":"2260:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2245:3:21","nodeType":"YulIdentifier","src":"2245:3:21"},"nativeSrc":"2245:18:21","nodeType":"YulFunctionCall","src":"2245:18:21"},"variableNames":[{"name":"tail","nativeSrc":"2237:4:21","nodeType":"YulIdentifier","src":"2237:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"2279:9:21","nodeType":"YulIdentifier","src":"2279:9:21"},{"arguments":[{"name":"value0","nativeSrc":"2294:6:21","nodeType":"YulIdentifier","src":"2294:6:21"},{"kind":"number","nativeSrc":"2302:4:21","nodeType":"YulLiteral","src":"2302:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"2290:3:21","nodeType":"YulIdentifier","src":"2290:3:21"},"nativeSrc":"2290:17:21","nodeType":"YulFunctionCall","src":"2290:17:21"}],"functionName":{"name":"mstore","nativeSrc":"2272:6:21","nodeType":"YulIdentifier","src":"2272:6:21"},"nativeSrc":"2272:36:21","nodeType":"YulFunctionCall","src":"2272:36:21"},"nativeSrc":"2272:36:21","nodeType":"YulExpressionStatement","src":"2272:36:21"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"2130:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2196:9:21","nodeType":"YulTypedName","src":"2196:9:21","type":""},{"name":"value0","nativeSrc":"2207:6:21","nodeType":"YulTypedName","src":"2207:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2218:4:21","nodeType":"YulTypedName","src":"2218:4:21","type":""}],"src":"2130:184:21"},{"body":{"nativeSrc":"2351:152:21","nodeType":"YulBlock","src":"2351:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2368:1:21","nodeType":"YulLiteral","src":"2368:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2371:77:21","nodeType":"YulLiteral","src":"2371:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2361:6:21","nodeType":"YulIdentifier","src":"2361:6:21"},"nativeSrc":"2361:88:21","nodeType":"YulFunctionCall","src":"2361:88:21"},"nativeSrc":"2361:88:21","nodeType":"YulExpressionStatement","src":"2361:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2465:1:21","nodeType":"YulLiteral","src":"2465:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"2468:4:21","nodeType":"YulLiteral","src":"2468:4:21","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2458:6:21","nodeType":"YulIdentifier","src":"2458:6:21"},"nativeSrc":"2458:15:21","nodeType":"YulFunctionCall","src":"2458:15:21"},"nativeSrc":"2458:15:21","nodeType":"YulExpressionStatement","src":"2458:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2489:1:21","nodeType":"YulLiteral","src":"2489:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"2492:4:21","nodeType":"YulLiteral","src":"2492:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2482:6:21","nodeType":"YulIdentifier","src":"2482:6:21"},"nativeSrc":"2482:15:21","nodeType":"YulFunctionCall","src":"2482:15:21"},"nativeSrc":"2482:15:21","nodeType":"YulExpressionStatement","src":"2482:15:21"}]},"name":"panic_error_0x41","nativeSrc":"2319:184:21","nodeType":"YulFunctionDefinition","src":"2319:184:21"},{"body":{"nativeSrc":"2582:616:21","nodeType":"YulBlock","src":"2582:616:21","statements":[{"nativeSrc":"2592:28:21","nodeType":"YulVariableDeclaration","src":"2592:28:21","value":{"kind":"number","nativeSrc":"2602:18:21","nodeType":"YulLiteral","src":"2602:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"2596:2:21","nodeType":"YulTypedName","src":"2596:2:21","type":""}]},{"body":{"nativeSrc":"2647:22:21","nodeType":"YulBlock","src":"2647:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2649:16:21","nodeType":"YulIdentifier","src":"2649:16:21"},"nativeSrc":"2649:18:21","nodeType":"YulFunctionCall","src":"2649:18:21"},"nativeSrc":"2649:18:21","nodeType":"YulExpressionStatement","src":"2649:18:21"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"2635:6:21","nodeType":"YulIdentifier","src":"2635:6:21"},{"name":"_1","nativeSrc":"2643:2:21","nodeType":"YulIdentifier","src":"2643:2:21"}],"functionName":{"name":"gt","nativeSrc":"2632:2:21","nodeType":"YulIdentifier","src":"2632:2:21"},"nativeSrc":"2632:14:21","nodeType":"YulFunctionCall","src":"2632:14:21"},"nativeSrc":"2629:40:21","nodeType":"YulIf","src":"2629:40:21"},{"nativeSrc":"2678:76:21","nodeType":"YulVariableDeclaration","src":"2678:76:21","value":{"kind":"number","nativeSrc":"2688:66:21","nodeType":"YulLiteral","src":"2688:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"},"variables":[{"name":"_2","nativeSrc":"2682:2:21","nodeType":"YulTypedName","src":"2682:2:21","type":""}]},{"nativeSrc":"2763:23:21","nodeType":"YulVariableDeclaration","src":"2763:23:21","value":{"arguments":[{"kind":"number","nativeSrc":"2783:2:21","nodeType":"YulLiteral","src":"2783:2:21","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2777:5:21","nodeType":"YulIdentifier","src":"2777:5:21"},"nativeSrc":"2777:9:21","nodeType":"YulFunctionCall","src":"2777:9:21"},"variables":[{"name":"memPtr","nativeSrc":"2767:6:21","nodeType":"YulTypedName","src":"2767:6:21","type":""}]},{"nativeSrc":"2795:73:21","nodeType":"YulVariableDeclaration","src":"2795:73:21","value":{"arguments":[{"name":"memPtr","nativeSrc":"2817:6:21","nodeType":"YulIdentifier","src":"2817:6:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"length","nativeSrc":"2841:6:21","nodeType":"YulIdentifier","src":"2841:6:21"},{"kind":"number","nativeSrc":"2849:2:21","nodeType":"YulLiteral","src":"2849:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2837:3:21","nodeType":"YulIdentifier","src":"2837:3:21"},"nativeSrc":"2837:15:21","nodeType":"YulFunctionCall","src":"2837:15:21"},{"name":"_2","nativeSrc":"2854:2:21","nodeType":"YulIdentifier","src":"2854:2:21"}],"functionName":{"name":"and","nativeSrc":"2833:3:21","nodeType":"YulIdentifier","src":"2833:3:21"},"nativeSrc":"2833:24:21","nodeType":"YulFunctionCall","src":"2833:24:21"},{"kind":"number","nativeSrc":"2859:2:21","nodeType":"YulLiteral","src":"2859:2:21","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"2829:3:21","nodeType":"YulIdentifier","src":"2829:3:21"},"nativeSrc":"2829:33:21","nodeType":"YulFunctionCall","src":"2829:33:21"},{"name":"_2","nativeSrc":"2864:2:21","nodeType":"YulIdentifier","src":"2864:2:21"}],"functionName":{"name":"and","nativeSrc":"2825:3:21","nodeType":"YulIdentifier","src":"2825:3:21"},"nativeSrc":"2825:42:21","nodeType":"YulFunctionCall","src":"2825:42:21"}],"functionName":{"name":"add","nativeSrc":"2813:3:21","nodeType":"YulIdentifier","src":"2813:3:21"},"nativeSrc":"2813:55:21","nodeType":"YulFunctionCall","src":"2813:55:21"},"variables":[{"name":"newFreePtr","nativeSrc":"2799:10:21","nodeType":"YulTypedName","src":"2799:10:21","type":""}]},{"body":{"nativeSrc":"2927:22:21","nodeType":"YulBlock","src":"2927:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2929:16:21","nodeType":"YulIdentifier","src":"2929:16:21"},"nativeSrc":"2929:18:21","nodeType":"YulFunctionCall","src":"2929:18:21"},"nativeSrc":"2929:18:21","nodeType":"YulExpressionStatement","src":"2929:18:21"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2886:10:21","nodeType":"YulIdentifier","src":"2886:10:21"},{"name":"_1","nativeSrc":"2898:2:21","nodeType":"YulIdentifier","src":"2898:2:21"}],"functionName":{"name":"gt","nativeSrc":"2883:2:21","nodeType":"YulIdentifier","src":"2883:2:21"},"nativeSrc":"2883:18:21","nodeType":"YulFunctionCall","src":"2883:18:21"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2906:10:21","nodeType":"YulIdentifier","src":"2906:10:21"},{"name":"memPtr","nativeSrc":"2918:6:21","nodeType":"YulIdentifier","src":"2918:6:21"}],"functionName":{"name":"lt","nativeSrc":"2903:2:21","nodeType":"YulIdentifier","src":"2903:2:21"},"nativeSrc":"2903:22:21","nodeType":"YulFunctionCall","src":"2903:22:21"}],"functionName":{"name":"or","nativeSrc":"2880:2:21","nodeType":"YulIdentifier","src":"2880:2:21"},"nativeSrc":"2880:46:21","nodeType":"YulFunctionCall","src":"2880:46:21"},"nativeSrc":"2877:72:21","nodeType":"YulIf","src":"2877:72:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2965:2:21","nodeType":"YulLiteral","src":"2965:2:21","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2969:10:21","nodeType":"YulIdentifier","src":"2969:10:21"}],"functionName":{"name":"mstore","nativeSrc":"2958:6:21","nodeType":"YulIdentifier","src":"2958:6:21"},"nativeSrc":"2958:22:21","nodeType":"YulFunctionCall","src":"2958:22:21"},"nativeSrc":"2958:22:21","nodeType":"YulExpressionStatement","src":"2958:22:21"},{"nativeSrc":"2989:15:21","nodeType":"YulAssignment","src":"2989:15:21","value":{"name":"memPtr","nativeSrc":"2998:6:21","nodeType":"YulIdentifier","src":"2998:6:21"},"variableNames":[{"name":"array","nativeSrc":"2989:5:21","nodeType":"YulIdentifier","src":"2989:5:21"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"3020:6:21","nodeType":"YulIdentifier","src":"3020:6:21"},{"name":"length","nativeSrc":"3028:6:21","nodeType":"YulIdentifier","src":"3028:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3013:6:21","nodeType":"YulIdentifier","src":"3013:6:21"},"nativeSrc":"3013:22:21","nodeType":"YulFunctionCall","src":"3013:22:21"},"nativeSrc":"3013:22:21","nodeType":"YulExpressionStatement","src":"3013:22:21"},{"body":{"nativeSrc":"3073:16:21","nodeType":"YulBlock","src":"3073:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3082:1:21","nodeType":"YulLiteral","src":"3082:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3085:1:21","nodeType":"YulLiteral","src":"3085:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3075:6:21","nodeType":"YulIdentifier","src":"3075:6:21"},"nativeSrc":"3075:12:21","nodeType":"YulFunctionCall","src":"3075:12:21"},"nativeSrc":"3075:12:21","nodeType":"YulExpressionStatement","src":"3075:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3054:3:21","nodeType":"YulIdentifier","src":"3054:3:21"},{"name":"length","nativeSrc":"3059:6:21","nodeType":"YulIdentifier","src":"3059:6:21"}],"functionName":{"name":"add","nativeSrc":"3050:3:21","nodeType":"YulIdentifier","src":"3050:3:21"},"nativeSrc":"3050:16:21","nodeType":"YulFunctionCall","src":"3050:16:21"},{"name":"end","nativeSrc":"3068:3:21","nodeType":"YulIdentifier","src":"3068:3:21"}],"functionName":{"name":"gt","nativeSrc":"3047:2:21","nodeType":"YulIdentifier","src":"3047:2:21"},"nativeSrc":"3047:25:21","nodeType":"YulFunctionCall","src":"3047:25:21"},"nativeSrc":"3044:45:21","nodeType":"YulIf","src":"3044:45:21"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3115:6:21","nodeType":"YulIdentifier","src":"3115:6:21"},{"kind":"number","nativeSrc":"3123:4:21","nodeType":"YulLiteral","src":"3123:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3111:3:21","nodeType":"YulIdentifier","src":"3111:3:21"},"nativeSrc":"3111:17:21","nodeType":"YulFunctionCall","src":"3111:17:21"},{"name":"src","nativeSrc":"3130:3:21","nodeType":"YulIdentifier","src":"3130:3:21"},{"name":"length","nativeSrc":"3135:6:21","nodeType":"YulIdentifier","src":"3135:6:21"}],"functionName":{"name":"calldatacopy","nativeSrc":"3098:12:21","nodeType":"YulIdentifier","src":"3098:12:21"},"nativeSrc":"3098:44:21","nodeType":"YulFunctionCall","src":"3098:44:21"},"nativeSrc":"3098:44:21","nodeType":"YulExpressionStatement","src":"3098:44:21"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3166:6:21","nodeType":"YulIdentifier","src":"3166:6:21"},{"name":"length","nativeSrc":"3174:6:21","nodeType":"YulIdentifier","src":"3174:6:21"}],"functionName":{"name":"add","nativeSrc":"3162:3:21","nodeType":"YulIdentifier","src":"3162:3:21"},"nativeSrc":"3162:19:21","nodeType":"YulFunctionCall","src":"3162:19:21"},{"kind":"number","nativeSrc":"3183:4:21","nodeType":"YulLiteral","src":"3183:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3158:3:21","nodeType":"YulIdentifier","src":"3158:3:21"},"nativeSrc":"3158:30:21","nodeType":"YulFunctionCall","src":"3158:30:21"},{"kind":"number","nativeSrc":"3190:1:21","nodeType":"YulLiteral","src":"3190:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3151:6:21","nodeType":"YulIdentifier","src":"3151:6:21"},"nativeSrc":"3151:41:21","nodeType":"YulFunctionCall","src":"3151:41:21"},"nativeSrc":"3151:41:21","nodeType":"YulExpressionStatement","src":"3151:41:21"}]},"name":"abi_decode_available_length_bytes","nativeSrc":"2508:690:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"2551:3:21","nodeType":"YulTypedName","src":"2551:3:21","type":""},{"name":"length","nativeSrc":"2556:6:21","nodeType":"YulTypedName","src":"2556:6:21","type":""},{"name":"end","nativeSrc":"2564:3:21","nodeType":"YulTypedName","src":"2564:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"2572:5:21","nodeType":"YulTypedName","src":"2572:5:21","type":""}],"src":"2508:690:21"},{"body":{"nativeSrc":"3299:488:21","nodeType":"YulBlock","src":"3299:488:21","statements":[{"body":{"nativeSrc":"3345:16:21","nodeType":"YulBlock","src":"3345:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:1:21","nodeType":"YulLiteral","src":"3354:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3357:1:21","nodeType":"YulLiteral","src":"3357:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3347:6:21","nodeType":"YulIdentifier","src":"3347:6:21"},"nativeSrc":"3347:12:21","nodeType":"YulFunctionCall","src":"3347:12:21"},"nativeSrc":"3347:12:21","nodeType":"YulExpressionStatement","src":"3347:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3320:7:21","nodeType":"YulIdentifier","src":"3320:7:21"},{"name":"headStart","nativeSrc":"3329:9:21","nodeType":"YulIdentifier","src":"3329:9:21"}],"functionName":{"name":"sub","nativeSrc":"3316:3:21","nodeType":"YulIdentifier","src":"3316:3:21"},"nativeSrc":"3316:23:21","nodeType":"YulFunctionCall","src":"3316:23:21"},{"kind":"number","nativeSrc":"3341:2:21","nodeType":"YulLiteral","src":"3341:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"3312:3:21","nodeType":"YulIdentifier","src":"3312:3:21"},"nativeSrc":"3312:32:21","nodeType":"YulFunctionCall","src":"3312:32:21"},"nativeSrc":"3309:52:21","nodeType":"YulIf","src":"3309:52:21"},{"nativeSrc":"3370:36:21","nodeType":"YulVariableDeclaration","src":"3370:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3396:9:21","nodeType":"YulIdentifier","src":"3396:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"3383:12:21","nodeType":"YulIdentifier","src":"3383:12:21"},"nativeSrc":"3383:23:21","nodeType":"YulFunctionCall","src":"3383:23:21"},"variables":[{"name":"value","nativeSrc":"3374:5:21","nodeType":"YulTypedName","src":"3374:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3440:5:21","nodeType":"YulIdentifier","src":"3440:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"3415:24:21","nodeType":"YulIdentifier","src":"3415:24:21"},"nativeSrc":"3415:31:21","nodeType":"YulFunctionCall","src":"3415:31:21"},"nativeSrc":"3415:31:21","nodeType":"YulExpressionStatement","src":"3415:31:21"},{"nativeSrc":"3455:15:21","nodeType":"YulAssignment","src":"3455:15:21","value":{"name":"value","nativeSrc":"3465:5:21","nodeType":"YulIdentifier","src":"3465:5:21"},"variableNames":[{"name":"value0","nativeSrc":"3455:6:21","nodeType":"YulIdentifier","src":"3455:6:21"}]},{"nativeSrc":"3479:46:21","nodeType":"YulVariableDeclaration","src":"3479:46:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3510:9:21","nodeType":"YulIdentifier","src":"3510:9:21"},{"kind":"number","nativeSrc":"3521:2:21","nodeType":"YulLiteral","src":"3521:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3506:3:21","nodeType":"YulIdentifier","src":"3506:3:21"},"nativeSrc":"3506:18:21","nodeType":"YulFunctionCall","src":"3506:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"3493:12:21","nodeType":"YulIdentifier","src":"3493:12:21"},"nativeSrc":"3493:32:21","nodeType":"YulFunctionCall","src":"3493:32:21"},"variables":[{"name":"offset","nativeSrc":"3483:6:21","nodeType":"YulTypedName","src":"3483:6:21","type":""}]},{"body":{"nativeSrc":"3568:16:21","nodeType":"YulBlock","src":"3568:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3577:1:21","nodeType":"YulLiteral","src":"3577:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3580:1:21","nodeType":"YulLiteral","src":"3580:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3570:6:21","nodeType":"YulIdentifier","src":"3570:6:21"},"nativeSrc":"3570:12:21","nodeType":"YulFunctionCall","src":"3570:12:21"},"nativeSrc":"3570:12:21","nodeType":"YulExpressionStatement","src":"3570:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"3540:6:21","nodeType":"YulIdentifier","src":"3540:6:21"},{"kind":"number","nativeSrc":"3548:18:21","nodeType":"YulLiteral","src":"3548:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3537:2:21","nodeType":"YulIdentifier","src":"3537:2:21"},"nativeSrc":"3537:30:21","nodeType":"YulFunctionCall","src":"3537:30:21"},"nativeSrc":"3534:50:21","nodeType":"YulIf","src":"3534:50:21"},{"nativeSrc":"3593:32:21","nodeType":"YulVariableDeclaration","src":"3593:32:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3607:9:21","nodeType":"YulIdentifier","src":"3607:9:21"},{"name":"offset","nativeSrc":"3618:6:21","nodeType":"YulIdentifier","src":"3618:6:21"}],"functionName":{"name":"add","nativeSrc":"3603:3:21","nodeType":"YulIdentifier","src":"3603:3:21"},"nativeSrc":"3603:22:21","nodeType":"YulFunctionCall","src":"3603:22:21"},"variables":[{"name":"_1","nativeSrc":"3597:2:21","nodeType":"YulTypedName","src":"3597:2:21","type":""}]},{"body":{"nativeSrc":"3673:16:21","nodeType":"YulBlock","src":"3673:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3682:1:21","nodeType":"YulLiteral","src":"3682:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"3685:1:21","nodeType":"YulLiteral","src":"3685:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3675:6:21","nodeType":"YulIdentifier","src":"3675:6:21"},"nativeSrc":"3675:12:21","nodeType":"YulFunctionCall","src":"3675:12:21"},"nativeSrc":"3675:12:21","nodeType":"YulExpressionStatement","src":"3675:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3652:2:21","nodeType":"YulIdentifier","src":"3652:2:21"},{"kind":"number","nativeSrc":"3656:4:21","nodeType":"YulLiteral","src":"3656:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"3648:3:21","nodeType":"YulIdentifier","src":"3648:3:21"},"nativeSrc":"3648:13:21","nodeType":"YulFunctionCall","src":"3648:13:21"},{"name":"dataEnd","nativeSrc":"3663:7:21","nodeType":"YulIdentifier","src":"3663:7:21"}],"functionName":{"name":"slt","nativeSrc":"3644:3:21","nodeType":"YulIdentifier","src":"3644:3:21"},"nativeSrc":"3644:27:21","nodeType":"YulFunctionCall","src":"3644:27:21"}],"functionName":{"name":"iszero","nativeSrc":"3637:6:21","nodeType":"YulIdentifier","src":"3637:6:21"},"nativeSrc":"3637:35:21","nodeType":"YulFunctionCall","src":"3637:35:21"},"nativeSrc":"3634:55:21","nodeType":"YulIf","src":"3634:55:21"},{"nativeSrc":"3698:83:21","nodeType":"YulAssignment","src":"3698:83:21","value":{"arguments":[{"arguments":[{"name":"_1","nativeSrc":"3746:2:21","nodeType":"YulIdentifier","src":"3746:2:21"},{"kind":"number","nativeSrc":"3750:2:21","nodeType":"YulLiteral","src":"3750:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3742:3:21","nodeType":"YulIdentifier","src":"3742:3:21"},"nativeSrc":"3742:11:21","nodeType":"YulFunctionCall","src":"3742:11:21"},{"arguments":[{"name":"_1","nativeSrc":"3768:2:21","nodeType":"YulIdentifier","src":"3768:2:21"}],"functionName":{"name":"calldataload","nativeSrc":"3755:12:21","nodeType":"YulIdentifier","src":"3755:12:21"},"nativeSrc":"3755:16:21","nodeType":"YulFunctionCall","src":"3755:16:21"},{"name":"dataEnd","nativeSrc":"3773:7:21","nodeType":"YulIdentifier","src":"3773:7:21"}],"functionName":{"name":"abi_decode_available_length_bytes","nativeSrc":"3708:33:21","nodeType":"YulIdentifier","src":"3708:33:21"},"nativeSrc":"3708:73:21","nodeType":"YulFunctionCall","src":"3708:73:21"},"variableNames":[{"name":"value1","nativeSrc":"3698:6:21","nodeType":"YulIdentifier","src":"3698:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_bytes_memory_ptr","nativeSrc":"3203:584:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3257:9:21","nodeType":"YulTypedName","src":"3257:9:21","type":""},{"name":"dataEnd","nativeSrc":"3268:7:21","nodeType":"YulTypedName","src":"3268:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3280:6:21","nodeType":"YulTypedName","src":"3280:6:21","type":""},{"name":"value1","nativeSrc":"3288:6:21","nodeType":"YulTypedName","src":"3288:6:21","type":""}],"src":"3203:584:21"},{"body":{"nativeSrc":"3893:76:21","nodeType":"YulBlock","src":"3893:76:21","statements":[{"nativeSrc":"3903:26:21","nodeType":"YulAssignment","src":"3903:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"3915:9:21","nodeType":"YulIdentifier","src":"3915:9:21"},{"kind":"number","nativeSrc":"3926:2:21","nodeType":"YulLiteral","src":"3926:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3911:3:21","nodeType":"YulIdentifier","src":"3911:3:21"},"nativeSrc":"3911:18:21","nodeType":"YulFunctionCall","src":"3911:18:21"},"variableNames":[{"name":"tail","nativeSrc":"3903:4:21","nodeType":"YulIdentifier","src":"3903:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"3945:9:21","nodeType":"YulIdentifier","src":"3945:9:21"},{"name":"value0","nativeSrc":"3956:6:21","nodeType":"YulIdentifier","src":"3956:6:21"}],"functionName":{"name":"mstore","nativeSrc":"3938:6:21","nodeType":"YulIdentifier","src":"3938:6:21"},"nativeSrc":"3938:25:21","nodeType":"YulFunctionCall","src":"3938:25:21"},"nativeSrc":"3938:25:21","nodeType":"YulExpressionStatement","src":"3938:25:21"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"3792:177:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3862:9:21","nodeType":"YulTypedName","src":"3862:9:21","type":""},{"name":"value0","nativeSrc":"3873:6:21","nodeType":"YulTypedName","src":"3873:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3884:4:21","nodeType":"YulTypedName","src":"3884:4:21","type":""}],"src":"3792:177:21"},{"body":{"nativeSrc":"4044:177:21","nodeType":"YulBlock","src":"4044:177:21","statements":[{"body":{"nativeSrc":"4090:16:21","nodeType":"YulBlock","src":"4090:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4099:1:21","nodeType":"YulLiteral","src":"4099:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4102:1:21","nodeType":"YulLiteral","src":"4102:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4092:6:21","nodeType":"YulIdentifier","src":"4092:6:21"},"nativeSrc":"4092:12:21","nodeType":"YulFunctionCall","src":"4092:12:21"},"nativeSrc":"4092:12:21","nodeType":"YulExpressionStatement","src":"4092:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4065:7:21","nodeType":"YulIdentifier","src":"4065:7:21"},{"name":"headStart","nativeSrc":"4074:9:21","nodeType":"YulIdentifier","src":"4074:9:21"}],"functionName":{"name":"sub","nativeSrc":"4061:3:21","nodeType":"YulIdentifier","src":"4061:3:21"},"nativeSrc":"4061:23:21","nodeType":"YulFunctionCall","src":"4061:23:21"},{"kind":"number","nativeSrc":"4086:2:21","nodeType":"YulLiteral","src":"4086:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4057:3:21","nodeType":"YulIdentifier","src":"4057:3:21"},"nativeSrc":"4057:32:21","nodeType":"YulFunctionCall","src":"4057:32:21"},"nativeSrc":"4054:52:21","nodeType":"YulIf","src":"4054:52:21"},{"nativeSrc":"4115:36:21","nodeType":"YulVariableDeclaration","src":"4115:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4141:9:21","nodeType":"YulIdentifier","src":"4141:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"4128:12:21","nodeType":"YulIdentifier","src":"4128:12:21"},"nativeSrc":"4128:23:21","nodeType":"YulFunctionCall","src":"4128:23:21"},"variables":[{"name":"value","nativeSrc":"4119:5:21","nodeType":"YulTypedName","src":"4119:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4185:5:21","nodeType":"YulIdentifier","src":"4185:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4160:24:21","nodeType":"YulIdentifier","src":"4160:24:21"},"nativeSrc":"4160:31:21","nodeType":"YulFunctionCall","src":"4160:31:21"},"nativeSrc":"4160:31:21","nodeType":"YulExpressionStatement","src":"4160:31:21"},{"nativeSrc":"4200:15:21","nodeType":"YulAssignment","src":"4200:15:21","value":{"name":"value","nativeSrc":"4210:5:21","nodeType":"YulIdentifier","src":"4210:5:21"},"variableNames":[{"name":"value0","nativeSrc":"4200:6:21","nodeType":"YulIdentifier","src":"4200:6:21"}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"3974:247:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4010:9:21","nodeType":"YulTypedName","src":"4010:9:21","type":""},{"name":"dataEnd","nativeSrc":"4021:7:21","nodeType":"YulTypedName","src":"4021:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4033:6:21","nodeType":"YulTypedName","src":"4033:6:21","type":""}],"src":"3974:247:21"},{"body":{"nativeSrc":"4327:125:21","nodeType":"YulBlock","src":"4327:125:21","statements":[{"nativeSrc":"4337:26:21","nodeType":"YulAssignment","src":"4337:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4349:9:21","nodeType":"YulIdentifier","src":"4349:9:21"},{"kind":"number","nativeSrc":"4360:2:21","nodeType":"YulLiteral","src":"4360:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4345:3:21","nodeType":"YulIdentifier","src":"4345:3:21"},"nativeSrc":"4345:18:21","nodeType":"YulFunctionCall","src":"4345:18:21"},"variableNames":[{"name":"tail","nativeSrc":"4337:4:21","nodeType":"YulIdentifier","src":"4337:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"4379:9:21","nodeType":"YulIdentifier","src":"4379:9:21"},{"arguments":[{"name":"value0","nativeSrc":"4394:6:21","nodeType":"YulIdentifier","src":"4394:6:21"},{"kind":"number","nativeSrc":"4402:42:21","nodeType":"YulLiteral","src":"4402:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"4390:3:21","nodeType":"YulIdentifier","src":"4390:3:21"},"nativeSrc":"4390:55:21","nodeType":"YulFunctionCall","src":"4390:55:21"}],"functionName":{"name":"mstore","nativeSrc":"4372:6:21","nodeType":"YulIdentifier","src":"4372:6:21"},"nativeSrc":"4372:74:21","nodeType":"YulFunctionCall","src":"4372:74:21"},"nativeSrc":"4372:74:21","nodeType":"YulExpressionStatement","src":"4372:74:21"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"4226:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4296:9:21","nodeType":"YulTypedName","src":"4296:9:21","type":""},{"name":"value0","nativeSrc":"4307:6:21","nodeType":"YulTypedName","src":"4307:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4318:4:21","nodeType":"YulTypedName","src":"4318:4:21","type":""}],"src":"4226:226:21"},{"body":{"nativeSrc":"4544:301:21","nodeType":"YulBlock","src":"4544:301:21","statements":[{"body":{"nativeSrc":"4590:16:21","nodeType":"YulBlock","src":"4590:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4599:1:21","nodeType":"YulLiteral","src":"4599:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4602:1:21","nodeType":"YulLiteral","src":"4602:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4592:6:21","nodeType":"YulIdentifier","src":"4592:6:21"},"nativeSrc":"4592:12:21","nodeType":"YulFunctionCall","src":"4592:12:21"},"nativeSrc":"4592:12:21","nodeType":"YulExpressionStatement","src":"4592:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4565:7:21","nodeType":"YulIdentifier","src":"4565:7:21"},{"name":"headStart","nativeSrc":"4574:9:21","nodeType":"YulIdentifier","src":"4574:9:21"}],"functionName":{"name":"sub","nativeSrc":"4561:3:21","nodeType":"YulIdentifier","src":"4561:3:21"},"nativeSrc":"4561:23:21","nodeType":"YulFunctionCall","src":"4561:23:21"},{"kind":"number","nativeSrc":"4586:2:21","nodeType":"YulLiteral","src":"4586:2:21","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4557:3:21","nodeType":"YulIdentifier","src":"4557:3:21"},"nativeSrc":"4557:32:21","nodeType":"YulFunctionCall","src":"4557:32:21"},"nativeSrc":"4554:52:21","nodeType":"YulIf","src":"4554:52:21"},{"nativeSrc":"4615:36:21","nodeType":"YulVariableDeclaration","src":"4615:36:21","value":{"arguments":[{"name":"headStart","nativeSrc":"4641:9:21","nodeType":"YulIdentifier","src":"4641:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"4628:12:21","nodeType":"YulIdentifier","src":"4628:12:21"},"nativeSrc":"4628:23:21","nodeType":"YulFunctionCall","src":"4628:23:21"},"variables":[{"name":"value","nativeSrc":"4619:5:21","nodeType":"YulTypedName","src":"4619:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4685:5:21","nodeType":"YulIdentifier","src":"4685:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4660:24:21","nodeType":"YulIdentifier","src":"4660:24:21"},"nativeSrc":"4660:31:21","nodeType":"YulFunctionCall","src":"4660:31:21"},"nativeSrc":"4660:31:21","nodeType":"YulExpressionStatement","src":"4660:31:21"},{"nativeSrc":"4700:15:21","nodeType":"YulAssignment","src":"4700:15:21","value":{"name":"value","nativeSrc":"4710:5:21","nodeType":"YulIdentifier","src":"4710:5:21"},"variableNames":[{"name":"value0","nativeSrc":"4700:6:21","nodeType":"YulIdentifier","src":"4700:6:21"}]},{"nativeSrc":"4724:47:21","nodeType":"YulVariableDeclaration","src":"4724:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4756:9:21","nodeType":"YulIdentifier","src":"4756:9:21"},{"kind":"number","nativeSrc":"4767:2:21","nodeType":"YulLiteral","src":"4767:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4752:3:21","nodeType":"YulIdentifier","src":"4752:3:21"},"nativeSrc":"4752:18:21","nodeType":"YulFunctionCall","src":"4752:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"4739:12:21","nodeType":"YulIdentifier","src":"4739:12:21"},"nativeSrc":"4739:32:21","nodeType":"YulFunctionCall","src":"4739:32:21"},"variables":[{"name":"value_1","nativeSrc":"4728:7:21","nodeType":"YulTypedName","src":"4728:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"4805:7:21","nodeType":"YulIdentifier","src":"4805:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"4780:24:21","nodeType":"YulIdentifier","src":"4780:24:21"},"nativeSrc":"4780:33:21","nodeType":"YulFunctionCall","src":"4780:33:21"},"nativeSrc":"4780:33:21","nodeType":"YulExpressionStatement","src":"4780:33:21"},{"nativeSrc":"4822:17:21","nodeType":"YulAssignment","src":"4822:17:21","value":{"name":"value_1","nativeSrc":"4832:7:21","nodeType":"YulIdentifier","src":"4832:7:21"},"variableNames":[{"name":"value1","nativeSrc":"4822:6:21","nodeType":"YulIdentifier","src":"4822:6:21"}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"4457:388:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4502:9:21","nodeType":"YulTypedName","src":"4502:9:21","type":""},{"name":"dataEnd","nativeSrc":"4513:7:21","nodeType":"YulTypedName","src":"4513:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4525:6:21","nodeType":"YulTypedName","src":"4525:6:21","type":""},{"name":"value1","nativeSrc":"4533:6:21","nodeType":"YulTypedName","src":"4533:6:21","type":""}],"src":"4457:388:21"},{"body":{"nativeSrc":"4903:168:21","nodeType":"YulBlock","src":"4903:168:21","statements":[{"body":{"nativeSrc":"4952:16:21","nodeType":"YulBlock","src":"4952:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4961:1:21","nodeType":"YulLiteral","src":"4961:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"4964:1:21","nodeType":"YulLiteral","src":"4964:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4954:6:21","nodeType":"YulIdentifier","src":"4954:6:21"},"nativeSrc":"4954:12:21","nodeType":"YulFunctionCall","src":"4954:12:21"},"nativeSrc":"4954:12:21","nodeType":"YulExpressionStatement","src":"4954:12:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4931:6:21","nodeType":"YulIdentifier","src":"4931:6:21"},{"kind":"number","nativeSrc":"4939:4:21","nodeType":"YulLiteral","src":"4939:4:21","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4927:3:21","nodeType":"YulIdentifier","src":"4927:3:21"},"nativeSrc":"4927:17:21","nodeType":"YulFunctionCall","src":"4927:17:21"},{"name":"end","nativeSrc":"4946:3:21","nodeType":"YulIdentifier","src":"4946:3:21"}],"functionName":{"name":"slt","nativeSrc":"4923:3:21","nodeType":"YulIdentifier","src":"4923:3:21"},"nativeSrc":"4923:27:21","nodeType":"YulFunctionCall","src":"4923:27:21"}],"functionName":{"name":"iszero","nativeSrc":"4916:6:21","nodeType":"YulIdentifier","src":"4916:6:21"},"nativeSrc":"4916:35:21","nodeType":"YulFunctionCall","src":"4916:35:21"},"nativeSrc":"4913:55:21","nodeType":"YulIf","src":"4913:55:21"},{"nativeSrc":"4977:88:21","nodeType":"YulAssignment","src":"4977:88:21","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5024:6:21","nodeType":"YulIdentifier","src":"5024:6:21"},{"kind":"number","nativeSrc":"5032:4:21","nodeType":"YulLiteral","src":"5032:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5020:3:21","nodeType":"YulIdentifier","src":"5020:3:21"},"nativeSrc":"5020:17:21","nodeType":"YulFunctionCall","src":"5020:17:21"},{"arguments":[{"name":"offset","nativeSrc":"5052:6:21","nodeType":"YulIdentifier","src":"5052:6:21"}],"functionName":{"name":"calldataload","nativeSrc":"5039:12:21","nodeType":"YulIdentifier","src":"5039:12:21"},"nativeSrc":"5039:20:21","nodeType":"YulFunctionCall","src":"5039:20:21"},{"name":"end","nativeSrc":"5061:3:21","nodeType":"YulIdentifier","src":"5061:3:21"}],"functionName":{"name":"abi_decode_available_length_bytes","nativeSrc":"4986:33:21","nodeType":"YulIdentifier","src":"4986:33:21"},"nativeSrc":"4986:79:21","nodeType":"YulFunctionCall","src":"4986:79:21"},"variableNames":[{"name":"array","nativeSrc":"4977:5:21","nodeType":"YulIdentifier","src":"4977:5:21"}]}]},"name":"abi_decode_string","nativeSrc":"4850:221:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4877:6:21","nodeType":"YulTypedName","src":"4877:6:21","type":""},{"name":"end","nativeSrc":"4885:3:21","nodeType":"YulTypedName","src":"4885:3:21","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4893:5:21","nodeType":"YulTypedName","src":"4893:5:21","type":""}],"src":"4850:221:21"},{"body":{"nativeSrc":"5251:929:21","nodeType":"YulBlock","src":"5251:929:21","statements":[{"body":{"nativeSrc":"5298:16:21","nodeType":"YulBlock","src":"5298:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5307:1:21","nodeType":"YulLiteral","src":"5307:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5310:1:21","nodeType":"YulLiteral","src":"5310:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5300:6:21","nodeType":"YulIdentifier","src":"5300:6:21"},"nativeSrc":"5300:12:21","nodeType":"YulFunctionCall","src":"5300:12:21"},"nativeSrc":"5300:12:21","nodeType":"YulExpressionStatement","src":"5300:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5272:7:21","nodeType":"YulIdentifier","src":"5272:7:21"},{"name":"headStart","nativeSrc":"5281:9:21","nodeType":"YulIdentifier","src":"5281:9:21"}],"functionName":{"name":"sub","nativeSrc":"5268:3:21","nodeType":"YulIdentifier","src":"5268:3:21"},"nativeSrc":"5268:23:21","nodeType":"YulFunctionCall","src":"5268:23:21"},{"kind":"number","nativeSrc":"5293:3:21","nodeType":"YulLiteral","src":"5293:3:21","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"5264:3:21","nodeType":"YulIdentifier","src":"5264:3:21"},"nativeSrc":"5264:33:21","nodeType":"YulFunctionCall","src":"5264:33:21"},"nativeSrc":"5261:53:21","nodeType":"YulIf","src":"5261:53:21"},{"nativeSrc":"5323:37:21","nodeType":"YulVariableDeclaration","src":"5323:37:21","value":{"arguments":[{"name":"headStart","nativeSrc":"5350:9:21","nodeType":"YulIdentifier","src":"5350:9:21"}],"functionName":{"name":"calldataload","nativeSrc":"5337:12:21","nodeType":"YulIdentifier","src":"5337:12:21"},"nativeSrc":"5337:23:21","nodeType":"YulFunctionCall","src":"5337:23:21"},"variables":[{"name":"offset","nativeSrc":"5327:6:21","nodeType":"YulTypedName","src":"5327:6:21","type":""}]},{"nativeSrc":"5369:28:21","nodeType":"YulVariableDeclaration","src":"5369:28:21","value":{"kind":"number","nativeSrc":"5379:18:21","nodeType":"YulLiteral","src":"5379:18:21","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"5373:2:21","nodeType":"YulTypedName","src":"5373:2:21","type":""}]},{"body":{"nativeSrc":"5424:16:21","nodeType":"YulBlock","src":"5424:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5433:1:21","nodeType":"YulLiteral","src":"5433:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5436:1:21","nodeType":"YulLiteral","src":"5436:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5426:6:21","nodeType":"YulIdentifier","src":"5426:6:21"},"nativeSrc":"5426:12:21","nodeType":"YulFunctionCall","src":"5426:12:21"},"nativeSrc":"5426:12:21","nodeType":"YulExpressionStatement","src":"5426:12:21"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"5412:6:21","nodeType":"YulIdentifier","src":"5412:6:21"},{"name":"_1","nativeSrc":"5420:2:21","nodeType":"YulIdentifier","src":"5420:2:21"}],"functionName":{"name":"gt","nativeSrc":"5409:2:21","nodeType":"YulIdentifier","src":"5409:2:21"},"nativeSrc":"5409:14:21","nodeType":"YulFunctionCall","src":"5409:14:21"},"nativeSrc":"5406:34:21","nodeType":"YulIf","src":"5406:34:21"},{"nativeSrc":"5449:60:21","nodeType":"YulAssignment","src":"5449:60:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5481:9:21","nodeType":"YulIdentifier","src":"5481:9:21"},{"name":"offset","nativeSrc":"5492:6:21","nodeType":"YulIdentifier","src":"5492:6:21"}],"functionName":{"name":"add","nativeSrc":"5477:3:21","nodeType":"YulIdentifier","src":"5477:3:21"},"nativeSrc":"5477:22:21","nodeType":"YulFunctionCall","src":"5477:22:21"},{"name":"dataEnd","nativeSrc":"5501:7:21","nodeType":"YulIdentifier","src":"5501:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"5459:17:21","nodeType":"YulIdentifier","src":"5459:17:21"},"nativeSrc":"5459:50:21","nodeType":"YulFunctionCall","src":"5459:50:21"},"variableNames":[{"name":"value0","nativeSrc":"5449:6:21","nodeType":"YulIdentifier","src":"5449:6:21"}]},{"nativeSrc":"5518:48:21","nodeType":"YulVariableDeclaration","src":"5518:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5551:9:21","nodeType":"YulIdentifier","src":"5551:9:21"},{"kind":"number","nativeSrc":"5562:2:21","nodeType":"YulLiteral","src":"5562:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5547:3:21","nodeType":"YulIdentifier","src":"5547:3:21"},"nativeSrc":"5547:18:21","nodeType":"YulFunctionCall","src":"5547:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5534:12:21","nodeType":"YulIdentifier","src":"5534:12:21"},"nativeSrc":"5534:32:21","nodeType":"YulFunctionCall","src":"5534:32:21"},"variables":[{"name":"offset_1","nativeSrc":"5522:8:21","nodeType":"YulTypedName","src":"5522:8:21","type":""}]},{"body":{"nativeSrc":"5595:16:21","nodeType":"YulBlock","src":"5595:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5604:1:21","nodeType":"YulLiteral","src":"5604:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"5607:1:21","nodeType":"YulLiteral","src":"5607:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5597:6:21","nodeType":"YulIdentifier","src":"5597:6:21"},"nativeSrc":"5597:12:21","nodeType":"YulFunctionCall","src":"5597:12:21"},"nativeSrc":"5597:12:21","nodeType":"YulExpressionStatement","src":"5597:12:21"}]},"condition":{"arguments":[{"name":"offset_1","nativeSrc":"5581:8:21","nodeType":"YulIdentifier","src":"5581:8:21"},{"name":"_1","nativeSrc":"5591:2:21","nodeType":"YulIdentifier","src":"5591:2:21"}],"functionName":{"name":"gt","nativeSrc":"5578:2:21","nodeType":"YulIdentifier","src":"5578:2:21"},"nativeSrc":"5578:16:21","nodeType":"YulFunctionCall","src":"5578:16:21"},"nativeSrc":"5575:36:21","nodeType":"YulIf","src":"5575:36:21"},{"nativeSrc":"5620:62:21","nodeType":"YulAssignment","src":"5620:62:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5652:9:21","nodeType":"YulIdentifier","src":"5652:9:21"},{"name":"offset_1","nativeSrc":"5663:8:21","nodeType":"YulIdentifier","src":"5663:8:21"}],"functionName":{"name":"add","nativeSrc":"5648:3:21","nodeType":"YulIdentifier","src":"5648:3:21"},"nativeSrc":"5648:24:21","nodeType":"YulFunctionCall","src":"5648:24:21"},{"name":"dataEnd","nativeSrc":"5674:7:21","nodeType":"YulIdentifier","src":"5674:7:21"}],"functionName":{"name":"abi_decode_string","nativeSrc":"5630:17:21","nodeType":"YulIdentifier","src":"5630:17:21"},"nativeSrc":"5630:52:21","nodeType":"YulFunctionCall","src":"5630:52:21"},"variableNames":[{"name":"value1","nativeSrc":"5620:6:21","nodeType":"YulIdentifier","src":"5620:6:21"}]},{"nativeSrc":"5691:45:21","nodeType":"YulVariableDeclaration","src":"5691:45:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5721:9:21","nodeType":"YulIdentifier","src":"5721:9:21"},{"kind":"number","nativeSrc":"5732:2:21","nodeType":"YulLiteral","src":"5732:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"5717:3:21","nodeType":"YulIdentifier","src":"5717:3:21"},"nativeSrc":"5717:18:21","nodeType":"YulFunctionCall","src":"5717:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5704:12:21","nodeType":"YulIdentifier","src":"5704:12:21"},"nativeSrc":"5704:32:21","nodeType":"YulFunctionCall","src":"5704:32:21"},"variables":[{"name":"value","nativeSrc":"5695:5:21","nodeType":"YulTypedName","src":"5695:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5770:5:21","nodeType":"YulIdentifier","src":"5770:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5745:24:21","nodeType":"YulIdentifier","src":"5745:24:21"},"nativeSrc":"5745:31:21","nodeType":"YulFunctionCall","src":"5745:31:21"},"nativeSrc":"5745:31:21","nodeType":"YulExpressionStatement","src":"5745:31:21"},{"nativeSrc":"5785:15:21","nodeType":"YulAssignment","src":"5785:15:21","value":{"name":"value","nativeSrc":"5795:5:21","nodeType":"YulIdentifier","src":"5795:5:21"},"variableNames":[{"name":"value2","nativeSrc":"5785:6:21","nodeType":"YulIdentifier","src":"5785:6:21"}]},{"nativeSrc":"5809:47:21","nodeType":"YulVariableDeclaration","src":"5809:47:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5841:9:21","nodeType":"YulIdentifier","src":"5841:9:21"},{"kind":"number","nativeSrc":"5852:2:21","nodeType":"YulLiteral","src":"5852:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"5837:3:21","nodeType":"YulIdentifier","src":"5837:3:21"},"nativeSrc":"5837:18:21","nodeType":"YulFunctionCall","src":"5837:18:21"}],"functionName":{"name":"calldataload","nativeSrc":"5824:12:21","nodeType":"YulIdentifier","src":"5824:12:21"},"nativeSrc":"5824:32:21","nodeType":"YulFunctionCall","src":"5824:32:21"},"variables":[{"name":"value_1","nativeSrc":"5813:7:21","nodeType":"YulTypedName","src":"5813:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_1","nativeSrc":"5890:7:21","nodeType":"YulIdentifier","src":"5890:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5865:24:21","nodeType":"YulIdentifier","src":"5865:24:21"},"nativeSrc":"5865:33:21","nodeType":"YulFunctionCall","src":"5865:33:21"},"nativeSrc":"5865:33:21","nodeType":"YulExpressionStatement","src":"5865:33:21"},{"nativeSrc":"5907:17:21","nodeType":"YulAssignment","src":"5907:17:21","value":{"name":"value_1","nativeSrc":"5917:7:21","nodeType":"YulIdentifier","src":"5917:7:21"},"variableNames":[{"name":"value3","nativeSrc":"5907:6:21","nodeType":"YulIdentifier","src":"5907:6:21"}]},{"nativeSrc":"5933:48:21","nodeType":"YulVariableDeclaration","src":"5933:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5965:9:21","nodeType":"YulIdentifier","src":"5965:9:21"},{"kind":"number","nativeSrc":"5976:3:21","nodeType":"YulLiteral","src":"5976:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"5961:3:21","nodeType":"YulIdentifier","src":"5961:3:21"},"nativeSrc":"5961:19:21","nodeType":"YulFunctionCall","src":"5961:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"5948:12:21","nodeType":"YulIdentifier","src":"5948:12:21"},"nativeSrc":"5948:33:21","nodeType":"YulFunctionCall","src":"5948:33:21"},"variables":[{"name":"value_2","nativeSrc":"5937:7:21","nodeType":"YulTypedName","src":"5937:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_2","nativeSrc":"6015:7:21","nodeType":"YulIdentifier","src":"6015:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"5990:24:21","nodeType":"YulIdentifier","src":"5990:24:21"},"nativeSrc":"5990:33:21","nodeType":"YulFunctionCall","src":"5990:33:21"},"nativeSrc":"5990:33:21","nodeType":"YulExpressionStatement","src":"5990:33:21"},{"nativeSrc":"6032:17:21","nodeType":"YulAssignment","src":"6032:17:21","value":{"name":"value_2","nativeSrc":"6042:7:21","nodeType":"YulIdentifier","src":"6042:7:21"},"variableNames":[{"name":"value4","nativeSrc":"6032:6:21","nodeType":"YulIdentifier","src":"6032:6:21"}]},{"nativeSrc":"6058:48:21","nodeType":"YulVariableDeclaration","src":"6058:48:21","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6090:9:21","nodeType":"YulIdentifier","src":"6090:9:21"},{"kind":"number","nativeSrc":"6101:3:21","nodeType":"YulLiteral","src":"6101:3:21","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"6086:3:21","nodeType":"YulIdentifier","src":"6086:3:21"},"nativeSrc":"6086:19:21","nodeType":"YulFunctionCall","src":"6086:19:21"}],"functionName":{"name":"calldataload","nativeSrc":"6073:12:21","nodeType":"YulIdentifier","src":"6073:12:21"},"nativeSrc":"6073:33:21","nodeType":"YulFunctionCall","src":"6073:33:21"},"variables":[{"name":"value_3","nativeSrc":"6062:7:21","nodeType":"YulTypedName","src":"6062:7:21","type":""}]},{"expression":{"arguments":[{"name":"value_3","nativeSrc":"6140:7:21","nodeType":"YulIdentifier","src":"6140:7:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"6115:24:21","nodeType":"YulIdentifier","src":"6115:24:21"},"nativeSrc":"6115:33:21","nodeType":"YulFunctionCall","src":"6115:33:21"},"nativeSrc":"6115:33:21","nodeType":"YulExpressionStatement","src":"6115:33:21"},{"nativeSrc":"6157:17:21","nodeType":"YulAssignment","src":"6157:17:21","value":{"name":"value_3","nativeSrc":"6167:7:21","nodeType":"YulIdentifier","src":"6167:7:21"},"variableNames":[{"name":"value5","nativeSrc":"6157:6:21","nodeType":"YulIdentifier","src":"6157:6:21"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_address","nativeSrc":"5076:1104:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5177:9:21","nodeType":"YulTypedName","src":"5177:9:21","type":""},{"name":"dataEnd","nativeSrc":"5188:7:21","nodeType":"YulTypedName","src":"5188:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5200:6:21","nodeType":"YulTypedName","src":"5200:6:21","type":""},{"name":"value1","nativeSrc":"5208:6:21","nodeType":"YulTypedName","src":"5208:6:21","type":""},{"name":"value2","nativeSrc":"5216:6:21","nodeType":"YulTypedName","src":"5216:6:21","type":""},{"name":"value3","nativeSrc":"5224:6:21","nodeType":"YulTypedName","src":"5224:6:21","type":""},{"name":"value4","nativeSrc":"5232:6:21","nodeType":"YulTypedName","src":"5232:6:21","type":""},{"name":"value5","nativeSrc":"5240:6:21","nodeType":"YulTypedName","src":"5240:6:21","type":""}],"src":"5076:1104:21"},{"body":{"nativeSrc":"6359:182:21","nodeType":"YulBlock","src":"6359:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6376:9:21","nodeType":"YulIdentifier","src":"6376:9:21"},{"kind":"number","nativeSrc":"6387:2:21","nodeType":"YulLiteral","src":"6387:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6369:6:21","nodeType":"YulIdentifier","src":"6369:6:21"},"nativeSrc":"6369:21:21","nodeType":"YulFunctionCall","src":"6369:21:21"},"nativeSrc":"6369:21:21","nodeType":"YulExpressionStatement","src":"6369:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6410:9:21","nodeType":"YulIdentifier","src":"6410:9:21"},{"kind":"number","nativeSrc":"6421:2:21","nodeType":"YulLiteral","src":"6421:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6406:3:21","nodeType":"YulIdentifier","src":"6406:3:21"},"nativeSrc":"6406:18:21","nodeType":"YulFunctionCall","src":"6406:18:21"},{"kind":"number","nativeSrc":"6426:2:21","nodeType":"YulLiteral","src":"6426:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6399:6:21","nodeType":"YulIdentifier","src":"6399:6:21"},"nativeSrc":"6399:30:21","nodeType":"YulFunctionCall","src":"6399:30:21"},"nativeSrc":"6399:30:21","nodeType":"YulExpressionStatement","src":"6399:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6449:9:21","nodeType":"YulIdentifier","src":"6449:9:21"},{"kind":"number","nativeSrc":"6460:2:21","nodeType":"YulLiteral","src":"6460:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6445:3:21","nodeType":"YulIdentifier","src":"6445:3:21"},"nativeSrc":"6445:18:21","nodeType":"YulFunctionCall","src":"6445:18:21"},{"hexValue":"536861726573206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"6465:34:21","nodeType":"YulLiteral","src":"6465:34:21","type":"","value":"Shares must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"6438:6:21","nodeType":"YulIdentifier","src":"6438:6:21"},"nativeSrc":"6438:62:21","nodeType":"YulFunctionCall","src":"6438:62:21"},"nativeSrc":"6438:62:21","nodeType":"YulExpressionStatement","src":"6438:62:21"},{"nativeSrc":"6509:26:21","nodeType":"YulAssignment","src":"6509:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6521:9:21","nodeType":"YulIdentifier","src":"6521:9:21"},{"kind":"number","nativeSrc":"6532:2:21","nodeType":"YulLiteral","src":"6532:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6517:3:21","nodeType":"YulIdentifier","src":"6517:3:21"},"nativeSrc":"6517:18:21","nodeType":"YulFunctionCall","src":"6517:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6509:4:21","nodeType":"YulIdentifier","src":"6509:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6185:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6336:9:21","nodeType":"YulTypedName","src":"6336:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6350:4:21","nodeType":"YulTypedName","src":"6350:4:21","type":""}],"src":"6185:356:21"},{"body":{"nativeSrc":"6720:170:21","nodeType":"YulBlock","src":"6720:170:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"6737:9:21","nodeType":"YulIdentifier","src":"6737:9:21"},{"kind":"number","nativeSrc":"6748:2:21","nodeType":"YulLiteral","src":"6748:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"6730:6:21","nodeType":"YulIdentifier","src":"6730:6:21"},"nativeSrc":"6730:21:21","nodeType":"YulFunctionCall","src":"6730:21:21"},"nativeSrc":"6730:21:21","nodeType":"YulExpressionStatement","src":"6730:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6771:9:21","nodeType":"YulIdentifier","src":"6771:9:21"},{"kind":"number","nativeSrc":"6782:2:21","nodeType":"YulLiteral","src":"6782:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6767:3:21","nodeType":"YulIdentifier","src":"6767:3:21"},"nativeSrc":"6767:18:21","nodeType":"YulFunctionCall","src":"6767:18:21"},{"kind":"number","nativeSrc":"6787:2:21","nodeType":"YulLiteral","src":"6787:2:21","type":"","value":"20"}],"functionName":{"name":"mstore","nativeSrc":"6760:6:21","nodeType":"YulIdentifier","src":"6760:6:21"},"nativeSrc":"6760:30:21","nodeType":"YulFunctionCall","src":"6760:30:21"},"nativeSrc":"6760:30:21","nodeType":"YulExpressionStatement","src":"6760:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6810:9:21","nodeType":"YulIdentifier","src":"6810:9:21"},{"kind":"number","nativeSrc":"6821:2:21","nodeType":"YulLiteral","src":"6821:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6806:3:21","nodeType":"YulIdentifier","src":"6806:3:21"},"nativeSrc":"6806:18:21","nodeType":"YulFunctionCall","src":"6806:18:21"},{"hexValue":"496e73756666696369656e742062616c616e6365","kind":"string","nativeSrc":"6826:22:21","nodeType":"YulLiteral","src":"6826:22:21","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nativeSrc":"6799:6:21","nodeType":"YulIdentifier","src":"6799:6:21"},"nativeSrc":"6799:50:21","nodeType":"YulFunctionCall","src":"6799:50:21"},"nativeSrc":"6799:50:21","nodeType":"YulExpressionStatement","src":"6799:50:21"},{"nativeSrc":"6858:26:21","nodeType":"YulAssignment","src":"6858:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"6870:9:21","nodeType":"YulIdentifier","src":"6870:9:21"},{"kind":"number","nativeSrc":"6881:2:21","nodeType":"YulLiteral","src":"6881:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6866:3:21","nodeType":"YulIdentifier","src":"6866:3:21"},"nativeSrc":"6866:18:21","nodeType":"YulFunctionCall","src":"6866:18:21"},"variableNames":[{"name":"tail","nativeSrc":"6858:4:21","nodeType":"YulIdentifier","src":"6858:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6546:344:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6697:9:21","nodeType":"YulTypedName","src":"6697:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6711:4:21","nodeType":"YulTypedName","src":"6711:4:21","type":""}],"src":"6546:344:21"},{"body":{"nativeSrc":"6927:152:21","nodeType":"YulBlock","src":"6927:152:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6944:1:21","nodeType":"YulLiteral","src":"6944:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"6947:77:21","nodeType":"YulLiteral","src":"6947:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6937:6:21","nodeType":"YulIdentifier","src":"6937:6:21"},"nativeSrc":"6937:88:21","nodeType":"YulFunctionCall","src":"6937:88:21"},"nativeSrc":"6937:88:21","nodeType":"YulExpressionStatement","src":"6937:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7041:1:21","nodeType":"YulLiteral","src":"7041:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"7044:4:21","nodeType":"YulLiteral","src":"7044:4:21","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"7034:6:21","nodeType":"YulIdentifier","src":"7034:6:21"},"nativeSrc":"7034:15:21","nodeType":"YulFunctionCall","src":"7034:15:21"},"nativeSrc":"7034:15:21","nodeType":"YulExpressionStatement","src":"7034:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7065:1:21","nodeType":"YulLiteral","src":"7065:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7068:4:21","nodeType":"YulLiteral","src":"7068:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7058:6:21","nodeType":"YulIdentifier","src":"7058:6:21"},"nativeSrc":"7058:15:21","nodeType":"YulFunctionCall","src":"7058:15:21"},"nativeSrc":"7058:15:21","nodeType":"YulExpressionStatement","src":"7058:15:21"}]},"name":"panic_error_0x11","nativeSrc":"6895:184:21","nodeType":"YulFunctionDefinition","src":"6895:184:21"},{"body":{"nativeSrc":"7136:116:21","nodeType":"YulBlock","src":"7136:116:21","statements":[{"nativeSrc":"7146:20:21","nodeType":"YulAssignment","src":"7146:20:21","value":{"arguments":[{"name":"x","nativeSrc":"7161:1:21","nodeType":"YulIdentifier","src":"7161:1:21"},{"name":"y","nativeSrc":"7164:1:21","nodeType":"YulIdentifier","src":"7164:1:21"}],"functionName":{"name":"mul","nativeSrc":"7157:3:21","nodeType":"YulIdentifier","src":"7157:3:21"},"nativeSrc":"7157:9:21","nodeType":"YulFunctionCall","src":"7157:9:21"},"variableNames":[{"name":"product","nativeSrc":"7146:7:21","nodeType":"YulIdentifier","src":"7146:7:21"}]},{"body":{"nativeSrc":"7224:22:21","nodeType":"YulBlock","src":"7224:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7226:16:21","nodeType":"YulIdentifier","src":"7226:16:21"},"nativeSrc":"7226:18:21","nodeType":"YulFunctionCall","src":"7226:18:21"},"nativeSrc":"7226:18:21","nodeType":"YulExpressionStatement","src":"7226:18:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"7195:1:21","nodeType":"YulIdentifier","src":"7195:1:21"}],"functionName":{"name":"iszero","nativeSrc":"7188:6:21","nodeType":"YulIdentifier","src":"7188:6:21"},"nativeSrc":"7188:9:21","nodeType":"YulFunctionCall","src":"7188:9:21"},{"arguments":[{"name":"y","nativeSrc":"7202:1:21","nodeType":"YulIdentifier","src":"7202:1:21"},{"arguments":[{"name":"product","nativeSrc":"7209:7:21","nodeType":"YulIdentifier","src":"7209:7:21"},{"name":"x","nativeSrc":"7218:1:21","nodeType":"YulIdentifier","src":"7218:1:21"}],"functionName":{"name":"div","nativeSrc":"7205:3:21","nodeType":"YulIdentifier","src":"7205:3:21"},"nativeSrc":"7205:15:21","nodeType":"YulFunctionCall","src":"7205:15:21"}],"functionName":{"name":"eq","nativeSrc":"7199:2:21","nodeType":"YulIdentifier","src":"7199:2:21"},"nativeSrc":"7199:22:21","nodeType":"YulFunctionCall","src":"7199:22:21"}],"functionName":{"name":"or","nativeSrc":"7185:2:21","nodeType":"YulIdentifier","src":"7185:2:21"},"nativeSrc":"7185:37:21","nodeType":"YulFunctionCall","src":"7185:37:21"}],"functionName":{"name":"iszero","nativeSrc":"7178:6:21","nodeType":"YulIdentifier","src":"7178:6:21"},"nativeSrc":"7178:45:21","nodeType":"YulFunctionCall","src":"7178:45:21"},"nativeSrc":"7175:71:21","nodeType":"YulIf","src":"7175:71:21"}]},"name":"checked_mul_t_uint256","nativeSrc":"7084:168:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7115:1:21","nodeType":"YulTypedName","src":"7115:1:21","type":""},{"name":"y","nativeSrc":"7118:1:21","nodeType":"YulTypedName","src":"7118:1:21","type":""}],"returnVariables":[{"name":"product","nativeSrc":"7124:7:21","nodeType":"YulTypedName","src":"7124:7:21","type":""}],"src":"7084:168:21"},{"body":{"nativeSrc":"7303:228:21","nodeType":"YulBlock","src":"7303:228:21","statements":[{"body":{"nativeSrc":"7334:168:21","nodeType":"YulBlock","src":"7334:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7355:1:21","nodeType":"YulLiteral","src":"7355:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7358:77:21","nodeType":"YulLiteral","src":"7358:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"7348:6:21","nodeType":"YulIdentifier","src":"7348:6:21"},"nativeSrc":"7348:88:21","nodeType":"YulFunctionCall","src":"7348:88:21"},"nativeSrc":"7348:88:21","nodeType":"YulExpressionStatement","src":"7348:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7456:1:21","nodeType":"YulLiteral","src":"7456:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"7459:4:21","nodeType":"YulLiteral","src":"7459:4:21","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"7449:6:21","nodeType":"YulIdentifier","src":"7449:6:21"},"nativeSrc":"7449:15:21","nodeType":"YulFunctionCall","src":"7449:15:21"},"nativeSrc":"7449:15:21","nodeType":"YulExpressionStatement","src":"7449:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7484:1:21","nodeType":"YulLiteral","src":"7484:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7487:4:21","nodeType":"YulLiteral","src":"7487:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7477:6:21","nodeType":"YulIdentifier","src":"7477:6:21"},"nativeSrc":"7477:15:21","nodeType":"YulFunctionCall","src":"7477:15:21"},"nativeSrc":"7477:15:21","nodeType":"YulExpressionStatement","src":"7477:15:21"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"7323:1:21","nodeType":"YulIdentifier","src":"7323:1:21"}],"functionName":{"name":"iszero","nativeSrc":"7316:6:21","nodeType":"YulIdentifier","src":"7316:6:21"},"nativeSrc":"7316:9:21","nodeType":"YulFunctionCall","src":"7316:9:21"},"nativeSrc":"7313:189:21","nodeType":"YulIf","src":"7313:189:21"},{"nativeSrc":"7511:14:21","nodeType":"YulAssignment","src":"7511:14:21","value":{"arguments":[{"name":"x","nativeSrc":"7520:1:21","nodeType":"YulIdentifier","src":"7520:1:21"},{"name":"y","nativeSrc":"7523:1:21","nodeType":"YulIdentifier","src":"7523:1:21"}],"functionName":{"name":"div","nativeSrc":"7516:3:21","nodeType":"YulIdentifier","src":"7516:3:21"},"nativeSrc":"7516:9:21","nodeType":"YulFunctionCall","src":"7516:9:21"},"variableNames":[{"name":"r","nativeSrc":"7511:1:21","nodeType":"YulIdentifier","src":"7511:1:21"}]}]},"name":"checked_div_t_uint256","nativeSrc":"7257:274:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7288:1:21","nodeType":"YulTypedName","src":"7288:1:21","type":""},{"name":"y","nativeSrc":"7291:1:21","nodeType":"YulTypedName","src":"7291:1:21","type":""}],"returnVariables":[{"name":"r","nativeSrc":"7297:1:21","nodeType":"YulTypedName","src":"7297:1:21","type":""}],"src":"7257:274:21"},{"body":{"nativeSrc":"7585:79:21","nodeType":"YulBlock","src":"7585:79:21","statements":[{"nativeSrc":"7595:17:21","nodeType":"YulAssignment","src":"7595:17:21","value":{"arguments":[{"name":"x","nativeSrc":"7607:1:21","nodeType":"YulIdentifier","src":"7607:1:21"},{"name":"y","nativeSrc":"7610:1:21","nodeType":"YulIdentifier","src":"7610:1:21"}],"functionName":{"name":"sub","nativeSrc":"7603:3:21","nodeType":"YulIdentifier","src":"7603:3:21"},"nativeSrc":"7603:9:21","nodeType":"YulFunctionCall","src":"7603:9:21"},"variableNames":[{"name":"diff","nativeSrc":"7595:4:21","nodeType":"YulIdentifier","src":"7595:4:21"}]},{"body":{"nativeSrc":"7636:22:21","nodeType":"YulBlock","src":"7636:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"7638:16:21","nodeType":"YulIdentifier","src":"7638:16:21"},"nativeSrc":"7638:18:21","nodeType":"YulFunctionCall","src":"7638:18:21"},"nativeSrc":"7638:18:21","nodeType":"YulExpressionStatement","src":"7638:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"7627:4:21","nodeType":"YulIdentifier","src":"7627:4:21"},{"name":"x","nativeSrc":"7633:1:21","nodeType":"YulIdentifier","src":"7633:1:21"}],"functionName":{"name":"gt","nativeSrc":"7624:2:21","nodeType":"YulIdentifier","src":"7624:2:21"},"nativeSrc":"7624:11:21","nodeType":"YulFunctionCall","src":"7624:11:21"},"nativeSrc":"7621:37:21","nodeType":"YulIf","src":"7621:37:21"}]},"name":"checked_sub_t_uint256","nativeSrc":"7536:128:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"7567:1:21","nodeType":"YulTypedName","src":"7567:1:21","type":""},{"name":"y","nativeSrc":"7570:1:21","nodeType":"YulTypedName","src":"7570:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"7576:4:21","nodeType":"YulTypedName","src":"7576:4:21","type":""}],"src":"7536:128:21"},{"body":{"nativeSrc":"7750:103:21","nodeType":"YulBlock","src":"7750:103:21","statements":[{"body":{"nativeSrc":"7796:16:21","nodeType":"YulBlock","src":"7796:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7805:1:21","nodeType":"YulLiteral","src":"7805:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"7808:1:21","nodeType":"YulLiteral","src":"7808:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7798:6:21","nodeType":"YulIdentifier","src":"7798:6:21"},"nativeSrc":"7798:12:21","nodeType":"YulFunctionCall","src":"7798:12:21"},"nativeSrc":"7798:12:21","nodeType":"YulExpressionStatement","src":"7798:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7771:7:21","nodeType":"YulIdentifier","src":"7771:7:21"},{"name":"headStart","nativeSrc":"7780:9:21","nodeType":"YulIdentifier","src":"7780:9:21"}],"functionName":{"name":"sub","nativeSrc":"7767:3:21","nodeType":"YulIdentifier","src":"7767:3:21"},"nativeSrc":"7767:23:21","nodeType":"YulFunctionCall","src":"7767:23:21"},{"kind":"number","nativeSrc":"7792:2:21","nodeType":"YulLiteral","src":"7792:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7763:3:21","nodeType":"YulIdentifier","src":"7763:3:21"},"nativeSrc":"7763:32:21","nodeType":"YulFunctionCall","src":"7763:32:21"},"nativeSrc":"7760:52:21","nodeType":"YulIf","src":"7760:52:21"},{"nativeSrc":"7821:26:21","nodeType":"YulAssignment","src":"7821:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"7837:9:21","nodeType":"YulIdentifier","src":"7837:9:21"}],"functionName":{"name":"mload","nativeSrc":"7831:5:21","nodeType":"YulIdentifier","src":"7831:5:21"},"nativeSrc":"7831:16:21","nodeType":"YulFunctionCall","src":"7831:16:21"},"variableNames":[{"name":"value0","nativeSrc":"7821:6:21","nodeType":"YulIdentifier","src":"7821:6:21"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"7669:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7716:9:21","nodeType":"YulTypedName","src":"7716:9:21","type":""},{"name":"dataEnd","nativeSrc":"7727:7:21","nodeType":"YulTypedName","src":"7727:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7739:6:21","nodeType":"YulTypedName","src":"7739:6:21","type":""}],"src":"7669:184:21"},{"body":{"nativeSrc":"8015:241:21","nodeType":"YulBlock","src":"8015:241:21","statements":[{"nativeSrc":"8025:26:21","nodeType":"YulAssignment","src":"8025:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8037:9:21","nodeType":"YulIdentifier","src":"8037:9:21"},{"kind":"number","nativeSrc":"8048:2:21","nodeType":"YulLiteral","src":"8048:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"8033:3:21","nodeType":"YulIdentifier","src":"8033:3:21"},"nativeSrc":"8033:18:21","nodeType":"YulFunctionCall","src":"8033:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8025:4:21","nodeType":"YulIdentifier","src":"8025:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8067:9:21","nodeType":"YulIdentifier","src":"8067:9:21"},{"name":"value0","nativeSrc":"8078:6:21","nodeType":"YulIdentifier","src":"8078:6:21"}],"functionName":{"name":"mstore","nativeSrc":"8060:6:21","nodeType":"YulIdentifier","src":"8060:6:21"},"nativeSrc":"8060:25:21","nodeType":"YulFunctionCall","src":"8060:25:21"},"nativeSrc":"8060:25:21","nodeType":"YulExpressionStatement","src":"8060:25:21"},{"nativeSrc":"8094:52:21","nodeType":"YulVariableDeclaration","src":"8094:52:21","value":{"kind":"number","nativeSrc":"8104:42:21","nodeType":"YulLiteral","src":"8104:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"8098:2:21","nodeType":"YulTypedName","src":"8098:2:21","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8166:9:21","nodeType":"YulIdentifier","src":"8166:9:21"},{"kind":"number","nativeSrc":"8177:2:21","nodeType":"YulLiteral","src":"8177:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8162:3:21","nodeType":"YulIdentifier","src":"8162:3:21"},"nativeSrc":"8162:18:21","nodeType":"YulFunctionCall","src":"8162:18:21"},{"arguments":[{"name":"value1","nativeSrc":"8186:6:21","nodeType":"YulIdentifier","src":"8186:6:21"},{"name":"_1","nativeSrc":"8194:2:21","nodeType":"YulIdentifier","src":"8194:2:21"}],"functionName":{"name":"and","nativeSrc":"8182:3:21","nodeType":"YulIdentifier","src":"8182:3:21"},"nativeSrc":"8182:15:21","nodeType":"YulFunctionCall","src":"8182:15:21"}],"functionName":{"name":"mstore","nativeSrc":"8155:6:21","nodeType":"YulIdentifier","src":"8155:6:21"},"nativeSrc":"8155:43:21","nodeType":"YulFunctionCall","src":"8155:43:21"},"nativeSrc":"8155:43:21","nodeType":"YulExpressionStatement","src":"8155:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8218:9:21","nodeType":"YulIdentifier","src":"8218:9:21"},{"kind":"number","nativeSrc":"8229:2:21","nodeType":"YulLiteral","src":"8229:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8214:3:21","nodeType":"YulIdentifier","src":"8214:3:21"},"nativeSrc":"8214:18:21","nodeType":"YulFunctionCall","src":"8214:18:21"},{"arguments":[{"name":"value2","nativeSrc":"8238:6:21","nodeType":"YulIdentifier","src":"8238:6:21"},{"name":"_1","nativeSrc":"8246:2:21","nodeType":"YulIdentifier","src":"8246:2:21"}],"functionName":{"name":"and","nativeSrc":"8234:3:21","nodeType":"YulIdentifier","src":"8234:3:21"},"nativeSrc":"8234:15:21","nodeType":"YulFunctionCall","src":"8234:15:21"}],"functionName":{"name":"mstore","nativeSrc":"8207:6:21","nodeType":"YulIdentifier","src":"8207:6:21"},"nativeSrc":"8207:43:21","nodeType":"YulFunctionCall","src":"8207:43:21"},"nativeSrc":"8207:43:21","nodeType":"YulExpressionStatement","src":"8207:43:21"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed","nativeSrc":"7858:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7968:9:21","nodeType":"YulTypedName","src":"7968:9:21","type":""},{"name":"value2","nativeSrc":"7979:6:21","nodeType":"YulTypedName","src":"7979:6:21","type":""},{"name":"value1","nativeSrc":"7987:6:21","nodeType":"YulTypedName","src":"7987:6:21","type":""},{"name":"value0","nativeSrc":"7995:6:21","nodeType":"YulTypedName","src":"7995:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8006:4:21","nodeType":"YulTypedName","src":"8006:4:21","type":""}],"src":"7858:398:21"},{"body":{"nativeSrc":"8390:168:21","nodeType":"YulBlock","src":"8390:168:21","statements":[{"nativeSrc":"8400:26:21","nodeType":"YulAssignment","src":"8400:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8412:9:21","nodeType":"YulIdentifier","src":"8412:9:21"},{"kind":"number","nativeSrc":"8423:2:21","nodeType":"YulLiteral","src":"8423:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"8408:3:21","nodeType":"YulIdentifier","src":"8408:3:21"},"nativeSrc":"8408:18:21","nodeType":"YulFunctionCall","src":"8408:18:21"},"variableNames":[{"name":"tail","nativeSrc":"8400:4:21","nodeType":"YulIdentifier","src":"8400:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"8442:9:21","nodeType":"YulIdentifier","src":"8442:9:21"},{"arguments":[{"name":"value0","nativeSrc":"8457:6:21","nodeType":"YulIdentifier","src":"8457:6:21"},{"kind":"number","nativeSrc":"8465:42:21","nodeType":"YulLiteral","src":"8465:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"8453:3:21","nodeType":"YulIdentifier","src":"8453:3:21"},"nativeSrc":"8453:55:21","nodeType":"YulFunctionCall","src":"8453:55:21"}],"functionName":{"name":"mstore","nativeSrc":"8435:6:21","nodeType":"YulIdentifier","src":"8435:6:21"},"nativeSrc":"8435:74:21","nodeType":"YulFunctionCall","src":"8435:74:21"},"nativeSrc":"8435:74:21","nodeType":"YulExpressionStatement","src":"8435:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8529:9:21","nodeType":"YulIdentifier","src":"8529:9:21"},{"kind":"number","nativeSrc":"8540:2:21","nodeType":"YulLiteral","src":"8540:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8525:3:21","nodeType":"YulIdentifier","src":"8525:3:21"},"nativeSrc":"8525:18:21","nodeType":"YulFunctionCall","src":"8525:18:21"},{"name":"value1","nativeSrc":"8545:6:21","nodeType":"YulIdentifier","src":"8545:6:21"}],"functionName":{"name":"mstore","nativeSrc":"8518:6:21","nodeType":"YulIdentifier","src":"8518:6:21"},"nativeSrc":"8518:34:21","nodeType":"YulFunctionCall","src":"8518:34:21"},"nativeSrc":"8518:34:21","nodeType":"YulExpressionStatement","src":"8518:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"8261:297:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8351:9:21","nodeType":"YulTypedName","src":"8351:9:21","type":""},{"name":"value1","nativeSrc":"8362:6:21","nodeType":"YulTypedName","src":"8362:6:21","type":""},{"name":"value0","nativeSrc":"8370:6:21","nodeType":"YulTypedName","src":"8370:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8381:4:21","nodeType":"YulTypedName","src":"8381:4:21","type":""}],"src":"8261:297:21"},{"body":{"nativeSrc":"8641:199:21","nodeType":"YulBlock","src":"8641:199:21","statements":[{"body":{"nativeSrc":"8687:16:21","nodeType":"YulBlock","src":"8687:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8696:1:21","nodeType":"YulLiteral","src":"8696:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8699:1:21","nodeType":"YulLiteral","src":"8699:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8689:6:21","nodeType":"YulIdentifier","src":"8689:6:21"},"nativeSrc":"8689:12:21","nodeType":"YulFunctionCall","src":"8689:12:21"},"nativeSrc":"8689:12:21","nodeType":"YulExpressionStatement","src":"8689:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8662:7:21","nodeType":"YulIdentifier","src":"8662:7:21"},{"name":"headStart","nativeSrc":"8671:9:21","nodeType":"YulIdentifier","src":"8671:9:21"}],"functionName":{"name":"sub","nativeSrc":"8658:3:21","nodeType":"YulIdentifier","src":"8658:3:21"},"nativeSrc":"8658:23:21","nodeType":"YulFunctionCall","src":"8658:23:21"},{"kind":"number","nativeSrc":"8683:2:21","nodeType":"YulLiteral","src":"8683:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8654:3:21","nodeType":"YulIdentifier","src":"8654:3:21"},"nativeSrc":"8654:32:21","nodeType":"YulFunctionCall","src":"8654:32:21"},"nativeSrc":"8651:52:21","nodeType":"YulIf","src":"8651:52:21"},{"nativeSrc":"8712:29:21","nodeType":"YulVariableDeclaration","src":"8712:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"8731:9:21","nodeType":"YulIdentifier","src":"8731:9:21"}],"functionName":{"name":"mload","nativeSrc":"8725:5:21","nodeType":"YulIdentifier","src":"8725:5:21"},"nativeSrc":"8725:16:21","nodeType":"YulFunctionCall","src":"8725:16:21"},"variables":[{"name":"value","nativeSrc":"8716:5:21","nodeType":"YulTypedName","src":"8716:5:21","type":""}]},{"body":{"nativeSrc":"8794:16:21","nodeType":"YulBlock","src":"8794:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8803:1:21","nodeType":"YulLiteral","src":"8803:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"8806:1:21","nodeType":"YulLiteral","src":"8806:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8796:6:21","nodeType":"YulIdentifier","src":"8796:6:21"},"nativeSrc":"8796:12:21","nodeType":"YulFunctionCall","src":"8796:12:21"},"nativeSrc":"8796:12:21","nodeType":"YulExpressionStatement","src":"8796:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8763:5:21","nodeType":"YulIdentifier","src":"8763:5:21"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8784:5:21","nodeType":"YulIdentifier","src":"8784:5:21"}],"functionName":{"name":"iszero","nativeSrc":"8777:6:21","nodeType":"YulIdentifier","src":"8777:6:21"},"nativeSrc":"8777:13:21","nodeType":"YulFunctionCall","src":"8777:13:21"}],"functionName":{"name":"iszero","nativeSrc":"8770:6:21","nodeType":"YulIdentifier","src":"8770:6:21"},"nativeSrc":"8770:21:21","nodeType":"YulFunctionCall","src":"8770:21:21"}],"functionName":{"name":"eq","nativeSrc":"8760:2:21","nodeType":"YulIdentifier","src":"8760:2:21"},"nativeSrc":"8760:32:21","nodeType":"YulFunctionCall","src":"8760:32:21"}],"functionName":{"name":"iszero","nativeSrc":"8753:6:21","nodeType":"YulIdentifier","src":"8753:6:21"},"nativeSrc":"8753:40:21","nodeType":"YulFunctionCall","src":"8753:40:21"},"nativeSrc":"8750:60:21","nodeType":"YulIf","src":"8750:60:21"},{"nativeSrc":"8819:15:21","nodeType":"YulAssignment","src":"8819:15:21","value":{"name":"value","nativeSrc":"8829:5:21","nodeType":"YulIdentifier","src":"8829:5:21"},"variableNames":[{"name":"value0","nativeSrc":"8819:6:21","nodeType":"YulIdentifier","src":"8819:6:21"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"8563:277:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8607:9:21","nodeType":"YulTypedName","src":"8607:9:21","type":""},{"name":"dataEnd","nativeSrc":"8618:7:21","nodeType":"YulTypedName","src":"8618:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8630:6:21","nodeType":"YulTypedName","src":"8630:6:21","type":""}],"src":"8563:277:21"},{"body":{"nativeSrc":"8900:382:21","nodeType":"YulBlock","src":"8900:382:21","statements":[{"nativeSrc":"8910:22:21","nodeType":"YulAssignment","src":"8910:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"8924:1:21","nodeType":"YulLiteral","src":"8924:1:21","type":"","value":"1"},{"name":"data","nativeSrc":"8927:4:21","nodeType":"YulIdentifier","src":"8927:4:21"}],"functionName":{"name":"shr","nativeSrc":"8920:3:21","nodeType":"YulIdentifier","src":"8920:3:21"},"nativeSrc":"8920:12:21","nodeType":"YulFunctionCall","src":"8920:12:21"},"variableNames":[{"name":"length","nativeSrc":"8910:6:21","nodeType":"YulIdentifier","src":"8910:6:21"}]},{"nativeSrc":"8941:38:21","nodeType":"YulVariableDeclaration","src":"8941:38:21","value":{"arguments":[{"name":"data","nativeSrc":"8971:4:21","nodeType":"YulIdentifier","src":"8971:4:21"},{"kind":"number","nativeSrc":"8977:1:21","nodeType":"YulLiteral","src":"8977:1:21","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"8967:3:21","nodeType":"YulIdentifier","src":"8967:3:21"},"nativeSrc":"8967:12:21","nodeType":"YulFunctionCall","src":"8967:12:21"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"8945:18:21","nodeType":"YulTypedName","src":"8945:18:21","type":""}]},{"body":{"nativeSrc":"9018:31:21","nodeType":"YulBlock","src":"9018:31:21","statements":[{"nativeSrc":"9020:27:21","nodeType":"YulAssignment","src":"9020:27:21","value":{"arguments":[{"name":"length","nativeSrc":"9034:6:21","nodeType":"YulIdentifier","src":"9034:6:21"},{"kind":"number","nativeSrc":"9042:4:21","nodeType":"YulLiteral","src":"9042:4:21","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"9030:3:21","nodeType":"YulIdentifier","src":"9030:3:21"},"nativeSrc":"9030:17:21","nodeType":"YulFunctionCall","src":"9030:17:21"},"variableNames":[{"name":"length","nativeSrc":"9020:6:21","nodeType":"YulIdentifier","src":"9020:6:21"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"8998:18:21","nodeType":"YulIdentifier","src":"8998:18:21"}],"functionName":{"name":"iszero","nativeSrc":"8991:6:21","nodeType":"YulIdentifier","src":"8991:6:21"},"nativeSrc":"8991:26:21","nodeType":"YulFunctionCall","src":"8991:26:21"},"nativeSrc":"8988:61:21","nodeType":"YulIf","src":"8988:61:21"},{"body":{"nativeSrc":"9108:168:21","nodeType":"YulBlock","src":"9108:168:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9129:1:21","nodeType":"YulLiteral","src":"9129:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9132:77:21","nodeType":"YulLiteral","src":"9132:77:21","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9122:6:21","nodeType":"YulIdentifier","src":"9122:6:21"},"nativeSrc":"9122:88:21","nodeType":"YulFunctionCall","src":"9122:88:21"},"nativeSrc":"9122:88:21","nodeType":"YulExpressionStatement","src":"9122:88:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9230:1:21","nodeType":"YulLiteral","src":"9230:1:21","type":"","value":"4"},{"kind":"number","nativeSrc":"9233:4:21","nodeType":"YulLiteral","src":"9233:4:21","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"9223:6:21","nodeType":"YulIdentifier","src":"9223:6:21"},"nativeSrc":"9223:15:21","nodeType":"YulFunctionCall","src":"9223:15:21"},"nativeSrc":"9223:15:21","nodeType":"YulExpressionStatement","src":"9223:15:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9258:1:21","nodeType":"YulLiteral","src":"9258:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9261:4:21","nodeType":"YulLiteral","src":"9261:4:21","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9251:6:21","nodeType":"YulIdentifier","src":"9251:6:21"},"nativeSrc":"9251:15:21","nodeType":"YulFunctionCall","src":"9251:15:21"},"nativeSrc":"9251:15:21","nodeType":"YulExpressionStatement","src":"9251:15:21"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"9064:18:21","nodeType":"YulIdentifier","src":"9064:18:21"},{"arguments":[{"name":"length","nativeSrc":"9087:6:21","nodeType":"YulIdentifier","src":"9087:6:21"},{"kind":"number","nativeSrc":"9095:2:21","nodeType":"YulLiteral","src":"9095:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"9084:2:21","nodeType":"YulIdentifier","src":"9084:2:21"},"nativeSrc":"9084:14:21","nodeType":"YulFunctionCall","src":"9084:14:21"}],"functionName":{"name":"eq","nativeSrc":"9061:2:21","nodeType":"YulIdentifier","src":"9061:2:21"},"nativeSrc":"9061:38:21","nodeType":"YulFunctionCall","src":"9061:38:21"},"nativeSrc":"9058:218:21","nodeType":"YulIf","src":"9058:218:21"}]},"name":"extract_byte_array_length","nativeSrc":"8845:437:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"8880:4:21","nodeType":"YulTypedName","src":"8880:4:21","type":""}],"returnVariables":[{"name":"length","nativeSrc":"8889:6:21","nodeType":"YulTypedName","src":"8889:6:21","type":""}],"src":"8845:437:21"},{"body":{"nativeSrc":"9368:170:21","nodeType":"YulBlock","src":"9368:170:21","statements":[{"body":{"nativeSrc":"9414:16:21","nodeType":"YulBlock","src":"9414:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9423:1:21","nodeType":"YulLiteral","src":"9423:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"9426:1:21","nodeType":"YulLiteral","src":"9426:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9416:6:21","nodeType":"YulIdentifier","src":"9416:6:21"},"nativeSrc":"9416:12:21","nodeType":"YulFunctionCall","src":"9416:12:21"},"nativeSrc":"9416:12:21","nodeType":"YulExpressionStatement","src":"9416:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"9389:7:21","nodeType":"YulIdentifier","src":"9389:7:21"},{"name":"headStart","nativeSrc":"9398:9:21","nodeType":"YulIdentifier","src":"9398:9:21"}],"functionName":{"name":"sub","nativeSrc":"9385:3:21","nodeType":"YulIdentifier","src":"9385:3:21"},"nativeSrc":"9385:23:21","nodeType":"YulFunctionCall","src":"9385:23:21"},{"kind":"number","nativeSrc":"9410:2:21","nodeType":"YulLiteral","src":"9410:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"9381:3:21","nodeType":"YulIdentifier","src":"9381:3:21"},"nativeSrc":"9381:32:21","nodeType":"YulFunctionCall","src":"9381:32:21"},"nativeSrc":"9378:52:21","nodeType":"YulIf","src":"9378:52:21"},{"nativeSrc":"9439:29:21","nodeType":"YulVariableDeclaration","src":"9439:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9458:9:21","nodeType":"YulIdentifier","src":"9458:9:21"}],"functionName":{"name":"mload","nativeSrc":"9452:5:21","nodeType":"YulIdentifier","src":"9452:5:21"},"nativeSrc":"9452:16:21","nodeType":"YulFunctionCall","src":"9452:16:21"},"variables":[{"name":"value","nativeSrc":"9443:5:21","nodeType":"YulTypedName","src":"9443:5:21","type":""}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9502:5:21","nodeType":"YulIdentifier","src":"9502:5:21"}],"functionName":{"name":"validator_revert_address","nativeSrc":"9477:24:21","nodeType":"YulIdentifier","src":"9477:24:21"},"nativeSrc":"9477:31:21","nodeType":"YulFunctionCall","src":"9477:31:21"},"nativeSrc":"9477:31:21","nodeType":"YulExpressionStatement","src":"9477:31:21"},{"nativeSrc":"9517:15:21","nodeType":"YulAssignment","src":"9517:15:21","value":{"name":"value","nativeSrc":"9527:5:21","nodeType":"YulIdentifier","src":"9527:5:21"},"variableNames":[{"name":"value0","nativeSrc":"9517:6:21","nodeType":"YulIdentifier","src":"9517:6:21"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"9287:251:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9334:9:21","nodeType":"YulTypedName","src":"9334:9:21","type":""},{"name":"dataEnd","nativeSrc":"9345:7:21","nodeType":"YulTypedName","src":"9345:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"9357:6:21","nodeType":"YulTypedName","src":"9357:6:21","type":""}],"src":"9287:251:21"},{"body":{"nativeSrc":"9700:241:21","nodeType":"YulBlock","src":"9700:241:21","statements":[{"nativeSrc":"9710:26:21","nodeType":"YulAssignment","src":"9710:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"9722:9:21","nodeType":"YulIdentifier","src":"9722:9:21"},{"kind":"number","nativeSrc":"9733:2:21","nodeType":"YulLiteral","src":"9733:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"9718:3:21","nodeType":"YulIdentifier","src":"9718:3:21"},"nativeSrc":"9718:18:21","nodeType":"YulFunctionCall","src":"9718:18:21"},"variableNames":[{"name":"tail","nativeSrc":"9710:4:21","nodeType":"YulIdentifier","src":"9710:4:21"}]},{"nativeSrc":"9745:52:21","nodeType":"YulVariableDeclaration","src":"9745:52:21","value":{"kind":"number","nativeSrc":"9755:42:21","nodeType":"YulLiteral","src":"9755:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"9749:2:21","nodeType":"YulTypedName","src":"9749:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"9813:9:21","nodeType":"YulIdentifier","src":"9813:9:21"},{"arguments":[{"name":"value0","nativeSrc":"9828:6:21","nodeType":"YulIdentifier","src":"9828:6:21"},{"name":"_1","nativeSrc":"9836:2:21","nodeType":"YulIdentifier","src":"9836:2:21"}],"functionName":{"name":"and","nativeSrc":"9824:3:21","nodeType":"YulIdentifier","src":"9824:3:21"},"nativeSrc":"9824:15:21","nodeType":"YulFunctionCall","src":"9824:15:21"}],"functionName":{"name":"mstore","nativeSrc":"9806:6:21","nodeType":"YulIdentifier","src":"9806:6:21"},"nativeSrc":"9806:34:21","nodeType":"YulFunctionCall","src":"9806:34:21"},"nativeSrc":"9806:34:21","nodeType":"YulExpressionStatement","src":"9806:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9860:9:21","nodeType":"YulIdentifier","src":"9860:9:21"},{"kind":"number","nativeSrc":"9871:2:21","nodeType":"YulLiteral","src":"9871:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9856:3:21","nodeType":"YulIdentifier","src":"9856:3:21"},"nativeSrc":"9856:18:21","nodeType":"YulFunctionCall","src":"9856:18:21"},{"arguments":[{"name":"value1","nativeSrc":"9880:6:21","nodeType":"YulIdentifier","src":"9880:6:21"},{"name":"_1","nativeSrc":"9888:2:21","nodeType":"YulIdentifier","src":"9888:2:21"}],"functionName":{"name":"and","nativeSrc":"9876:3:21","nodeType":"YulIdentifier","src":"9876:3:21"},"nativeSrc":"9876:15:21","nodeType":"YulFunctionCall","src":"9876:15:21"}],"functionName":{"name":"mstore","nativeSrc":"9849:6:21","nodeType":"YulIdentifier","src":"9849:6:21"},"nativeSrc":"9849:43:21","nodeType":"YulFunctionCall","src":"9849:43:21"},"nativeSrc":"9849:43:21","nodeType":"YulExpressionStatement","src":"9849:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9912:9:21","nodeType":"YulIdentifier","src":"9912:9:21"},{"kind":"number","nativeSrc":"9923:2:21","nodeType":"YulLiteral","src":"9923:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"9908:3:21","nodeType":"YulIdentifier","src":"9908:3:21"},"nativeSrc":"9908:18:21","nodeType":"YulFunctionCall","src":"9908:18:21"},{"name":"value2","nativeSrc":"9928:6:21","nodeType":"YulIdentifier","src":"9928:6:21"}],"functionName":{"name":"mstore","nativeSrc":"9901:6:21","nodeType":"YulIdentifier","src":"9901:6:21"},"nativeSrc":"9901:34:21","nodeType":"YulFunctionCall","src":"9901:34:21"},"nativeSrc":"9901:34:21","nodeType":"YulExpressionStatement","src":"9901:34:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"9543:398:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9653:9:21","nodeType":"YulTypedName","src":"9653:9:21","type":""},{"name":"value2","nativeSrc":"9664:6:21","nodeType":"YulTypedName","src":"9664:6:21","type":""},{"name":"value1","nativeSrc":"9672:6:21","nodeType":"YulTypedName","src":"9672:6:21","type":""},{"name":"value0","nativeSrc":"9680:6:21","nodeType":"YulTypedName","src":"9680:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9691:4:21","nodeType":"YulTypedName","src":"9691:4:21","type":""}],"src":"9543:398:21"},{"body":{"nativeSrc":"9994:77:21","nodeType":"YulBlock","src":"9994:77:21","statements":[{"nativeSrc":"10004:16:21","nodeType":"YulAssignment","src":"10004:16:21","value":{"arguments":[{"name":"x","nativeSrc":"10015:1:21","nodeType":"YulIdentifier","src":"10015:1:21"},{"name":"y","nativeSrc":"10018:1:21","nodeType":"YulIdentifier","src":"10018:1:21"}],"functionName":{"name":"add","nativeSrc":"10011:3:21","nodeType":"YulIdentifier","src":"10011:3:21"},"nativeSrc":"10011:9:21","nodeType":"YulFunctionCall","src":"10011:9:21"},"variableNames":[{"name":"sum","nativeSrc":"10004:3:21","nodeType":"YulIdentifier","src":"10004:3:21"}]},{"body":{"nativeSrc":"10043:22:21","nodeType":"YulBlock","src":"10043:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10045:16:21","nodeType":"YulIdentifier","src":"10045:16:21"},"nativeSrc":"10045:18:21","nodeType":"YulFunctionCall","src":"10045:18:21"},"nativeSrc":"10045:18:21","nodeType":"YulExpressionStatement","src":"10045:18:21"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10035:1:21","nodeType":"YulIdentifier","src":"10035:1:21"},{"name":"sum","nativeSrc":"10038:3:21","nodeType":"YulIdentifier","src":"10038:3:21"}],"functionName":{"name":"gt","nativeSrc":"10032:2:21","nodeType":"YulIdentifier","src":"10032:2:21"},"nativeSrc":"10032:10:21","nodeType":"YulFunctionCall","src":"10032:10:21"},"nativeSrc":"10029:36:21","nodeType":"YulIf","src":"10029:36:21"}]},"name":"checked_add_t_uint256","nativeSrc":"9946:125:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9977:1:21","nodeType":"YulTypedName","src":"9977:1:21","type":""},{"name":"y","nativeSrc":"9980:1:21","nodeType":"YulTypedName","src":"9980:1:21","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"9986:3:21","nodeType":"YulTypedName","src":"9986:3:21","type":""}],"src":"9946:125:21"},{"body":{"nativeSrc":"10250:182:21","nodeType":"YulBlock","src":"10250:182:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10267:9:21","nodeType":"YulIdentifier","src":"10267:9:21"},{"kind":"number","nativeSrc":"10278:2:21","nodeType":"YulLiteral","src":"10278:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10260:6:21","nodeType":"YulIdentifier","src":"10260:6:21"},"nativeSrc":"10260:21:21","nodeType":"YulFunctionCall","src":"10260:21:21"},"nativeSrc":"10260:21:21","nodeType":"YulExpressionStatement","src":"10260:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10301:9:21","nodeType":"YulIdentifier","src":"10301:9:21"},{"kind":"number","nativeSrc":"10312:2:21","nodeType":"YulLiteral","src":"10312:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10297:3:21","nodeType":"YulIdentifier","src":"10297:3:21"},"nativeSrc":"10297:18:21","nodeType":"YulFunctionCall","src":"10297:18:21"},{"kind":"number","nativeSrc":"10317:2:21","nodeType":"YulLiteral","src":"10317:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10290:6:21","nodeType":"YulIdentifier","src":"10290:6:21"},"nativeSrc":"10290:30:21","nodeType":"YulFunctionCall","src":"10290:30:21"},"nativeSrc":"10290:30:21","nodeType":"YulExpressionStatement","src":"10290:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10340:9:21","nodeType":"YulIdentifier","src":"10340:9:21"},{"kind":"number","nativeSrc":"10351:2:21","nodeType":"YulLiteral","src":"10351:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10336:3:21","nodeType":"YulIdentifier","src":"10336:3:21"},"nativeSrc":"10336:18:21","nodeType":"YulFunctionCall","src":"10336:18:21"},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","kind":"string","nativeSrc":"10356:34:21","nodeType":"YulLiteral","src":"10356:34:21","type":"","value":"Amount must be greater than zero"}],"functionName":{"name":"mstore","nativeSrc":"10329:6:21","nodeType":"YulIdentifier","src":"10329:6:21"},"nativeSrc":"10329:62:21","nodeType":"YulFunctionCall","src":"10329:62:21"},"nativeSrc":"10329:62:21","nodeType":"YulExpressionStatement","src":"10329:62:21"},{"nativeSrc":"10400:26:21","nodeType":"YulAssignment","src":"10400:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10412:9:21","nodeType":"YulIdentifier","src":"10412:9:21"},{"kind":"number","nativeSrc":"10423:2:21","nodeType":"YulLiteral","src":"10423:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"10408:3:21","nodeType":"YulIdentifier","src":"10408:3:21"},"nativeSrc":"10408:18:21","nodeType":"YulFunctionCall","src":"10408:18:21"},"variableNames":[{"name":"tail","nativeSrc":"10400:4:21","nodeType":"YulIdentifier","src":"10400:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10076:356:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10227:9:21","nodeType":"YulTypedName","src":"10227:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10241:4:21","nodeType":"YulTypedName","src":"10241:4:21","type":""}],"src":"10076:356:21"},{"body":{"nativeSrc":"10566:168:21","nodeType":"YulBlock","src":"10566:168:21","statements":[{"nativeSrc":"10576:26:21","nodeType":"YulAssignment","src":"10576:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"10588:9:21","nodeType":"YulIdentifier","src":"10588:9:21"},{"kind":"number","nativeSrc":"10599:2:21","nodeType":"YulLiteral","src":"10599:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10584:3:21","nodeType":"YulIdentifier","src":"10584:3:21"},"nativeSrc":"10584:18:21","nodeType":"YulFunctionCall","src":"10584:18:21"},"variableNames":[{"name":"tail","nativeSrc":"10576:4:21","nodeType":"YulIdentifier","src":"10576:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10618:9:21","nodeType":"YulIdentifier","src":"10618:9:21"},{"name":"value0","nativeSrc":"10629:6:21","nodeType":"YulIdentifier","src":"10629:6:21"}],"functionName":{"name":"mstore","nativeSrc":"10611:6:21","nodeType":"YulIdentifier","src":"10611:6:21"},"nativeSrc":"10611:25:21","nodeType":"YulFunctionCall","src":"10611:25:21"},"nativeSrc":"10611:25:21","nodeType":"YulExpressionStatement","src":"10611:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10656:9:21","nodeType":"YulIdentifier","src":"10656:9:21"},{"kind":"number","nativeSrc":"10667:2:21","nodeType":"YulLiteral","src":"10667:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10652:3:21","nodeType":"YulIdentifier","src":"10652:3:21"},"nativeSrc":"10652:18:21","nodeType":"YulFunctionCall","src":"10652:18:21"},{"arguments":[{"name":"value1","nativeSrc":"10676:6:21","nodeType":"YulIdentifier","src":"10676:6:21"},{"kind":"number","nativeSrc":"10684:42:21","nodeType":"YulLiteral","src":"10684:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"10672:3:21","nodeType":"YulIdentifier","src":"10672:3:21"},"nativeSrc":"10672:55:21","nodeType":"YulFunctionCall","src":"10672:55:21"}],"functionName":{"name":"mstore","nativeSrc":"10645:6:21","nodeType":"YulIdentifier","src":"10645:6:21"},"nativeSrc":"10645:83:21","nodeType":"YulFunctionCall","src":"10645:83:21"},"nativeSrc":"10645:83:21","nodeType":"YulExpressionStatement","src":"10645:83:21"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nativeSrc":"10437:297:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10527:9:21","nodeType":"YulTypedName","src":"10527:9:21","type":""},{"name":"value1","nativeSrc":"10538:6:21","nodeType":"YulTypedName","src":"10538:6:21","type":""},{"name":"value0","nativeSrc":"10546:6:21","nodeType":"YulTypedName","src":"10546:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10557:4:21","nodeType":"YulTypedName","src":"10557:4:21","type":""}],"src":"10437:297:21"},{"body":{"nativeSrc":"10913:172:21","nodeType":"YulBlock","src":"10913:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"10930:9:21","nodeType":"YulIdentifier","src":"10930:9:21"},{"kind":"number","nativeSrc":"10941:2:21","nodeType":"YulLiteral","src":"10941:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"10923:6:21","nodeType":"YulIdentifier","src":"10923:6:21"},"nativeSrc":"10923:21:21","nodeType":"YulFunctionCall","src":"10923:21:21"},"nativeSrc":"10923:21:21","nodeType":"YulExpressionStatement","src":"10923:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10964:9:21","nodeType":"YulIdentifier","src":"10964:9:21"},{"kind":"number","nativeSrc":"10975:2:21","nodeType":"YulLiteral","src":"10975:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10960:3:21","nodeType":"YulIdentifier","src":"10960:3:21"},"nativeSrc":"10960:18:21","nodeType":"YulFunctionCall","src":"10960:18:21"},{"kind":"number","nativeSrc":"10980:2:21","nodeType":"YulLiteral","src":"10980:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"10953:6:21","nodeType":"YulIdentifier","src":"10953:6:21"},"nativeSrc":"10953:30:21","nodeType":"YulFunctionCall","src":"10953:30:21"},"nativeSrc":"10953:30:21","nodeType":"YulExpressionStatement","src":"10953:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11003:9:21","nodeType":"YulIdentifier","src":"11003:9:21"},{"kind":"number","nativeSrc":"11014:2:21","nodeType":"YulLiteral","src":"11014:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10999:3:21","nodeType":"YulIdentifier","src":"10999:3:21"},"nativeSrc":"10999:18:21","nodeType":"YulFunctionCall","src":"10999:18:21"},{"hexValue":"496e76616c6964206173736574412061646472657373","kind":"string","nativeSrc":"11019:24:21","nodeType":"YulLiteral","src":"11019:24:21","type":"","value":"Invalid assetA address"}],"functionName":{"name":"mstore","nativeSrc":"10992:6:21","nodeType":"YulIdentifier","src":"10992:6:21"},"nativeSrc":"10992:52:21","nodeType":"YulFunctionCall","src":"10992:52:21"},"nativeSrc":"10992:52:21","nodeType":"YulExpressionStatement","src":"10992:52:21"},{"nativeSrc":"11053:26:21","nodeType":"YulAssignment","src":"11053:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11065:9:21","nodeType":"YulIdentifier","src":"11065:9:21"},{"kind":"number","nativeSrc":"11076:2:21","nodeType":"YulLiteral","src":"11076:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11061:3:21","nodeType":"YulIdentifier","src":"11061:3:21"},"nativeSrc":"11061:18:21","nodeType":"YulFunctionCall","src":"11061:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11053:4:21","nodeType":"YulIdentifier","src":"11053:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_f9fc9be991fb15edd8b6c78e603f09bcc597989ed5b6a9e284f87c92e42b3b89__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"10739:346:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10890:9:21","nodeType":"YulTypedName","src":"10890:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10904:4:21","nodeType":"YulTypedName","src":"10904:4:21","type":""}],"src":"10739:346:21"},{"body":{"nativeSrc":"11264:177:21","nodeType":"YulBlock","src":"11264:177:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11281:9:21","nodeType":"YulIdentifier","src":"11281:9:21"},{"kind":"number","nativeSrc":"11292:2:21","nodeType":"YulLiteral","src":"11292:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11274:6:21","nodeType":"YulIdentifier","src":"11274:6:21"},"nativeSrc":"11274:21:21","nodeType":"YulFunctionCall","src":"11274:21:21"},"nativeSrc":"11274:21:21","nodeType":"YulExpressionStatement","src":"11274:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11315:9:21","nodeType":"YulIdentifier","src":"11315:9:21"},{"kind":"number","nativeSrc":"11326:2:21","nodeType":"YulLiteral","src":"11326:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11311:3:21","nodeType":"YulIdentifier","src":"11311:3:21"},"nativeSrc":"11311:18:21","nodeType":"YulFunctionCall","src":"11311:18:21"},{"kind":"number","nativeSrc":"11331:2:21","nodeType":"YulLiteral","src":"11331:2:21","type":"","value":"27"}],"functionName":{"name":"mstore","nativeSrc":"11304:6:21","nodeType":"YulIdentifier","src":"11304:6:21"},"nativeSrc":"11304:30:21","nodeType":"YulFunctionCall","src":"11304:30:21"},"nativeSrc":"11304:30:21","nodeType":"YulExpressionStatement","src":"11304:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11354:9:21","nodeType":"YulIdentifier","src":"11354:9:21"},{"kind":"number","nativeSrc":"11365:2:21","nodeType":"YulLiteral","src":"11365:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11350:3:21","nodeType":"YulIdentifier","src":"11350:3:21"},"nativeSrc":"11350:18:21","nodeType":"YulFunctionCall","src":"11350:18:21"},{"hexValue":"496e76616c696420596561726e205661756c742061646472657373","kind":"string","nativeSrc":"11370:29:21","nodeType":"YulLiteral","src":"11370:29:21","type":"","value":"Invalid Yearn Vault address"}],"functionName":{"name":"mstore","nativeSrc":"11343:6:21","nodeType":"YulIdentifier","src":"11343:6:21"},"nativeSrc":"11343:57:21","nodeType":"YulFunctionCall","src":"11343:57:21"},"nativeSrc":"11343:57:21","nodeType":"YulExpressionStatement","src":"11343:57:21"},{"nativeSrc":"11409:26:21","nodeType":"YulAssignment","src":"11409:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11421:9:21","nodeType":"YulIdentifier","src":"11421:9:21"},{"kind":"number","nativeSrc":"11432:2:21","nodeType":"YulLiteral","src":"11432:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11417:3:21","nodeType":"YulIdentifier","src":"11417:3:21"},"nativeSrc":"11417:18:21","nodeType":"YulFunctionCall","src":"11417:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11409:4:21","nodeType":"YulIdentifier","src":"11409:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_89141ec2c606ec003f6f5f1768c23192e8ad9a256043aab9d456c1693f9c79ae__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11090:351:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11241:9:21","nodeType":"YulTypedName","src":"11241:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11255:4:21","nodeType":"YulTypedName","src":"11255:4:21","type":""}],"src":"11090:351:21"},{"body":{"nativeSrc":"11620:172:21","nodeType":"YulBlock","src":"11620:172:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11637:9:21","nodeType":"YulIdentifier","src":"11637:9:21"},{"kind":"number","nativeSrc":"11648:2:21","nodeType":"YulLiteral","src":"11648:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"11630:6:21","nodeType":"YulIdentifier","src":"11630:6:21"},"nativeSrc":"11630:21:21","nodeType":"YulFunctionCall","src":"11630:21:21"},"nativeSrc":"11630:21:21","nodeType":"YulExpressionStatement","src":"11630:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11671:9:21","nodeType":"YulIdentifier","src":"11671:9:21"},{"kind":"number","nativeSrc":"11682:2:21","nodeType":"YulLiteral","src":"11682:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11667:3:21","nodeType":"YulIdentifier","src":"11667:3:21"},"nativeSrc":"11667:18:21","nodeType":"YulFunctionCall","src":"11667:18:21"},{"kind":"number","nativeSrc":"11687:2:21","nodeType":"YulLiteral","src":"11687:2:21","type":"","value":"22"}],"functionName":{"name":"mstore","nativeSrc":"11660:6:21","nodeType":"YulIdentifier","src":"11660:6:21"},"nativeSrc":"11660:30:21","nodeType":"YulFunctionCall","src":"11660:30:21"},"nativeSrc":"11660:30:21","nodeType":"YulExpressionStatement","src":"11660:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11710:9:21","nodeType":"YulIdentifier","src":"11710:9:21"},{"kind":"number","nativeSrc":"11721:2:21","nodeType":"YulLiteral","src":"11721:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11706:3:21","nodeType":"YulIdentifier","src":"11706:3:21"},"nativeSrc":"11706:18:21","nodeType":"YulFunctionCall","src":"11706:18:21"},{"hexValue":"496e76616c6964206173736574422061646472657373","kind":"string","nativeSrc":"11726:24:21","nodeType":"YulLiteral","src":"11726:24:21","type":"","value":"Invalid assetB address"}],"functionName":{"name":"mstore","nativeSrc":"11699:6:21","nodeType":"YulIdentifier","src":"11699:6:21"},"nativeSrc":"11699:52:21","nodeType":"YulFunctionCall","src":"11699:52:21"},"nativeSrc":"11699:52:21","nodeType":"YulExpressionStatement","src":"11699:52:21"},{"nativeSrc":"11760:26:21","nodeType":"YulAssignment","src":"11760:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11772:9:21","nodeType":"YulIdentifier","src":"11772:9:21"},{"kind":"number","nativeSrc":"11783:2:21","nodeType":"YulLiteral","src":"11783:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11768:3:21","nodeType":"YulIdentifier","src":"11768:3:21"},"nativeSrc":"11768:18:21","nodeType":"YulFunctionCall","src":"11768:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11760:4:21","nodeType":"YulIdentifier","src":"11760:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_53fb86809bff5dc62f76bc95bbc7b572a1cc94bf1175d9568e8046d7847ef4ec__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11446:346:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11597:9:21","nodeType":"YulTypedName","src":"11597:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11611:4:21","nodeType":"YulTypedName","src":"11611:4:21","type":""}],"src":"11446:346:21"},{"body":{"nativeSrc":"11905:101:21","nodeType":"YulBlock","src":"11905:101:21","statements":[{"nativeSrc":"11915:26:21","nodeType":"YulAssignment","src":"11915:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"11927:9:21","nodeType":"YulIdentifier","src":"11927:9:21"},{"kind":"number","nativeSrc":"11938:2:21","nodeType":"YulLiteral","src":"11938:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11923:3:21","nodeType":"YulIdentifier","src":"11923:3:21"},"nativeSrc":"11923:18:21","nodeType":"YulFunctionCall","src":"11923:18:21"},"variableNames":[{"name":"tail","nativeSrc":"11915:4:21","nodeType":"YulIdentifier","src":"11915:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"11957:9:21","nodeType":"YulIdentifier","src":"11957:9:21"},{"arguments":[{"name":"value0","nativeSrc":"11972:6:21","nodeType":"YulIdentifier","src":"11972:6:21"},{"kind":"number","nativeSrc":"11980:18:21","nodeType":"YulLiteral","src":"11980:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"11968:3:21","nodeType":"YulIdentifier","src":"11968:3:21"},"nativeSrc":"11968:31:21","nodeType":"YulFunctionCall","src":"11968:31:21"}],"functionName":{"name":"mstore","nativeSrc":"11950:6:21","nodeType":"YulIdentifier","src":"11950:6:21"},"nativeSrc":"11950:50:21","nodeType":"YulFunctionCall","src":"11950:50:21"},"nativeSrc":"11950:50:21","nodeType":"YulExpressionStatement","src":"11950:50:21"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed","nativeSrc":"11797:209:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11874:9:21","nodeType":"YulTypedName","src":"11874:9:21","type":""},{"name":"value0","nativeSrc":"11885:6:21","nodeType":"YulTypedName","src":"11885:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11896:4:21","nodeType":"YulTypedName","src":"11896:4:21","type":""}],"src":"11797:209:21"},{"body":{"nativeSrc":"12090:194:21","nodeType":"YulBlock","src":"12090:194:21","statements":[{"body":{"nativeSrc":"12136:16:21","nodeType":"YulBlock","src":"12136:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12145:1:21","nodeType":"YulLiteral","src":"12145:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12148:1:21","nodeType":"YulLiteral","src":"12148:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12138:6:21","nodeType":"YulIdentifier","src":"12138:6:21"},"nativeSrc":"12138:12:21","nodeType":"YulFunctionCall","src":"12138:12:21"},"nativeSrc":"12138:12:21","nodeType":"YulExpressionStatement","src":"12138:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"12111:7:21","nodeType":"YulIdentifier","src":"12111:7:21"},{"name":"headStart","nativeSrc":"12120:9:21","nodeType":"YulIdentifier","src":"12120:9:21"}],"functionName":{"name":"sub","nativeSrc":"12107:3:21","nodeType":"YulIdentifier","src":"12107:3:21"},"nativeSrc":"12107:23:21","nodeType":"YulFunctionCall","src":"12107:23:21"},{"kind":"number","nativeSrc":"12132:2:21","nodeType":"YulLiteral","src":"12132:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"12103:3:21","nodeType":"YulIdentifier","src":"12103:3:21"},"nativeSrc":"12103:32:21","nodeType":"YulFunctionCall","src":"12103:32:21"},"nativeSrc":"12100:52:21","nodeType":"YulIf","src":"12100:52:21"},{"nativeSrc":"12161:29:21","nodeType":"YulVariableDeclaration","src":"12161:29:21","value":{"arguments":[{"name":"headStart","nativeSrc":"12180:9:21","nodeType":"YulIdentifier","src":"12180:9:21"}],"functionName":{"name":"mload","nativeSrc":"12174:5:21","nodeType":"YulIdentifier","src":"12174:5:21"},"nativeSrc":"12174:16:21","nodeType":"YulFunctionCall","src":"12174:16:21"},"variables":[{"name":"value","nativeSrc":"12165:5:21","nodeType":"YulTypedName","src":"12165:5:21","type":""}]},{"body":{"nativeSrc":"12238:16:21","nodeType":"YulBlock","src":"12238:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12247:1:21","nodeType":"YulLiteral","src":"12247:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"12250:1:21","nodeType":"YulLiteral","src":"12250:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"12240:6:21","nodeType":"YulIdentifier","src":"12240:6:21"},"nativeSrc":"12240:12:21","nodeType":"YulFunctionCall","src":"12240:12:21"},"nativeSrc":"12240:12:21","nodeType":"YulExpressionStatement","src":"12240:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12212:5:21","nodeType":"YulIdentifier","src":"12212:5:21"},{"arguments":[{"name":"value","nativeSrc":"12223:5:21","nodeType":"YulIdentifier","src":"12223:5:21"},{"kind":"number","nativeSrc":"12230:4:21","nodeType":"YulLiteral","src":"12230:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"12219:3:21","nodeType":"YulIdentifier","src":"12219:3:21"},"nativeSrc":"12219:16:21","nodeType":"YulFunctionCall","src":"12219:16:21"}],"functionName":{"name":"eq","nativeSrc":"12209:2:21","nodeType":"YulIdentifier","src":"12209:2:21"},"nativeSrc":"12209:27:21","nodeType":"YulFunctionCall","src":"12209:27:21"}],"functionName":{"name":"iszero","nativeSrc":"12202:6:21","nodeType":"YulIdentifier","src":"12202:6:21"},"nativeSrc":"12202:35:21","nodeType":"YulFunctionCall","src":"12202:35:21"},"nativeSrc":"12199:55:21","nodeType":"YulIf","src":"12199:55:21"},{"nativeSrc":"12263:15:21","nodeType":"YulAssignment","src":"12263:15:21","value":{"name":"value","nativeSrc":"12273:5:21","nodeType":"YulIdentifier","src":"12273:5:21"},"variableNames":[{"name":"value0","nativeSrc":"12263:6:21","nodeType":"YulIdentifier","src":"12263:6:21"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nativeSrc":"12011:273:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12056:9:21","nodeType":"YulTypedName","src":"12056:9:21","type":""},{"name":"dataEnd","nativeSrc":"12067:7:21","nodeType":"YulTypedName","src":"12067:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"12079:6:21","nodeType":"YulTypedName","src":"12079:6:21","type":""}],"src":"12011:273:21"},{"body":{"nativeSrc":"12336:104:21","nodeType":"YulBlock","src":"12336:104:21","statements":[{"nativeSrc":"12346:39:21","nodeType":"YulAssignment","src":"12346:39:21","value":{"arguments":[{"arguments":[{"name":"x","nativeSrc":"12362:1:21","nodeType":"YulIdentifier","src":"12362:1:21"},{"kind":"number","nativeSrc":"12365:4:21","nodeType":"YulLiteral","src":"12365:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"12358:3:21","nodeType":"YulIdentifier","src":"12358:3:21"},"nativeSrc":"12358:12:21","nodeType":"YulFunctionCall","src":"12358:12:21"},{"arguments":[{"name":"y","nativeSrc":"12376:1:21","nodeType":"YulIdentifier","src":"12376:1:21"},{"kind":"number","nativeSrc":"12379:4:21","nodeType":"YulLiteral","src":"12379:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"12372:3:21","nodeType":"YulIdentifier","src":"12372:3:21"},"nativeSrc":"12372:12:21","nodeType":"YulFunctionCall","src":"12372:12:21"}],"functionName":{"name":"sub","nativeSrc":"12354:3:21","nodeType":"YulIdentifier","src":"12354:3:21"},"nativeSrc":"12354:31:21","nodeType":"YulFunctionCall","src":"12354:31:21"},"variableNames":[{"name":"diff","nativeSrc":"12346:4:21","nodeType":"YulIdentifier","src":"12346:4:21"}]},{"body":{"nativeSrc":"12412:22:21","nodeType":"YulBlock","src":"12412:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12414:16:21","nodeType":"YulIdentifier","src":"12414:16:21"},"nativeSrc":"12414:18:21","nodeType":"YulFunctionCall","src":"12414:18:21"},"nativeSrc":"12414:18:21","nodeType":"YulExpressionStatement","src":"12414:18:21"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"12400:4:21","nodeType":"YulIdentifier","src":"12400:4:21"},{"kind":"number","nativeSrc":"12406:4:21","nodeType":"YulLiteral","src":"12406:4:21","type":"","value":"0xff"}],"functionName":{"name":"gt","nativeSrc":"12397:2:21","nodeType":"YulIdentifier","src":"12397:2:21"},"nativeSrc":"12397:14:21","nodeType":"YulFunctionCall","src":"12397:14:21"},"nativeSrc":"12394:40:21","nodeType":"YulIf","src":"12394:40:21"}]},"name":"checked_sub_t_uint8","nativeSrc":"12289:151:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"12318:1:21","nodeType":"YulTypedName","src":"12318:1:21","type":""},{"name":"y","nativeSrc":"12321:1:21","nodeType":"YulTypedName","src":"12321:1:21","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"12327:4:21","nodeType":"YulTypedName","src":"12327:4:21","type":""}],"src":"12289:151:21"},{"body":{"nativeSrc":"12509:412:21","nodeType":"YulBlock","src":"12509:412:21","statements":[{"nativeSrc":"12519:16:21","nodeType":"YulVariableDeclaration","src":"12519:16:21","value":{"kind":"number","nativeSrc":"12534:1:21","nodeType":"YulLiteral","src":"12534:1:21","type":"","value":"1"},"variables":[{"name":"power_1","nativeSrc":"12523:7:21","nodeType":"YulTypedName","src":"12523:7:21","type":""}]},{"nativeSrc":"12544:10:21","nodeType":"YulAssignment","src":"12544:10:21","value":{"kind":"number","nativeSrc":"12553:1:21","nodeType":"YulLiteral","src":"12553:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"12544:5:21","nodeType":"YulIdentifier","src":"12544:5:21"}]},{"nativeSrc":"12563:13:21","nodeType":"YulAssignment","src":"12563:13:21","value":{"name":"_base","nativeSrc":"12571:5:21","nodeType":"YulIdentifier","src":"12571:5:21"},"variableNames":[{"name":"base","nativeSrc":"12563:4:21","nodeType":"YulIdentifier","src":"12563:4:21"}]},{"body":{"nativeSrc":"12627:288:21","nodeType":"YulBlock","src":"12627:288:21","statements":[{"body":{"nativeSrc":"12732:22:21","nodeType":"YulBlock","src":"12732:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"12734:16:21","nodeType":"YulIdentifier","src":"12734:16:21"},"nativeSrc":"12734:18:21","nodeType":"YulFunctionCall","src":"12734:18:21"},"nativeSrc":"12734:18:21","nodeType":"YulExpressionStatement","src":"12734:18:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"12647:4:21","nodeType":"YulIdentifier","src":"12647:4:21"},{"arguments":[{"kind":"number","nativeSrc":"12657:66:21","nodeType":"YulLiteral","src":"12657:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base","nativeSrc":"12725:4:21","nodeType":"YulIdentifier","src":"12725:4:21"}],"functionName":{"name":"div","nativeSrc":"12653:3:21","nodeType":"YulIdentifier","src":"12653:3:21"},"nativeSrc":"12653:77:21","nodeType":"YulFunctionCall","src":"12653:77:21"}],"functionName":{"name":"gt","nativeSrc":"12644:2:21","nodeType":"YulIdentifier","src":"12644:2:21"},"nativeSrc":"12644:87:21","nodeType":"YulFunctionCall","src":"12644:87:21"},"nativeSrc":"12641:113:21","nodeType":"YulIf","src":"12641:113:21"},{"body":{"nativeSrc":"12793:29:21","nodeType":"YulBlock","src":"12793:29:21","statements":[{"nativeSrc":"12795:25:21","nodeType":"YulAssignment","src":"12795:25:21","value":{"arguments":[{"name":"power","nativeSrc":"12808:5:21","nodeType":"YulIdentifier","src":"12808:5:21"},{"name":"base","nativeSrc":"12815:4:21","nodeType":"YulIdentifier","src":"12815:4:21"}],"functionName":{"name":"mul","nativeSrc":"12804:3:21","nodeType":"YulIdentifier","src":"12804:3:21"},"nativeSrc":"12804:16:21","nodeType":"YulFunctionCall","src":"12804:16:21"},"variableNames":[{"name":"power","nativeSrc":"12795:5:21","nodeType":"YulIdentifier","src":"12795:5:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12774:8:21","nodeType":"YulIdentifier","src":"12774:8:21"},{"name":"power_1","nativeSrc":"12784:7:21","nodeType":"YulIdentifier","src":"12784:7:21"}],"functionName":{"name":"and","nativeSrc":"12770:3:21","nodeType":"YulIdentifier","src":"12770:3:21"},"nativeSrc":"12770:22:21","nodeType":"YulFunctionCall","src":"12770:22:21"},"nativeSrc":"12767:55:21","nodeType":"YulIf","src":"12767:55:21"},{"nativeSrc":"12835:23:21","nodeType":"YulAssignment","src":"12835:23:21","value":{"arguments":[{"name":"base","nativeSrc":"12847:4:21","nodeType":"YulIdentifier","src":"12847:4:21"},{"name":"base","nativeSrc":"12853:4:21","nodeType":"YulIdentifier","src":"12853:4:21"}],"functionName":{"name":"mul","nativeSrc":"12843:3:21","nodeType":"YulIdentifier","src":"12843:3:21"},"nativeSrc":"12843:15:21","nodeType":"YulFunctionCall","src":"12843:15:21"},"variableNames":[{"name":"base","nativeSrc":"12835:4:21","nodeType":"YulIdentifier","src":"12835:4:21"}]},{"nativeSrc":"12871:34:21","nodeType":"YulAssignment","src":"12871:34:21","value":{"arguments":[{"name":"power_1","nativeSrc":"12887:7:21","nodeType":"YulIdentifier","src":"12887:7:21"},{"name":"exponent","nativeSrc":"12896:8:21","nodeType":"YulIdentifier","src":"12896:8:21"}],"functionName":{"name":"shr","nativeSrc":"12883:3:21","nodeType":"YulIdentifier","src":"12883:3:21"},"nativeSrc":"12883:22:21","nodeType":"YulFunctionCall","src":"12883:22:21"},"variableNames":[{"name":"exponent","nativeSrc":"12871:8:21","nodeType":"YulIdentifier","src":"12871:8:21"}]}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"12596:8:21","nodeType":"YulIdentifier","src":"12596:8:21"},{"name":"power_1","nativeSrc":"12606:7:21","nodeType":"YulIdentifier","src":"12606:7:21"}],"functionName":{"name":"gt","nativeSrc":"12593:2:21","nodeType":"YulIdentifier","src":"12593:2:21"},"nativeSrc":"12593:21:21","nodeType":"YulFunctionCall","src":"12593:21:21"},"nativeSrc":"12585:330:21","nodeType":"YulForLoop","post":{"nativeSrc":"12615:3:21","nodeType":"YulBlock","src":"12615:3:21","statements":[]},"pre":{"nativeSrc":"12589:3:21","nodeType":"YulBlock","src":"12589:3:21","statements":[]},"src":"12585:330:21"}]},"name":"checked_exp_helper","nativeSrc":"12445:476:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nativeSrc":"12473:5:21","nodeType":"YulTypedName","src":"12473:5:21","type":""},{"name":"exponent","nativeSrc":"12480:8:21","nodeType":"YulTypedName","src":"12480:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"12493:5:21","nodeType":"YulTypedName","src":"12493:5:21","type":""},{"name":"base","nativeSrc":"12500:4:21","nodeType":"YulTypedName","src":"12500:4:21","type":""}],"src":"12445:476:21"},{"body":{"nativeSrc":"12985:807:21","nodeType":"YulBlock","src":"12985:807:21","statements":[{"body":{"nativeSrc":"13023:52:21","nodeType":"YulBlock","src":"13023:52:21","statements":[{"nativeSrc":"13037:10:21","nodeType":"YulAssignment","src":"13037:10:21","value":{"kind":"number","nativeSrc":"13046:1:21","nodeType":"YulLiteral","src":"13046:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"13037:5:21","nodeType":"YulIdentifier","src":"13037:5:21"}]},{"nativeSrc":"13060:5:21","nodeType":"YulLeave","src":"13060:5:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"13005:8:21","nodeType":"YulIdentifier","src":"13005:8:21"}],"functionName":{"name":"iszero","nativeSrc":"12998:6:21","nodeType":"YulIdentifier","src":"12998:6:21"},"nativeSrc":"12998:16:21","nodeType":"YulFunctionCall","src":"12998:16:21"},"nativeSrc":"12995:80:21","nodeType":"YulIf","src":"12995:80:21"},{"body":{"nativeSrc":"13108:52:21","nodeType":"YulBlock","src":"13108:52:21","statements":[{"nativeSrc":"13122:10:21","nodeType":"YulAssignment","src":"13122:10:21","value":{"kind":"number","nativeSrc":"13131:1:21","nodeType":"YulLiteral","src":"13131:1:21","type":"","value":"0"},"variableNames":[{"name":"power","nativeSrc":"13122:5:21","nodeType":"YulIdentifier","src":"13122:5:21"}]},{"nativeSrc":"13145:5:21","nodeType":"YulLeave","src":"13145:5:21"}]},"condition":{"arguments":[{"name":"base","nativeSrc":"13094:4:21","nodeType":"YulIdentifier","src":"13094:4:21"}],"functionName":{"name":"iszero","nativeSrc":"13087:6:21","nodeType":"YulIdentifier","src":"13087:6:21"},"nativeSrc":"13087:12:21","nodeType":"YulFunctionCall","src":"13087:12:21"},"nativeSrc":"13084:76:21","nodeType":"YulIf","src":"13084:76:21"},{"cases":[{"body":{"nativeSrc":"13196:52:21","nodeType":"YulBlock","src":"13196:52:21","statements":[{"nativeSrc":"13210:10:21","nodeType":"YulAssignment","src":"13210:10:21","value":{"kind":"number","nativeSrc":"13219:1:21","nodeType":"YulLiteral","src":"13219:1:21","type":"","value":"1"},"variableNames":[{"name":"power","nativeSrc":"13210:5:21","nodeType":"YulIdentifier","src":"13210:5:21"}]},{"nativeSrc":"13233:5:21","nodeType":"YulLeave","src":"13233:5:21"}]},"nativeSrc":"13189:59:21","nodeType":"YulCase","src":"13189:59:21","value":{"kind":"number","nativeSrc":"13194:1:21","nodeType":"YulLiteral","src":"13194:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"13264:123:21","nodeType":"YulBlock","src":"13264:123:21","statements":[{"body":{"nativeSrc":"13299:22:21","nodeType":"YulBlock","src":"13299:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13301:16:21","nodeType":"YulIdentifier","src":"13301:16:21"},"nativeSrc":"13301:18:21","nodeType":"YulFunctionCall","src":"13301:18:21"},"nativeSrc":"13301:18:21","nodeType":"YulExpressionStatement","src":"13301:18:21"}]},"condition":{"arguments":[{"name":"exponent","nativeSrc":"13284:8:21","nodeType":"YulIdentifier","src":"13284:8:21"},{"kind":"number","nativeSrc":"13294:3:21","nodeType":"YulLiteral","src":"13294:3:21","type":"","value":"255"}],"functionName":{"name":"gt","nativeSrc":"13281:2:21","nodeType":"YulIdentifier","src":"13281:2:21"},"nativeSrc":"13281:17:21","nodeType":"YulFunctionCall","src":"13281:17:21"},"nativeSrc":"13278:43:21","nodeType":"YulIf","src":"13278:43:21"},{"nativeSrc":"13334:25:21","nodeType":"YulAssignment","src":"13334:25:21","value":{"arguments":[{"name":"exponent","nativeSrc":"13347:8:21","nodeType":"YulIdentifier","src":"13347:8:21"},{"kind":"number","nativeSrc":"13357:1:21","nodeType":"YulLiteral","src":"13357:1:21","type":"","value":"1"}],"functionName":{"name":"shl","nativeSrc":"13343:3:21","nodeType":"YulIdentifier","src":"13343:3:21"},"nativeSrc":"13343:16:21","nodeType":"YulFunctionCall","src":"13343:16:21"},"variableNames":[{"name":"power","nativeSrc":"13334:5:21","nodeType":"YulIdentifier","src":"13334:5:21"}]},{"nativeSrc":"13372:5:21","nodeType":"YulLeave","src":"13372:5:21"}]},"nativeSrc":"13257:130:21","nodeType":"YulCase","src":"13257:130:21","value":{"kind":"number","nativeSrc":"13262:1:21","nodeType":"YulLiteral","src":"13262:1:21","type":"","value":"2"}}],"expression":{"name":"base","nativeSrc":"13176:4:21","nodeType":"YulIdentifier","src":"13176:4:21"},"nativeSrc":"13169:218:21","nodeType":"YulSwitch","src":"13169:218:21"},{"body":{"nativeSrc":"13485:70:21","nodeType":"YulBlock","src":"13485:70:21","statements":[{"nativeSrc":"13499:28:21","nodeType":"YulAssignment","src":"13499:28:21","value":{"arguments":[{"name":"base","nativeSrc":"13512:4:21","nodeType":"YulIdentifier","src":"13512:4:21"},{"name":"exponent","nativeSrc":"13518:8:21","nodeType":"YulIdentifier","src":"13518:8:21"}],"functionName":{"name":"exp","nativeSrc":"13508:3:21","nodeType":"YulIdentifier","src":"13508:3:21"},"nativeSrc":"13508:19:21","nodeType":"YulFunctionCall","src":"13508:19:21"},"variableNames":[{"name":"power","nativeSrc":"13499:5:21","nodeType":"YulIdentifier","src":"13499:5:21"}]},{"nativeSrc":"13540:5:21","nodeType":"YulLeave","src":"13540:5:21"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nativeSrc":"13409:4:21","nodeType":"YulIdentifier","src":"13409:4:21"},{"kind":"number","nativeSrc":"13415:2:21","nodeType":"YulLiteral","src":"13415:2:21","type":"","value":"11"}],"functionName":{"name":"lt","nativeSrc":"13406:2:21","nodeType":"YulIdentifier","src":"13406:2:21"},"nativeSrc":"13406:12:21","nodeType":"YulFunctionCall","src":"13406:12:21"},{"arguments":[{"name":"exponent","nativeSrc":"13423:8:21","nodeType":"YulIdentifier","src":"13423:8:21"},{"kind":"number","nativeSrc":"13433:2:21","nodeType":"YulLiteral","src":"13433:2:21","type":"","value":"78"}],"functionName":{"name":"lt","nativeSrc":"13420:2:21","nodeType":"YulIdentifier","src":"13420:2:21"},"nativeSrc":"13420:16:21","nodeType":"YulFunctionCall","src":"13420:16:21"}],"functionName":{"name":"and","nativeSrc":"13402:3:21","nodeType":"YulIdentifier","src":"13402:3:21"},"nativeSrc":"13402:35:21","nodeType":"YulFunctionCall","src":"13402:35:21"},{"arguments":[{"arguments":[{"name":"base","nativeSrc":"13446:4:21","nodeType":"YulIdentifier","src":"13446:4:21"},{"kind":"number","nativeSrc":"13452:3:21","nodeType":"YulLiteral","src":"13452:3:21","type":"","value":"307"}],"functionName":{"name":"lt","nativeSrc":"13443:2:21","nodeType":"YulIdentifier","src":"13443:2:21"},"nativeSrc":"13443:13:21","nodeType":"YulFunctionCall","src":"13443:13:21"},{"arguments":[{"name":"exponent","nativeSrc":"13461:8:21","nodeType":"YulIdentifier","src":"13461:8:21"},{"kind":"number","nativeSrc":"13471:2:21","nodeType":"YulLiteral","src":"13471:2:21","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"13458:2:21","nodeType":"YulIdentifier","src":"13458:2:21"},"nativeSrc":"13458:16:21","nodeType":"YulFunctionCall","src":"13458:16:21"}],"functionName":{"name":"and","nativeSrc":"13439:3:21","nodeType":"YulIdentifier","src":"13439:3:21"},"nativeSrc":"13439:36:21","nodeType":"YulFunctionCall","src":"13439:36:21"}],"functionName":{"name":"or","nativeSrc":"13399:2:21","nodeType":"YulIdentifier","src":"13399:2:21"},"nativeSrc":"13399:77:21","nodeType":"YulFunctionCall","src":"13399:77:21"},"nativeSrc":"13396:159:21","nodeType":"YulIf","src":"13396:159:21"},{"nativeSrc":"13564:57:21","nodeType":"YulVariableDeclaration","src":"13564:57:21","value":{"arguments":[{"name":"base","nativeSrc":"13606:4:21","nodeType":"YulIdentifier","src":"13606:4:21"},{"name":"exponent","nativeSrc":"13612:8:21","nodeType":"YulIdentifier","src":"13612:8:21"}],"functionName":{"name":"checked_exp_helper","nativeSrc":"13587:18:21","nodeType":"YulIdentifier","src":"13587:18:21"},"nativeSrc":"13587:34:21","nodeType":"YulFunctionCall","src":"13587:34:21"},"variables":[{"name":"power_1","nativeSrc":"13568:7:21","nodeType":"YulTypedName","src":"13568:7:21","type":""},{"name":"base_1","nativeSrc":"13577:6:21","nodeType":"YulTypedName","src":"13577:6:21","type":""}]},{"body":{"nativeSrc":"13726:22:21","nodeType":"YulBlock","src":"13726:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"13728:16:21","nodeType":"YulIdentifier","src":"13728:16:21"},"nativeSrc":"13728:18:21","nodeType":"YulFunctionCall","src":"13728:18:21"},"nativeSrc":"13728:18:21","nodeType":"YulExpressionStatement","src":"13728:18:21"}]},"condition":{"arguments":[{"name":"power_1","nativeSrc":"13636:7:21","nodeType":"YulIdentifier","src":"13636:7:21"},{"arguments":[{"kind":"number","nativeSrc":"13649:66:21","nodeType":"YulLiteral","src":"13649:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"base_1","nativeSrc":"13717:6:21","nodeType":"YulIdentifier","src":"13717:6:21"}],"functionName":{"name":"div","nativeSrc":"13645:3:21","nodeType":"YulIdentifier","src":"13645:3:21"},"nativeSrc":"13645:79:21","nodeType":"YulFunctionCall","src":"13645:79:21"}],"functionName":{"name":"gt","nativeSrc":"13633:2:21","nodeType":"YulIdentifier","src":"13633:2:21"},"nativeSrc":"13633:92:21","nodeType":"YulFunctionCall","src":"13633:92:21"},"nativeSrc":"13630:118:21","nodeType":"YulIf","src":"13630:118:21"},{"nativeSrc":"13757:29:21","nodeType":"YulAssignment","src":"13757:29:21","value":{"arguments":[{"name":"power_1","nativeSrc":"13770:7:21","nodeType":"YulIdentifier","src":"13770:7:21"},{"name":"base_1","nativeSrc":"13779:6:21","nodeType":"YulIdentifier","src":"13779:6:21"}],"functionName":{"name":"mul","nativeSrc":"13766:3:21","nodeType":"YulIdentifier","src":"13766:3:21"},"nativeSrc":"13766:20:21","nodeType":"YulFunctionCall","src":"13766:20:21"},"variableNames":[{"name":"power","nativeSrc":"13757:5:21","nodeType":"YulIdentifier","src":"13757:5:21"}]}]},"name":"checked_exp_unsigned","nativeSrc":"12926:866:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"12956:4:21","nodeType":"YulTypedName","src":"12956:4:21","type":""},{"name":"exponent","nativeSrc":"12962:8:21","nodeType":"YulTypedName","src":"12962:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"12975:5:21","nodeType":"YulTypedName","src":"12975:5:21","type":""}],"src":"12926:866:21"},{"body":{"nativeSrc":"13865:72:21","nodeType":"YulBlock","src":"13865:72:21","statements":[{"nativeSrc":"13875:56:21","nodeType":"YulAssignment","src":"13875:56:21","value":{"arguments":[{"name":"base","nativeSrc":"13905:4:21","nodeType":"YulIdentifier","src":"13905:4:21"},{"arguments":[{"name":"exponent","nativeSrc":"13915:8:21","nodeType":"YulIdentifier","src":"13915:8:21"},{"kind":"number","nativeSrc":"13925:4:21","nodeType":"YulLiteral","src":"13925:4:21","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"13911:3:21","nodeType":"YulIdentifier","src":"13911:3:21"},"nativeSrc":"13911:19:21","nodeType":"YulFunctionCall","src":"13911:19:21"}],"functionName":{"name":"checked_exp_unsigned","nativeSrc":"13884:20:21","nodeType":"YulIdentifier","src":"13884:20:21"},"nativeSrc":"13884:47:21","nodeType":"YulFunctionCall","src":"13884:47:21"},"variableNames":[{"name":"power","nativeSrc":"13875:5:21","nodeType":"YulIdentifier","src":"13875:5:21"}]}]},"name":"checked_exp_t_uint256_t_uint8","nativeSrc":"13797:140:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nativeSrc":"13836:4:21","nodeType":"YulTypedName","src":"13836:4:21","type":""},{"name":"exponent","nativeSrc":"13842:8:21","nodeType":"YulTypedName","src":"13842:8:21","type":""}],"returnVariables":[{"name":"power","nativeSrc":"13855:5:21","nodeType":"YulTypedName","src":"13855:5:21","type":""}],"src":"13797:140:21"},{"body":{"nativeSrc":"14099:211:21","nodeType":"YulBlock","src":"14099:211:21","statements":[{"nativeSrc":"14109:26:21","nodeType":"YulAssignment","src":"14109:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14121:9:21","nodeType":"YulIdentifier","src":"14121:9:21"},{"kind":"number","nativeSrc":"14132:2:21","nodeType":"YulLiteral","src":"14132:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14117:3:21","nodeType":"YulIdentifier","src":"14117:3:21"},"nativeSrc":"14117:18:21","nodeType":"YulFunctionCall","src":"14117:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14109:4:21","nodeType":"YulIdentifier","src":"14109:4:21"}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14151:9:21","nodeType":"YulIdentifier","src":"14151:9:21"},{"arguments":[{"name":"value0","nativeSrc":"14166:6:21","nodeType":"YulIdentifier","src":"14166:6:21"},{"kind":"number","nativeSrc":"14174:42:21","nodeType":"YulLiteral","src":"14174:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"14162:3:21","nodeType":"YulIdentifier","src":"14162:3:21"},"nativeSrc":"14162:55:21","nodeType":"YulFunctionCall","src":"14162:55:21"}],"functionName":{"name":"mstore","nativeSrc":"14144:6:21","nodeType":"YulIdentifier","src":"14144:6:21"},"nativeSrc":"14144:74:21","nodeType":"YulFunctionCall","src":"14144:74:21"},"nativeSrc":"14144:74:21","nodeType":"YulExpressionStatement","src":"14144:74:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14238:9:21","nodeType":"YulIdentifier","src":"14238:9:21"},{"kind":"number","nativeSrc":"14249:2:21","nodeType":"YulLiteral","src":"14249:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14234:3:21","nodeType":"YulIdentifier","src":"14234:3:21"},"nativeSrc":"14234:18:21","nodeType":"YulFunctionCall","src":"14234:18:21"},{"name":"value1","nativeSrc":"14254:6:21","nodeType":"YulIdentifier","src":"14254:6:21"}],"functionName":{"name":"mstore","nativeSrc":"14227:6:21","nodeType":"YulIdentifier","src":"14227:6:21"},"nativeSrc":"14227:34:21","nodeType":"YulFunctionCall","src":"14227:34:21"},"nativeSrc":"14227:34:21","nodeType":"YulExpressionStatement","src":"14227:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14281:9:21","nodeType":"YulIdentifier","src":"14281:9:21"},{"kind":"number","nativeSrc":"14292:2:21","nodeType":"YulLiteral","src":"14292:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14277:3:21","nodeType":"YulIdentifier","src":"14277:3:21"},"nativeSrc":"14277:18:21","nodeType":"YulFunctionCall","src":"14277:18:21"},{"name":"value2","nativeSrc":"14297:6:21","nodeType":"YulIdentifier","src":"14297:6:21"}],"functionName":{"name":"mstore","nativeSrc":"14270:6:21","nodeType":"YulIdentifier","src":"14270:6:21"},"nativeSrc":"14270:34:21","nodeType":"YulFunctionCall","src":"14270:34:21"},"nativeSrc":"14270:34:21","nodeType":"YulExpressionStatement","src":"14270:34:21"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"13942:368:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14052:9:21","nodeType":"YulTypedName","src":"14052:9:21","type":""},{"name":"value2","nativeSrc":"14063:6:21","nodeType":"YulTypedName","src":"14063:6:21","type":""},{"name":"value1","nativeSrc":"14071:6:21","nodeType":"YulTypedName","src":"14071:6:21","type":""},{"name":"value0","nativeSrc":"14079:6:21","nodeType":"YulTypedName","src":"14079:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14090:4:21","nodeType":"YulTypedName","src":"14090:4:21","type":""}],"src":"13942:368:21"},{"body":{"nativeSrc":"14396:103:21","nodeType":"YulBlock","src":"14396:103:21","statements":[{"body":{"nativeSrc":"14442:16:21","nodeType":"YulBlock","src":"14442:16:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14451:1:21","nodeType":"YulLiteral","src":"14451:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"14454:1:21","nodeType":"YulLiteral","src":"14454:1:21","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14444:6:21","nodeType":"YulIdentifier","src":"14444:6:21"},"nativeSrc":"14444:12:21","nodeType":"YulFunctionCall","src":"14444:12:21"},"nativeSrc":"14444:12:21","nodeType":"YulExpressionStatement","src":"14444:12:21"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14417:7:21","nodeType":"YulIdentifier","src":"14417:7:21"},{"name":"headStart","nativeSrc":"14426:9:21","nodeType":"YulIdentifier","src":"14426:9:21"}],"functionName":{"name":"sub","nativeSrc":"14413:3:21","nodeType":"YulIdentifier","src":"14413:3:21"},"nativeSrc":"14413:23:21","nodeType":"YulFunctionCall","src":"14413:23:21"},{"kind":"number","nativeSrc":"14438:2:21","nodeType":"YulLiteral","src":"14438:2:21","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"14409:3:21","nodeType":"YulIdentifier","src":"14409:3:21"},"nativeSrc":"14409:32:21","nodeType":"YulFunctionCall","src":"14409:32:21"},"nativeSrc":"14406:52:21","nodeType":"YulIf","src":"14406:52:21"},{"nativeSrc":"14467:26:21","nodeType":"YulAssignment","src":"14467:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14483:9:21","nodeType":"YulIdentifier","src":"14483:9:21"}],"functionName":{"name":"mload","nativeSrc":"14477:5:21","nodeType":"YulIdentifier","src":"14477:5:21"},"nativeSrc":"14477:16:21","nodeType":"YulFunctionCall","src":"14477:16:21"},"variableNames":[{"name":"value0","nativeSrc":"14467:6:21","nodeType":"YulIdentifier","src":"14467:6:21"}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"14315:184:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14362:9:21","nodeType":"YulTypedName","src":"14362:9:21","type":""},{"name":"dataEnd","nativeSrc":"14373:7:21","nodeType":"YulTypedName","src":"14373:7:21","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14385:6:21","nodeType":"YulTypedName","src":"14385:6:21","type":""}],"src":"14315:184:21"},{"body":{"nativeSrc":"14678:171:21","nodeType":"YulBlock","src":"14678:171:21","statements":[{"expression":{"arguments":[{"name":"headStart","nativeSrc":"14695:9:21","nodeType":"YulIdentifier","src":"14695:9:21"},{"kind":"number","nativeSrc":"14706:2:21","nodeType":"YulLiteral","src":"14706:2:21","type":"","value":"32"}],"functionName":{"name":"mstore","nativeSrc":"14688:6:21","nodeType":"YulIdentifier","src":"14688:6:21"},"nativeSrc":"14688:21:21","nodeType":"YulFunctionCall","src":"14688:21:21"},"nativeSrc":"14688:21:21","nodeType":"YulExpressionStatement","src":"14688:21:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14729:9:21","nodeType":"YulIdentifier","src":"14729:9:21"},{"kind":"number","nativeSrc":"14740:2:21","nodeType":"YulLiteral","src":"14740:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14725:3:21","nodeType":"YulIdentifier","src":"14725:3:21"},"nativeSrc":"14725:18:21","nodeType":"YulFunctionCall","src":"14725:18:21"},{"kind":"number","nativeSrc":"14745:2:21","nodeType":"YulLiteral","src":"14745:2:21","type":"","value":"21"}],"functionName":{"name":"mstore","nativeSrc":"14718:6:21","nodeType":"YulIdentifier","src":"14718:6:21"},"nativeSrc":"14718:30:21","nodeType":"YulFunctionCall","src":"14718:30:21"},"nativeSrc":"14718:30:21","nodeType":"YulExpressionStatement","src":"14718:30:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14768:9:21","nodeType":"YulIdentifier","src":"14768:9:21"},{"kind":"number","nativeSrc":"14779:2:21","nodeType":"YulLiteral","src":"14779:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14764:3:21","nodeType":"YulIdentifier","src":"14764:3:21"},"nativeSrc":"14764:18:21","nodeType":"YulFunctionCall","src":"14764:18:21"},{"hexValue":"4e6f20696e74657265737420617661696c61626c65","kind":"string","nativeSrc":"14784:23:21","nodeType":"YulLiteral","src":"14784:23:21","type":"","value":"No interest available"}],"functionName":{"name":"mstore","nativeSrc":"14757:6:21","nodeType":"YulIdentifier","src":"14757:6:21"},"nativeSrc":"14757:51:21","nodeType":"YulFunctionCall","src":"14757:51:21"},"nativeSrc":"14757:51:21","nodeType":"YulExpressionStatement","src":"14757:51:21"},{"nativeSrc":"14817:26:21","nodeType":"YulAssignment","src":"14817:26:21","value":{"arguments":[{"name":"headStart","nativeSrc":"14829:9:21","nodeType":"YulIdentifier","src":"14829:9:21"},{"kind":"number","nativeSrc":"14840:2:21","nodeType":"YulLiteral","src":"14840:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"14825:3:21","nodeType":"YulIdentifier","src":"14825:3:21"},"nativeSrc":"14825:18:21","nodeType":"YulFunctionCall","src":"14825:18:21"},"variableNames":[{"name":"tail","nativeSrc":"14817:4:21","nodeType":"YulIdentifier","src":"14817:4:21"}]}]},"name":"abi_encode_tuple_t_stringliteral_6726a167108c8ad6de2228a073643036d59da7cba84af5bdb159063458980d8c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"14504:345:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14655:9:21","nodeType":"YulTypedName","src":"14655:9:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14669:4:21","nodeType":"YulTypedName","src":"14669:4:21","type":""}],"src":"14504:345:21"},{"body":{"nativeSrc":"15039:294:21","nodeType":"YulBlock","src":"15039:294:21","statements":[{"nativeSrc":"15049:27:21","nodeType":"YulAssignment","src":"15049:27:21","value":{"arguments":[{"name":"headStart","nativeSrc":"15061:9:21","nodeType":"YulIdentifier","src":"15061:9:21"},{"kind":"number","nativeSrc":"15072:3:21","nodeType":"YulLiteral","src":"15072:3:21","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15057:3:21","nodeType":"YulIdentifier","src":"15057:3:21"},"nativeSrc":"15057:19:21","nodeType":"YulFunctionCall","src":"15057:19:21"},"variableNames":[{"name":"tail","nativeSrc":"15049:4:21","nodeType":"YulIdentifier","src":"15049:4:21"}]},{"nativeSrc":"15085:52:21","nodeType":"YulVariableDeclaration","src":"15085:52:21","value":{"kind":"number","nativeSrc":"15095:42:21","nodeType":"YulLiteral","src":"15095:42:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nativeSrc":"15089:2:21","nodeType":"YulTypedName","src":"15089:2:21","type":""}]},{"expression":{"arguments":[{"name":"headStart","nativeSrc":"15153:9:21","nodeType":"YulIdentifier","src":"15153:9:21"},{"arguments":[{"name":"value0","nativeSrc":"15168:6:21","nodeType":"YulIdentifier","src":"15168:6:21"},{"name":"_1","nativeSrc":"15176:2:21","nodeType":"YulIdentifier","src":"15176:2:21"}],"functionName":{"name":"and","nativeSrc":"15164:3:21","nodeType":"YulIdentifier","src":"15164:3:21"},"nativeSrc":"15164:15:21","nodeType":"YulFunctionCall","src":"15164:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15146:6:21","nodeType":"YulIdentifier","src":"15146:6:21"},"nativeSrc":"15146:34:21","nodeType":"YulFunctionCall","src":"15146:34:21"},"nativeSrc":"15146:34:21","nodeType":"YulExpressionStatement","src":"15146:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15200:9:21","nodeType":"YulIdentifier","src":"15200:9:21"},{"kind":"number","nativeSrc":"15211:2:21","nodeType":"YulLiteral","src":"15211:2:21","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15196:3:21","nodeType":"YulIdentifier","src":"15196:3:21"},"nativeSrc":"15196:18:21","nodeType":"YulFunctionCall","src":"15196:18:21"},{"arguments":[{"name":"value1","nativeSrc":"15220:6:21","nodeType":"YulIdentifier","src":"15220:6:21"},{"name":"_1","nativeSrc":"15228:2:21","nodeType":"YulIdentifier","src":"15228:2:21"}],"functionName":{"name":"and","nativeSrc":"15216:3:21","nodeType":"YulIdentifier","src":"15216:3:21"},"nativeSrc":"15216:15:21","nodeType":"YulFunctionCall","src":"15216:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15189:6:21","nodeType":"YulIdentifier","src":"15189:6:21"},"nativeSrc":"15189:43:21","nodeType":"YulFunctionCall","src":"15189:43:21"},"nativeSrc":"15189:43:21","nodeType":"YulExpressionStatement","src":"15189:43:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15252:9:21","nodeType":"YulIdentifier","src":"15252:9:21"},{"kind":"number","nativeSrc":"15263:2:21","nodeType":"YulLiteral","src":"15263:2:21","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15248:3:21","nodeType":"YulIdentifier","src":"15248:3:21"},"nativeSrc":"15248:18:21","nodeType":"YulFunctionCall","src":"15248:18:21"},{"name":"value2","nativeSrc":"15268:6:21","nodeType":"YulIdentifier","src":"15268:6:21"}],"functionName":{"name":"mstore","nativeSrc":"15241:6:21","nodeType":"YulIdentifier","src":"15241:6:21"},"nativeSrc":"15241:34:21","nodeType":"YulFunctionCall","src":"15241:34:21"},"nativeSrc":"15241:34:21","nodeType":"YulExpressionStatement","src":"15241:34:21"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15295:9:21","nodeType":"YulIdentifier","src":"15295:9:21"},{"kind":"number","nativeSrc":"15306:2:21","nodeType":"YulLiteral","src":"15306:2:21","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15291:3:21","nodeType":"YulIdentifier","src":"15291:3:21"},"nativeSrc":"15291:18:21","nodeType":"YulFunctionCall","src":"15291:18:21"},{"arguments":[{"name":"value3","nativeSrc":"15315:6:21","nodeType":"YulIdentifier","src":"15315:6:21"},{"name":"_1","nativeSrc":"15323:2:21","nodeType":"YulIdentifier","src":"15323:2:21"}],"functionName":{"name":"and","nativeSrc":"15311:3:21","nodeType":"YulIdentifier","src":"15311:3:21"},"nativeSrc":"15311:15:21","nodeType":"YulFunctionCall","src":"15311:15:21"}],"functionName":{"name":"mstore","nativeSrc":"15284:6:21","nodeType":"YulIdentifier","src":"15284:6:21"},"nativeSrc":"15284:43:21","nodeType":"YulFunctionCall","src":"15284:43:21"},"nativeSrc":"15284:43:21","nodeType":"YulExpressionStatement","src":"15284:43:21"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"14854:479:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14984:9:21","nodeType":"YulTypedName","src":"14984:9:21","type":""},{"name":"value3","nativeSrc":"14995:6:21","nodeType":"YulTypedName","src":"14995:6:21","type":""},{"name":"value2","nativeSrc":"15003:6:21","nodeType":"YulTypedName","src":"15003:6:21","type":""},{"name":"value1","nativeSrc":"15011:6:21","nodeType":"YulTypedName","src":"15011:6:21","type":""},{"name":"value0","nativeSrc":"15019:6:21","nodeType":"YulTypedName","src":"15019:6:21","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15030:4:21","nodeType":"YulTypedName","src":"15030:4:21","type":""}],"src":"14854:479:21"},{"body":{"nativeSrc":"15394:65:21","nodeType":"YulBlock","src":"15394:65:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15411:1:21","nodeType":"YulLiteral","src":"15411:1:21","type":"","value":"0"},{"name":"ptr","nativeSrc":"15414:3:21","nodeType":"YulIdentifier","src":"15414:3:21"}],"functionName":{"name":"mstore","nativeSrc":"15404:6:21","nodeType":"YulIdentifier","src":"15404:6:21"},"nativeSrc":"15404:14:21","nodeType":"YulFunctionCall","src":"15404:14:21"},"nativeSrc":"15404:14:21","nodeType":"YulExpressionStatement","src":"15404:14:21"},{"nativeSrc":"15427:26:21","nodeType":"YulAssignment","src":"15427:26:21","value":{"arguments":[{"kind":"number","nativeSrc":"15445:1:21","nodeType":"YulLiteral","src":"15445:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"15448:4:21","nodeType":"YulLiteral","src":"15448:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"15435:9:21","nodeType":"YulIdentifier","src":"15435:9:21"},"nativeSrc":"15435:18:21","nodeType":"YulFunctionCall","src":"15435:18:21"},"variableNames":[{"name":"data","nativeSrc":"15427:4:21","nodeType":"YulIdentifier","src":"15427:4:21"}]}]},"name":"array_dataslot_string_storage","nativeSrc":"15338:121:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"15377:3:21","nodeType":"YulTypedName","src":"15377:3:21","type":""}],"returnVariables":[{"name":"data","nativeSrc":"15385:4:21","nodeType":"YulTypedName","src":"15385:4:21","type":""}],"src":"15338:121:21"},{"body":{"nativeSrc":"15545:437:21","nodeType":"YulBlock","src":"15545:437:21","statements":[{"body":{"nativeSrc":"15578:398:21","nodeType":"YulBlock","src":"15578:398:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15599:1:21","nodeType":"YulLiteral","src":"15599:1:21","type":"","value":"0"},{"name":"array","nativeSrc":"15602:5:21","nodeType":"YulIdentifier","src":"15602:5:21"}],"functionName":{"name":"mstore","nativeSrc":"15592:6:21","nodeType":"YulIdentifier","src":"15592:6:21"},"nativeSrc":"15592:16:21","nodeType":"YulFunctionCall","src":"15592:16:21"},"nativeSrc":"15592:16:21","nodeType":"YulExpressionStatement","src":"15592:16:21"},{"nativeSrc":"15621:30:21","nodeType":"YulVariableDeclaration","src":"15621:30:21","value":{"arguments":[{"kind":"number","nativeSrc":"15643:1:21","nodeType":"YulLiteral","src":"15643:1:21","type":"","value":"0"},{"kind":"number","nativeSrc":"15646:4:21","nodeType":"YulLiteral","src":"15646:4:21","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"15633:9:21","nodeType":"YulIdentifier","src":"15633:9:21"},"nativeSrc":"15633:18:21","nodeType":"YulFunctionCall","src":"15633:18:21"},"variables":[{"name":"data","nativeSrc":"15625:4:21","nodeType":"YulTypedName","src":"15625:4:21","type":""}]},{"nativeSrc":"15664:57:21","nodeType":"YulVariableDeclaration","src":"15664:57:21","value":{"arguments":[{"name":"data","nativeSrc":"15687:4:21","nodeType":"YulIdentifier","src":"15687:4:21"},{"arguments":[{"kind":"number","nativeSrc":"15697:1:21","nodeType":"YulLiteral","src":"15697:1:21","type":"","value":"5"},{"arguments":[{"name":"startIndex","nativeSrc":"15704:10:21","nodeType":"YulIdentifier","src":"15704:10:21"},{"kind":"number","nativeSrc":"15716:2:21","nodeType":"YulLiteral","src":"15716:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"15700:3:21","nodeType":"YulIdentifier","src":"15700:3:21"},"nativeSrc":"15700:19:21","nodeType":"YulFunctionCall","src":"15700:19:21"}],"functionName":{"name":"shr","nativeSrc":"15693:3:21","nodeType":"YulIdentifier","src":"15693:3:21"},"nativeSrc":"15693:27:21","nodeType":"YulFunctionCall","src":"15693:27:21"}],"functionName":{"name":"add","nativeSrc":"15683:3:21","nodeType":"YulIdentifier","src":"15683:3:21"},"nativeSrc":"15683:38:21","nodeType":"YulFunctionCall","src":"15683:38:21"},"variables":[{"name":"deleteStart","nativeSrc":"15668:11:21","nodeType":"YulTypedName","src":"15668:11:21","type":""}]},{"body":{"nativeSrc":"15758:23:21","nodeType":"YulBlock","src":"15758:23:21","statements":[{"nativeSrc":"15760:19:21","nodeType":"YulAssignment","src":"15760:19:21","value":{"name":"data","nativeSrc":"15775:4:21","nodeType":"YulIdentifier","src":"15775:4:21"},"variableNames":[{"name":"deleteStart","nativeSrc":"15760:11:21","nodeType":"YulIdentifier","src":"15760:11:21"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"15740:10:21","nodeType":"YulIdentifier","src":"15740:10:21"},{"kind":"number","nativeSrc":"15752:4:21","nodeType":"YulLiteral","src":"15752:4:21","type":"","value":"0x20"}],"functionName":{"name":"lt","nativeSrc":"15737:2:21","nodeType":"YulIdentifier","src":"15737:2:21"},"nativeSrc":"15737:20:21","nodeType":"YulFunctionCall","src":"15737:20:21"},"nativeSrc":"15734:47:21","nodeType":"YulIf","src":"15734:47:21"},{"nativeSrc":"15794:41:21","nodeType":"YulVariableDeclaration","src":"15794:41:21","value":{"arguments":[{"name":"data","nativeSrc":"15808:4:21","nodeType":"YulIdentifier","src":"15808:4:21"},{"arguments":[{"kind":"number","nativeSrc":"15818:1:21","nodeType":"YulLiteral","src":"15818:1:21","type":"","value":"5"},{"arguments":[{"name":"len","nativeSrc":"15825:3:21","nodeType":"YulIdentifier","src":"15825:3:21"},{"kind":"number","nativeSrc":"15830:2:21","nodeType":"YulLiteral","src":"15830:2:21","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"15821:3:21","nodeType":"YulIdentifier","src":"15821:3:21"},"nativeSrc":"15821:12:21","nodeType":"YulFunctionCall","src":"15821:12:21"}],"functionName":{"name":"shr","nativeSrc":"15814:3:21","nodeType":"YulIdentifier","src":"15814:3:21"},"nativeSrc":"15814:20:21","nodeType":"YulFunctionCall","src":"15814:20:21"}],"functionName":{"name":"add","nativeSrc":"15804:3:21","nodeType":"YulIdentifier","src":"15804:3:21"},"nativeSrc":"15804:31:21","nodeType":"YulFunctionCall","src":"15804:31:21"},"variables":[{"name":"_1","nativeSrc":"15798:2:21","nodeType":"YulTypedName","src":"15798:2:21","type":""}]},{"nativeSrc":"15848:24:21","nodeType":"YulVariableDeclaration","src":"15848:24:21","value":{"name":"deleteStart","nativeSrc":"15861:11:21","nodeType":"YulIdentifier","src":"15861:11:21"},"variables":[{"name":"start","nativeSrc":"15852:5:21","nodeType":"YulTypedName","src":"15852:5:21","type":""}]},{"body":{"nativeSrc":"15946:20:21","nodeType":"YulBlock","src":"15946:20:21","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"15955:5:21","nodeType":"YulIdentifier","src":"15955:5:21"},{"kind":"number","nativeSrc":"15962:1:21","nodeType":"YulLiteral","src":"15962:1:21","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"15948:6:21","nodeType":"YulIdentifier","src":"15948:6:21"},"nativeSrc":"15948:16:21","nodeType":"YulFunctionCall","src":"15948:16:21"},"nativeSrc":"15948:16:21","nodeType":"YulExpressionStatement","src":"15948:16:21"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"15896:5:21","nodeType":"YulIdentifier","src":"15896:5:21"},{"name":"_1","nativeSrc":"15903:2:21","nodeType":"YulIdentifier","src":"15903:2:21"}],"functionName":{"name":"lt","nativeSrc":"15893:2:21","nodeType":"YulIdentifier","src":"15893:2:21"},"nativeSrc":"15893:13:21","nodeType":"YulFunctionCall","src":"15893:13:21"},"nativeSrc":"15885:81:21","nodeType":"YulForLoop","post":{"nativeSrc":"15907:26:21","nodeType":"YulBlock","src":"15907:26:21","statements":[{"nativeSrc":"15909:22:21","nodeType":"YulAssignment","src":"15909:22:21","value":{"arguments":[{"name":"start","nativeSrc":"15922:5:21","nodeType":"YulIdentifier","src":"15922:5:21"},{"kind":"number","nativeSrc":"15929:1:21","nodeType":"YulLiteral","src":"15929:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"15918:3:21","nodeType":"YulIdentifier","src":"15918:3:21"},"nativeSrc":"15918:13:21","nodeType":"YulFunctionCall","src":"15918:13:21"},"variableNames":[{"name":"start","nativeSrc":"15909:5:21","nodeType":"YulIdentifier","src":"15909:5:21"}]}]},"pre":{"nativeSrc":"15889:3:21","nodeType":"YulBlock","src":"15889:3:21","statements":[]},"src":"15885:81:21"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"15561:3:21","nodeType":"YulIdentifier","src":"15561:3:21"},{"kind":"number","nativeSrc":"15566:2:21","nodeType":"YulLiteral","src":"15566:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"15558:2:21","nodeType":"YulIdentifier","src":"15558:2:21"},"nativeSrc":"15558:11:21","nodeType":"YulFunctionCall","src":"15558:11:21"},"nativeSrc":"15555:421:21","nodeType":"YulIf","src":"15555:421:21"}]},"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"15464:518:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"15517:5:21","nodeType":"YulTypedName","src":"15517:5:21","type":""},{"name":"len","nativeSrc":"15524:3:21","nodeType":"YulTypedName","src":"15524:3:21","type":""},{"name":"startIndex","nativeSrc":"15529:10:21","nodeType":"YulTypedName","src":"15529:10:21","type":""}],"src":"15464:518:21"},{"body":{"nativeSrc":"16072:141:21","nodeType":"YulBlock","src":"16072:141:21","statements":[{"nativeSrc":"16082:125:21","nodeType":"YulAssignment","src":"16082:125:21","value":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"16097:4:21","nodeType":"YulIdentifier","src":"16097:4:21"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"16115:1:21","nodeType":"YulLiteral","src":"16115:1:21","type":"","value":"3"},{"name":"len","nativeSrc":"16118:3:21","nodeType":"YulIdentifier","src":"16118:3:21"}],"functionName":{"name":"shl","nativeSrc":"16111:3:21","nodeType":"YulIdentifier","src":"16111:3:21"},"nativeSrc":"16111:11:21","nodeType":"YulFunctionCall","src":"16111:11:21"},{"kind":"number","nativeSrc":"16124:66:21","nodeType":"YulLiteral","src":"16124:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"16107:3:21","nodeType":"YulIdentifier","src":"16107:3:21"},"nativeSrc":"16107:84:21","nodeType":"YulFunctionCall","src":"16107:84:21"}],"functionName":{"name":"not","nativeSrc":"16103:3:21","nodeType":"YulIdentifier","src":"16103:3:21"},"nativeSrc":"16103:89:21","nodeType":"YulFunctionCall","src":"16103:89:21"}],"functionName":{"name":"and","nativeSrc":"16093:3:21","nodeType":"YulIdentifier","src":"16093:3:21"},"nativeSrc":"16093:100:21","nodeType":"YulFunctionCall","src":"16093:100:21"},{"arguments":[{"kind":"number","nativeSrc":"16199:1:21","nodeType":"YulLiteral","src":"16199:1:21","type":"","value":"1"},{"name":"len","nativeSrc":"16202:3:21","nodeType":"YulIdentifier","src":"16202:3:21"}],"functionName":{"name":"shl","nativeSrc":"16195:3:21","nodeType":"YulIdentifier","src":"16195:3:21"},"nativeSrc":"16195:11:21","nodeType":"YulFunctionCall","src":"16195:11:21"}],"functionName":{"name":"or","nativeSrc":"16090:2:21","nodeType":"YulIdentifier","src":"16090:2:21"},"nativeSrc":"16090:117:21","nodeType":"YulFunctionCall","src":"16090:117:21"},"variableNames":[{"name":"used","nativeSrc":"16082:4:21","nodeType":"YulIdentifier","src":"16082:4:21"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"15987:226:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"16049:4:21","nodeType":"YulTypedName","src":"16049:4:21","type":""},{"name":"len","nativeSrc":"16055:3:21","nodeType":"YulTypedName","src":"16055:3:21","type":""}],"returnVariables":[{"name":"used","nativeSrc":"16063:4:21","nodeType":"YulTypedName","src":"16063:4:21","type":""}],"src":"15987:226:21"},{"body":{"nativeSrc":"16314:1368:21","nodeType":"YulBlock","src":"16314:1368:21","statements":[{"nativeSrc":"16324:24:21","nodeType":"YulVariableDeclaration","src":"16324:24:21","value":{"arguments":[{"name":"src","nativeSrc":"16344:3:21","nodeType":"YulIdentifier","src":"16344:3:21"}],"functionName":{"name":"mload","nativeSrc":"16338:5:21","nodeType":"YulIdentifier","src":"16338:5:21"},"nativeSrc":"16338:10:21","nodeType":"YulFunctionCall","src":"16338:10:21"},"variables":[{"name":"newLen","nativeSrc":"16328:6:21","nodeType":"YulTypedName","src":"16328:6:21","type":""}]},{"body":{"nativeSrc":"16391:22:21","nodeType":"YulBlock","src":"16391:22:21","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"16393:16:21","nodeType":"YulIdentifier","src":"16393:16:21"},"nativeSrc":"16393:18:21","nodeType":"YulFunctionCall","src":"16393:18:21"},"nativeSrc":"16393:18:21","nodeType":"YulExpressionStatement","src":"16393:18:21"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"16363:6:21","nodeType":"YulIdentifier","src":"16363:6:21"},{"kind":"number","nativeSrc":"16371:18:21","nodeType":"YulLiteral","src":"16371:18:21","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"16360:2:21","nodeType":"YulIdentifier","src":"16360:2:21"},"nativeSrc":"16360:30:21","nodeType":"YulFunctionCall","src":"16360:30:21"},"nativeSrc":"16357:56:21","nodeType":"YulIf","src":"16357:56:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"16466:4:21","nodeType":"YulIdentifier","src":"16466:4:21"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"16504:4:21","nodeType":"YulIdentifier","src":"16504:4:21"}],"functionName":{"name":"sload","nativeSrc":"16498:5:21","nodeType":"YulIdentifier","src":"16498:5:21"},"nativeSrc":"16498:11:21","nodeType":"YulFunctionCall","src":"16498:11:21"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"16472:25:21","nodeType":"YulIdentifier","src":"16472:25:21"},"nativeSrc":"16472:38:21","nodeType":"YulFunctionCall","src":"16472:38:21"},{"name":"newLen","nativeSrc":"16512:6:21","nodeType":"YulIdentifier","src":"16512:6:21"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nativeSrc":"16422:43:21","nodeType":"YulIdentifier","src":"16422:43:21"},"nativeSrc":"16422:97:21","nodeType":"YulFunctionCall","src":"16422:97:21"},"nativeSrc":"16422:97:21","nodeType":"YulExpressionStatement","src":"16422:97:21"},{"nativeSrc":"16528:18:21","nodeType":"YulVariableDeclaration","src":"16528:18:21","value":{"kind":"number","nativeSrc":"16545:1:21","nodeType":"YulLiteral","src":"16545:1:21","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"16532:9:21","nodeType":"YulTypedName","src":"16532:9:21","type":""}]},{"nativeSrc":"16555:23:21","nodeType":"YulVariableDeclaration","src":"16555:23:21","value":{"kind":"number","nativeSrc":"16574:4:21","nodeType":"YulLiteral","src":"16574:4:21","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nativeSrc":"16559:11:21","nodeType":"YulTypedName","src":"16559:11:21","type":""}]},{"nativeSrc":"16587:17:21","nodeType":"YulAssignment","src":"16587:17:21","value":{"kind":"number","nativeSrc":"16600:4:21","nodeType":"YulLiteral","src":"16600:4:21","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"16587:9:21","nodeType":"YulIdentifier","src":"16587:9:21"}]},{"cases":[{"body":{"nativeSrc":"16650:775:21","nodeType":"YulBlock","src":"16650:775:21","statements":[{"nativeSrc":"16664:94:21","nodeType":"YulVariableDeclaration","src":"16664:94:21","value":{"arguments":[{"name":"newLen","nativeSrc":"16683:6:21","nodeType":"YulIdentifier","src":"16683:6:21"},{"kind":"number","nativeSrc":"16691:66:21","nodeType":"YulLiteral","src":"16691:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nativeSrc":"16679:3:21","nodeType":"YulIdentifier","src":"16679:3:21"},"nativeSrc":"16679:79:21","nodeType":"YulFunctionCall","src":"16679:79:21"},"variables":[{"name":"loopEnd","nativeSrc":"16668:7:21","nodeType":"YulTypedName","src":"16668:7:21","type":""}]},{"nativeSrc":"16771:49:21","nodeType":"YulVariableDeclaration","src":"16771:49:21","value":{"arguments":[{"name":"slot","nativeSrc":"16815:4:21","nodeType":"YulIdentifier","src":"16815:4:21"}],"functionName":{"name":"array_dataslot_string_storage","nativeSrc":"16785:29:21","nodeType":"YulIdentifier","src":"16785:29:21"},"nativeSrc":"16785:35:21","nodeType":"YulFunctionCall","src":"16785:35:21"},"variables":[{"name":"dstPtr","nativeSrc":"16775:6:21","nodeType":"YulTypedName","src":"16775:6:21","type":""}]},{"nativeSrc":"16833:10:21","nodeType":"YulVariableDeclaration","src":"16833:10:21","value":{"kind":"number","nativeSrc":"16842:1:21","nodeType":"YulLiteral","src":"16842:1:21","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"16837:1:21","nodeType":"YulTypedName","src":"16837:1:21","type":""}]},{"body":{"nativeSrc":"16920:172:21","nodeType":"YulBlock","src":"16920:172:21","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"16945:6:21","nodeType":"YulIdentifier","src":"16945:6:21"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"16963:3:21","nodeType":"YulIdentifier","src":"16963:3:21"},{"name":"srcOffset","nativeSrc":"16968:9:21","nodeType":"YulIdentifier","src":"16968:9:21"}],"functionName":{"name":"add","nativeSrc":"16959:3:21","nodeType":"YulIdentifier","src":"16959:3:21"},"nativeSrc":"16959:19:21","nodeType":"YulFunctionCall","src":"16959:19:21"}],"functionName":{"name":"mload","nativeSrc":"16953:5:21","nodeType":"YulIdentifier","src":"16953:5:21"},"nativeSrc":"16953:26:21","nodeType":"YulFunctionCall","src":"16953:26:21"}],"functionName":{"name":"sstore","nativeSrc":"16938:6:21","nodeType":"YulIdentifier","src":"16938:6:21"},"nativeSrc":"16938:42:21","nodeType":"YulFunctionCall","src":"16938:42:21"},"nativeSrc":"16938:42:21","nodeType":"YulExpressionStatement","src":"16938:42:21"},{"nativeSrc":"16997:24:21","nodeType":"YulAssignment","src":"16997:24:21","value":{"arguments":[{"name":"dstPtr","nativeSrc":"17011:6:21","nodeType":"YulIdentifier","src":"17011:6:21"},{"kind":"number","nativeSrc":"17019:1:21","nodeType":"YulLiteral","src":"17019:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17007:3:21","nodeType":"YulIdentifier","src":"17007:3:21"},"nativeSrc":"17007:14:21","nodeType":"YulFunctionCall","src":"17007:14:21"},"variableNames":[{"name":"dstPtr","nativeSrc":"16997:6:21","nodeType":"YulIdentifier","src":"16997:6:21"}]},{"nativeSrc":"17038:40:21","nodeType":"YulAssignment","src":"17038:40:21","value":{"arguments":[{"name":"srcOffset","nativeSrc":"17055:9:21","nodeType":"YulIdentifier","src":"17055:9:21"},{"name":"srcOffset_1","nativeSrc":"17066:11:21","nodeType":"YulIdentifier","src":"17066:11:21"}],"functionName":{"name":"add","nativeSrc":"17051:3:21","nodeType":"YulIdentifier","src":"17051:3:21"},"nativeSrc":"17051:27:21","nodeType":"YulFunctionCall","src":"17051:27:21"},"variableNames":[{"name":"srcOffset","nativeSrc":"17038:9:21","nodeType":"YulIdentifier","src":"17038:9:21"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"16867:1:21","nodeType":"YulIdentifier","src":"16867:1:21"},{"name":"loopEnd","nativeSrc":"16870:7:21","nodeType":"YulIdentifier","src":"16870:7:21"}],"functionName":{"name":"lt","nativeSrc":"16864:2:21","nodeType":"YulIdentifier","src":"16864:2:21"},"nativeSrc":"16864:14:21","nodeType":"YulFunctionCall","src":"16864:14:21"},"nativeSrc":"16856:236:21","nodeType":"YulForLoop","post":{"nativeSrc":"16879:28:21","nodeType":"YulBlock","src":"16879:28:21","statements":[{"nativeSrc":"16881:24:21","nodeType":"YulAssignment","src":"16881:24:21","value":{"arguments":[{"name":"i","nativeSrc":"16890:1:21","nodeType":"YulIdentifier","src":"16890:1:21"},{"name":"srcOffset_1","nativeSrc":"16893:11:21","nodeType":"YulIdentifier","src":"16893:11:21"}],"functionName":{"name":"add","nativeSrc":"16886:3:21","nodeType":"YulIdentifier","src":"16886:3:21"},"nativeSrc":"16886:19:21","nodeType":"YulFunctionCall","src":"16886:19:21"},"variableNames":[{"name":"i","nativeSrc":"16881:1:21","nodeType":"YulIdentifier","src":"16881:1:21"}]}]},"pre":{"nativeSrc":"16860:3:21","nodeType":"YulBlock","src":"16860:3:21","statements":[]},"src":"16856:236:21"},{"body":{"nativeSrc":"17140:226:21","nodeType":"YulBlock","src":"17140:226:21","statements":[{"nativeSrc":"17158:43:21","nodeType":"YulVariableDeclaration","src":"17158:43:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17185:3:21","nodeType":"YulIdentifier","src":"17185:3:21"},{"name":"srcOffset","nativeSrc":"17190:9:21","nodeType":"YulIdentifier","src":"17190:9:21"}],"functionName":{"name":"add","nativeSrc":"17181:3:21","nodeType":"YulIdentifier","src":"17181:3:21"},"nativeSrc":"17181:19:21","nodeType":"YulFunctionCall","src":"17181:19:21"}],"functionName":{"name":"mload","nativeSrc":"17175:5:21","nodeType":"YulIdentifier","src":"17175:5:21"},"nativeSrc":"17175:26:21","nodeType":"YulFunctionCall","src":"17175:26:21"},"variables":[{"name":"lastValue","nativeSrc":"17162:9:21","nodeType":"YulTypedName","src":"17162:9:21","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"17225:6:21","nodeType":"YulIdentifier","src":"17225:6:21"},{"arguments":[{"name":"lastValue","nativeSrc":"17237:9:21","nodeType":"YulIdentifier","src":"17237:9:21"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17264:1:21","nodeType":"YulLiteral","src":"17264:1:21","type":"","value":"3"},{"name":"newLen","nativeSrc":"17267:6:21","nodeType":"YulIdentifier","src":"17267:6:21"}],"functionName":{"name":"shl","nativeSrc":"17260:3:21","nodeType":"YulIdentifier","src":"17260:3:21"},"nativeSrc":"17260:14:21","nodeType":"YulFunctionCall","src":"17260:14:21"},{"kind":"number","nativeSrc":"17276:3:21","nodeType":"YulLiteral","src":"17276:3:21","type":"","value":"248"}],"functionName":{"name":"and","nativeSrc":"17256:3:21","nodeType":"YulIdentifier","src":"17256:3:21"},"nativeSrc":"17256:24:21","nodeType":"YulFunctionCall","src":"17256:24:21"},{"kind":"number","nativeSrc":"17282:66:21","nodeType":"YulLiteral","src":"17282:66:21","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shr","nativeSrc":"17252:3:21","nodeType":"YulIdentifier","src":"17252:3:21"},"nativeSrc":"17252:97:21","nodeType":"YulFunctionCall","src":"17252:97:21"}],"functionName":{"name":"not","nativeSrc":"17248:3:21","nodeType":"YulIdentifier","src":"17248:3:21"},"nativeSrc":"17248:102:21","nodeType":"YulFunctionCall","src":"17248:102:21"}],"functionName":{"name":"and","nativeSrc":"17233:3:21","nodeType":"YulIdentifier","src":"17233:3:21"},"nativeSrc":"17233:118:21","nodeType":"YulFunctionCall","src":"17233:118:21"}],"functionName":{"name":"sstore","nativeSrc":"17218:6:21","nodeType":"YulIdentifier","src":"17218:6:21"},"nativeSrc":"17218:134:21","nodeType":"YulFunctionCall","src":"17218:134:21"},"nativeSrc":"17218:134:21","nodeType":"YulExpressionStatement","src":"17218:134:21"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"17111:7:21","nodeType":"YulIdentifier","src":"17111:7:21"},{"name":"newLen","nativeSrc":"17120:6:21","nodeType":"YulIdentifier","src":"17120:6:21"}],"functionName":{"name":"lt","nativeSrc":"17108:2:21","nodeType":"YulIdentifier","src":"17108:2:21"},"nativeSrc":"17108:19:21","nodeType":"YulFunctionCall","src":"17108:19:21"},"nativeSrc":"17105:261:21","nodeType":"YulIf","src":"17105:261:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17386:4:21","nodeType":"YulIdentifier","src":"17386:4:21"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"17400:1:21","nodeType":"YulLiteral","src":"17400:1:21","type":"","value":"1"},{"name":"newLen","nativeSrc":"17403:6:21","nodeType":"YulIdentifier","src":"17403:6:21"}],"functionName":{"name":"shl","nativeSrc":"17396:3:21","nodeType":"YulIdentifier","src":"17396:3:21"},"nativeSrc":"17396:14:21","nodeType":"YulFunctionCall","src":"17396:14:21"},{"kind":"number","nativeSrc":"17412:1:21","nodeType":"YulLiteral","src":"17412:1:21","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"17392:3:21","nodeType":"YulIdentifier","src":"17392:3:21"},"nativeSrc":"17392:22:21","nodeType":"YulFunctionCall","src":"17392:22:21"}],"functionName":{"name":"sstore","nativeSrc":"17379:6:21","nodeType":"YulIdentifier","src":"17379:6:21"},"nativeSrc":"17379:36:21","nodeType":"YulFunctionCall","src":"17379:36:21"},"nativeSrc":"17379:36:21","nodeType":"YulExpressionStatement","src":"17379:36:21"}]},"nativeSrc":"16643:782:21","nodeType":"YulCase","src":"16643:782:21","value":{"kind":"number","nativeSrc":"16648:1:21","nodeType":"YulLiteral","src":"16648:1:21","type":"","value":"1"}},{"body":{"nativeSrc":"17442:234:21","nodeType":"YulBlock","src":"17442:234:21","statements":[{"nativeSrc":"17456:14:21","nodeType":"YulVariableDeclaration","src":"17456:14:21","value":{"kind":"number","nativeSrc":"17469:1:21","nodeType":"YulLiteral","src":"17469:1:21","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"17460:5:21","nodeType":"YulTypedName","src":"17460:5:21","type":""}]},{"body":{"nativeSrc":"17505:67:21","nodeType":"YulBlock","src":"17505:67:21","statements":[{"nativeSrc":"17523:35:21","nodeType":"YulAssignment","src":"17523:35:21","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"17542:3:21","nodeType":"YulIdentifier","src":"17542:3:21"},{"name":"srcOffset","nativeSrc":"17547:9:21","nodeType":"YulIdentifier","src":"17547:9:21"}],"functionName":{"name":"add","nativeSrc":"17538:3:21","nodeType":"YulIdentifier","src":"17538:3:21"},"nativeSrc":"17538:19:21","nodeType":"YulFunctionCall","src":"17538:19:21"}],"functionName":{"name":"mload","nativeSrc":"17532:5:21","nodeType":"YulIdentifier","src":"17532:5:21"},"nativeSrc":"17532:26:21","nodeType":"YulFunctionCall","src":"17532:26:21"},"variableNames":[{"name":"value","nativeSrc":"17523:5:21","nodeType":"YulIdentifier","src":"17523:5:21"}]}]},"condition":{"name":"newLen","nativeSrc":"17486:6:21","nodeType":"YulIdentifier","src":"17486:6:21"},"nativeSrc":"17483:89:21","nodeType":"YulIf","src":"17483:89:21"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"17592:4:21","nodeType":"YulIdentifier","src":"17592:4:21"},{"arguments":[{"name":"value","nativeSrc":"17651:5:21","nodeType":"YulIdentifier","src":"17651:5:21"},{"name":"newLen","nativeSrc":"17658:6:21","nodeType":"YulIdentifier","src":"17658:6:21"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"17598:52:21","nodeType":"YulIdentifier","src":"17598:52:21"},"nativeSrc":"17598:67:21","nodeType":"YulFunctionCall","src":"17598:67:21"}],"functionName":{"name":"sstore","nativeSrc":"17585:6:21","nodeType":"YulIdentifier","src":"17585:6:21"},"nativeSrc":"17585:81:21","nodeType":"YulFunctionCall","src":"17585:81:21"},"nativeSrc":"17585:81:21","nodeType":"YulExpressionStatement","src":"17585:81:21"}]},"nativeSrc":"17434:242:21","nodeType":"YulCase","src":"17434:242:21","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"16623:6:21","nodeType":"YulIdentifier","src":"16623:6:21"},{"kind":"number","nativeSrc":"16631:2:21","nodeType":"YulLiteral","src":"16631:2:21","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"16620:2:21","nodeType":"YulIdentifier","src":"16620:2:21"},"nativeSrc":"16620:14:21","nodeType":"YulFunctionCall","src":"16620:14:21"},"nativeSrc":"16613:1063:21","nodeType":"YulSwitch","src":"16613:1063:21"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"16218:1464:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"16299:4:21","nodeType":"YulTypedName","src":"16299:4:21","type":""},{"name":"src","nativeSrc":"16305:3:21","nodeType":"YulTypedName","src":"16305:3:21","type":""}],"src":"16218:1464:21"},{"body":{"nativeSrc":"17824:164:21","nodeType":"YulBlock","src":"17824:164:21","statements":[{"nativeSrc":"17834:27:21","nodeType":"YulVariableDeclaration","src":"17834:27:21","value":{"arguments":[{"name":"value0","nativeSrc":"17854:6:21","nodeType":"YulIdentifier","src":"17854:6:21"}],"functionName":{"name":"mload","nativeSrc":"17848:5:21","nodeType":"YulIdentifier","src":"17848:5:21"},"nativeSrc":"17848:13:21","nodeType":"YulFunctionCall","src":"17848:13:21"},"variables":[{"name":"length","nativeSrc":"17838:6:21","nodeType":"YulTypedName","src":"17838:6:21","type":""}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17876:3:21","nodeType":"YulIdentifier","src":"17876:3:21"},{"arguments":[{"name":"value0","nativeSrc":"17885:6:21","nodeType":"YulIdentifier","src":"17885:6:21"},{"kind":"number","nativeSrc":"17893:4:21","nodeType":"YulLiteral","src":"17893:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17881:3:21","nodeType":"YulIdentifier","src":"17881:3:21"},"nativeSrc":"17881:17:21","nodeType":"YulFunctionCall","src":"17881:17:21"},{"name":"length","nativeSrc":"17900:6:21","nodeType":"YulIdentifier","src":"17900:6:21"}],"functionName":{"name":"mcopy","nativeSrc":"17870:5:21","nodeType":"YulIdentifier","src":"17870:5:21"},"nativeSrc":"17870:37:21","nodeType":"YulFunctionCall","src":"17870:37:21"},"nativeSrc":"17870:37:21","nodeType":"YulExpressionStatement","src":"17870:37:21"},{"nativeSrc":"17916:26:21","nodeType":"YulVariableDeclaration","src":"17916:26:21","value":{"arguments":[{"name":"pos","nativeSrc":"17930:3:21","nodeType":"YulIdentifier","src":"17930:3:21"},{"name":"length","nativeSrc":"17935:6:21","nodeType":"YulIdentifier","src":"17935:6:21"}],"functionName":{"name":"add","nativeSrc":"17926:3:21","nodeType":"YulIdentifier","src":"17926:3:21"},"nativeSrc":"17926:16:21","nodeType":"YulFunctionCall","src":"17926:16:21"},"variables":[{"name":"_1","nativeSrc":"17920:2:21","nodeType":"YulTypedName","src":"17920:2:21","type":""}]},{"expression":{"arguments":[{"name":"_1","nativeSrc":"17958:2:21","nodeType":"YulIdentifier","src":"17958:2:21"},{"kind":"number","nativeSrc":"17962:1:21","nodeType":"YulLiteral","src":"17962:1:21","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"17951:6:21","nodeType":"YulIdentifier","src":"17951:6:21"},"nativeSrc":"17951:13:21","nodeType":"YulFunctionCall","src":"17951:13:21"},"nativeSrc":"17951:13:21","nodeType":"YulExpressionStatement","src":"17951:13:21"},{"nativeSrc":"17973:9:21","nodeType":"YulAssignment","src":"17973:9:21","value":{"name":"_1","nativeSrc":"17980:2:21","nodeType":"YulIdentifier","src":"17980:2:21"},"variableNames":[{"name":"end","nativeSrc":"17973:3:21","nodeType":"YulIdentifier","src":"17973:3:21"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"17687:301:21","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17800:3:21","nodeType":"YulTypedName","src":"17800:3:21","type":""},{"name":"value0","nativeSrc":"17805:6:21","nodeType":"YulTypedName","src":"17805:6:21","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17816:3:21","nodeType":"YulTypedName","src":"17816:3:21","type":""}],"src":"17687:301:21"}]},"contents":"{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_bytes(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let value := calldataload(add(headStart, 64))\n        validator_revert_address(value)\n        value2 := value\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_address(value_1)\n        value3 := value_1\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        let value_3 := calldataload(add(headStart, 160))\n        validator_revert_address(value_3)\n        value5 := value_3\n    }\n    function abi_encode_tuple_t_stringliteral_f247f7c1df7c48d1adf3ebe04e09d491abca7b6e14a32a1b30359ea588b9d3d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Shares must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_address__to_t_uint256_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_f9fc9be991fb15edd8b6c78e603f09bcc597989ed5b6a9e284f87c92e42b3b89__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid assetA address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_89141ec2c606ec003f6f5f1768c23192e8ad9a256043aab9d456c1693f9c79ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid Yearn Vault address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_53fb86809bff5dc62f76bc95bbc7b572a1cc94bf1175d9568e8046d7847ef4ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid assetB address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_sub_t_uint8(x, y) -> diff\n    {\n        diff := sub(and(x, 0xff), and(y, 0xff))\n        if gt(diff, 0xff) { panic_error_0x11() }\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_6726a167108c8ad6de2228a073643036d59da7cba84af5bdb159063458980d8c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No interest available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}","id":21,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"468":[{"length":32,"start":6893},{"length":32,"start":6934},{"length":32,"start":7366}]},"linkReferences":{},"object":"6080604052600436106101c4575f3560e01c80637d882097116100f2578063ad3cb1cc11610092578063e73faa2d11610062578063e73faa2d146105a6578063f2fde38b146105ba578063f7fde10f146105d9578063fdf262b7146105ee575f80fd5b8063ad3cb1cc146104be578063cdf456e114610506578063dd62ed3e14610524578063e56f2fe414610587575f80fd5b806395d89b41116100cd57806395d89b411461045a5780639db5df461461046e578063a6f2ae3a1461048b578063a9059cbb1461049f575f80fd5b80637d882097146103f55780638456cb591461040a5780638da5cb5b1461041e575f80fd5b80633f4ba83a116101685780636e553f65116101385780636e553f651461033e57806370a082311461035d578063715018a6146103b05780637b103999146103c4575f80fd5b80633f4ba83a146102cd5780634f1ef286146102e157806352d1902d146102f45780635c975abb14610308575f80fd5b806318160ddd116101a357806318160ddd1461024257806323b872dd1461027f578063295b93001461029e578063313ce567146102b2575f80fd5b8062f714ce146101c857806306fdde03146101e9578063095ea7b314610213575b5f80fd5b3480156101d3575f80fd5b506101e76101e23660046129ab565b61060d565b005b3480156101f4575f80fd5b506101fd610a0d565b60405161020a91906129d9565b60405180910390f35b34801561021e575f80fd5b5061023261022d366004612a0e565b610ae0565b604051901515815260200161020a565b34801561024d575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b60405190815260200161020a565b34801561028a575f80fd5b50610232610299366004612a38565b610af9565b3480156102a9575f80fd5b50610271610b1e565b3480156102bd575f80fd5b506040516012815260200161020a565b3480156102d8575f80fd5b506101e7610fa7565b6101e76102ef366004612afd565b610fb9565b3480156102ff575f80fd5b50610271610fd4565b348015610313575f80fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610232565b348015610349575f80fd5b506101e76103583660046129ab565b611002565b348015610368575f80fd5b50610271610377366004612b5d565b6001600160a01b03165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00602052604090205490565b3480156103bb575f80fd5b506101e761125d565b3480156103cf575f80fd5b506003546001600160a01b03165b6040516001600160a01b03909116815260200161020a565b348015610400575f80fd5b5061027160045481565b348015610415575f80fd5b506101e761126e565b348015610429575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166103dd565b348015610465575f80fd5b506101fd61127e565b348015610479575f80fd5b506001546001600160a01b03166103dd565b348015610496575f80fd5b506101e76112cf565b3480156104aa575f80fd5b506102326104b9366004612a0e565b611318565b3480156104c9575f80fd5b506101fd6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b348015610511575f80fd5b505f546103dd906001600160a01b031681565b34801561052f575f80fd5b5061027161053e366004612b78565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b348015610592575f80fd5b506101e76105a1366004612bc2565b611325565b3480156105b1575f80fd5b506102716115d6565b3480156105c5575f80fd5b506101e76105d4366004612b5d565b611728565b3480156105e4575f80fd5b5061027160055481565b3480156105f9575f80fd5b506002546103dd906001600160a01b031681565b61061561177e565b61061d6117ff565b5f82116106715760405162461bcd60e51b815260206004820181905260248201527f536861726573206d7573742062652067726561746572207468616e207a65726f60448201526064015b60405180910390fd5b335f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0060205260409020548211156106ee5760405162461bcd60e51b815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152606401610668565b5f6107177f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b6004546107249085612c7f565b61072e9190612c96565b90505f6107597f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b6005546107669086612c7f565b6107709190612c96565b905061077c338561185b565b8160045f82825461078d9190612cb5565b925050819055508060055f8282546107a59190612cb5565b90915550506001546040517fc6e6f592000000000000000000000000000000000000000000000000000000008152600481018490525f916001600160a01b03169063c6e6f59290602401602060405180830381865afa15801561080a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061082e9190612cc8565b6001546040517fba08765200000000000000000000000000000000000000000000000000000000815260048101839052306024820181905260448201529192506001600160a01b03169063ba087652906064016020604051808303815f875af115801561089d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108c19190612cc8565b505f546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018690529091169063a9059cbb906044016020604051808303815f875af115801561092a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094e9190612cdf565b506002546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018590529091169063a9059cbb906044016020604051808303815f875af11580156109b8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109dc9190612cdf565b50505050610a0960017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610a5e90612cfe565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8a90612cfe565b8015610ad55780601f10610aac57610100808354040283529160200191610ad5565b820191905f5260205f20905b815481529060010190602001808311610ab857829003601f168201915b505050505091505090565b5f33610aed8185856118a8565b60019150505b92915050565b5f33610b068582856118ba565b610b1185858561196d565b60019150505b9392505050565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b031663bb3ba04c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b70573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b949190612d36565b90505f60035f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610be7573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c0b9190612d36565b5f80546040516370a0823160e01b8152306004820152929350909182916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c56573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c7a9190612cc8565b6001546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cc5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce99190612cc8565b6001546040517f07a2d13a000000000000000000000000000000000000000000000000000000008152600481018390529192505f916001600160a01b03909116906307a2d13a90602401602060405180830381865afa158015610d4e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d729190612cc8565b6002546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610dbd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610de19190612cc8565b6002545f5460405163248391ff60e01b81526001600160a01b03928316600482015290821660248201526044810185905291925088169063248391ff90606401602060405180830381865afa158015610e3c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e609190612cc8565b610e6a9086612d51565b6002545f5460405163248391ff60e01b81526001600160a01b03928316600482015290821660248201526044810184905291965088169063248391ff90606401602060405180830381865afa158015610ec5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ee99190612cc8565b610ef39086612d51565b5f549095506001600160a01b03878116911614610f91575f5460405163248391ff60e01b81526001600160a01b0391821660048201528782166024820152604481018690529088169063248391ff90606401602060405180830381865afa158015610f60573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f849190612cc8565b610f8e9086612d51565b94505b610f9b8486612d51565b98975050505050505050565b610faf6119fc565b610fb7611a70565b565b610fc1611ae2565b610fca82611bb2565b610a098282611bba565b5f610fdd611cbb565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61100a61177e565b6110126117ff565b5f82116110615760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152606401610668565b611069611d1d565b5f546040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156110d5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110f99190612cdf565b505f546001546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0391821660048201526024810185905291169063095ea7b3906044016020604051808303815f875af1158015611164573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111889190612cdf565b506001546040517f6e553f65000000000000000000000000000000000000000000000000000000008152600481018490523060248201526001600160a01b0390911690636e553f65906044016020604051808303815f875af11580156111f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112149190612cc8565b5061121f8183611e1b565b8160045f8282546112309190612d51565b909155505060017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00555050565b6112656119fc565b610fb75f611e68565b6112766119fc565b610fb7611ee5565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060917f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0091610a5e90612cfe565b6112d761177e565b6112df6119fc565b6112e76117ff565b6112ef611f40565b610fb760017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b5f33610aed81858561196d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff165f8115801561136f5750825b90505f8267ffffffffffffffff16600114801561138b5750303b155b905081158015611399575080155b156113d0576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84547fffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000166001178555831561141b57845468ff00000000000000001916680100000000000000001785555b61142433612367565b61142e8b8b612378565b5f80546001600160a01b03808c1673ffffffffffffffffffffffffffffffffffffffff199283168117909355600180548c8316908416179055600280548b831690841617905560038054918a16919092161790556114ce5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206173736574412061646472657373000000000000000000006044820152606401610668565b6001546001600160a01b03166115265760405162461bcd60e51b815260206004820152601b60248201527f496e76616c696420596561726e205661756c74206164647265737300000000006044820152606401610668565b6002546001600160a01b031661157e5760405162461bcd60e51b815260206004820152601660248201527f496e76616c6964206173736574422061646472657373000000000000000000006044820152606401610668565b83156115c957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b5f8060035f9054906101000a90046001600160a01b03166001600160a01b0316631bf01e9b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611628573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061164c9190612d36565b90505f816001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561168b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116af9190612d64565b90505f6116bd826012612d84565b6116c890600a612e7d565b6116d0610b1e565b6116da9190612c7f565b90506117047f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace025490565b61170e9082612c96565b61172090670de0b6b3a7640000612c7f565b935050505090565b6117306119fc565b6001600160a01b038116611772576040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b61177b81611e68565b50565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0080547ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016117f9576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60029055565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1615610fb7576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03821661189d576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b610a09825f8361238a565b6118b583838360016124ef565b505050565b6001600160a01b038381165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0160209081526040808320938616835292905220545f1981146119675781811015611959576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b03841660048201526024810182905260448101839052606401610668565b61196784848484035f6124ef565b50505050565b6001600160a01b0383166119af576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6001600160a01b0382166119f1576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6118b583838361238a565b33611a2e7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610fb7576040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152602401610668565b611a78612618565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480611b7b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316611b6f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b15610fb7576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61177b6119fc565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611c14575060408051601f3d908101601f19168201909252611c1191810190612cc8565b60015b611c55576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0383166004820152602401610668565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114611cb1576040517faa1d49a400000000000000000000000000000000000000000000000000000000815260048101829052602401610668565b6118b58383612673565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610fb7576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001546040516370a0823160e01b81523060048201525f916001600160a01b0316906307a2d13a9082906370a0823190602401602060405180830381865afa158015611d6b573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611d8f9190612cc8565b6040518263ffffffff1660e01b8152600401611dad91815260200190565b602060405180830381865afa158015611dc8573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611dec9190612cc8565b90505f6004548211611dfe575f611e0b565b600454611e0b9083612cb5565b90508015610a0957610a09611f40565b6001600160a01b038216611e5d576040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b610a095f838361238a565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805473ffffffffffffffffffffffffffffffffffffffff1981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b611eed6117ff565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611ac4565b6001546040516370a0823160e01b81523060048201525f916001600160a01b0316906307a2d13a9082906370a0823190602401602060405180830381865afa158015611f8e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611fb29190612cc8565b6040518263ffffffff1660e01b8152600401611fd091815260200190565b602060405180830381865afa158015611feb573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061200f9190612cc8565b90505f6004548211612021575f61202e565b60045461202e9083612cb5565b90505f811161207f5760405162461bcd60e51b815260206004820152601560248201527f4e6f20696e74657265737420617661696c61626c6500000000000000000000006044820152606401610668565b6001546040517f0a28a477000000000000000000000000000000000000000000000000000000008152600481018390525f916001600160a01b031690630a28a47790602401602060405180830381865afa1580156120df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121039190612cc8565b6001546040517fba08765200000000000000000000000000000000000000000000000000000000815260048101839052306024820181905260448201529192506001600160a01b03169063ba087652906064016020604051808303815f875af1158015612172573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906121969190612cc8565b50600354604080517f82755ebb00000000000000000000000000000000000000000000000000000000815290515f926001600160a01b0316916382755ebb9160048083019260209291908290030181865afa1580156121f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061221b9190612d36565b5f546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0380841660048301526024820187905292935091169063095ea7b3906044016020604051808303815f875af1158015612285573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906122a99190612cdf565b505f80546002546040517f2d6bc8ea0000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015290821660248201526044810186905230606482015290831690632d6bc8ea906084016020604051808303815f875af1158015612324573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906123489190612cc8565b90508060055f82825461235b9190612d51565b90915550505050505050565b61236f6126c8565b61177b8161272f565b6123806126c8565b610a098282612737565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b0384166123d75781816002015f8282546123cc9190612d51565b909155506124609050565b6001600160a01b0384165f9081526020829052604090205482811015612442576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03861660048201526024810182905260448101849052606401610668565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b03831661247e57600281018054839003905561249c565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516124e191815260200190565b60405180910390a350505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace006001600160a01b038516612552576040517fe602df050000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6001600160a01b038416612594576040517f94280d620000000000000000000000000000000000000000000000000000000081525f6004820152602401610668565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561261157836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161260891815260200190565b60405180910390a35b5050505050565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff16610fb7576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61267c8261279a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156126c0576118b58282612836565b610a096128a8565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610fb7576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117306126c8565b61273f6126c8565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace007f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0361278b8482612ecf565b50600481016119678382612ecf565b806001600160a01b03163b5f036127e8576040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602401610668565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516128529190612f8f565b5f60405180830381855af49150503d805f811461288a576040519150601f19603f3d011682016040523d82523d5f602084013e61288f565b606091505b509150915061289f8583836128e0565b95945050505050565b3415610fb7576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6060826128f5576128f082612955565b610b17565b815115801561290c57506001600160a01b0384163b155b1561294e576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610668565b5080610b17565b8051156129655780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038116811461177b575f80fd5b5f80604083850312156129bc575f80fd5b8235915060208301356129ce81612997565b809150509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8060408385031215612a1f575f80fd5b8235612a2a81612997565b946020939093013593505050565b5f805f60608486031215612a4a575f80fd5b8335612a5581612997565b92506020840135612a6581612997565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff80841115612aa457612aa4612a76565b604051601f8501601f19908116603f01168101908282118183101715612acc57612acc612a76565b81604052809350858152868686011115612ae4575f80fd5b858560208301375f602087830101525050509392505050565b5f8060408385031215612b0e575f80fd5b8235612b1981612997565b9150602083013567ffffffffffffffff811115612b34575f80fd5b8301601f81018513612b44575f80fd5b612b5385823560208401612a8a565b9150509250929050565b5f60208284031215612b6d575f80fd5b8135610b1781612997565b5f8060408385031215612b89575f80fd5b8235612b9481612997565b915060208301356129ce81612997565b5f82601f830112612bb3575f80fd5b610b1783833560208501612a8a565b5f805f805f8060c08789031215612bd7575f80fd5b863567ffffffffffffffff80821115612bee575f80fd5b612bfa8a838b01612ba4565b97506020890135915080821115612c0f575f80fd5b50612c1c89828a01612ba4565b9550506040870135612c2d81612997565b93506060870135612c3d81612997565b92506080870135612c4d81612997565b915060a0870135612c5d81612997565b809150509295509295509295565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610af357610af3612c6b565b5f82612cb057634e487b7160e01b5f52601260045260245ffd5b500490565b81810381811115610af357610af3612c6b565b5f60208284031215612cd8575f80fd5b5051919050565b5f60208284031215612cef575f80fd5b81518015158114610b17575f80fd5b600181811c90821680612d1257607f821691505b602082108103612d3057634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215612d46575f80fd5b8151610b1781612997565b80820180821115610af357610af3612c6b565b5f60208284031215612d74575f80fd5b815160ff81168114610b17575f80fd5b60ff8281168282160390811115610af357610af3612c6b565b600181815b80851115612dd757815f1904821115612dbd57612dbd612c6b565b80851615612dca57918102915b93841c9390800290612da2565b509250929050565b5f82612ded57506001610af3565b81612df957505f610af3565b8160018114612e0f5760028114612e1957612e35565b6001915050610af3565b60ff841115612e2a57612e2a612c6b565b50506001821b610af3565b5060208310610133831016604e8410600b8410161715612e58575081810a610af3565b612e628383612d9d565b805f1904821115612e7557612e75612c6b565b029392505050565b5f610b1760ff841683612ddf565b601f8211156118b557805f5260205f20601f840160051c81016020851015612eb05750805b601f840160051c820191505b81811015612611575f8155600101612ebc565b815167ffffffffffffffff811115612ee957612ee9612a76565b612efd81612ef78454612cfe565b84612e8b565b602080601f831160018114612f30575f8415612f195750858301515b5f19600386901b1c1916600185901b178555612f87565b5f85815260208120601f198616915b82811015612f5e57888601518255948401946001909101908401612f3f565b5085821015612f7b57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f82518060208501845e5f92019182525091905056fea26469706673582212200945596902d3783f43526c7cef1d344496a28ec01b08fc452791f16b0f4fa7ee64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D882097 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE73FAA2D GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x5A6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xF7FDE10F EQ PUSH2 0x5D9 JUMPI DUP1 PUSH4 0xFDF262B7 EQ PUSH2 0x5EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0xE56F2FE4 EQ PUSH2 0x587 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x9DB5DF46 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x49F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7D882097 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x41E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x6E553F65 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x6E553F65 EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x7B103999 EQ PUSH2 0x3C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x308 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x295B9300 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0xAE0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0xB1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2AFD JUMP JUMPDEST PUSH2 0xFB9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0xFD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x313 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0x232 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x349 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x358 CALLDATASIZE PUSH1 0x4 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0x1002 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x377 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x125D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x126E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x127E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x12CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x4B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A0E JUMP JUMPDEST PUSH2 0x1318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x3DD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x53E CALLDATASIZE PUSH1 0x4 PUSH2 0x2B78 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x592 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BC2 JUMP JUMPDEST PUSH2 0x1325 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x15D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5D JUMP JUMPDEST PUSH2 0x1728 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x3DD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x61D PUSH2 0x17FF JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x671 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536861726573206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH0 PUSH2 0x717 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x724 SWAP1 DUP6 PUSH2 0x2C7F JUMP JUMPDEST PUSH2 0x72E SWAP2 SWAP1 PUSH2 0x2C96 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x759 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x766 SWAP1 DUP7 PUSH2 0x2C7F JUMP JUMPDEST PUSH2 0x770 SWAP2 SWAP1 PUSH2 0x2C96 JUMP JUMPDEST SWAP1 POP PUSH2 0x77C CALLER DUP6 PUSH2 0x185B JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x78D SWAP2 SWAP1 PUSH2 0x2CB5 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xC6E6F59200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC6E6F592 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBA08765200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xBA087652 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C1 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94E SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9DC SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP POP POP POP PUSH2 0xA09 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xA5E SWAP1 PUSH2 0x2CFE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA8A SWAP1 PUSH2 0x2CFE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xAED DUP2 DUP6 DUP6 PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xB06 DUP6 DUP3 DUP6 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0xB11 DUP6 DUP6 DUP6 PUSH2 0x196D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBB3BA04C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB70 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC0B SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC56 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC7A SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x7A2D13A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x7A2D13A SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD4E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD72 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDBD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE1 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP3 POP DUP9 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE60 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0xE6A SWAP1 DUP7 PUSH2 0x2D51 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP7 POP DUP9 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEC5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEE9 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0xEF3 SWAP1 DUP7 PUSH2 0x2D51 JUMP JUMPDEST PUSH0 SLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ PUSH2 0xF91 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x248391FF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE DUP8 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP9 AND SWAP1 PUSH4 0x248391FF SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF60 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF84 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0xF8E SWAP1 DUP7 PUSH2 0x2D51 JUMP JUMPDEST SWAP5 POP JUMPDEST PUSH2 0xF9B DUP5 DUP7 PUSH2 0x2D51 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xFAF PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xFB7 PUSH2 0x1A70 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xFC1 PUSH2 0x1AE2 JUMP JUMPDEST PUSH2 0xFCA DUP3 PUSH2 0x1BB2 JUMP JUMPDEST PUSH2 0xA09 DUP3 DUP3 PUSH2 0x1BBA JUMP JUMPDEST PUSH0 PUSH2 0xFDD PUSH2 0x1CBB JUMP JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x100A PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1012 PUSH2 0x17FF JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x1061 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x1069 PUSH2 0x1D1D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10D5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F9 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1164 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1188 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x6E553F6500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6E553F65 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST POP PUSH2 0x121F DUP2 DUP4 PUSH2 0x1E1B JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1265 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xFB7 PUSH0 PUSH2 0x1E68 JUMP JUMPDEST PUSH2 0x1276 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0xFB7 PUSH2 0x1EE5 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE04 DUP1 SLOAD PUSH1 0x60 SWAP2 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP2 PUSH2 0xA5E SWAP1 PUSH2 0x2CFE JUMP JUMPDEST PUSH2 0x12D7 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x12DF PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x12E7 PUSH2 0x17FF JUMP JUMPDEST PUSH2 0x12EF PUSH2 0x1F40 JUMP JUMPDEST PUSH2 0xFB7 PUSH1 0x1 PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0xAED DUP2 DUP6 DUP6 PUSH2 0x196D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x138B JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1399 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x13D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x141B JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND PUSH9 0x10000000000000000 OR DUP6 SSTORE JUMPDEST PUSH2 0x1424 CALLER PUSH2 0x2367 JUMP JUMPDEST PUSH2 0x142E DUP12 DUP12 PUSH2 0x2378 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x1 DUP1 SLOAD DUP13 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP12 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD SWAP2 DUP11 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x14CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657441206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1526 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420596561726E205661756C7420616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x157E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657442206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x15C9 JUMPI DUP5 SLOAD PUSH9 0xFF0000000000000000 NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1BF01E9B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1628 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164C SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x168B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16AF SWAP2 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x16BD DUP3 PUSH1 0x12 PUSH2 0x2D84 JUMP JUMPDEST PUSH2 0x16C8 SWAP1 PUSH1 0xA PUSH2 0x2E7D JUMP JUMPDEST PUSH2 0x16D0 PUSH2 0xB1E JUMP JUMPDEST PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x2C7F JUMP JUMPDEST SWAP1 POP PUSH2 0x1704 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE02 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x170E SWAP1 DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH2 0x1720 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2C7F JUMP JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1730 PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x177B DUP2 PUSH2 0x1E68 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9B779B17422D0DF92223018B32B4D1FA46E071723D6817E2486D003BECC55F00 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE ADD PUSH2 0x17F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x189D JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0xA09 DUP3 PUSH0 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x24EF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE01 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x1967 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1959 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x1967 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x24EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x19AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x19F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST CALLER PUSH2 0x1A2E PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x1A78 PUSH2 0x2618 JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x1B7B JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B6F PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x177B PUSH2 0x19FC JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1C14 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1C11 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 EQ PUSH2 0x1CB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0x18B5 DUP4 DUP4 PUSH2 0x2673 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7A2D13A SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D6B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D8F SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DAD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DC8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DEC SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x1DFE JUMPI PUSH0 PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1E0B SWAP1 DUP4 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA09 JUMPI PUSH2 0xA09 PUSH2 0x1F40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1E5D JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH2 0xA09 PUSH0 DUP4 DUP4 PUSH2 0x238A JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1EED PUSH2 0x17FF JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x7A2D13A SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F8E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FB2 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FEB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200F SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x2021 JUMPI PUSH0 PUSH2 0x202E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x202E SWAP1 DUP4 PUSH2 0x2CB5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x207F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20696E74657265737420617661696C61626C650000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xA28A47700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA28A477 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x20DF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2103 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xBA08765200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xBA087652 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2172 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2196 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x82755EBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x82755EBB SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x221B SWAP2 SWAP1 PUSH2 0x2D36 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2285 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22A9 SWAP2 SWAP1 PUSH2 0x2CDF JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D6BC8EA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x64 DUP3 ADD MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x2D6BC8EA SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2324 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2348 SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x235B SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x236F PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x177B DUP2 PUSH2 0x272F JUMP JUMPDEST PUSH2 0x2380 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0xA09 DUP3 DUP3 PUSH2 0x2737 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x23D7 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23CC SWAP2 SWAP1 PUSH2 0x2D51 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2460 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2442 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP4 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x247E JUMPI PUSH1 0x2 DUP2 ADD DUP1 SLOAD DUP4 SWAP1 SUB SWAP1 SSTORE PUSH2 0x249C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 ADD SWAP1 SSTORE JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x24E1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x2552 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2594 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE DUP2 ISZERO PUSH2 0x2611 JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2608 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD PUSH1 0xFF AND PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x267C DUP3 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x26C0 JUMPI PUSH2 0x18B5 DUP3 DUP3 PUSH2 0x2836 JUMP JUMPDEST PUSH2 0xA09 PUSH2 0x28A8 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1730 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x273F PUSH2 0x26C8 JUMP JUMPDEST PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE03 PUSH2 0x278B DUP5 DUP3 PUSH2 0x2ECF JUMP JUMPDEST POP PUSH1 0x4 DUP2 ADD PUSH2 0x1967 DUP4 DUP3 PUSH2 0x2ECF JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x27E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x2852 SWAP2 SWAP1 PUSH2 0x2F8F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x288A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x288F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x289F DUP6 DUP4 DUP4 PUSH2 0x28E0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x28F5 JUMPI PUSH2 0x28F0 DUP3 PUSH2 0x2955 JUMP JUMPDEST PUSH2 0xB17 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x290C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x294E JUMPI PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x668 JUMP JUMPDEST POP DUP1 PUSH2 0xB17 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2965 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x177B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x29BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x29CE DUP2 PUSH2 0x2997 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2A2A DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A4A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2A55 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2A65 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x2AA4 JUMPI PUSH2 0x2AA4 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2ACC JUMPI PUSH2 0x2ACC PUSH2 0x2A76 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x2AE4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B0E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B19 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B34 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2B44 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2B53 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x2A8A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB17 DUP2 PUSH2 0x2997 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B89 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2B94 DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x29CE DUP2 PUSH2 0x2997 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2BB3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB17 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x2A8A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2BD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2BEE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2BFA DUP11 DUP4 DUP12 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C0F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C1C DUP10 DUP3 DUP11 ADD PUSH2 0x2BA4 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x2C2D DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x2C3D DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x2C4D DUP2 PUSH2 0x2997 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x2C5D DUP2 PUSH2 0x2997 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2CB0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CEF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB17 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2D12 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2D30 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D46 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xB17 DUP2 PUSH2 0x2997 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D74 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0xB17 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP3 DUP2 AND DUP3 DUP3 AND SUB SWAP1 DUP2 GT ISZERO PUSH2 0xAF3 JUMPI PUSH2 0xAF3 PUSH2 0x2C6B JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x2DD7 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x2DBD JUMPI PUSH2 0x2DBD PUSH2 0x2C6B JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x2DCA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x2DA2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2DED JUMPI POP PUSH1 0x1 PUSH2 0xAF3 JUMP JUMPDEST DUP2 PUSH2 0x2DF9 JUMPI POP PUSH0 PUSH2 0xAF3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x2E0F JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2E19 JUMPI PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAF3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2E2A JUMPI PUSH2 0x2E2A PUSH2 0x2C6B JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0xAF3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x2E58 JUMPI POP DUP2 DUP2 EXP PUSH2 0xAF3 JUMP JUMPDEST PUSH2 0x2E62 DUP4 DUP4 PUSH2 0x2D9D JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x2E75 JUMPI PUSH2 0x2E75 PUSH2 0x2C6B JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB17 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x2DDF JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x18B5 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2EB0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2611 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2EBC JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE9 JUMPI PUSH2 0x2EE9 PUSH2 0x2A76 JUMP JUMPDEST PUSH2 0x2EFD DUP2 PUSH2 0x2EF7 DUP5 SLOAD PUSH2 0x2CFE JUMP JUMPDEST DUP5 PUSH2 0x2E8B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2F30 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2F19 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2F87 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2F5E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2F3F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2F7B JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD GASLIMIT MSIZE PUSH10 0x2D3783F43526C7CEF1D CALLVALUE PREVRANDAO SWAP7 LOG2 DUP15 0xC0 SHL ADDMOD 0xFC GASLIMIT 0x27 SWAP2 CALL PUSH12 0xF4FA7EE64736F6C63430008 NOT STOP CALLER ","sourceMap":"769:6763:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3733:802;;;;;;;;;;-1:-1:-1;3733:802:20;;;;;:::i;:::-;;:::i;:::-;;3011:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5505:186;;;;;;;;;;-1:-1:-1;5505:186:3;;;;;:::i;:::-;;:::i;:::-;;;1460:14:21;;1453:22;1435:41;;1423:2;1408:18;5505:186:3;1295:187:21;4191:152:3;;;;;;;;;;-1:-1:-1;4322:14:3;;4191:152;;;1633:25:21;;;1621:2;1606:18;4191:152:3;1487:177:21;6251:244:3;;;;;;;;;;-1:-1:-1;6251:244:3;;;;;:::i;:::-;;:::i;6146:832:20:-;;;;;;;;;;;;;:::i;4049:82:3:-;;;;;;;;;;-1:-1:-1;4049:82:3;;4122:2;2272:36:21;;2260:2;2245:18;4049:82:3;2130:184:21;6062:76:20;;;;;;;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;2692:145:5:-;;;;;;;;;;-1:-1:-1;1270:23:5;2821:9;;;2692:145;;3058:458:20;;;;;;;;;;-1:-1:-1;3058:458:20;;;;;:::i;:::-;;:::i;4401:171:3:-;;;;;;;;;;-1:-1:-1;4401:171:3;;;;;:::i;:::-;-1:-1:-1;;;;;4545:20:3;4466:7;4545:20;;;2359;4545;;;;;;;4401:171;3155:101:0;;;;;;;;;;;;;:::i;7307:105:20:-;;;;;;;;;;-1:-1:-1;7394:9:20;;-1:-1:-1;;;;;7394:9:20;7307:105;;;-1:-1:-1;;;;;4390:55:21;;;4372:74;;4360:2;4345:18;7307:105:20;4226:226:21;1350:28:20;;;;;;;;;;;;;;;;5909:72;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;3268:148:3;;;;;;;;;;;;;:::i;7420:109:20:-;;;;;;;;;;-1:-1:-1;7509:11:20;;-1:-1:-1;;;;;7509:11:20;7420:109;;5355:95;;;;;;;;;;;;;:::i;4767:178:3:-;;;;;;;;;;-1:-1:-1;4767:178:3;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1028:24:20;;;;;;;;;;-1:-1:-1;1028:24:20;;;;-1:-1:-1;;;;;1028:24:20;;;5003:195:3;;;;;;;;;;-1:-1:-1;5003:195:3;;;;;:::i;:::-;-1:-1:-1;;;;;5162:20:3;;;5083:7;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5003:195;1790:721:20;;;;;;;;;;-1:-1:-1;1790:721:20;;;;;:::i;:::-;;:::i;6986:313::-;;;;;;;;;;;;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;1387:32:20:-;;;;;;;;;;;;;;;;1214:25;;;;;;;;;;-1:-1:-1;1214:25:20;;;;-1:-1:-1;;;;;1214:25:20;;;3733:802;3251:21:6;:19;:21::i;:::-;2316:19:5::1;:17;:19::i;:::-;3852:1:20::2;3843:6;:10;3835:55;;;::::0;-1:-1:-1;;;3835:55:20;;6387:2:21;3835:55:20::2;::::0;::::2;6369:21:21::0;;;6406:18;;;6399:30;6465:34;6445:18;;;6438:62;6517:18;;3835:55:20::2;;;;;;;;;3919:10;4466:7:3::0;4545:20;;;2359;4545;;;;;;3934:6:20;-1:-1:-1;3909:31:20::2;3901:64;;;::::0;-1:-1:-1;;;3901:64:20;;6748:2:21;3901:64:20::2;::::0;::::2;6730:21:21::0;6787:2;6767:18;;;6760:30;6826:22;6806:18;;;6799:50;6866:18;;3901:64:20::2;6546:344:21::0;3901:64:20::2;3978:23;4031:13;4322:14:3::0;;;4191:152;4031:13:20::2;4014;::::0;4005:22:::2;::::0;:6;:22:::2;:::i;:::-;4004:40;;;;:::i;:::-;3978:66;;4055:23;4112:13;4322:14:3::0;;;4191:152;4112:13:20::2;4091:17;::::0;4082:26:::2;::::0;:6;:26:::2;:::i;:::-;4081:44;;;;:::i;:::-;4055:70;;4138:25;4144:10;4156:6;4138:5;:25::i;:::-;4191:15;4174:13;;:32;;;;;;;:::i;:::-;;;;;;;;4238:15;4217:17;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4291:11:20::2;::::0;:44:::2;::::0;;;;::::2;::::0;::::2;1633:25:21::0;;;4266:22:20::2;::::0;-1:-1:-1;;;;;4291:11:20::2;::::0;:27:::2;::::0;1606:18:21;;4291:44:20::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4346:11;::::0;:64:::2;::::0;;;;::::2;::::0;::::2;8060:25:21::0;;;4389:4:20::2;8162:18:21::0;;;8155:43;;;8214:18;;;8207:43;4266:69:20;;-1:-1:-1;;;;;;4346:11:20::2;::::0;:18:::2;::::0;8033::21;;4346:64:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4428:9:20::2;::::0;4421:47:::2;::::0;;;;-1:-1:-1;;;;;8453:55:21;;;4421:47:20::2;::::0;::::2;8435:74:21::0;8525:18;;;8518:34;;;4428:9:20;;::::2;::::0;4421:26:::2;::::0;8408:18:21;;4421:47:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4486:10:20::2;::::0;4479:48:::2;::::0;;;;-1:-1:-1;;;;;8453:55:21;;;4479:48:20::2;::::0;::::2;8435:74:21::0;8525:18;;;8518:34;;;4486:10:20;;::::2;::::0;4479:27:::2;::::0;8408:18:21;;4479:48:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3824:711;;;3293:20:6::0;1805:1;2388:30;3969:23;3716:283;3293:20;3733:802:20;;:::o;3011:144:3:-;3141:7;3134:14;;3056:13;;2359:20;;3134:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3011:144;:::o;5505:186::-;5578:4;966:10:4;5632:31:3;966:10:4;5648:7:3;5657:5;5632:8;:31::i;:::-;5680:4;5673:11;;;5505:186;;;;;:::o;6251:244::-;6338:4;966:10:4;6394:37:3;6410:4;966:10:4;6425:5:3;6394:15;:37::i;:::-;6441:26;6451:4;6457:2;6461:5;6441:9;:26::i;:::-;6484:4;6477:11;;;6251:244;;;;;;:::o;6146:832:20:-;6202:7;6222:22;6263:9;;;;;;;;;-1:-1:-1;;;;;6263:9:20;-1:-1:-1;;;;;6263:25:20;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6222:69;;6302:12;6317:9;;;;;;;;;-1:-1:-1;;;;;6317:9:20;-1:-1:-1;;;;;6317:17:20;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6347:17;6405:9;;6398:42;;-1:-1:-1;;;6398:42:20;;6434:4;6398:42;;;4372:74:21;6302:34:20;;-1:-1:-1;6347:17:20;;;;-1:-1:-1;;;;;6405:9:20;;6398:27;;4345:18:21;;6398:42:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6471:11;;:36;;-1:-1:-1;;;6471:36:20;;6501:4;6471:36;;;4372:74:21;6379:61:20;;-1:-1:-1;6451:17:20;;-1:-1:-1;;;;;6471:11:20;;;;:21;;4345:18:21;;6471:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6545:11;;:41;;;;;;;;1633:25:21;;;6451:56:20;;-1:-1:-1;6518:24:20;;-1:-1:-1;;;;;6545:11:20;;;;:27;;1606:18:21;;6545:41:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6624:10;;6617:43;;-1:-1:-1;;;6617:43:20;;6654:4;6617:43;;;4372:74:21;6518:68:20;;-1:-1:-1;6597:17:20;;-1:-1:-1;;;;;6624:10:20;;;;6617:28;;4345:18:21;;6617:43:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6699:10;;;6711:9;6684:58;;-1:-1:-1;;;6684:58:20;;-1:-1:-1;;;;;6699:10:20;;;6684:58;;;9806:34:21;6711:9:20;;;9856:18:21;;;9849:43;9908:18;;;9901:34;;;6597:63:20;;-1:-1:-1;6684:14:20;;;;;9718:18:21;;6684:58:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6671:71;;;;:::i;:::-;6781:10;;;6793:9;6766:51;;-1:-1:-1;;;6766:51:20;;-1:-1:-1;;;;;6781:10:20;;;6766:51;;;9806:34:21;6793:9:20;;;9856:18:21;;;9849:43;9908:18;;;9901:34;;;6671:71:20;;-1:-1:-1;6766:14:20;;;;;9718:18:21;;6766:51:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6753:64;;;;:::i;:::-;6832:9;;6753:64;;-1:-1:-1;;;;;;6832:17:20;;;:9;;:17;6828:80;;6879:9;;6864:44;;-1:-1:-1;;;6864:44:20;;-1:-1:-1;;;;;6879:9:20;;;6864:44;;;9806:34:21;9876:15;;;9856:18;;;9849:43;9908:18;;;9901:34;;;6864:14:20;;;;;;9718:18:21;;6864:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6851:57;;;;:::i;:::-;;;6828:80;6919:24;6932:11;6919:24;;:::i;:::-;;6146:832;-1:-1:-1;;;;;;;;6146:832:20:o;6062:76::-;2334:13:0;:11;:13::i;:::-;6120:10:20::1;:8;:10::i;:::-;6062:76::o:0;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;3705:134::-:0;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;1327:66:9::1;3705:134:2::0;:::o;3058:458:20:-;3251:21:6;:19;:21::i;:::-;2316:19:5::1;:17;:19::i;:::-;3176:1:20::2;3167:6;:10;3159:55;;;::::0;-1:-1:-1;;;3159:55:20;;10278:2:21;3159:55:20::2;::::0;::::2;10260:21:21::0;;;10297:18;;;10290:30;10356:34;10336:18;;;10329:62;10408:18;;3159:55:20::2;10076:356:21::0;3159:55:20::2;3227:18;:16;:18::i;:::-;3265:9;::::0;3258:65:::2;::::0;;;;3289:10:::2;3258:65;::::0;::::2;9806:34:21::0;3309:4:20::2;9856:18:21::0;;;9849:43;9908:18;;;9901:34;;;-1:-1:-1;;;;;3265:9:20;;::::2;::::0;3258:30:::2;::::0;9718:18:21;;3258:65:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3343:9:20::2;::::0;;3370:11;3336:55:::2;::::0;;;;-1:-1:-1;;;;;3370:11:20;;::::2;3336:55;::::0;::::2;8435:74:21::0;8525:18;;;8518:34;;;3343:9:20;::::2;::::0;3336:25:::2;::::0;8408:18:21;;3336:55:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3402:11:20::2;::::0;:42:::2;::::0;;;;::::2;::::0;::::2;10611:25:21::0;;;3438:4:20::2;10652:18:21::0;;;10645:83;-1:-1:-1;;;;;3402:11:20;;::::2;::::0;:19:::2;::::0;10584:18:21;;3402:42:20::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3457:17;3463:2;3467:6;3457:5;:17::i;:::-;3502:6;3485:13;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;1805:1:6;2388:30;3969:23;3733:802:20;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;5909:72:20:-:0;2334:13:0;:11;:13::i;:::-;5965:8:20::1;:6;:8::i;3268:148:3:-:0;3400:9;3393:16;;3315:13;;2359:20;;3393:16;;;:::i;5355:95:20:-;3251:21:6;:19;:21::i;:::-;2334:13:0::1;:11;:13::i;:::-;2316:19:5::2;:17;:19::i;:::-;5436:6:20::3;:4;:6::i;:::-;3293:20:6::0;1805:1;2388:30;3969:23;3716:283;4767:178:3;4836:4;966:10:4;4890:27:3;966:10:4;4907:2:3;4911:5;4890:9;:27::i;1790:721:20:-;8870:21:1;4302:15;;;;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4951:18;;;;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;5013:22:1;;;;;4979:67;2035:26:20::1;2050:10;2035:14;:26::i;:::-;2072:28;2085:5;2092:7;2072:12;:28::i;:::-;2113:9;:19:::0;;-1:-1:-1;;;;;2113:19:20;;::::1;-1:-1:-1::0;;2113:19:20;;::::1;::::0;::::1;::::0;;;;2143:45;;;;::::1;::::0;;::::1;;::::0;;2199:10:::1;:20:::0;;;;::::1;::::0;;::::1;;::::0;;2230:9:::1;:47:::0;;;;::::1;::::0;;;::::1;;::::0;;2290:58:::1;;;::::0;-1:-1:-1;;;2290:58:20;;10941:2:21;2290:58:20::1;::::0;::::1;10923:21:21::0;10980:2;10960:18;;;10953:30;11019:24;10999:18;;;10992:52;11061:18;;2290:58:20::1;10739:346:21::0;2290:58:20::1;2375:11;::::0;-1:-1:-1;;;;;2375:11:20::1;2359:74;;;::::0;-1:-1:-1;;;2359:74:20;;11292:2:21;2359:74:20::1;::::0;::::1;11274:21:21::0;11331:2;11311:18;;;11304:30;11370:29;11350:18;;;11343:57;11417:18;;2359:74:20::1;11090:351:21::0;2359:74:20::1;2452:10;::::0;-1:-1:-1;;;;;2452:10:20::1;2444:59;;;::::0;-1:-1:-1;;;2444:59:20;;11648:2:21;2444:59:20::1;::::0;::::1;11630:21:21::0;11687:2;11667:18;;;11660:30;11726:24;11706:18;;;11699:52;11768:18;;2444:59:20::1;11446:346:21::0;2444:59:20::1;5070:14:1::0;5066:101;;;5100:23;;-1:-1:-1;;5100:23:1;;;5142:14;;-1:-1:-1;11950:50:21;;5142:14:1;;11938:2:21;11923:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;1790:721:20;;;;;;:::o;6986:313::-;7039:7;7059:12;7074:9;;;;;;;;;-1:-1:-1;;;;;7074:9:20;-1:-1:-1;;;;;7074:17:20;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7059:34;;7104:14;7136:4;-1:-1:-1;;;;;7121:29:20;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7104:48;-1:-1:-1;7163:25:20;7217:13;7104:48;7217:2;:13;:::i;:::-;7210:21;;:2;:21;:::i;:::-;7191:16;:14;:16::i;:::-;:40;;;;:::i;:::-;7163:68;;7270:13;4322:14:3;;;4191:152;7270:13:20;7250:33;;:17;:33;:::i;:::-;7249:42;;7287:4;7249:42;:::i;:::-;7242:49;;;;;6986:313;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;::::1;::::0;;3562:1:::1;3534:31;::::0;::::1;4372:74:21::0;4345:18;;3534:31:0::1;4226:226:21::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;3326:384:6:-;2388:30;3526:9;;:20;;3522:88;;3569:30;;;;;;;;;;;;;;3522:88;1847:1;3684:19;;3326:384::o;2905:128:5:-;1270:23;2821:9;;;2966:61;;;3001:15;;;;;;;;;;;;;;9522:206:3;-1:-1:-1;;;;;9592:21:3;;9588:89;;9636:30;;;;;9663:1;9636:30;;;4372:74:21;4345:18;;9636:30:3;4226:226:21;9588:89:3;9686:35;9694:7;9711:1;9715:5;9686:7;:35::i;10264:128::-;10348:37;10357:5;10364:7;10373:5;10380:4;10348:8;:37::i;:::-;10264:128;;;:::o;11993:477::-;-1:-1:-1;;;;;5162:20:3;;;12092:24;5162:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;-1:-1:-1;;12158:37:3;;12154:310;;12234:5;12215:16;:24;12211:130;;;12266:60;;;;;-1:-1:-1;;;;;14162:55:21;;12266:60:3;;;14144:74:21;14234:18;;;14227:34;;;14277:18;;;14270:34;;;14117:18;;12266:60:3;13942:368:21;12211:130:3;12382:57;12391:5;12398:7;12426:5;12407:16;:24;12433:5;12382:8;:57::i;:::-;12082:388;11993:477;;;:::o;6868:300::-;-1:-1:-1;;;;;6951:18:3;;6947:86;;6992:30;;;;;7019:1;6992:30;;;4372:74:21;4345:18;;6992:30:3;4226:226:21;6947:86:3;-1:-1:-1;;;;;7046:16:3;;7042:86;;7085:32;;;;;7114:1;7085:32;;;4372:74:21;4345:18;;7085:32:3;4226:226:21;7042:86:3;7137:24;7145:4;7151:2;7155:5;7137:7;:24::i;2658:162:0:-;966:10:4;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;;;;966:10:4;2763:40:0;;;4372:74:21;4345:18;;2763:40:0;4226:226:21;3674:178:5;2563:16;:14;:16::i;:::-;1270:23;3791:17;;-1:-1:-1;;3791:17:5::1;::::0;;3823:22:::1;966:10:4::0;3832:12:5::1;3823:22;::::0;-1:-1:-1;;;;;4390:55:21;;;4372:74;;4360:2;4345:18;3823:22:5::1;;;;;;;3722:130;3674:178::o:0;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;1327:66:9;2035:53;-1:-1:-1;;;;;2035:53:9;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;;;;;;;;;;;;;2779:84:20;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;;;;-1:-1:-1;;;;;4390:55:21;;6513:60:2;;;4372:74:21;4345:18;;6513:60:2;4226:226:21;6147:437:2;1327:66:9;6245:40:2;;6241:120;;6312:34;;;;;;;;1633:25:21;;;1606:18;;6312:34:2;1487:177:21;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;;;;;;;;;;;;;5532:295:20;5602:11;;5630:36;;-1:-1:-1;;;5630:36:20;;5660:4;5630:36;;;4372:74:21;5580:19:20;;-1:-1:-1;;;;;5602:11:20;;:27;;:11;;5630:21;;4345:18:21;;5630:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5602:65;;;;;;;;;;;;;1633:25:21;;1621:2;1606:18;;1487:177;5602:65:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5580:87;;5678:16;5711:13;;5697:11;:27;:61;;5757:1;5697:61;;;5741:13;;5727:27;;:11;:27;:::i;:::-;5678:80;-1:-1:-1;5773:12:20;;5769:51;;5802:6;:4;:6::i;8996:208:3:-;-1:-1:-1;;;;;9066:21:3;;9062:91;;9110:32;;;;;9139:1;9110:32;;;4372:74:21;4345:18;;9110:32:3;4226:226:21;9062:91:3;9162:35;9178:1;9182:7;9191:5;9162:7;:35::i;3774:248:0:-;1313:22;3923:8;;-1:-1:-1;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;3366:176:5:-;2316:19;:17;:19::i;:::-;1270:23;3484:16;;-1:-1:-1;;3484:16:5::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:4::0;3522:12:5::1;887:96:4::0;4624:723:20;4682:11;;4710:36;;-1:-1:-1;;;4710:36:20;;4740:4;4710:36;;;4372:74:21;4660:19:20;;-1:-1:-1;;;;;4682:11:20;;:27;;:11;;4710:21;;4345:18:21;;4710:36:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4682:65;;;;;;;;;;;;;1633:25:21;;1621:2;1606:18;;1487:177;4682:65:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4660:87;;4758:16;4791:13;;4777:11;:27;:61;;4837:1;4777:61;;;4821:13;;4807:27;;:11;:27;:::i;:::-;4758:80;;4868:1;4857:8;:12;4849:46;;;;-1:-1:-1;;;4849:46:20;;14706:2:21;4849:46:20;;;14688:21:21;14745:2;14725:18;;;14718:30;14784:23;14764:18;;;14757:51;14825:18;;4849:46:20;14504:345:21;4849:46:20;4933:11;;:37;;;;;;;;1633:25:21;;;4908:22:20;;-1:-1:-1;;;;;4933:11:20;;:27;;1606:18:21;;4933:37:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4981:11;;:64;;;;;;;;8060:25:21;;;5024:4:20;8162:18:21;;;8155:43;;;8214:18;;;8207:43;4908:62:20;;-1:-1:-1;;;;;;4981:11:20;;:18;;8033::21;;4981:64:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5102:9:20;;:28;;;;;;;;5058:24;;-1:-1:-1;;;;;5102:9:20;;:26;;:28;;;;;;;;;;;;;;:9;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5151:9;;5144:53;;;;;-1:-1:-1;;;;;8453:55:21;;;5144:53:20;;;8435:74:21;8525:18;;;8518:34;;;5058:73:20;;-1:-1:-1;5151:9:20;;;5144:25;;8408:18:21;;5144:53:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5210:17:20;5249:9;;5260:10;;5230:66;;;;;-1:-1:-1;;;;;5249:9:20;;;5230:66;;;15146:34:21;5260:10:20;;;15196:18:21;;;15189:43;15248:18;;;15241:34;;;5290:4:20;15291:18:21;;;15284:43;5230:18:20;;;;;;15057:19:21;;5230:66:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5210:86;;5330:9;5309:17;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;4624:723:20:o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2577:147:3:-:0;6931:20:1;:18;:20::i;:::-;2679:38:3::1;2702:5;2709:7;2679:22;:38::i;7483:1170::-:0;2359:20;-1:-1:-1;;;;;7625:18:3;;7621:546;;7779:5;7761:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7621:546:3;;-1:-1:-1;7621:546:3;;-1:-1:-1;;;;;7837:17:3;;7815:19;7837:17;;;;;;;;;;;7872:19;;;7868:115;;;7918:50;;;;;-1:-1:-1;;;;;14162:55:21;;7918:50:3;;;14144:74:21;14234:18;;;14227:34;;;14277:18;;;14270:34;;;14117:18;;7918:50:3;13942:368:21;7868:115:3;-1:-1:-1;;;;;8103:17:3;;:11;:17;;;;;;;;;;8123:19;;;;8103:39;;7621:546;-1:-1:-1;;;;;8181:16:3;;8177:429;;8344:14;;;:23;;;;;;;8177:429;;;-1:-1:-1;;;;;8557:15:3;;:11;:15;;;;;;;;;;:24;;;;;;8177:429;8636:2;-1:-1:-1;;;;;8621:25:3;8630:4;-1:-1:-1;;;;;8621:25:3;;8640:5;8621:25;;;;1633::21;;1621:2;1606:18;;1487:177;8621:25:3;;;;;;;;7558:1095;7483:1170;;;:::o;11224:487::-;2359:20;-1:-1:-1;;;;;11389:19:3;;11385:89;;11431:32;;;;;11460:1;11431:32;;;4372:74:21;4345:18;;11431:32:3;4226:226:21;11385:89:3;-1:-1:-1;;;;;11487:21:3;;11483:90;;11531:31;;;;;11559:1;11531:31;;;4372:74:21;4345:18;;11531:31:3;4226:226:21;11483:90:3;-1:-1:-1;;;;;11582:20:3;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11629:76;;;;11679:7;-1:-1:-1;;;;;11663:31:3;11672:5;-1:-1:-1;;;;;11663:31:3;;11688:5;11663:31;;;;1633:25:21;;1621:2;1606:18;;1487:177;11663:31:3;;;;;;;;11629:76;11322:389;11224:487;;;;:::o;3105:126:5:-;1270:23;2821:9;;;3163:62;;3199:15;;;;;;;;;;;;;;2779:335:9;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:9;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;;;;;;7146:73;;7191:17;;;;;;;;;;;;;;1980:235:0;6931:20:1;:18;:20::i;2730:216:3:-;6931:20:1;:18;:20::i;:::-;2359::3;2895:7;:15:::1;2905:5:::0;2895:7;:15:::1;:::i;:::-;-1:-1:-1::0;2920:9:3::1;::::0;::::1;:19;2932:7:::0;2920:9;:19:::1;:::i;2186:281:9:-:0;2263:17;-1:-1:-1;;;;;2263:29:9;;2296:1;2263:34;2259:119;;2320:47;;;;;-1:-1:-1;;;;;4390:55:21;;2320:47:9;;;4372:74:21;4345:18;;2320:47:9;4226:226:21;2259:119:9;1327:66;2387:73;;-1:-1:-1;;2387:73:9;-1:-1:-1;;;;;2387:73:9;;;;;;;;;;2186:281::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:13;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:13:o;6598:122:9:-;6648:9;:13;6644:70;;6684:19;;;;;;;;;;;;;;4625:582:13;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:13;;;:23;5045:49;5041:119;;;5121:24;;;;;-1:-1:-1;;;;;4390:55:21;;5121:24:13;;;4372:74:21;4345:18;;5121:24:13;4226:226:21;5041:119:13;-1:-1:-1;5180:10:13;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;14:154:21;-1:-1:-1;;;;;93:5:21;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;354:9;341:23;331:33;;414:2;403:9;399:18;386:32;427:31;452:5;427:31;:::i;:::-;477:5;467:15;;;173:315;;;;;:::o;493:477::-;642:2;631:9;624:21;605:4;674:6;668:13;717:6;712:2;701:9;697:18;690:34;776:6;771:2;763:6;759:15;754:2;743:9;739:18;733:50;832:1;827:2;818:6;807:9;803:22;799:31;792:42;961:2;-1:-1:-1;;886:2:21;878:6;874:15;870:88;859:9;855:104;851:113;843:121;;;493:477;;;;:::o;975:315::-;1043:6;1051;1104:2;1092:9;1083:7;1079:23;1075:32;1072:52;;;1120:1;1117;1110:12;1072:52;1159:9;1146:23;1178:31;1203:5;1178:31;:::i;:::-;1228:5;1280:2;1265:18;;;;1252:32;;-1:-1:-1;;;975:315:21:o;1669:456::-;1746:6;1754;1762;1815:2;1803:9;1794:7;1790:23;1786:32;1783:52;;;1831:1;1828;1821:12;1783:52;1870:9;1857:23;1889:31;1914:5;1889:31;:::i;:::-;1939:5;-1:-1:-1;1996:2:21;1981:18;;1968:32;2009:33;1968:32;2009:33;:::i;:::-;1669:456;;2061:7;;-1:-1:-1;;;2115:2:21;2100:18;;;;2087:32;;1669:456::o;2319:184::-;-1:-1:-1;;;2368:1:21;2361:88;2468:4;2465:1;2458:15;2492:4;2489:1;2482:15;2508:690;2572:5;2602:18;2643:2;2635:6;2632:14;2629:40;;;2649:18;;:::i;:::-;2783:2;2777:9;2849:2;2837:15;;-1:-1:-1;;2833:24:21;;;2859:2;2829:33;2825:42;2813:55;;;2883:18;;;2903:22;;;2880:46;2877:72;;;2929:18;;:::i;:::-;2969:10;2965:2;2958:22;2998:6;2989:15;;3028:6;3020;3013:22;3068:3;3059:6;3054:3;3050:16;3047:25;3044:45;;;3085:1;3082;3075:12;3044:45;3135:6;3130:3;3123:4;3115:6;3111:17;3098:44;3190:1;3183:4;3174:6;3166;3162:19;3158:30;3151:41;;;;2508:690;;;;;:::o;3203:584::-;3280:6;3288;3341:2;3329:9;3320:7;3316:23;3312:32;3309:52;;;3357:1;3354;3347:12;3309:52;3396:9;3383:23;3415:31;3440:5;3415:31;:::i;:::-;3465:5;-1:-1:-1;3521:2:21;3506:18;;3493:32;3548:18;3537:30;;3534:50;;;3580:1;3577;3570:12;3534:50;3603:22;;3656:4;3648:13;;3644:27;-1:-1:-1;3634:55:21;;3685:1;3682;3675:12;3634:55;3708:73;3773:7;3768:2;3755:16;3750:2;3746;3742:11;3708:73;:::i;:::-;3698:83;;;3203:584;;;;;:::o;3974:247::-;4033:6;4086:2;4074:9;4065:7;4061:23;4057:32;4054:52;;;4102:1;4099;4092:12;4054:52;4141:9;4128:23;4160:31;4185:5;4160:31;:::i;4457:388::-;4525:6;4533;4586:2;4574:9;4565:7;4561:23;4557:32;4554:52;;;4602:1;4599;4592:12;4554:52;4641:9;4628:23;4660:31;4685:5;4660:31;:::i;:::-;4710:5;-1:-1:-1;4767:2:21;4752:18;;4739:32;4780:33;4739:32;4780:33;:::i;4850:221::-;4893:5;4946:3;4939:4;4931:6;4927:17;4923:27;4913:55;;4964:1;4961;4954:12;4913:55;4986:79;5061:3;5052:6;5039:20;5032:4;5024:6;5020:17;4986:79;:::i;5076:1104::-;5200:6;5208;5216;5224;5232;5240;5293:3;5281:9;5272:7;5268:23;5264:33;5261:53;;;5310:1;5307;5300:12;5261:53;5350:9;5337:23;5379:18;5420:2;5412:6;5409:14;5406:34;;;5436:1;5433;5426:12;5406:34;5459:50;5501:7;5492:6;5481:9;5477:22;5459:50;:::i;:::-;5449:60;;5562:2;5551:9;5547:18;5534:32;5518:48;;5591:2;5581:8;5578:16;5575:36;;;5607:1;5604;5597:12;5575:36;;5630:52;5674:7;5663:8;5652:9;5648:24;5630:52;:::i;:::-;5620:62;;;5732:2;5721:9;5717:18;5704:32;5745:31;5770:5;5745:31;:::i;:::-;5795:5;-1:-1:-1;5852:2:21;5837:18;;5824:32;5865:33;5824:32;5865:33;:::i;:::-;5917:7;-1:-1:-1;5976:3:21;5961:19;;5948:33;5990;5948;5990;:::i;:::-;6042:7;-1:-1:-1;6101:3:21;6086:19;;6073:33;6115;6073;6115;:::i;:::-;6167:7;6157:17;;;5076:1104;;;;;;;;:::o;6895:184::-;-1:-1:-1;;;6944:1:21;6937:88;7044:4;7041:1;7034:15;7068:4;7065:1;7058:15;7084:168;7157:9;;;7188;;7205:15;;;7199:22;;7185:37;7175:71;;7226:18;;:::i;7257:274::-;7297:1;7323;7313:189;;-1:-1:-1;;;7355:1:21;7348:88;7459:4;7456:1;7449:15;7487:4;7484:1;7477:15;7313:189;-1:-1:-1;7516:9:21;;7257:274::o;7536:128::-;7603:9;;;7624:11;;;7621:37;;;7638:18;;:::i;7669:184::-;7739:6;7792:2;7780:9;7771:7;7767:23;7763:32;7760:52;;;7808:1;7805;7798:12;7760:52;-1:-1:-1;7831:16:21;;7669:184;-1:-1:-1;7669:184:21:o;8563:277::-;8630:6;8683:2;8671:9;8662:7;8658:23;8654:32;8651:52;;;8699:1;8696;8689:12;8651:52;8731:9;8725:16;8784:5;8777:13;8770:21;8763:5;8760:32;8750:60;;8806:1;8803;8796:12;8845:437;8924:1;8920:12;;;;8967;;;8988:61;;9042:4;9034:6;9030:17;9020:27;;8988:61;9095:2;9087:6;9084:14;9064:18;9061:38;9058:218;;-1:-1:-1;;;9129:1:21;9122:88;9233:4;9230:1;9223:15;9261:4;9258:1;9251:15;9058:218;;8845:437;;;:::o;9287:251::-;9357:6;9410:2;9398:9;9389:7;9385:23;9381:32;9378:52;;;9426:1;9423;9416:12;9378:52;9458:9;9452:16;9477:31;9502:5;9477:31;:::i;9946:125::-;10011:9;;;10032:10;;;10029:36;;;10045:18;;:::i;12011:273::-;12079:6;12132:2;12120:9;12111:7;12107:23;12103:32;12100:52;;;12148:1;12145;12138:12;12100:52;12180:9;12174:16;12230:4;12223:5;12219:16;12212:5;12209:27;12199:55;;12250:1;12247;12240:12;12289:151;12379:4;12372:12;;;12358;;;12354:31;;12397:14;;12394:40;;;12414:18;;:::i;12445:476::-;12534:1;12571:5;12534:1;12585:330;12606:7;12596:8;12593:21;12585:330;;;12725:4;-1:-1:-1;;12653:77:21;12647:4;12644:87;12641:113;;;12734:18;;:::i;:::-;12784:7;12774:8;12770:22;12767:55;;;12804:16;;;;12767:55;12883:22;;;;12843:15;;;;12585:330;;;12589:3;12445:476;;;;;:::o;12926:866::-;12975:5;13005:8;12995:80;;-1:-1:-1;13046:1:21;13060:5;;12995:80;13094:4;13084:76;;-1:-1:-1;13131:1:21;13145:5;;13084:76;13176:4;13194:1;13189:59;;;;13262:1;13257:130;;;;13169:218;;13189:59;13219:1;13210:10;;13233:5;;;13257:130;13294:3;13284:8;13281:17;13278:43;;;13301:18;;:::i;:::-;-1:-1:-1;;13357:1:21;13343:16;;13372:5;;13169:218;;13471:2;13461:8;13458:16;13452:3;13446:4;13443:13;13439:36;13433:2;13423:8;13420:16;13415:2;13409:4;13406:12;13402:35;13399:77;13396:159;;;-1:-1:-1;13508:19:21;;;13540:5;;13396:159;13587:34;13612:8;13606:4;13587:34;:::i;:::-;13717:6;-1:-1:-1;;13645:79:21;13636:7;13633:92;13630:118;;;13728:18;;:::i;:::-;13766:20;;12926:866;-1:-1:-1;;;12926:866:21:o;13797:140::-;13855:5;13884:47;13925:4;13915:8;13911:19;13905:4;13884:47;:::i;15464:518::-;15566:2;15561:3;15558:11;15555:421;;;15602:5;15599:1;15592:16;15646:4;15643:1;15633:18;15716:2;15704:10;15700:19;15697:1;15693:27;15687:4;15683:38;15752:4;15740:10;15737:20;15734:47;;;-1:-1:-1;15775:4:21;15734:47;15830:2;15825:3;15821:12;15818:1;15814:20;15808:4;15804:31;15794:41;;15885:81;15903:2;15896:5;15893:13;15885:81;;;15962:1;15948:16;;15929:1;15918:13;15885:81;;16218:1464;16344:3;16338:10;16371:18;16363:6;16360:30;16357:56;;;16393:18;;:::i;:::-;16422:97;16512:6;16472:38;16504:4;16498:11;16472:38;:::i;:::-;16466:4;16422:97;:::i;:::-;16574:4;;16631:2;16620:14;;16648:1;16643:782;;;;17469:1;17486:6;17483:89;;;-1:-1:-1;17538:19:21;;;17532:26;17483:89;-1:-1:-1;;16115:1:21;16111:11;;;16107:84;16103:89;16093:100;16199:1;16195:11;;;16090:117;17585:81;;16613:1063;;16643:782;15411:1;15404:14;;;15448:4;15435:18;;-1:-1:-1;;16679:79:21;;;16856:236;16870:7;16867:1;16864:14;16856:236;;;16959:19;;;16953:26;16938:42;;17051:27;;;;17019:1;17007:14;;;;16886:19;;16856:236;;;16860:3;17120:6;17111:7;17108:19;17105:261;;;17181:19;;;17175:26;-1:-1:-1;;17264:1:21;17260:14;;;17276:3;17256:24;17252:97;17248:102;17233:118;17218:134;;17105:261;;;17412:1;17403:6;17400:1;17396:14;17392:22;17386:4;17379:36;16613:1063;;;;;16218:1464;;:::o;17687:301::-;17816:3;17854:6;17848:13;17900:6;17893:4;17885:6;17881:17;17876:3;17870:37;17962:1;17926:16;;17951:13;;;-1:-1:-1;17926:16:21;17687:301;-1:-1:-1;17687:301:21:o"},"gasEstimates":{"creation":{"codeDepositCost":"2450200","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"infinite","accumulatedAssetB()":"2382","allowance(address,address)":"infinite","approve(address,uint256)":"24809","balanceOf(address)":"2595","baseAsset()":"2402","buy()":"infinite","decimals()":"288","deposit(uint256,address)":"infinite","initialize(string,string,address,address,address,address)":"infinite","name()":"infinite","owner()":"2420","pause()":"infinite","paused()":"2415","proxiableUUID()":"infinite","quoteAsset()":"2446","registry()":"2430","renounceOwnership()":"infinite","symbol()":"infinite","totalDeposits()":"2340","totalSupply()":"2326","totalValuation()":"infinite","transfer(address,uint256)":"51326","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"infinite","unitPrice()":"infinite","unpause()":"infinite","upgradeToAndCall(address,bytes)":"infinite","withdraw(uint256,address)":"infinite","yearnVault()":"2397"},"internal":{"_authorizeUpgrade(address)":"infinite","_buy()":"infinite","_processInterest()":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","accumulatedAssetB()":"f7fde10f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","buy()":"a6f2ae3a","decimals()":"313ce567","deposit(uint256,address)":"6e553f65","initialize(string,string,address,address,address,address)":"e56f2fe4","name()":"06fdde03","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","proxiableUUID()":"52d1902d","quoteAsset()":"fdf262b7","registry()":"7b103999","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalDeposits()":"7d882097","totalSupply()":"18160ddd","totalValuation()":"295b9300","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unitPrice()":"e73faa2d","unpause()":"3f4ba83a","upgradeToAndCall(address,bytes)":"4f1ef286","withdraw(uint256,address)":"00f714ce","yearnVault()":"9db5df46"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accumulatedAssetB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_assetA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yearnVaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_assetB\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_registryAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yearnVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"deposit(uint256,address)\":{\"details\":\"Deposits assetA into the pool and Yearn Vault.\",\"params\":{\"amount\":\"The amount of assetA to deposit.\",\"to\":\"The address to receive pool tokens.\"}},\"initialize(string,string,address,address,address,address)\":{\"details\":\"Initializes the BaluniV1Pool contract.\",\"params\":{\"_assetA\":\"The address of the accepted asset.\",\"_assetB\":\"The address of the asset to be purchased with interest.\",\"_registryAddress\":\"The address of the BaluniV1Registry contract.\",\"_yearnVaultAddress\":\"The address of the Yearn Vault for assetA.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"pause pool, restricting certain operations\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"unpause pool, enabling certain operations\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdraw(uint256,address)\":{\"details\":\"Withdraws assetA and assetB from the pool and Yearn Vault.\",\"params\":{\"shares\":\"The amount of pool tokens to redeem.\",\"to\":\"The address to receive assetA and assetB.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vaults/BaluniV1yVault.sol\":\"BaluniV1yVault\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport {ContextUpgradeable} from \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport {IERC20Errors} from \\\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\\\";\\nimport {Initializable} from \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\\n    struct ERC20Storage {\\n        mapping(address account => uint256) _balances;\\n\\n        mapping(address account => mapping(address spender => uint256)) _allowances;\\n\\n        uint256 _totalSupply;\\n\\n        string _name;\\n        string _symbol;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ERC20\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\\n\\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\\n        assembly {\\n            $.slot := ERC20StorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        $._name = name_;\\n        $._symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        return $._allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            $._totalSupply += value;\\n        } else {\\n            uint256 fromBalance = $._balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                $._balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                $._totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                $._balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        ERC20Storage storage $ = _getERC20Storage();\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        $._allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9a1766b1921bf91b3e61eb53c7a6e70725254befd4bdcbbcd3af40bd9f66856f\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\\n    struct PausableStorage {\\n        bool _paused;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Pausable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\\n\\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\\n        assembly {\\n            $.slot := PausableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        PausableStorage storage $ = _getPausableStorage();\\n        return $._paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        PausableStorage storage $ = _getPausableStorage();\\n        $._paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    /// @custom:storage-location erc7201:openzeppelin.storage.ReentrancyGuard\\n    struct ReentrancyGuardStorage {\\n        uint256 _status;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.ReentrancyGuard\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant ReentrancyGuardStorageLocation = 0x9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00;\\n\\n    function _getReentrancyGuardStorage() private pure returns (ReentrancyGuardStorage storage $) {\\n        assembly {\\n            $.slot := ReentrancyGuardStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if ($._status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        $._status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        $._status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        ReentrancyGuardStorage storage $ = _getReentrancyGuardStorage();\\n        return $._status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xb44e086e941292cdc7f440de51478493894ef0b1aeccb0c4047445919f667f74\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Oracle.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Oracle {\\r\\n    function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256 valuation);\\r\\n\\r\\n    function convertScaled(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) external view returns (uint256 valuation);\\r\\n}\\r\\n\",\"keccak256\":\"0x2bc62f7640b15a1772de630216f6fe6aa7a719cb6cf0255befdde19ec8de785a\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Registry.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\n/**\\r\\n * @title IBaluniV1Registry\\r\\n * @dev Interface for the BaluniV1Registry contract.\\r\\n */\\r\\ninterface IBaluniV1Registry {\\r\\n    function setUniswapFactory(address _uniswapFactory) external;\\r\\n\\r\\n    function setUniswapRouter(address _uniswapRouter) external;\\r\\n\\r\\n    function setBaluniAgentFactory(address _baluniAgentFactory) external;\\r\\n\\r\\n    function setBaluniPoolPeriphery(address _baluniPoolPeriphery) external;\\r\\n\\r\\n    function setBaluniSwapper(address _baluniSwapper) external;\\r\\n\\r\\n    function setBaluniOracle(address _baluniOracle) external;\\r\\n\\r\\n    function setBaluniPoolRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniVaultRegistry(address _baluniPoolRegistry) external;\\r\\n\\r\\n    function setBaluniRebalancer(address _baluniRebalancer) external;\\r\\n\\r\\n    function setBaluniRouter(address _baluniRouter) external;\\r\\n\\r\\n    function setBaluniRegistry(address _baluniRegistry) external;\\r\\n\\r\\n    function setWNATIVE(address _WNATIVE) external;\\r\\n\\r\\n    function setUSDC(address _USDC) external;\\r\\n\\r\\n    function setTreasury(address _treasury) external;\\r\\n\\r\\n    function set1inchSpotAgg(address __1inchSpotAgg) external;\\r\\n\\r\\n    function setBPS_FEE(uint256 __BPS_FEE) external;\\r\\n\\r\\n    function getUniswapFactory() external view returns (address);\\r\\n\\r\\n    function getUniswapRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniSwapper() external view returns (address);\\r\\n\\r\\n    function getBaluniOracle() external view returns (address);\\r\\n\\r\\n    function getBaluniAgentFactory() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolPeriphery() external view returns (address);\\r\\n\\r\\n    function getBaluniVaultRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniPoolRegistry() external view returns (address);\\r\\n\\r\\n    function getBaluniRebalancer() external view returns (address);\\r\\n\\r\\n    function getBaluniRouter() external view returns (address);\\r\\n\\r\\n    function getBaluniRegistry() external view returns (address);\\r\\n\\r\\n    function getWNATIVE() external view returns (address);\\r\\n\\r\\n    function getUSDC() external view returns (address);\\r\\n\\r\\n    function get1inchSpotAgg() external view returns (address);\\r\\n\\r\\n    function getBPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getMAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n    function getBPS_BASE() external view returns (uint256);\\r\\n\\r\\n    function getTreasury() external view returns (address);\\r\\n\\r\\n    function setStaticOracle(address _staticOracle) external;\\r\\n\\r\\n    function getStaticOracle() external view returns (address);\\r\\n}\\r\\n\",\"keccak256\":\"0x7e73b74ed81791ac27ab8e6f5877d7d6c969567be86125ee3ce2c77825487127\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Swapper.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Swapper {\\r\\n    function singleSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n    function multiHopSwap(\\r\\n        address token0,\\r\\n        address token1,\\r\\n        address token2,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 amountOut);\\r\\n}\\r\\n\",\"keccak256\":\"0x8113df3342115499d21149fa3fe70412cb6bdbf79766870f929b3845e1d2a0fe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1yVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1yVault {\\r\\n    function baseAsset() external view returns (address);\\r\\n    function yearnVault() external view returns (address);\\r\\n    function quoteAsset() external view returns (address);\\r\\n    function registry() external view returns (address);\\r\\n    function totalDeposits() external view returns (uint256);\\r\\n    function accumulatedAssetB() external view returns (uint256);\\r\\n    function deposit(uint256 amount, address to) external;\\r\\n    function withdraw(uint256 shares, address to) external;\\r\\n    function buy() external;\\r\\n    function pause() external;\\r\\n    function unpause() external;\\r\\n    function totalValuation() external view returns (uint256);\\r\\n    function unitPrice() external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x361b80490f16b8536f68e5b5c814b33615f8866ac345d23765e3edd12b2c6925\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IYearnVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IYearnVault {\\r\\n    function asset() external view returns (address);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function maxDeposit(address receiver) external view returns (uint256);\\r\\n\\r\\n    function redeem(uint256 shares, address receiver, address owner) external returns (uint256);\\r\\n\\r\\n    function deposit(uint256 assets, address receiver) external returns (uint256);\\r\\n\\r\\n    function totalAssets() external view returns (uint256);\\r\\n\\r\\n    function convertToAssets(uint256 shares) external view returns (uint256);\\r\\n\\r\\n    function convertToShares(uint256 assets) external view returns (uint256);\\r\\n\\r\\n    function previewWithdraw(uint256 assets) external view returns (uint256);\\r\\n\\r\\n    function maxRedeem(address owner) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x32952c4cf75af24a48eb5ce8ca05358d527dba5532e6f19e4db12ef418b82ab8\",\"license\":\"MIT\"},\"contracts/vaults/BaluniV1yVault.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol';\\r\\n\\r\\nimport '../interfaces/IBaluniV1Registry.sol';\\r\\nimport '../interfaces/IYearnVault.sol';\\r\\nimport '../interfaces/IBaluniV1Swapper.sol';\\r\\nimport '../interfaces/IBaluniV1Oracle.sol';\\r\\nimport '../interfaces/IBaluniV1yVault.sol';\\r\\n\\r\\ncontract BaluniV1yVault is\\r\\n    Initializable,\\r\\n    UUPSUpgradeable,\\r\\n    OwnableUpgradeable,\\r\\n    ERC20Upgradeable,\\r\\n    ReentrancyGuardUpgradeable,\\r\\n    PausableUpgradeable,\\r\\n    IBaluniV1yVault\\r\\n{\\r\\n    // The address of the asset accepted by the pool\\r\\n    address public baseAsset;\\r\\n\\r\\n    // The address of the Yearn Vault for assetA\\r\\n    IYearnVault private _yearnVault;\\r\\n\\r\\n    // The address of the asset to be purchased with interest\\r\\n    address public quoteAsset;\\r\\n\\r\\n    // The registry contract used in the BaluniV1 system\\r\\n    IBaluniV1Registry private _registry;\\r\\n\\r\\n    uint256 public totalDeposits;\\r\\n\\r\\n    uint256 public accumulatedAssetB;\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the BaluniV1Pool contract.\\r\\n     * @param _assetA The address of the accepted asset.\\r\\n     * @param _yearnVaultAddress The address of the Yearn Vault for assetA.\\r\\n     * @param _assetB The address of the asset to be purchased with interest.\\r\\n     * @param _registryAddress The address of the BaluniV1Registry contract.\\r\\n     */\\r\\n    function initialize(\\r\\n        string memory _name,\\r\\n        string memory _symbol,\\r\\n        address _assetA,\\r\\n        address _yearnVaultAddress,\\r\\n        address _assetB,\\r\\n        address _registryAddress\\r\\n    ) external initializer {\\r\\n        __Ownable_init(msg.sender);\\r\\n        __ERC20_init(_name, _symbol);\\r\\n\\r\\n        baseAsset = _assetA;\\r\\n        _yearnVault = IYearnVault(_yearnVaultAddress);\\r\\n        quoteAsset = _assetB;\\r\\n        _registry = IBaluniV1Registry(_registryAddress);\\r\\n\\r\\n        require(baseAsset != address(0), 'Invalid assetA address');\\r\\n        require(address(_yearnVault) != address(0), 'Invalid Yearn Vault address');\\r\\n        require(quoteAsset != address(0), 'Invalid assetB address');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n     * @param newImplementation The address of the new implementation contract.\\r\\n     * @notice This function can only be called by the contract owner.\\r\\n     */\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Deposits assetA into the pool and Yearn Vault.\\r\\n     * @param amount The amount of assetA to deposit.\\r\\n     * @param to The address to receive pool tokens.\\r\\n     */\\r\\n    function deposit(uint256 amount, address to) external override nonReentrant whenNotPaused {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        _processInterest();\\r\\n\\r\\n        IERC20(baseAsset).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n        IERC20(baseAsset).approve(address(_yearnVault), amount);\\r\\n        _yearnVault.deposit(amount, address(this));\\r\\n\\r\\n        _mint(to, amount);\\r\\n        totalDeposits += amount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Withdraws assetA and assetB from the pool and Yearn Vault.\\r\\n     * @param shares The amount of pool tokens to redeem.\\r\\n     * @param to The address to receive assetA and assetB.\\r\\n     */\\r\\n    function withdraw(uint256 shares, address to) external override nonReentrant whenNotPaused {\\r\\n        require(shares > 0, 'Shares must be greater than zero');\\r\\n        require(balanceOf(msg.sender) >= shares, 'Insufficient balance');\\r\\n\\r\\n        uint256 withdrawAmountA = (shares * totalDeposits) / totalSupply();\\r\\n        uint256 withdrawAmountB = (shares * accumulatedAssetB) / totalSupply();\\r\\n\\r\\n        _burn(msg.sender, shares);\\r\\n        totalDeposits -= withdrawAmountA;\\r\\n        accumulatedAssetB -= withdrawAmountB;\\r\\n\\r\\n        uint256 sharesToRedeem = _yearnVault.convertToShares(withdrawAmountA);\\r\\n        _yearnVault.redeem(sharesToRedeem, address(this), address(this));\\r\\n        IERC20(baseAsset).transfer(to, withdrawAmountA);\\r\\n        IERC20(quoteAsset).transfer(to, withdrawAmountB);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Uses the accumulated interest to purchase assetB.\\r\\n     */\\r\\n    function _buy() internal {\\r\\n        uint256 totalAssets = _yearnVault.convertToAssets(_yearnVault.balanceOf(address(this)));\\r\\n        uint256 interest = totalAssets > totalDeposits ? totalAssets - totalDeposits : 0;\\r\\n        require(interest > 0, 'No interest available');\\r\\n\\r\\n        uint256 sharesToRedeem = _yearnVault.previewWithdraw(interest);\\r\\n        _yearnVault.redeem(sharesToRedeem, address(this), address(this));\\r\\n\\r\\n        IBaluniV1Swapper swapper = IBaluniV1Swapper(_registry.getBaluniSwapper());\\r\\n\\r\\n        IERC20(baseAsset).approve(address(swapper), interest);\\r\\n\\r\\n        uint256 amountOut = swapper.singleSwap(baseAsset, quoteAsset, interest, address(this));\\r\\n\\r\\n        accumulatedAssetB += amountOut;\\r\\n    }\\r\\n\\r\\n    function buy() external override nonReentrant onlyOwner whenNotPaused {\\r\\n        _buy();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Checks and processes accumulated interest.\\r\\n     */\\r\\n    function _processInterest() internal {\\r\\n        uint256 totalAssets = _yearnVault.convertToAssets(_yearnVault.balanceOf(address(this)));\\r\\n        uint256 interest = totalAssets > totalDeposits ? totalAssets - totalDeposits : 0;\\r\\n        if (interest > 0) {\\r\\n            _buy();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev pause pool, restricting certain operations\\r\\n     */\\r\\n    function pause() external override onlyOwner {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev unpause pool, enabling certain operations\\r\\n     */\\r\\n    function unpause() external override onlyOwner {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    function totalValuation() public view override returns (uint256) {\\r\\n        IBaluniV1Oracle oracle = IBaluniV1Oracle(_registry.getBaluniOracle());\\r\\n        address USDC = _registry.getUSDC();\\r\\n        uint256 valuation = 0;\\r\\n        uint balanceBase = IERC20(baseAsset).balanceOf(address(this));\\r\\n        uint yearnBalance = _yearnVault.balanceOf(address(this));\\r\\n        uint yearnBalanceConvert = _yearnVault.convertToAssets(yearnBalance);\\r\\n        uint balanceQuote = IERC20(quoteAsset).balanceOf(address(this));\\r\\n        valuation += oracle.convert(quoteAsset, baseAsset, yearnBalanceConvert);\\r\\n        valuation += oracle.convert(quoteAsset, baseAsset, balanceQuote);\\r\\n        if (baseAsset != USDC) valuation += oracle.convert(baseAsset, USDC, balanceBase);\\r\\n        valuation += balanceBase;\\r\\n        return valuation;\\r\\n    }\\r\\n\\r\\n    function unitPrice() external view override returns (uint256) {\\r\\n        address USDC = _registry.getUSDC();\\r\\n        uint8 decimals = IERC20Metadata(USDC).decimals();\\r\\n        uint256 valuationScaledUp = totalValuation() * 10 ** (18 - decimals);\\r\\n        return (valuationScaledUp / totalSupply()) * 1e18;\\r\\n    }\\r\\n\\r\\n    function registry() external view override returns (address) {\\r\\n        return address(_registry);\\r\\n    }\\r\\n\\r\\n    function yearnVault() external view override returns (address) {\\r\\n        return address(_yearnVault);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x5e90958c4256ff26f5ccc0191b9f2f787eae2b332e01c0fe4630c36ed027afa4\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2935,"contract":"contracts/vaults/BaluniV1yVault.sol:BaluniV1yVault","label":"baseAsset","offset":0,"slot":"0","type":"t_address"},{"astId":2938,"contract":"contracts/vaults/BaluniV1yVault.sol:BaluniV1yVault","label":"_yearnVault","offset":0,"slot":"1","type":"t_contract(IYearnVault)2906"},{"astId":2940,"contract":"contracts/vaults/BaluniV1yVault.sol:BaluniV1yVault","label":"quoteAsset","offset":0,"slot":"2","type":"t_address"},{"astId":2943,"contract":"contracts/vaults/BaluniV1yVault.sol:BaluniV1yVault","label":"_registry","offset":0,"slot":"3","type":"t_contract(IBaluniV1Registry)2734"},{"astId":2945,"contract":"contracts/vaults/BaluniV1yVault.sol:BaluniV1yVault","label":"totalDeposits","offset":0,"slot":"4","type":"t_uint256"},{"astId":2947,"contract":"contracts/vaults/BaluniV1yVault.sol:BaluniV1yVault","label":"accumulatedAssetB","offset":0,"slot":"5","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IBaluniV1Registry)2734":{"encoding":"inplace","label":"contract IBaluniV1Registry","numberOfBytes":"20"},"t_contract(IYearnVault)2906":{"encoding":"inplace","label":"contract IYearnVault","numberOfBytes":"20"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}