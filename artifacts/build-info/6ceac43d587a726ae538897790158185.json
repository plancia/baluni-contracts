{"id":"6ceac43d587a726ae538897790158185","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1Rebalancer.sol';\r\nimport './interfaces/IBaluniV1Router.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\r\n\r\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\r\n\r\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\r\n    AssetInfo[] public assetInfos;\r\n    uint256 public trigger;\r\n    uint256 public ONE;\r\n    address public periphery;\r\n    address public factory;\r\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\r\n    address public baseAsset;\r\n    address public rebalancer;\r\n\r\n    mapping(address => uint256) public reserves;\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    /**\r\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\r\n     * @param _rebalancer The address of the rebalancer contract.\r\n     * @param _assets An array of addresses representing the assets in the pool.\r\n     * @param _weights An array of weights corresponding to the assets in the pool.\r\n     * @param _trigger The trigger value for rebalancing the pool.\r\n     * @param _periphery The address of the periphery contract.\r\n     */\r\n    constructor(\r\n        address _rebalancer,\r\n        address[] memory _assets,\r\n        uint256[] memory _weights,\r\n        uint256 _trigger,\r\n        address _periphery\r\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\r\n        // Initialize contract state variables\r\n        periphery = _periphery;\r\n        factory = msg.sender;\r\n        rebalancer = _rebalancer;\r\n        ONE = 1e18;\r\n\r\n        // Initialize assets and weights\r\n        initializeAssets(_assets, _weights);\r\n\r\n        // Set trigger value\r\n        trigger = _trigger;\r\n\r\n        // Set base asset\r\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\r\n\r\n        // Ensure the sum of weights equals 10000\r\n        uint256 totalWeight = 0;\r\n        for (uint256 i = 0; i < _weights.length; i++) {\r\n            totalWeight += _weights[i];\r\n        }\r\n        require(totalWeight == 10000, 'Invalid weights');\r\n    }\r\n\r\n    modifier onlyPeriphery() {\r\n        require(msg.sender == periphery, 'Only Periphery');\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the assets and their weights for the pool.\r\n     * @param _assets The array of asset addresses.\r\n     * @param _weights The array of weights corresponding to each asset.\r\n     */\r\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\r\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\r\n\r\n        for (uint256 i = 0; i < _assets.length; i++) {\r\n            require(_assets[i] != address(0), 'Invalid asset address');\r\n            require(_weights[i] > 0, 'Invalid weight');\r\n\r\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\r\n\r\n            IERC20 asset = IERC20(_assets[i]);\r\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\r\n                asset.approve(address(rebalancer), type(uint256).max);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\r\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\r\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\r\n     * @param receiver The address to receive the minted liquidity tokens.\r\n     */\r\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\r\n\r\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\r\n\r\n        // Calculate total added liquidity before minting\r\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\r\n            if (amountsToAdd[i] > 0) {\r\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\r\n            }\r\n        }\r\n\r\n        _mint(receiver, totalAddedLiquidity);\r\n\r\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\r\n     *\r\n     * Requirements:\r\n     * - `fromToken` and `toToken` must be different tokens.\r\n     * - `amount` must be greater than zero.\r\n     * - Sufficient liquidity of `toToken` must be available in the contract.\r\n     *\r\n     * Emits a `Swap` event with the details of the swap.\r\n     *\r\n     * Updates the reserves after the swap.\r\n     *\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of `fromToken` to swap.\r\n     * @param receiver The address to receive the swapped tokens.\r\n     * @return toSend The amount of `toToken` received after the swap.\r\n     */\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external nonReentrant returns (uint256 toSend) {\r\n        require(fromToken != toToken, 'Cannot swap the same token');\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        // Get the amount of toToken to be received\r\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\r\n\r\n        // Check if there is sufficient liquidity\r\n        require(reserves[toToken] >= receivedAmount, 'Insufficient Liquidity');\r\n\r\n        // apply fee\r\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\r\n        toSend = receivedAmount - fee;\r\n\r\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\r\n\r\n        return toSend;\r\n    }\r\n\r\n    /**\r\n     * @dev Mints new tokens and adds them to the specified address.\r\n     * @param to The address to which the new tokens will be minted.\r\n     * @return The amount of tokens minted.\r\n     */\r\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\r\n        uint256 totalSupply = totalSupply();\r\n        uint256 totalValue = 0;\r\n        uint256[] memory _reserves = getReserves();\r\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\r\n        require(assetInfos.length > 0, 'No assets');\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            address asset = assetInfos[i].asset;\r\n\r\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\r\n            totalValue += valuation;\r\n        }\r\n\r\n        require(totalValue > 0, 'Total value must be greater than 0');\r\n\r\n        uint256 toMint;\r\n\r\n        if (totalSupply == 0) {\r\n            toMint = totalValue;\r\n        } else {\r\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\r\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\r\n            toMint = ((totalValue) * totalSupply) / totalLiquidity;\r\n        }\r\n        require(toMint != 0, 'Mint qty is 0');\r\n\r\n        uint256 b4 = balanceOf(msg.sender);\r\n        _mint(to, toMint);\r\n        uint256 b = balanceOf(to) - b4;\r\n\r\n        require(b == toMint, 'Mint Failed');\r\n\r\n        emit Mint(to, toMint);\r\n\r\n        return toMint;\r\n    }\r\n\r\n    /**\r\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\r\n     * @param to The address to transfer the underlying assets to.\r\n     * @notice This function can only be called by the periphery contract.\r\n     * @notice The pool tokens must have a balance greater than 0.\r\n     * @notice The total supply of pool tokens must be greater than 0.\r\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\r\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\r\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\r\n     * @notice If any transfer fails, the function reverts the entire operation.\r\n     * @notice After the transfers, the function updates the reserves of the pool.\r\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\r\n     */\r\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\r\n        uint256 share = balanceOf(address(this));\r\n        require(share > 0, 'Share must be greater than 0');\r\n\r\n        uint256 totalSupply = totalSupply();\r\n        require(totalSupply > 0, 'No liquidity');\r\n\r\n        uint256[] memory amounts = new uint256[](assetInfos.length);\r\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\r\n        uint256 shareAfterFee = share - fee;\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\r\n                address(this),\r\n                assetInfos[i].asset\r\n            );\r\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\r\n        }\r\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\r\n\r\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\r\n        require(feeTransferSuccess, 'Fee transfer failed');\r\n\r\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\r\n\r\n        _burn(address(this), shareAfterFee);\r\n\r\n        emit Burn(to, shareAfterFee);\r\n\r\n        return amounts;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\r\n     * @param fromToken The address of the token being swapped from.\r\n     * @param toToken The address of the token being swapped to.\r\n     * @param amount The amount of `fromToken` being swapped.\r\n     * @return The amount of `toToken` that will be received.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\r\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance\r\n     */\r\n    function performRebalanceIfNeeded() external onlyPeriphery {\r\n        require(isRebalanceNeeded(), 'Rebalance not needed');\r\n        _performRebalanceIfNeeded();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\r\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\r\n     */\r\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\r\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\r\n        uint256 numAssets = assetInfos.length;\r\n\r\n        directions = new bool[](numAssets);\r\n        deviations = new uint256[](numAssets);\r\n\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\r\n            uint256 targetWeight = assetInfos[i].weight;\r\n\r\n            if (currentWeight > targetWeight) {\r\n                deviations[i] = currentWeight - targetWeight;\r\n                directions[i] = true;\r\n            } else {\r\n                deviations[i] = targetWeight - currentWeight;\r\n                directions[i] = false;\r\n            }\r\n        }\r\n\r\n        return (directions, deviations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the liquidity of a specific asset in the pool.\r\n     * @param assetIndex The index of the asset.\r\n     * @return The liquidity of the asset.\r\n     */\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\r\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\r\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\r\n        return usdValuations[assetIndex];\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\r\n     * @return totalVal The total valuation of the pool.\r\n     * @return valuations An array of individual valuations.\r\n     */\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\r\n        (totalVal, valuations) = _computeTotalValuation();\r\n        return (totalVal, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the total liquidity of the pool.\r\n     * @return The total liquidity of the pool.\r\n     */\r\n    function liquidity() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        return totalVal;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the unit price of the pool.\r\n     * @return The unit price of the pool.\r\n     */\r\n    function unitPrice() external view returns (uint256) {\r\n        (uint256 totalVal, ) = _computeTotalValuation();\r\n        uint256 totalSupply = totalSupply();\r\n        if (totalSupply == 0) {\r\n            return 0;\r\n        }\r\n        return (totalVal * ONE) / totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of reserves for each asset in the pool.\r\n     * @return An array of reserves.\r\n     */\r\n    function getReserves() public view returns (uint256[] memory) {\r\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the reserve amount of the specified asset.\r\n     * @param asset The address of the asset.\r\n     * @return The reserve amount of the asset.\r\n     */\r\n    function getAssetReserve(address asset) public view returns (uint256) {\r\n        return reserves[asset];\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of assets in the pool.\r\n     * @return An array of addresses representing the assets.\r\n     */\r\n    function getAssets() external view returns (address[] memory) {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n        }\r\n        return assets;\r\n    }\r\n\r\n    /**\r\n     * @dev Retrieves the list of weights associated with the assets in the pool.\r\n     * @return An array of uint256 values representing the weights.\r\n     */\r\n    function getWeights() external view returns (uint256[] memory) {\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            weights[i] = assetInfos[i].weight;\r\n        }\r\n        return weights;\r\n    }\r\n\r\n    /**\r\n     * @dev Computes the total valuation of the assets in the pool.\r\n     * @return totalValuation The total valuation of the assets.\r\n     * @return valuations An array of valuations for each asset in the pool.\r\n     */\r\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\r\n        uint256 numAssets = assetInfos.length;\r\n        valuations = new uint256[](numAssets);\r\n        for (uint256 i = 0; i < numAssets; i++) {\r\n            IERC20 asset = IERC20(assetInfos[i].asset);\r\n\r\n            if ((address(asset) == baseAsset)) {\r\n                valuations[i] = reserves[address(asset)];\r\n            } else {\r\n                uint256 valuation = _convertTokenToBase(address(asset), reserves[address(asset)]);\r\n                valuations[i] = valuation;\r\n            }\r\n            totalValuation += valuations[i];\r\n        }\r\n        return (totalValuation, valuations);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed.\r\n     * This function retrieves the assets and weights from the `assetInfos` array,\r\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\r\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\r\n     * @notice This function should only be called internally.\r\n     */\r\n    function _performRebalanceIfNeeded() internal {\r\n        address[] memory assets = new address[](assetInfos.length);\r\n        uint256[] memory weights = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\r\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\r\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            assets[i] = assetInfos[i].asset;\r\n            weights[i] = assetInfos[i].weight;\r\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\r\n        }\r\n\r\n        uint256[] memory balances = getReserves();\r\n\r\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\r\n\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\r\n\r\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\r\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\r\n            } else {\r\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\r\n            }\r\n        }\r\n\r\n        _updateReserves(amountsToAdd, true);\r\n        _updateReserves(amountsToRemove, false);\r\n\r\n        emit RebalancePerformed(msg.sender, assets);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the total added liquidity based on the amounts to add.\r\n     * @param amountsToAdd An array of amounts to add for each asset.\r\n     * @return totalAddedLiquidity The total added liquidity.\r\n     */\r\n    function _calculateTotalAddedLiquidity(\r\n        uint256[] memory amountsToAdd\r\n    ) internal view returns (uint256 totalAddedLiquidity) {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            totalAddedLiquidity += amountsToAdd[i];\r\n        }\r\n        return totalAddedLiquidity;\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\r\n     * @param totalValuation The total valuation of the pool.\r\n     * @param valuations An array of current valuations for each asset.\r\n     * @return amountsToAdd An array of amounts to add to each asset.\r\n     */\r\n    function _calculateAmountsToAdd(\r\n        uint256 totalValuation,\r\n        uint256[] memory valuations\r\n    ) internal view returns (uint256[] memory amountsToAdd) {\r\n        amountsToAdd = new uint256[](assetInfos.length);\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\r\n            if (valuations[i] < targetValuation) {\r\n                amountsToAdd[i] = targetValuation - valuations[i];\r\n            }\r\n        }\r\n        return amountsToAdd;\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\r\n     * @param index The index of the asset in the assetInfos array.\r\n     * @param amountToAdd The amount of native tokens to add as liquidity.\r\n     */\r\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\r\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\r\n        require(tokenAmount > 0, 'Invalid token amount to add');\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified amount of native token to the corresponding token amount.\r\n     * @param fromToken The address of the native token to convert from.\r\n     * @param amount The amount of native token to convert.\r\n     * @return The corresponding token amount.\r\n     */\r\n    function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\r\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, fromToken, amount);\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the maximum of two uint8 values.\r\n     * @param a The first uint8 value.\r\n     * @param b The second uint8 value.\r\n     * @return The maximum value between a and b.\r\n     */\r\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the minimum of two uint8 values.\r\n     * @param a The first uint8 value.\r\n     * @param b The second uint8 value.\r\n     * @return The minimum value between a and b.\r\n     */\r\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\r\n        return a <= b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Converts the specified token to the native token using the rebalancer contract.\r\n     * @param fromToken The address of the token to convert from.\r\n     * @param amount The amount of tokens to convert.\r\n     * @return scaledAmount The converted amount of tokens.\r\n     */\r\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\r\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\r\n        return tokenAmount;\r\n    }\r\n\r\n    /**\r\n     * @dev Updates the reserves of the pool with the given amounts.\r\n     * @param amounts An array of amounts to update the reserves with.\r\n     * @param increase A boolean indicating whether to increase or decrease the reserves.\r\n     * @notice This function can only be called by the periphery contract.\r\n     */\r\n    function updateReserves(uint256[] memory amounts, bool increase) external onlyPeriphery {\r\n        _updateReserves(amounts, increase);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to update the reserves of the pool with the given amounts.\r\n     * @param amounts An array of amounts to update the reserves with.\r\n     * @param increase A boolean indicating whether to increase or decrease the reserves.\r\n     * @notice This function should only be called by the `updateReserves` function.\r\n     */\r\n    function _updateReserves(uint256[] memory amounts, bool increase) internal {\r\n        for (uint256 i = 0; i < assetInfos.length; i++) {\r\n            address asset = assetInfos[i].asset;\r\n            uint256 newReserve = amounts[i];\r\n            if (increase) reserves[asset] += newReserve;\r\n            else reserves[asset] -= newReserve;\r\n        }\r\n    }\r\n\r\n    // return true if one of the deviation overcome the trigger\r\n    /**\r\n     * @dev Checks if rebalancing is needed for the pool.\r\n     * @return A boolean value indicating whether rebalancing is needed or not.\r\n     */\r\n    function isRebalanceNeeded() public view returns (bool) {\r\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\r\n        for (uint256 i = 0; i < deviations.length; i++) {\r\n            if (directions[i] && deviations[i] > trigger) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"},"contracts/BaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './BaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\r\n  address[] public allPools;\r\n  mapping(address => mapping(address => address)) public getPool;\r\n\r\n  address public rebalancer;\r\n  address public periphery;\r\n\r\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\r\n\r\n  function initialize(address _rebalancer) public initializer {\r\n    __UUPSUpgradeable_init();\r\n    __Ownable_init(msg.sender);\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\r\n    rebalancer = _rebalancer;\r\n  }\r\n\r\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n  /**\r\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\r\n   * @param assets The array of asset addresses to be included in the pool.\r\n   * @param weights The array of weights corresponding to each asset in the pool.\r\n   * @param trigger The trigger value for rebalancing the pool.\r\n   * @return The address of the newly created pool.\r\n   */\r\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\r\n    require(periphery != address(0), 'Periphery not set');\r\n    require(assets.length > 1, 'At least two assets are required');\r\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\r\n\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\r\n      }\r\n    }\r\n\r\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\r\n\r\n    address poolAddress = address(newPool);\r\n\r\n    allPools.push(poolAddress);\r\n    for (uint256 i = 0; i < assets.length; i++) {\r\n      for (uint256 j = i + 1; j < assets.length; j++) {\r\n        getPool[assets[i]][assets[j]] = poolAddress;\r\n        getPool[assets[j]][assets[i]] = poolAddress;\r\n      }\r\n    }\r\n\r\n    emit PoolCreated(poolAddress, assets, rebalancer);\r\n\r\n    return poolAddress;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves all the pools created by the factory.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getAllPools() external view returns (address[] memory) {\r\n    return allPools;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the number of pools created by the factory.\r\n   * @return The count of pools.\r\n   */\r\n  function getPoolsCount() external view returns (uint256) {\r\n    return allPools.length;\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the assets of a specific pool.\r\n   * @param poolAddress The address of the pool.\r\n   * @return An array of asset addresses.\r\n   */\r\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\r\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\r\n    return pool.getAssets();\r\n  }\r\n\r\n  /**\r\n   * @dev Retrieves the pool address based on the given assets.\r\n   * @param asset1 The address of the first asset.\r\n   * @param asset2 The address of the second asset.\r\n   * @return The address of the pool.\r\n   */\r\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\r\n    return address(getPool[asset1][asset2]);\r\n  }\r\n\r\n  /**\r\n   * @dev Returns an array of pool addresses that contain the specified token.\r\n   * @param token The address of the token to search for.\r\n   * @return An array of pool addresses.\r\n   */\r\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\r\n    address[] memory pools = new address[](allPools.length);\r\n    uint256 count = 0;\r\n\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\r\n      address[] memory assets = pool.getAssets();\r\n\r\n      for (uint256 j = 0; j < assets.length; j++) {\r\n        if (assets[j] == token) {\r\n          pools[count] = address(pool);\r\n          count++;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (count == pools.length) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    address[] memory result = new address[](count);\r\n    for (uint256 i = 0; i < count; i++) {\r\n      result[i] = pools[i];\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * @dev Changes the address of the periphery contract.\r\n   * @param _newPeriphery The new address of the periphery contract.\r\n   */\r\n  function changePeriphery(address _newPeriphery) external onlyOwner {\r\n    periphery = _newPeriphery;\r\n  }\r\n\r\n  function poolExist(address _pool) external view returns (bool) {\r\n    for (uint256 i = 0; i < allPools.length; i++) {\r\n      if (allPools[i] == _pool) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"},"contracts/BaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1PoolFactory.sol';\r\nimport './interfaces/IBaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\n/**\r\n * @title BaluniV1PoolPeriphery\r\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\r\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\r\n */\r\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\r\n    IBaluniV1PoolFactory public poolFactory;\r\n\r\n    mapping(address => mapping(address => uint256)) public poolsReserves; // Mapping of token address to pool addresses (for quick lookup\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     */\r\n    function initialize(address _poolFactory) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init(msg.sender);\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     */\r\n    function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n     * @param newImplementation The address of the new implementation contract.\r\n     * @notice This function can only be called by the contract owner.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Swaps tokens in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n\r\n        uint256 toSend = pool.swap(fromToken, toToken, amount, receiver);\r\n\r\n        poolsReserves[poolAddress][fromToken] += amount;\r\n        poolsReserves[poolAddress][toToken] -= toSend;\r\n\r\n        IERC20(toToken).transfer(receiver, toSend);\r\n\r\n        return toSend;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs batch swaps between multiple token pairs.\r\n     * @param fromTokens An array of addresses representing the tokens to swap from.\r\n     * @param toTokens An array of addresses representing the tokens to swap to.\r\n     * @param amounts An array of amounts representing the amounts to swap.\r\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n     */\r\n    function batchSwap(\r\n        address[] calldata fromTokens,\r\n        address[] calldata toTokens,\r\n        uint256[] calldata amounts,\r\n        address[] calldata receivers\r\n    ) external returns (uint256[] memory) {\r\n        require(\r\n            fromTokens.length == toTokens.length &&\r\n                toTokens.length == amounts.length &&\r\n                amounts.length == receivers.length,\r\n            'Input arrays length mismatch'\r\n        );\r\n\r\n        uint256[] memory amountsOut = new uint256[](fromTokens.length);\r\n\r\n        for (uint256 i = 0; i < fromTokens.length; i++) {\r\n            require(amounts[i] > 0, 'Amount must be greater than zero');\r\n            address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\r\n            IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n            IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\r\n            uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\r\n            poolsReserves[poolAddress][fromTokens[i]] += amounts[i];\r\n            poolsReserves[poolAddress][toTokens[i]] -= amountOut;\r\n            IERC20(toTokens[i]).transfer(receivers[i], amountOut);\r\n        }\r\n\r\n        return amountsOut;\r\n    }\r\n\r\n    function rebalanceWeights(address receiver, address poolAddress) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        uint256[] memory amounts = pool.rebalanceWeights(receiver);\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            poolsReserves[poolAddress][assets[i]] += amounts[i];\r\n            IERC20(assets[i]).transferFrom(receiver, address(this), amounts[i]);\r\n        }\r\n    }\r\n\r\n    function smartSwap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256) {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        address[] memory pools = _findOptimalRoute(fromToken, toToken, amount);\r\n        require(pools.length > 0, 'No route found');\r\n\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n\r\n        uint256 amountRemaining = amount;\r\n        address currentToken = fromToken;\r\n        for (uint256 i = 0; i < pools.length; i++) {\r\n            IBaluniV1Pool pool = IBaluniV1Pool(pools[i]);\r\n            address[] memory poolTokens = pool.getAssets();\r\n            uint256[] memory reserves = getReserves(pools[i]);\r\n\r\n            address nextToken;\r\n            for (uint256 j = 0; j < poolTokens.length; j++) {\r\n                if (poolTokens[j] != currentToken && reserves[j] > 0) {\r\n                    nextToken = poolTokens[j];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            require(nextToken != address(0), 'No valid next token found');\r\n            require(pool.getAssetReserve(nextToken) >= amountRemaining, 'Insufficient liquidity in pool for swap');\r\n\r\n            uint256 amountOut = pool.swap(\r\n                currentToken,\r\n                nextToken,\r\n                amountRemaining,\r\n                i == pools.length - 1 ? receiver : address(this)\r\n            );\r\n\r\n            poolsReserves[pools[i]][currentToken] += amountRemaining;\r\n            poolsReserves[pools[i]][nextToken] -= amountOut;\r\n\r\n            currentToken = nextToken;\r\n            amountRemaining = amountOut;\r\n        }\r\n\r\n        return amountRemaining;\r\n    }\r\n\r\n    function _findOptimalRoute(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) internal view returns (address[] memory) {\r\n        address[] memory allPools = poolFactory.getAllPools();\r\n        uint256 poolCount = allPools.length;\r\n\r\n        address[] memory path = new address[](poolCount);\r\n        uint256 pathLength = 0;\r\n        bool[] memory visited = new bool[](poolCount);\r\n\r\n        address[] memory queue = new address[](poolCount);\r\n        uint256 queueHead = 0;\r\n        uint256 queueTail = 0;\r\n\r\n        queue[queueTail++] = fromToken;\r\n\r\n        while (queueHead < queueTail) {\r\n            address currentToken = queue[queueHead++];\r\n            if (currentToken == toToken) {\r\n                address[] memory finalPath = new address[](pathLength);\r\n                for (uint256 i = 0; i < pathLength; i++) {\r\n                    finalPath[i] = path[i];\r\n                }\r\n                return finalPath;\r\n            }\r\n\r\n            for (uint256 i = 0; i < poolCount; i++) {\r\n                if (!visited[i]) {\r\n                    IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\r\n                    address[] memory poolTokens = pool.getAssets();\r\n\r\n                    if (\r\n                        _containsToken(poolTokens, currentToken) && _hasSufficientLiquidity(pool, currentToken, amount)\r\n                    ) {\r\n                        address nextToken = _getOtherTokenInPool(poolTokens, currentToken);\r\n                        path[pathLength++] = allPools[i];\r\n                        queue[queueTail++] = nextToken;\r\n                        visited[i] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        address[] memory addr = new address[](0);\r\n        return addr;\r\n    }\r\n\r\n    function _containsToken(address[] memory tokens, address token) internal pure returns (bool) {\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            if (tokens[i] == token) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _hasSufficientLiquidity(IBaluniV1Pool pool, address token, uint256 amount) internal view returns (bool) {\r\n        uint256[] memory reserves = getReserves(address(pool));\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            if (assets[i] == token) {\r\n                return reserves[i] >= amount;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _getOtherTokenInPool(address[] memory tokens, address token) internal pure returns (address) {\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            if (tokens[i] != token) {\r\n                return tokens[i];\r\n            }\r\n        }\r\n        revert('Token not found in pool');\r\n    }\r\n\r\n    /**\r\n     * @dev Adds liquidity to a BaluniV1Pool.\r\n     * @param amounts An array of amounts for each asset to add as liquidity.\r\n     */\r\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        address[] memory assets = pool.getAssets();\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            address asset = assets[i];\r\n            uint256 amount = amounts[i];\r\n            poolsReserves[poolAddress][asset] += amount;\r\n            IERC20(asset).transferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        pool.mint(receiver, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes liquidity from a BaluniV1Pool.\r\n     * @param share The amount of liquidity tokens to remove.\r\n     * @param poolAddress The address of the BaluniV1Pool.\r\n     */\r\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\r\n        require(share > 0, 'Share must be greater than zero');\r\n        IERC20 poolToken = IERC20(poolAddress);\r\n\r\n        // Check allowance\r\n        uint256 allowance = poolToken.allowance(msg.sender, address(this));\r\n        require(allowance >= share, 'Insufficient allowance');\r\n\r\n        // Check balance\r\n        uint256 balance = poolToken.balanceOf(msg.sender);\r\n        require(balance >= share, 'Insufficient balance');\r\n\r\n        bool success = poolToken.transferFrom(msg.sender, poolAddress, share);\r\n        require(success, 'Transfer failed');\r\n\r\n        uint256[] memory amountsOut = IBaluniV1Pool(poolAddress).burn(receiver);\r\n        address[] memory assets = IBaluniV1Pool(poolAddress).getAssets();\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            require(IERC20(assets[i]).balanceOf(address(this)) >= amountsOut[i], 'Insufficient Liquidity');\r\n            poolsReserves[poolAddress][assets[i]] -= amountsOut[i];\r\n            bool assetTransferSuccess = IERC20(assets[i]).transfer(receiver, amountsOut[i]);\r\n            require(assetTransferSuccess, 'Asset transfer failed');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\r\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        return pool.getAmountOut(fromToken, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed for the given tokens.\r\n     * @param poolAddress The address of the token pool to rebalance.\r\n     */\r\n    function performRebalanceIfNeeded(address poolAddress) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        uint256 balance = IERC20(poolAddress).balanceOf(msg.sender);\r\n        uint256 totalSupply = IERC20(poolAddress).totalSupply();\r\n        require((balance * 10000) / totalSupply >= 100, 'Insufficient balance');\r\n        pool.performRebalanceIfNeeded();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the given token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsContainingToken(address token) external view returns (address[] memory) {\r\n        return poolFactory.getPoolsByAsset(token);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64) {\r\n        return _getInitializedVersion();\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the address of the pool factory contract.\r\n     * Can only be called by the contract owner.\r\n     * @param _poolFactory The new address of the pool factory contract.\r\n     */\r\n    function changePoolFactory(address _poolFactory) external onlyOwner {\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    function getReserves(address pool) public view returns (uint256[] memory) {\r\n        address[] memory assets = IBaluniV1Pool(pool).getAssets();\r\n        uint256[] memory reserves = new uint256[](assets.length);\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            reserves[i] = poolsReserves[pool][assets[i]];\r\n        }\r\n        return reserves;\r\n    }\r\n\r\n    function getAssetReserves(address pool, address asset) external view returns (uint256) {\r\n        return poolsReserves[pool][asset];\r\n    }\r\n}\r\n"},"contracts/interfaces/I1inchSpotAgg.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\n\r\ninterface I1inchSpotAgg {\r\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n\r\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Agent.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1Agent {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\r\n}\r\n"},"contracts/interfaces/IBaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ninterface IBaluniV1Pool {\r\n    // Views\r\n    function rebalancer() external view returns (address);\r\n\r\n    function assets(uint256 index) external view returns (address);\r\n\r\n    function weights(uint256 index) external view returns (uint256);\r\n\r\n    function trigger() external view returns (uint256);\r\n\r\n    function ONE() external view returns (uint256);\r\n\r\n    function router() external view returns (address);\r\n\r\n    function SWAP_FEE_BPS() external view returns (uint256);\r\n\r\n    function getReserves() external view returns (uint256[] memory);\r\n\r\n    function getAssets() external view returns (address[] memory);\r\n\r\n    function getAssetReserve(address asset) external view returns (uint256);\r\n\r\n    function getWeights() external view returns (uint256[] memory);\r\n\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    function performRebalanceIfNeeded() external;\r\n\r\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\r\n\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\r\n\r\n    function liquidity() external view returns (uint256);\r\n\r\n    function unitPrice() external view returns (uint256);\r\n\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 toSend);\r\n\r\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\r\n\r\n    function burn(address to) external returns (uint256[] memory);\r\n\r\n    function changeRebalancer(address _newRebalancer) external;\r\n\r\n    function changeRouter(address _newRouter) external;\r\n\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\r\n\r\n    function updateReserves(uint256[] memory amounts, bool increase) external;\r\n\r\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\r\n\r\n    // Events\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1PoolFactory {\r\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\r\n\r\n    function getPoolsByAsset(address token) external view returns (address[] memory);\r\n\r\n    function poolExist(address _pool) external view returns (bool);\r\n\r\n    function getAllPools() external view returns (address[] memory);\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1PoolPeriphery {\r\n    function getReserves(address pool) external view returns (uint256[] memory);\r\n\r\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport './IBaluniV1Router.sol';\r\n\r\ninterface IBaluniV1Rebalancer {\r\n  struct RebalanceVars {\r\n    uint256 length;\r\n    uint256 totalValue;\r\n    uint256 finalUsdBalance;\r\n    uint256 overweightVaultsLength;\r\n    uint256 underweightVaultsLength;\r\n    uint256 totalActiveWeight;\r\n    uint256 amountOut;\r\n    uint256[] overweightVaults;\r\n    uint256[] overweightAmounts;\r\n    uint256[] underweightVaults;\r\n    uint256[] underweightAmounts;\r\n    uint256[] balances;\r\n  }\r\n\r\n  // Variables\r\n  function baluniRouter() external view returns (address);\r\n\r\n  function USDC() external view returns (address);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function _1InchSpotAgg() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function rebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address receiver,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function checkRebalance(\r\n    uint256[] memory balances,\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    uint256 limit,\r\n    address sender,\r\n    address baseAsset\r\n  ) external view returns (RebalanceVars memory);\r\n\r\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n}\r\n"},"contracts/interfaces/IBaluniV1Router.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\r\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\r\nimport './I1inchSpotAgg.sol';\r\nimport './IBaluniV1Agent.sol';\r\n\r\ninterface IBaluniV1Router {\r\n  struct Call {\r\n    address to;\r\n    uint256 value;\r\n    bytes data;\r\n  }\r\n\r\n  // Variables\r\n  function _MAX_BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_FEE() external view returns (uint256);\r\n\r\n  function _BPS_BASE() external view returns (uint256);\r\n\r\n  function getTokens() external view returns (address[] memory);\r\n\r\n  function USDC() external view returns (IERC20);\r\n\r\n  function WNATIVE() external view returns (address);\r\n\r\n  function oracle() external view returns (address);\r\n\r\n  function uniswapRouter() external view returns (address);\r\n\r\n  function uniswapFactory() external view returns (address);\r\n\r\n  function agentFactory() external view returns (address);\r\n\r\n  function marketOracle() external view returns (address);\r\n\r\n  function rebalancer() external view returns (address);\r\n\r\n  function treasury() external view returns (address);\r\n\r\n  // Functions\r\n  function initialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer\r\n  ) external;\r\n\r\n  function reinitialize(\r\n    address _usdc,\r\n    address _wnative,\r\n    address _1inchSpotAgg,\r\n    address _uniRouter,\r\n    address _uniFactory,\r\n    address _rebalancer,\r\n    uint64 version\r\n  ) external;\r\n\r\n  function initializeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeMarketOracle(address _marketOracle) external;\r\n\r\n  function changeBpsFee(uint256 _newFee) external;\r\n\r\n  function changeTreasury(address _newTreasury) external;\r\n\r\n  function changeRebalancer(address _newRebalancer) external;\r\n\r\n  function changeAgentFactory(address _agentFactory) external;\r\n\r\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\r\n\r\n  function liquidate(address token) external;\r\n\r\n  function liquidateAll() external;\r\n\r\n  function burnERC20(uint256 burnAmount) external;\r\n\r\n  function burnUSDC(uint256 burnAmount) external;\r\n\r\n  function getAgentAddress(address _user) external view returns (address);\r\n\r\n  function mintWithUSDC(uint256 balAmountToMint) external;\r\n\r\n  function callRebalance(\r\n    address[] calldata assets,\r\n    uint256[] calldata weights,\r\n    address sender,\r\n    address receiver,\r\n    uint256 limit,\r\n    address baseAsset\r\n  ) external;\r\n\r\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\r\n\r\n  function calculateTokenShare(\r\n    uint256 totalBaluni,\r\n    uint256 totalERC20Balance,\r\n    uint256 baluniAmount,\r\n    uint256 tokenDecimals\r\n  ) external pure returns (uint256);\r\n\r\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\r\n\r\n  function totalValuation() external view returns (uint256);\r\n\r\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\r\n\r\n  function fetchMarketPrices() external view returns (uint256, uint256);\r\n\r\n  function getVersion() external view returns (uint64);\r\n\r\n  function unitPrice() external view returns (uint256);\r\n  \r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":80000},"viaIR":true,"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2217]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2218,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2217_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2139,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2113_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2112,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2107]},"id":2108,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"135:750:13","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2107,"linearizedBaseContracts":[2107],"name":"ReentrancyGuard","nameLocation":"904:15:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2044,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:13","nodeType":"VariableDeclaration","scope":2107,"src":"1674:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2047,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1720:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2045,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2049,"mutability":"mutable","name":"_status","nameLocation":"1779:7:13","nodeType":"VariableDeclaration","scope":2107,"src":"1763:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2050,"nodeType":"StructuredDocumentation","src":"1793:52:13","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2052,"name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:13","nodeType":"ErrorDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"1884:2:13"},"src":"1850:37:13"},{"body":{"id":2059,"nodeType":"Block","src":"1907:38:13","statements":[{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2055,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"1917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2056,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"1927:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"1917:21:13"}]},"id":2060,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2053,"nodeType":"ParameterList","parameters":[],"src":"1904:2:13"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[],"src":"1907:0:13"},"scope":2107,"src":"1893:52:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2070,"nodeType":"Block","src":"2346:79:13","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2063,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2087,"src":"2356:19:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2065,"nodeType":"ExpressionStatement","src":"2356:21:13"},{"id":2066,"nodeType":"PlaceholderStatement","src":"2387:1:13"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2067,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"2398:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"2398:20:13"}]},"documentation":{"id":2061,"nodeType":"StructuredDocumentation","src":"1951:366:13","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2071,"name":"nonReentrant","nameLocation":"2331:12:13","nodeType":"ModifierDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[],"src":"2343:2:13"},"src":"2322:103:13","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"2470:268:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2075,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2569:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2081,"nodeType":"IfStatement","src":"2554:86:13","trueBody":{"id":2080,"nodeType":"Block","src":"2578:62:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2077,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"2599:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2079,"nodeType":"RevertStatement","src":"2592:37:13"}]}},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2714:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2083,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2724:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2085,"nodeType":"ExpressionStatement","src":"2714:17:13"}]},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:13","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[],"src":"2459:2:13"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"2470:0:13"},"scope":2107,"src":"2431:307:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2094,"nodeType":"Block","src":"2782:170:13","statements":[{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2090,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2091,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"2924:21:13"}]},"id":2095,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:13","nodeType":"FunctionDefinition","parameters":{"id":2088,"nodeType":"ParameterList","parameters":[],"src":"2771:2:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[],"src":"2782:0:13"},"scope":2107,"src":"2744:208:13","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2105,"nodeType":"Block","src":"3195:42:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"3212:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2102,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3223:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2100,"id":2104,"nodeType":"Return","src":"3205:25:13"}]},"documentation":{"id":2096,"nodeType":"StructuredDocumentation","src":"2958:168:13","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:13","nodeType":"FunctionDefinition","parameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"3163:2:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"3189:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2098,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:13"},"scope":2107,"src":"3131:106:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2108,"src":"886:2353:13","usedErrors":[2052],"usedEvents":[]}],"src":"109:3131:13"},"id":13},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2217]},"id":2218,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2109,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"219:1025:14","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2217,"linearizedBaseContracts":[2217],"name":"StorageSlot","nameLocation":"1253:11:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2113,"members":[{"constant":false,"id":2112,"mutability":"mutable","name":"value","nameLocation":"1308:5:14","nodeType":"VariableDeclaration","scope":2113,"src":"1300:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2111,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:14","nodeType":"StructDefinition","scope":2217,"src":"1271:49:14","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2116,"members":[{"constant":false,"id":2115,"mutability":"mutable","name":"value","nameLocation":"1360:5:14","nodeType":"VariableDeclaration","scope":2116,"src":"1355:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2114,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:14","nodeType":"StructDefinition","scope":2217,"src":"1326:46:14","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2119,"members":[{"constant":false,"id":2118,"mutability":"mutable","name":"value","nameLocation":"1415:5:14","nodeType":"VariableDeclaration","scope":2119,"src":"1407:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:14","nodeType":"StructDefinition","scope":2217,"src":"1378:49:14","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2122,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"value","nameLocation":"1470:5:14","nodeType":"VariableDeclaration","scope":2122,"src":"1462:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:14","nodeType":"StructDefinition","scope":2217,"src":"1433:49:14","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2125,"members":[{"constant":false,"id":2124,"mutability":"mutable","name":"value","nameLocation":"1523:5:14","nodeType":"VariableDeclaration","scope":2125,"src":"1516:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2123,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:14","nodeType":"StructDefinition","scope":2217,"src":"1488:47:14","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2128,"members":[{"constant":false,"id":2127,"mutability":"mutable","name":"value","nameLocation":"1574:5:14","nodeType":"VariableDeclaration","scope":2128,"src":"1568:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2126,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:14","nodeType":"StructDefinition","scope":2217,"src":"1541:45:14","visibility":"public"},{"body":{"id":2138,"nodeType":"Block","src":"1768:106:14","statements":[{"AST":{"nativeSrc":"1830:38:14","nodeType":"YulBlock","src":"1830:38:14","statements":[{"nativeSrc":"1844:14:14","nodeType":"YulAssignment","src":"1844:14:14","value":{"name":"slot","nativeSrc":"1854:4:14","nodeType":"YulIdentifier","src":"1854:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:14","nodeType":"YulIdentifier","src":"1844:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2135,"isOffset":false,"isSlot":true,"src":"1844:6:14","suffix":"slot","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"1854:4:14","valueSize":1}],"id":2137,"nodeType":"InlineAssembly","src":"1821:47:14"}]},"documentation":{"id":2129,"nodeType":"StructuredDocumentation","src":"1592:87:14","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2139,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:14","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"slot","nameLocation":"1716:4:14","nodeType":"VariableDeclaration","scope":2139,"src":"1708:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2130,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:14"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"r","nameLocation":"1765:1:14","nodeType":"VariableDeclaration","scope":2139,"src":"1745:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2134,"nodeType":"UserDefinedTypeName","pathNode":{"id":2133,"name":"AddressSlot","nameLocations":["1745:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2113,"src":"1745:11:14"},"referencedDeclaration":2113,"src":"1745:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2113_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:14"},"scope":2217,"src":"1684:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2149,"nodeType":"Block","src":"2056:106:14","statements":[{"AST":{"nativeSrc":"2118:38:14","nodeType":"YulBlock","src":"2118:38:14","statements":[{"nativeSrc":"2132:14:14","nodeType":"YulAssignment","src":"2132:14:14","value":{"name":"slot","nativeSrc":"2142:4:14","nodeType":"YulIdentifier","src":"2142:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:14","nodeType":"YulIdentifier","src":"2132:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2146,"isOffset":false,"isSlot":true,"src":"2132:6:14","suffix":"slot","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"2142:4:14","valueSize":1}],"id":2148,"nodeType":"InlineAssembly","src":"2109:47:14"}]},"documentation":{"id":2140,"nodeType":"StructuredDocumentation","src":"1880:87:14","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2150,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:14","nodeType":"FunctionDefinition","parameters":{"id":2143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2142,"mutability":"mutable","name":"slot","nameLocation":"2004:4:14","nodeType":"VariableDeclaration","scope":2150,"src":"1996:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:14"},"returnParameters":{"id":2147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2146,"mutability":"mutable","name":"r","nameLocation":"2053:1:14","nodeType":"VariableDeclaration","scope":2150,"src":"2033:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2145,"nodeType":"UserDefinedTypeName","pathNode":{"id":2144,"name":"BooleanSlot","nameLocations":["2033:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2116,"src":"2033:11:14"},"referencedDeclaration":2116,"src":"2033:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2116_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:14"},"scope":2217,"src":"1972:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2160,"nodeType":"Block","src":"2344:106:14","statements":[{"AST":{"nativeSrc":"2406:38:14","nodeType":"YulBlock","src":"2406:38:14","statements":[{"nativeSrc":"2420:14:14","nodeType":"YulAssignment","src":"2420:14:14","value":{"name":"slot","nativeSrc":"2430:4:14","nodeType":"YulIdentifier","src":"2430:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:14","nodeType":"YulIdentifier","src":"2420:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2157,"isOffset":false,"isSlot":true,"src":"2420:6:14","suffix":"slot","valueSize":1},{"declaration":2153,"isOffset":false,"isSlot":false,"src":"2430:4:14","valueSize":1}],"id":2159,"nodeType":"InlineAssembly","src":"2397:47:14"}]},"documentation":{"id":2151,"nodeType":"StructuredDocumentation","src":"2168:87:14","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2161,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:14","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"slot","nameLocation":"2292:4:14","nodeType":"VariableDeclaration","scope":2161,"src":"2284:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:14"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"r","nameLocation":"2341:1:14","nodeType":"VariableDeclaration","scope":2161,"src":"2321:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2156,"nodeType":"UserDefinedTypeName","pathNode":{"id":2155,"name":"Bytes32Slot","nameLocations":["2321:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2119,"src":"2321:11:14"},"referencedDeclaration":2119,"src":"2321:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2119_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:14"},"scope":2217,"src":"2260:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2171,"nodeType":"Block","src":"2632:106:14","statements":[{"AST":{"nativeSrc":"2694:38:14","nodeType":"YulBlock","src":"2694:38:14","statements":[{"nativeSrc":"2708:14:14","nodeType":"YulAssignment","src":"2708:14:14","value":{"name":"slot","nativeSrc":"2718:4:14","nodeType":"YulIdentifier","src":"2718:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:14","nodeType":"YulIdentifier","src":"2708:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2168,"isOffset":false,"isSlot":true,"src":"2708:6:14","suffix":"slot","valueSize":1},{"declaration":2164,"isOffset":false,"isSlot":false,"src":"2718:4:14","valueSize":1}],"id":2170,"nodeType":"InlineAssembly","src":"2685:47:14"}]},"documentation":{"id":2162,"nodeType":"StructuredDocumentation","src":"2456:87:14","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2172,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:14","nodeType":"FunctionDefinition","parameters":{"id":2165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2164,"mutability":"mutable","name":"slot","nameLocation":"2580:4:14","nodeType":"VariableDeclaration","scope":2172,"src":"2572:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2163,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:14"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"r","nameLocation":"2629:1:14","nodeType":"VariableDeclaration","scope":2172,"src":"2609:21:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Uint256Slot","nameLocations":["2609:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":2122,"src":"2609:11:14"},"referencedDeclaration":2122,"src":"2609:11:14","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2122_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:14"},"scope":2217,"src":"2548:190:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"2917:106:14","statements":[{"AST":{"nativeSrc":"2979:38:14","nodeType":"YulBlock","src":"2979:38:14","statements":[{"nativeSrc":"2993:14:14","nodeType":"YulAssignment","src":"2993:14:14","value":{"name":"slot","nativeSrc":"3003:4:14","nodeType":"YulIdentifier","src":"3003:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:14","nodeType":"YulIdentifier","src":"2993:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2179,"isOffset":false,"isSlot":true,"src":"2993:6:14","suffix":"slot","valueSize":1},{"declaration":2175,"isOffset":false,"isSlot":false,"src":"3003:4:14","valueSize":1}],"id":2181,"nodeType":"InlineAssembly","src":"2970:47:14"}]},"documentation":{"id":2173,"nodeType":"StructuredDocumentation","src":"2744:86:14","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:14","nodeType":"FunctionDefinition","parameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"slot","nameLocation":"2866:4:14","nodeType":"VariableDeclaration","scope":2183,"src":"2858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2174,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:14"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"r","nameLocation":"2914:1:14","nodeType":"VariableDeclaration","scope":2183,"src":"2895:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2178,"nodeType":"UserDefinedTypeName","pathNode":{"id":2177,"name":"StringSlot","nameLocations":["2895:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"2895:10:14"},"referencedDeclaration":2125,"src":"2895:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:14"},"scope":2217,"src":"2835:188:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2193,"nodeType":"Block","src":"3225:112:14","statements":[{"AST":{"nativeSrc":"3287:44:14","nodeType":"YulBlock","src":"3287:44:14","statements":[{"nativeSrc":"3301:20:14","nodeType":"YulAssignment","src":"3301:20:14","value":{"name":"store.slot","nativeSrc":"3311:10:14","nodeType":"YulIdentifier","src":"3311:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:14","nodeType":"YulIdentifier","src":"3301:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2190,"isOffset":false,"isSlot":true,"src":"3301:6:14","suffix":"slot","valueSize":1},{"declaration":2186,"isOffset":false,"isSlot":true,"src":"3311:10:14","suffix":"slot","valueSize":1}],"id":2192,"nodeType":"InlineAssembly","src":"3278:53:14"}]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"3029:101:14","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2194,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:14","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"store","nameLocation":"3173:5:14","nodeType":"VariableDeclaration","scope":2194,"src":"3158:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2185,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:14"},"returnParameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"r","nameLocation":"3222:1:14","nodeType":"VariableDeclaration","scope":2194,"src":"3203:20:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2189,"nodeType":"UserDefinedTypeName","pathNode":{"id":2188,"name":"StringSlot","nameLocations":["3203:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":2125,"src":"3203:10:14"},"referencedDeclaration":2125,"src":"3203:10:14","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2125_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:14"},"scope":2217,"src":"3135:202:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2204,"nodeType":"Block","src":"3513:106:14","statements":[{"AST":{"nativeSrc":"3575:38:14","nodeType":"YulBlock","src":"3575:38:14","statements":[{"nativeSrc":"3589:14:14","nodeType":"YulAssignment","src":"3589:14:14","value":{"name":"slot","nativeSrc":"3599:4:14","nodeType":"YulIdentifier","src":"3599:4:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:14","nodeType":"YulIdentifier","src":"3589:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2201,"isOffset":false,"isSlot":true,"src":"3589:6:14","suffix":"slot","valueSize":1},{"declaration":2197,"isOffset":false,"isSlot":false,"src":"3599:4:14","valueSize":1}],"id":2203,"nodeType":"InlineAssembly","src":"3566:47:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"3343:85:14","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:14","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"slot","nameLocation":"3463:4:14","nodeType":"VariableDeclaration","scope":2205,"src":"3455:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:14"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"r","nameLocation":"3510:1:14","nodeType":"VariableDeclaration","scope":2205,"src":"3492:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2200,"nodeType":"UserDefinedTypeName","pathNode":{"id":2199,"name":"BytesSlot","nameLocations":["3492:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3492:9:14"},"referencedDeclaration":2128,"src":"3492:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:14"},"scope":2217,"src":"3433:186:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2215,"nodeType":"Block","src":"3816:112:14","statements":[{"AST":{"nativeSrc":"3878:44:14","nodeType":"YulBlock","src":"3878:44:14","statements":[{"nativeSrc":"3892:20:14","nodeType":"YulAssignment","src":"3892:20:14","value":{"name":"store.slot","nativeSrc":"3902:10:14","nodeType":"YulIdentifier","src":"3902:10:14"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:14","nodeType":"YulIdentifier","src":"3892:6:14"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2212,"isOffset":false,"isSlot":true,"src":"3892:6:14","suffix":"slot","valueSize":1},{"declaration":2208,"isOffset":false,"isSlot":true,"src":"3902:10:14","suffix":"slot","valueSize":1}],"id":2214,"nodeType":"InlineAssembly","src":"3869:53:14"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"3625:99:14","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2216,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:14","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"store","nameLocation":"3765:5:14","nodeType":"VariableDeclaration","scope":2216,"src":"3751:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2207,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:14"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"r","nameLocation":"3813:1:14","nodeType":"VariableDeclaration","scope":2216,"src":"3795:19:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2211,"nodeType":"UserDefinedTypeName","pathNode":{"id":2210,"name":"BytesSlot","nameLocations":["3795:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":2128,"src":"3795:9:14"},"referencedDeclaration":2128,"src":"3795:9:14","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2128_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:14"},"scope":2217,"src":"3729:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2218,"src":"1245:2685:14","usedErrors":[],"usedEvents":[]}],"src":"193:3738:14"},"id":14},"contracts/BaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/BaluniV1Pool.sol","exportedSymbols":{"BaluniV1Pool":[3999],"Context":[2038],"ERC20":[1651],"I1inchSpotAgg":[5924],"IBaluniV1Agent":[5944],"IBaluniV1PoolPeriphery":[6221],"IBaluniV1Rebalancer":[6342],"IBaluniV1Router":[6600],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"ReentrancyGuard":[2107]},"id":4000,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2219,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","file":"./interfaces/IBaluniV1Rebalancer.sol","id":2220,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4000,"sourceUnit":6343,"src":"1466:46:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./interfaces/IBaluniV1Router.sol","id":2221,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4000,"sourceUnit":6601,"src":"1514:42:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2222,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4000,"sourceUnit":1652,"src":"1558:55:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4000,"sourceUnit":2108,"src":"1615:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","file":"./interfaces/IBaluniV1PoolPeriphery.sol","id":2224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4000,"sourceUnit":6222,"src":"1678:49:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2225,"name":"ERC20","nameLocations":["1756:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"1756:5:15"},"id":2226,"nodeType":"InheritanceSpecifier","src":"1756:5:15"},{"baseName":{"id":2227,"name":"ReentrancyGuard","nameLocations":["1763:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":2107,"src":"1763:15:15"},"id":2228,"nodeType":"InheritanceSpecifier","src":"1763:15:15"}],"canonicalName":"BaluniV1Pool","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3999,"linearizedBaseContracts":[3999,2107,1651,728,1755,1729,2038],"name":"BaluniV1Pool","nameLocation":"1740:12:15","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"d14ef46d","id":2232,"mutability":"mutable","name":"assetInfos","nameLocation":"1805:10:15","nodeType":"VariableDeclaration","scope":3999,"src":"1786:29:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo[]"},"typeName":{"baseType":{"id":2230,"nodeType":"UserDefinedTypeName","pathNode":{"id":2229,"name":"AssetInfo","nameLocations":["1786:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":2256,"src":"1786:9:15"},"referencedDeclaration":2256,"src":"1786:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo"}},"id":2231,"nodeType":"ArrayTypeName","src":"1786:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage_ptr","typeString":"struct BaluniV1Pool.AssetInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"7fec8d38","id":2234,"mutability":"mutable","name":"trigger","nameLocation":"1837:7:15","nodeType":"VariableDeclaration","scope":3999,"src":"1822:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"c2ee3a08","id":2236,"mutability":"mutable","name":"ONE","nameLocation":"1866:3:15","nodeType":"VariableDeclaration","scope":3999,"src":"1851:18:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":2238,"mutability":"mutable","name":"periphery","nameLocation":"1891:9:15","nodeType":"VariableDeclaration","scope":3999,"src":"1876:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":2240,"mutability":"mutable","name":"factory","nameLocation":"1922:7:15","nodeType":"VariableDeclaration","scope":3999,"src":"1907:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":true,"functionSelector":"67a6c440","id":2243,"mutability":"constant","name":"SWAP_FEE_BPS","nameLocation":"1960:12:15","nodeType":"VariableDeclaration","scope":3999,"src":"1936:41:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2241,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3330","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1975:2:15","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},"visibility":"public"},{"constant":false,"functionSelector":"cdf456e1","id":2245,"mutability":"mutable","name":"baseAsset","nameLocation":"2007:9:15","nodeType":"VariableDeclaration","scope":3999,"src":"1992:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"1992:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":2247,"mutability":"mutable","name":"rebalancer","nameLocation":"2038:10:15","nodeType":"VariableDeclaration","scope":3999,"src":"2023:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2246,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d66bd524","id":2251,"mutability":"mutable","name":"reserves","nameLocation":"2092:8:15","nodeType":"VariableDeclaration","scope":3999,"src":"2057:43:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2250,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2248,"name":"address","nodeType":"ElementaryTypeName","src":"2065:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2057:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2076:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"BaluniV1Pool.AssetInfo","id":2256,"members":[{"constant":false,"id":2253,"mutability":"mutable","name":"asset","nameLocation":"2145:5:15","nodeType":"VariableDeclaration","scope":2256,"src":"2137:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2252,"name":"address","nodeType":"ElementaryTypeName","src":"2137:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"weight","nameLocation":"2169:6:15","nodeType":"VariableDeclaration","scope":2256,"src":"2161:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2161:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2116:9:15","nodeType":"StructDefinition","scope":3999,"src":"2109:74:15","visibility":"public"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":2263,"name":"RebalancePerformed","nameLocation":"2197:18:15","nodeType":"EventDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2232:2:15","nodeType":"VariableDeclaration","scope":2263,"src":"2216:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2257,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2261,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2246:6:15","nodeType":"VariableDeclaration","scope":2263,"src":"2236:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"2236:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2260,"nodeType":"ArrayTypeName","src":"2236:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2215:38:15"},"src":"2191:63:15"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":2270,"name":"WeightsRebalanced","nameLocation":"2266:17:15","nodeType":"EventDefinition","parameters":{"id":2269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2300:4:15","nodeType":"VariableDeclaration","scope":2270,"src":"2284:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"2284:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2268,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2316:12:15","nodeType":"VariableDeclaration","scope":2270,"src":"2306:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2266,"name":"uint256","nodeType":"ElementaryTypeName","src":"2306:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2267,"nodeType":"ArrayTypeName","src":"2306:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2283:46:15"},"src":"2260:70:15"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":2276,"name":"Burn","nameLocation":"2342:4:15","nodeType":"EventDefinition","parameters":{"id":2275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2363:4:15","nodeType":"VariableDeclaration","scope":2276,"src":"2347:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2274,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2377:12:15","nodeType":"VariableDeclaration","scope":2276,"src":"2369:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2273,"name":"uint256","nodeType":"ElementaryTypeName","src":"2369:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2346:44:15"},"src":"2336:55:15"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":2282,"name":"Mint","nameLocation":"2403:4:15","nodeType":"EventDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2424:2:15","nodeType":"VariableDeclaration","scope":2282,"src":"2408:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"2408:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2280,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2436:12:15","nodeType":"VariableDeclaration","scope":2282,"src":"2428:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2407:42:15"},"src":"2397:53:15"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":2294,"name":"Swap","nameLocation":"2462:4:15","nodeType":"EventDefinition","parameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2284,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2493:4:15","nodeType":"VariableDeclaration","scope":2294,"src":"2477:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2283,"name":"address","nodeType":"ElementaryTypeName","src":"2477:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2286,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2524:9:15","nodeType":"VariableDeclaration","scope":2294,"src":"2508:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2285,"name":"address","nodeType":"ElementaryTypeName","src":"2508:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2288,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2560:7:15","nodeType":"VariableDeclaration","scope":2294,"src":"2544:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"2544:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2290,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2586:8:15","nodeType":"VariableDeclaration","scope":2294,"src":"2578:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"2578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2292,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2613:9:15","nodeType":"VariableDeclaration","scope":2294,"src":"2605:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"2605:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2466:163:15"},"src":"2456:174:15"},{"body":{"id":2378,"nodeType":"Block","src":"3301:673:15","statements":[{"expression":{"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2314,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"3360:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2315,"name":"_periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"3372:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3360:22:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2317,"nodeType":"ExpressionStatement","src":"3360:22:15"},{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2318,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"3393:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2319,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3403:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3403:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3393:20:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2322,"nodeType":"ExpressionStatement","src":"3393:20:15"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2323,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"3424:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2324,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"3437:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3424:24:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2326,"nodeType":"ExpressionStatement","src":"3424:24:15"},{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"3459:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31653138","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3465:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3459:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2330,"nodeType":"ExpressionStatement","src":"3459:10:15"},{"expression":{"arguments":[{"id":2332,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2300,"src":"3541:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2333,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"3550:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2331,"name":"initializeAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2496,"src":"3524:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address[] memory,uint256[] memory)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3524:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2335,"nodeType":"ExpressionStatement","src":"3524:35:15"},{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2336,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"3602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2337,"name":"_trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"3612:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3602:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2339,"nodeType":"ExpressionStatement","src":"3602:18:15"},{"expression":{"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2340,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"3660:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2342,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"3692:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2341,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"3672:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6342_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6342","typeString":"contract IBaluniV1Rebalancer"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3705:4:15","memberName":"USDC","nodeType":"MemberAccess","referencedDeclaration":6264,"src":"3672:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3660:51:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2347,"nodeType":"ExpressionStatement","src":"3660:51:15"},{"assignments":[2349],"declarations":[{"constant":false,"id":2349,"mutability":"mutable","name":"totalWeight","nameLocation":"3783:11:15","nodeType":"VariableDeclaration","scope":2378,"src":"3775:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2351,"initialValue":{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3797:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3775:23:15"},{"body":{"id":2369,"nodeType":"Block","src":"3855:53:15","statements":[{"expression":{"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2363,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3870:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2364,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"3885:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2366,"indexExpression":{"id":2365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"3894:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3885:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3870:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2368,"nodeType":"ExpressionStatement","src":"3870:26:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"3829:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2357,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"3833:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3842:6:15","memberName":"length","nodeType":"MemberAccess","src":"3833:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3829:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2370,"initializationExpression":{"assignments":[2353],"declarations":[{"constant":false,"id":2353,"mutability":"mutable","name":"i","nameLocation":"3822:1:15","nodeType":"VariableDeclaration","scope":2370,"src":"3814:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"3814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2355,"initialValue":{"hexValue":"30","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3826:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3814:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3850:3:15","subExpression":{"id":2360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"3850:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2362,"nodeType":"ExpressionStatement","src":"3850:3:15"},"nodeType":"ForStatement","src":"3809:99:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"3926:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3130303030","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3941:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3926:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077656967687473","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3948:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""},"value":"Invalid weights"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb8d647918028d0523fccac550113bbbb71d463bbb8b573c02c32bc5cf2b89","typeString":"literal_string \"Invalid weights\""}],"id":2371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3918:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3918:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2377,"nodeType":"ExpressionStatement","src":"3918:48:15"}]},"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"2638:449:15","text":" @dev Initializes a new instance of the BaluniV1Pool contract.\n @param _rebalancer The address of the rebalancer contract.\n @param _assets An array of addresses representing the assets in the pool.\n @param _weights An array of weights corresponding to the assets in the pool.\n @param _trigger The trigger value for rebalancing the pool.\n @param _periphery The address of the periphery contract."},"id":2379,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"42616c756e69204c50","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3275:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffab3cad7a41854f5c383caa9a930fe1ab39b32cbc67d790708a7a9f02409818","typeString":"literal_string \"Baluni LP\""},"value":"Baluni LP"},{"hexValue":"42414c554e492d4c50","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3288:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e9cdad270784d4cf630085b188c6ca83632e4ebde5d7094eec6989a900521298","typeString":"literal_string \"BALUNI-LP\""},"value":"BALUNI-LP"}],"id":2312,"kind":"baseConstructorSpecifier","modifierName":{"id":2309,"name":"ERC20","nameLocations":["3269:5:15"],"nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"3269:5:15"},"nodeType":"ModifierInvocation","src":"3269:31:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"_rebalancer","nameLocation":"3123:11:15","nodeType":"VariableDeclaration","scope":2379,"src":"3115:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"3115:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2300,"mutability":"mutable","name":"_assets","nameLocation":"3162:7:15","nodeType":"VariableDeclaration","scope":2379,"src":"3145:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"3145:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2299,"nodeType":"ArrayTypeName","src":"3145:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2303,"mutability":"mutable","name":"_weights","nameLocation":"3197:8:15","nodeType":"VariableDeclaration","scope":2379,"src":"3180:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"nodeType":"ArrayTypeName","src":"3180:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2305,"mutability":"mutable","name":"_trigger","nameLocation":"3224:8:15","nodeType":"VariableDeclaration","scope":2379,"src":"3216:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"3216:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"_periphery","nameLocation":"3251:10:15","nodeType":"VariableDeclaration","scope":2379,"src":"3243:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2306,"name":"address","nodeType":"ElementaryTypeName","src":"3243:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3104:164:15"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"3301:0:15"},"scope":3999,"src":"3093:881:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2390,"nodeType":"Block","src":"4007:81:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4026:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4030:6:15","memberName":"sender","nodeType":"MemberAccess","src":"4026:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2384,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"4040:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4026:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920506572697068657279","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4051:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""},"value":"Only Periphery"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e84ca658204d8225a6124393bf429fae79ddb71fa88578d833d3a2b9b5da52d2","typeString":"literal_string \"Only Periphery\""}],"id":2381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4018:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4018:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2388,"nodeType":"ExpressionStatement","src":"4018:50:15"},{"id":2389,"nodeType":"PlaceholderStatement","src":"4079:1:15"}]},"id":2391,"name":"onlyPeriphery","nameLocation":"3991:13:15","nodeType":"ModifierDefinition","parameters":{"id":2380,"nodeType":"ParameterList","parameters":[],"src":"4004:2:15"},"src":"3982:106:15","virtual":false,"visibility":"internal"},{"body":{"id":2495,"nodeType":"Block","src":"4397:597:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2402,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4416:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4424:6:15","memberName":"length","nodeType":"MemberAccess","src":"4416:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2404,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"4434:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4443:6:15","memberName":"length","nodeType":"MemberAccess","src":"4434:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4416:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4451:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":2401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4408:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4408:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2409,"nodeType":"ExpressionStatement","src":"4408:80:15"},{"body":{"id":2493,"nodeType":"Block","src":"4546:441:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2422,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4569:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2424,"indexExpression":{"id":2423,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4577:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4569:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4591:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4583:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2425,"name":"address","nodeType":"ElementaryTypeName","src":"4583:7:15","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4583:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4569:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061737365742061646472657373","id":2430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4595:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""},"value":"Invalid asset address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_795f8eca8a22be2e70f1d9bdebdbf85a1dc43e172c3964e13eac586b45ff2b92","typeString":"literal_string \"Invalid asset address\""}],"id":2421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4561:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2432,"nodeType":"ExpressionStatement","src":"4561:58:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2434,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"4642:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2436,"indexExpression":{"id":2435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4651:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4642:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4656:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4642:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420776569676874","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4659:16:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""},"value":"Invalid weight"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff1ef73e4333da4da038aba1312a1df349427c8859c23d4b6d4a7df22bfc1a19","typeString":"literal_string \"Invalid weight\""}],"id":2433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4634:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4634:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2441,"nodeType":"ExpressionStatement","src":"4634:42:15"},{"expression":{"arguments":[{"arguments":[{"baseExpression":{"id":2446,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4727:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2448,"indexExpression":{"id":2447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4735:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4727:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2449,"name":"_weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"4747:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2451,"indexExpression":{"id":2450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4756:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4747:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2445,"name":"AssetInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2256,"src":"4709:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AssetInfo_$2256_storage_ptr_$","typeString":"type(struct BaluniV1Pool.AssetInfo storage pointer)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4720:5:15","4739:6:15"],"names":["asset","weight"],"nodeType":"FunctionCall","src":"4709:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_AssetInfo_$2256_memory_ptr","typeString":"struct BaluniV1Pool.AssetInfo memory"}],"expression":{"id":2442,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"4693:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4704:4:15","memberName":"push","nodeType":"MemberAccess","src":"4693:15:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage_ptr_$_t_struct$_AssetInfo_$2256_storage_$returns$__$attached_to$_t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage_ptr_$","typeString":"function (struct BaluniV1Pool.AssetInfo storage ref[] storage pointer,struct BaluniV1Pool.AssetInfo storage ref)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2454,"nodeType":"ExpressionStatement","src":"4693:68:15"},{"assignments":[2457],"declarations":[{"constant":false,"id":2457,"mutability":"mutable","name":"asset","nameLocation":"4785:5:15","nodeType":"VariableDeclaration","scope":2493,"src":"4778:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":2456,"nodeType":"UserDefinedTypeName","pathNode":{"id":2455,"name":"IERC20","nameLocations":["4778:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"4778:6:15"},"referencedDeclaration":1729,"src":"4778:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2463,"initialValue":{"arguments":[{"baseExpression":{"id":2459,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4800:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2461,"indexExpression":{"id":2460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4808:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4800:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2458,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4793:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4793:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"4778:33:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2468,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4854:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":2467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4846:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2466,"name":"address","nodeType":"ElementaryTypeName","src":"4846:7:15","typeDescriptions":{}}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4846:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2472,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4869:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4861:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2470,"name":"address","nodeType":"ElementaryTypeName","src":"4861:7:15","typeDescriptions":{}}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4861:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2464,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4830:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4836:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"4830:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4830:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4885:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4830:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"nodeType":"IfStatement","src":"4826:150:15","trueBody":{"id":2491,"nodeType":"Block","src":"4888:88:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2482,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"4929:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4921:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"4921:7:15","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4921:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":2486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4947:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2485,"name":"uint256","nodeType":"ElementaryTypeName","src":"4947:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4942:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4942:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4956:3:15","memberName":"max","nodeType":"MemberAccess","src":"4942:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2477,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2457,"src":"4907:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4913:7:15","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1716,"src":"4907:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4907:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2490,"nodeType":"ExpressionStatement","src":"4907:53:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4521:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2415,"name":"_assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2395,"src":"4525:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4533:6:15","memberName":"length","nodeType":"MemberAccess","src":"4525:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4521:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2494,"initializationExpression":{"assignments":[2411],"declarations":[{"constant":false,"id":2411,"mutability":"mutable","name":"i","nameLocation":"4514:1:15","nodeType":"VariableDeclaration","scope":2494,"src":"4506:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"4506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2413,"initialValue":{"hexValue":"30","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4518:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4506:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4541:3:15","subExpression":{"id":2418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"4541:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2420,"nodeType":"ExpressionStatement","src":"4541:3:15"},"nodeType":"ForStatement","src":"4501:486:15"}]},"documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"4096:207:15","text":" @dev Initializes the assets and their weights for the pool.\n @param _assets The array of asset addresses.\n @param _weights The array of weights corresponding to each asset."},"id":2496,"implemented":true,"kind":"function","modifiers":[],"name":"initializeAssets","nameLocation":"4318:16:15","nodeType":"FunctionDefinition","parameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"_assets","nameLocation":"4352:7:15","nodeType":"VariableDeclaration","scope":2496,"src":"4335:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2393,"name":"address","nodeType":"ElementaryTypeName","src":"4335:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2394,"nodeType":"ArrayTypeName","src":"4335:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"_weights","nameLocation":"4378:8:15","nodeType":"VariableDeclaration","scope":2496,"src":"4361:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4361:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2397,"nodeType":"ArrayTypeName","src":"4361:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4334:53:15"},"returnParameters":{"id":2400,"nodeType":"ParameterList","parameters":[],"src":"4397:0:15"},"scope":3999,"src":"4309:685:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2593,"nodeType":"Block","src":"5487:811:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2508,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"5506:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5506:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":2510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5527:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":2507,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5498:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5498:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2512,"nodeType":"ExpressionStatement","src":"5498:52:15"},{"assignments":[2514,2517],"declarations":[{"constant":false,"id":2514,"mutability":"mutable","name":"totalValuation","nameLocation":"5570:14:15","nodeType":"VariableDeclaration","scope":2593,"src":"5562:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"5562:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"valuations","nameLocation":"5603:10:15","nodeType":"VariableDeclaration","scope":2593,"src":"5586:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"5586:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2516,"nodeType":"ArrayTypeName","src":"5586:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2520,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2518,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"5617:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"5561:80:15"},{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"amountsToAdd","nameLocation":"5671:12:15","nodeType":"VariableDeclaration","scope":2593,"src":"5654:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5654:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ArrayTypeName","src":"5654:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[{"id":2527,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"5709:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2528,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2517,"src":"5725:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2526,"name":"_calculateAmountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"5686:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256[] memory) view returns (uint256[] memory)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5686:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5654:82:15"},{"assignments":[2532],"declarations":[{"constant":false,"id":2532,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"5816:19:15","nodeType":"VariableDeclaration","scope":2593,"src":"5808:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2531,"name":"uint256","nodeType":"ElementaryTypeName","src":"5808:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2536,"initialValue":{"arguments":[{"id":2534,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5868:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2533,"name":"_calculateTotalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"5838:29:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) view returns (uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5838:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5808:73:15"},{"assignments":[2541],"declarations":[{"constant":false,"id":2541,"mutability":"mutable","name":"amounts","nameLocation":"5911:7:15","nodeType":"VariableDeclaration","scope":2593,"src":"5894:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5894:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2540,"nodeType":"ArrayTypeName","src":"5894:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2548,"initialValue":{"arguments":[{"expression":{"id":2545,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"5935:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5946:6:15","memberName":"length","nodeType":"MemberAccess","src":"5935:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5921:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5925:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ArrayTypeName","src":"5925:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5921:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5894:59:15"},{"body":{"id":2578,"nodeType":"Block","src":"6016:138:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2560,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6035:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2562,"indexExpression":{"id":2561,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6048:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6035:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6035:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2577,"nodeType":"IfStatement","src":"6031:112:15","trueBody":{"id":2576,"nodeType":"Block","src":"6056:87:15","statements":[{"expression":{"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2565,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6075:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2567,"indexExpression":{"id":2566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6083:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6075:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2569,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6108:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2570,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6111:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2572,"indexExpression":{"id":2571,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6124:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6111:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2568,"name":"_calculateLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"6088:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6088:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6075:52:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2575,"nodeType":"ExpressionStatement","src":"6075:52:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"5986:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2554,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"5990:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6003:6:15","memberName":"length","nodeType":"MemberAccess","src":"5990:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5986:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2579,"initializationExpression":{"assignments":[2550],"declarations":[{"constant":false,"id":2550,"mutability":"mutable","name":"i","nameLocation":"5979:1:15","nodeType":"VariableDeclaration","scope":2579,"src":"5971:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5971:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2552,"initialValue":{"hexValue":"30","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5983:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5971:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6011:3:15","subExpression":{"id":2557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"6011:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2559,"nodeType":"ExpressionStatement","src":"6011:3:15"},"nodeType":"ForStatement","src":"5966:188:15"},{"expression":{"arguments":[{"id":2581,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"6172:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2582,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2532,"src":"6182:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"6166:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6166:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2584,"nodeType":"ExpressionStatement","src":"6166:36:15"},{"eventCall":{"arguments":[{"expression":{"id":2586,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6238:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6242:6:15","memberName":"sender","nodeType":"MemberAccess","src":"6238:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2588,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6250:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2585,"name":"WeightsRebalanced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"6220:17:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,uint256[] memory)"}},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6220:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2590,"nodeType":"EmitStatement","src":"6215:48:15"},{"expression":{"id":2591,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6283:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2506,"id":2592,"nodeType":"Return","src":"6276:14:15"}]},"documentation":{"id":2497,"nodeType":"StructuredDocumentation","src":"5002:385:15","text":" @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\n transferring the calculated amounts from the user to the pool, minting the total added liquidity,\n updating the reserves, and emitting an event to indicate the rebalancing of weights.\n @param receiver The address to receive the minted liquidity tokens."},"functionSelector":"0723c999","id":2594,"implemented":true,"kind":"function","modifiers":[{"id":2502,"kind":"modifierInvocation","modifierName":{"id":2501,"name":"onlyPeriphery","nameLocations":["5446:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2391,"src":"5446:13:15"},"nodeType":"ModifierInvocation","src":"5446:13:15"}],"name":"rebalanceWeights","nameLocation":"5402:16:15","nodeType":"FunctionDefinition","parameters":{"id":2500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2499,"mutability":"mutable","name":"receiver","nameLocation":"5427:8:15","nodeType":"VariableDeclaration","scope":2594,"src":"5419:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2498,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5418:18:15"},"returnParameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2594,"src":"5469:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"5469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2504,"nodeType":"ArrayTypeName","src":"5469:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5468:18:15"},"scope":3999,"src":"5393:905:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2666,"nodeType":"Block","src":"7268:631:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"7287:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2612,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7300:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7287:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742073776170207468652073616d6520746f6b656e","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7309:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""},"value":"Cannot swap the same token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3b6914a8f4e42f0dc4d6fcf60d1470463793693c123b4b0782b9cd43668c23","typeString":"literal_string \"Cannot swap the same token\""}],"id":2610,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7279:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7279:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2616,"nodeType":"ExpressionStatement","src":"7279:59:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2618,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7357:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7366:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7357:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7369:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7349:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7349:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2623,"nodeType":"ExpressionStatement","src":"7349:55:15"},{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"receivedAmount","nameLocation":"7478:14:15","nodeType":"VariableDeclaration","scope":2666,"src":"7470:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"7470:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2631,"initialValue":{"arguments":[{"id":2627,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"7508:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2628,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7519:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7528:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2626,"name":"getAmountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"7495:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7495:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7470:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2633,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"7607:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2635,"indexExpression":{"id":2634,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7616:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7607:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2636,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"7628:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7607:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":2638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7644:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":2632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7599:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7599:70:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2640,"nodeType":"ExpressionStatement","src":"7599:70:15"},{"assignments":[2642],"declarations":[{"constant":false,"id":2642,"mutability":"mutable","name":"fee","nameLocation":"7712:3:15","nodeType":"VariableDeclaration","scope":2666,"src":"7704:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2641,"name":"uint256","nodeType":"ElementaryTypeName","src":"7704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2649,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2643,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"7719:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2644,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"7736:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7719:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7718:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7752:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7718:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7704:53:15"},{"expression":{"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2650,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"7768:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2651,"name":"receivedAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"7777:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2652,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2642,"src":"7794:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7768:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2655,"nodeType":"ExpressionStatement","src":"7768:29:15"},{"eventCall":{"arguments":[{"id":2657,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2603,"src":"7820:8:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2658,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"7830:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2659,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"7841:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2660,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7850:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2661,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"7858:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2656,"name":"Swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"7815:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7815:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"EmitStatement","src":"7810:55:15"},{"expression":{"id":2664,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"7885:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2609,"id":2665,"nodeType":"Return","src":"7878:13:15"}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"6306:782:15","text":" @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\n Requirements:\n - `fromToken` and `toToken` must be different tokens.\n - `amount` must be greater than zero.\n - Sufficient liquidity of `toToken` must be available in the contract.\n Emits a `Swap` event with the details of the swap.\n Updates the reserves after the swap.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of `fromToken` to swap.\n @param receiver The address to receive the swapped tokens.\n @return toSend The amount of `toToken` received after the swap."},"functionSelector":"6e81221c","id":2667,"implemented":true,"kind":"function","modifiers":[{"id":2606,"kind":"modifierInvocation","modifierName":{"id":2605,"name":"nonReentrant","nameLocations":["7230:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":2071,"src":"7230:12:15"},"nodeType":"ModifierInvocation","src":"7230:12:15"}],"name":"swap","nameLocation":"7103:4:15","nodeType":"FunctionDefinition","parameters":{"id":2604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"fromToken","nameLocation":"7126:9:15","nodeType":"VariableDeclaration","scope":2667,"src":"7118:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"7118:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"toToken","nameLocation":"7154:7:15","nodeType":"VariableDeclaration","scope":2667,"src":"7146:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2598,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2601,"mutability":"mutable","name":"amount","nameLocation":"7180:6:15","nodeType":"VariableDeclaration","scope":2667,"src":"7172:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"7172:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2603,"mutability":"mutable","name":"receiver","nameLocation":"7205:8:15","nodeType":"VariableDeclaration","scope":2667,"src":"7197:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2602,"name":"address","nodeType":"ElementaryTypeName","src":"7197:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7107:113:15"},"returnParameters":{"id":2609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2608,"mutability":"mutable","name":"toSend","nameLocation":"7260:6:15","nodeType":"VariableDeclaration","scope":2667,"src":"7252:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"7252:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7251:16:15"},"scope":3999,"src":"7094:805:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2830,"nodeType":"Block","src":"8203:1205:15","statements":[{"assignments":[2681],"declarations":[{"constant":false,"id":2681,"mutability":"mutable","name":"totalSupply","nameLocation":"8222:11:15","nodeType":"VariableDeclaration","scope":2830,"src":"8214:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"8214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2684,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2682,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"8236:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8236:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8214:35:15"},{"assignments":[2686],"declarations":[{"constant":false,"id":2686,"mutability":"mutable","name":"totalValue","nameLocation":"8268:10:15","nodeType":"VariableDeclaration","scope":2830,"src":"8260:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"8260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2688,"initialValue":{"hexValue":"30","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8281:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8260:22:15"},{"assignments":[2693],"declarations":[{"constant":false,"id":2693,"mutability":"mutable","name":"_reserves","nameLocation":"8310:9:15","nodeType":"VariableDeclaration","scope":2830,"src":"8293:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"8293:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2692,"nodeType":"ArrayTypeName","src":"8293:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2696,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2694,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"8322:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8322:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8293:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2698,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8354:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8365:6:15","memberName":"length","nodeType":"MemberAccess","src":"8354:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2700,"name":"_reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2693,"src":"8375:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8385:6:15","memberName":"length","nodeType":"MemberAccess","src":"8375:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8354:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207265736572766573206c656e677468","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8393:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""},"value":"Invalid reserves length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_788ce755d61da147edad70af92467c8a383af859573990e9defde5b6e0bdf24d","typeString":"literal_string \"Invalid reserves length\""}],"id":2697,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8346:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8346:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2705,"nodeType":"ExpressionStatement","src":"8346:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2707,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8438:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8449:6:15","memberName":"length","nodeType":"MemberAccess","src":"8438:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8458:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8438:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20617373657473","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8461:11:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""},"value":"No assets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_195739df032cb3c07c5ed70a4cae73c5d077df4296263c6db3d1f3b4671efbd0","typeString":"literal_string \"No assets\""}],"id":2706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8430:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8430:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2713,"nodeType":"ExpressionStatement","src":"8430:43:15"},{"body":{"id":2745,"nodeType":"Block","src":"8534:175:15","statements":[{"assignments":[2726],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"asset","nameLocation":"8557:5:15","nodeType":"VariableDeclaration","scope":2745,"src":"8549:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2725,"name":"address","nodeType":"ElementaryTypeName","src":"8549:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2731,"initialValue":{"expression":{"baseExpression":{"id":2727,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8565:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2729,"indexExpression":{"id":2728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8576:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8565:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8579:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"8565:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8549:35:15"},{"assignments":[2733],"declarations":[{"constant":false,"id":2733,"mutability":"mutable","name":"valuation","nameLocation":"8609:9:15","nodeType":"VariableDeclaration","scope":2745,"src":"8601:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"8601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2740,"initialValue":{"arguments":[{"id":2735,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"8641:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2736,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"8648:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2738,"indexExpression":{"id":2737,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8656:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8648:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2734,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"8621:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8621:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8601:58:15"},{"expression":{"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2741,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"8674:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2742,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"8688:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8674:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2744,"nodeType":"ExpressionStatement","src":"8674:23:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8506:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2719,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8510:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8521:6:15","memberName":"length","nodeType":"MemberAccess","src":"8510:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8506:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2746,"initializationExpression":{"assignments":[2715],"declarations":[{"constant":false,"id":2715,"mutability":"mutable","name":"i","nameLocation":"8499:1:15","nodeType":"VariableDeclaration","scope":2746,"src":"8491:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2714,"name":"uint256","nodeType":"ElementaryTypeName","src":"8491:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2717,"initialValue":{"hexValue":"30","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8503:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8491:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8529:3:15","subExpression":{"id":2722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"8529:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2724,"nodeType":"ExpressionStatement","src":"8529:3:15"},"nodeType":"ForStatement","src":"8486:223:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"8729:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8742:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8729:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c2076616c7565206d7573742062652067726561746572207468616e2030","id":2751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8745:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""},"value":"Total value must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e8ec4a06d76118e3b24afbc30b183e086aa6aaa6e137c81160fc8d59e1a33e3f","typeString":"literal_string \"Total value must be greater than 0\""}],"id":2747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8721:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8721:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2753,"nodeType":"ExpressionStatement","src":"8721:61:15"},{"assignments":[2755],"declarations":[{"constant":false,"id":2755,"mutability":"mutable","name":"toMint","nameLocation":"8803:6:15","nodeType":"VariableDeclaration","scope":2830,"src":"8795:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2754,"name":"uint256","nodeType":"ElementaryTypeName","src":"8795:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2756,"nodeType":"VariableDeclarationStatement","src":"8795:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2757,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"8826:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8841:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8826:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2787,"nodeType":"Block","src":"8896:233:15","statements":[{"assignments":[2766,null],"declarations":[{"constant":false,"id":2766,"mutability":"mutable","name":"totalLiquidity","nameLocation":"8920:14:15","nodeType":"VariableDeclaration","scope":2787,"src":"8912:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2765,"name":"uint256","nodeType":"ElementaryTypeName","src":"8912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":2769,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2767,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"8940:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8911:53:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2771,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"8987:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9004:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8987:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f74616c206c6971756964697479206d7573742062652067726561746572207468616e2030","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9007:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""},"value":"Total liquidity must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a245c00c976af272c663e732300fe860097516364a0d92887494f54e860fa54c","typeString":"literal_string \"Total liquidity must be greater than 0\""}],"id":2770,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8979:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8979:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2776,"nodeType":"ExpressionStatement","src":"8979:69:15"},{"expression":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2777,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9063:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":2778,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"9074:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9073:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2780,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"9088:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9073:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2782,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9072:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2783,"name":"totalLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"9103:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9072:45:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9063:54:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2786,"nodeType":"ExpressionStatement","src":"9063:54:15"}]},"id":2788,"nodeType":"IfStatement","src":"8822:307:15","trueBody":{"id":2764,"nodeType":"Block","src":"8844:46:15","statements":[{"expression":{"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2760,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"8859:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2761,"name":"totalValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"8868:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8859:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2763,"nodeType":"ExpressionStatement","src":"8859:19:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2790,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9147:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9157:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9147:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74207174792069732030","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9160:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""},"value":"Mint qty is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50327403b25acc6e0d15796c676b8320f8d9ffcece005326d31f4226e4f741bb","typeString":"literal_string \"Mint qty is 0\""}],"id":2789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9139:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9139:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2795,"nodeType":"ExpressionStatement","src":"9139:37:15"},{"assignments":[2797],"declarations":[{"constant":false,"id":2797,"mutability":"mutable","name":"b4","nameLocation":"9197:2:15","nodeType":"VariableDeclaration","scope":2830,"src":"9189:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2796,"name":"uint256","nodeType":"ElementaryTypeName","src":"9189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2802,"initialValue":{"arguments":[{"expression":{"id":2799,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9212:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9216:6:15","memberName":"sender","nodeType":"MemberAccess","src":"9212:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2798,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"9202:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9202:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9189:34:15"},{"expression":{"arguments":[{"id":2804,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9240:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2805,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9244:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2803,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"9234:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9234:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2807,"nodeType":"ExpressionStatement","src":"9234:17:15"},{"assignments":[2809],"declarations":[{"constant":false,"id":2809,"mutability":"mutable","name":"b","nameLocation":"9270:1:15","nodeType":"VariableDeclaration","scope":2830,"src":"9262:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"9262:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2815,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2811,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9284:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2810,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"9274:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9274:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2813,"name":"b4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"9290:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9274:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9262:30:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"9313:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2818,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9318:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9313:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d696e74204661696c6564","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9326:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_34ef1863090c1d6424986d336eb7c969d5c87770215770a2698790d3d79274ce","typeString":"literal_string \"Mint Failed\""},"value":"Mint Failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_34ef1863090c1d6424986d336eb7c969d5c87770215770a2698790d3d79274ce","typeString":"literal_string \"Mint Failed\""}],"id":2816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9305:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9305:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2822,"nodeType":"ExpressionStatement","src":"9305:35:15"},{"eventCall":{"arguments":[{"id":2824,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9363:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2825,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9367:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2823,"name":"Mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2282,"src":"9358:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9358:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"EmitStatement","src":"9353:21:15"},{"expression":{"id":2828,"name":"toMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"9394:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2679,"id":2829,"nodeType":"Return","src":"9387:13:15"}]},"documentation":{"id":2668,"nodeType":"StructuredDocumentation","src":"7907:197:15","text":" @dev Mints new tokens and adds them to the specified address.\n @param to The address to which the new tokens will be minted.\n @return The amount of tokens minted."},"functionSelector":"de836ebd","id":2831,"implemented":true,"kind":"function","modifiers":[{"id":2676,"kind":"modifierInvocation","modifierName":{"id":2675,"name":"onlyPeriphery","nameLocations":["8171:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2391,"src":"8171:13:15"},"nodeType":"ModifierInvocation","src":"8171:13:15"}],"name":"mint","nameLocation":"8119:4:15","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"to","nameLocation":"8132:2:15","nodeType":"VariableDeclaration","scope":2831,"src":"8124:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"8124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"amounts","nameLocation":"8153:7:15","nodeType":"VariableDeclaration","scope":2831,"src":"8136:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"8136:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2672,"nodeType":"ArrayTypeName","src":"8136:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8123:38:15"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2831,"src":"8194:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"8194:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8193:9:15"},"scope":3999,"src":"8110:1298:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2998,"nodeType":"Block","src":"10505:1179:15","statements":[{"assignments":[2843],"declarations":[{"constant":false,"id":2843,"mutability":"mutable","name":"share","nameLocation":"10524:5:15","nodeType":"VariableDeclaration","scope":2998,"src":"10516:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2842,"name":"uint256","nodeType":"ElementaryTypeName","src":"10516:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2850,"initialValue":{"arguments":[{"arguments":[{"id":2847,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10550:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":2846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10542:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2845,"name":"address","nodeType":"ElementaryTypeName","src":"10542:7:15","typeDescriptions":{}}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10542:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2844,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"10532:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10532:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10516:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10575:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10583:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10575:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e2030","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10586:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""},"value":"Share must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37b2136db8906a0fa9dcfb36fa22f3e5724d70ae1dfd30e29853723b16bc684b","typeString":"literal_string \"Share must be greater than 0\""}],"id":2851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10567:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10567:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2857,"nodeType":"ExpressionStatement","src":"10567:50:15"},{"assignments":[2859],"declarations":[{"constant":false,"id":2859,"mutability":"mutable","name":"totalSupply","nameLocation":"10638:11:15","nodeType":"VariableDeclaration","scope":2998,"src":"10630:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"10630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2862,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2860,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"10652:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10652:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10630:35:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2864,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"10684:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10698:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10684:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f206c6971756964697479","id":2867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10701:14:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""},"value":"No liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_379a432f00aa43993bfbf4e01492a8eab5138dcd2e395864ede728644390fc31","typeString":"literal_string \"No liquidity\""}],"id":2863,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10676:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10676:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2869,"nodeType":"ExpressionStatement","src":"10676:40:15"},{"assignments":[2874],"declarations":[{"constant":false,"id":2874,"mutability":"mutable","name":"amounts","nameLocation":"10746:7:15","nodeType":"VariableDeclaration","scope":2998,"src":"10729:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"10729:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2873,"nodeType":"ArrayTypeName","src":"10729:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2881,"initialValue":{"arguments":[{"expression":{"id":2878,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10770:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10781:6:15","memberName":"length","nodeType":"MemberAccess","src":"10770:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10756:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"10760:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ArrayTypeName","src":"10760:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10756:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10729:59:15"},{"assignments":[2883],"declarations":[{"constant":false,"id":2883,"mutability":"mutable","name":"fee","nameLocation":"10807:3:15","nodeType":"VariableDeclaration","scope":2998,"src":"10799:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2882,"name":"uint256","nodeType":"ElementaryTypeName","src":"10799:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2890,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2884,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10814:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2885,"name":"SWAP_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"10822:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10814:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10813:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":2888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10838:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10813:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10799:44:15"},{"assignments":[2892],"declarations":[{"constant":false,"id":2892,"mutability":"mutable","name":"shareAfterFee","nameLocation":"10862:13:15","nodeType":"VariableDeclaration","scope":2998,"src":"10854:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2891,"name":"uint256","nodeType":"ElementaryTypeName","src":"10854:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2896,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"10878:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2894,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"10886:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10878:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10854:35:15"},{"body":{"id":2935,"nodeType":"Block","src":"10950:256:15","statements":[{"assignments":[2909],"declarations":[{"constant":false,"id":2909,"mutability":"mutable","name":"assetBalance","nameLocation":"10973:12:15","nodeType":"VariableDeclaration","scope":2935,"src":"10965:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10965:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2923,"initialValue":{"arguments":[{"arguments":[{"id":2916,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11064:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11056:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"11056:7:15","typeDescriptions":{}}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11056:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":2918,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"11088:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2920,"indexExpression":{"id":2919,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"11099:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11088:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":2921,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11102:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"11088:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":2911,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"11011:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2910,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"10988:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$6221_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$6221","typeString":"contract IBaluniV1PoolPeriphery"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11022:15:15","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":6220,"src":"10988:49:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:134:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10965:157:15"},{"expression":{"id":2933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2924,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"11137:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2926,"indexExpression":{"id":2925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"11145:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11137:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2927,"name":"assetBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"11151:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2928,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11166:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11151:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11150:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2931,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"11183:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11150:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11137:57:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2934,"nodeType":"ExpressionStatement","src":"11137:57:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"10922:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2902,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"10926:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10937:6:15","memberName":"length","nodeType":"MemberAccess","src":"10926:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10922:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2936,"initializationExpression":{"assignments":[2898],"declarations":[{"constant":false,"id":2898,"mutability":"mutable","name":"i","nameLocation":"10915:1:15","nodeType":"VariableDeclaration","scope":2936,"src":"10907:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2897,"name":"uint256","nodeType":"ElementaryTypeName","src":"10907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2900,"initialValue":{"hexValue":"30","id":2899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10919:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10907:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10945:3:15","subExpression":{"id":2905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"10945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2907,"nodeType":"ExpressionStatement","src":"10945:3:15"},"nodeType":"ForStatement","src":"10902:304:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2941,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11242:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11234:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2939,"name":"address","nodeType":"ElementaryTypeName","src":"11234:7:15","typeDescriptions":{}}},"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11234:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2938,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"11224:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11224:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2944,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11252:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11224:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c6971756964697479","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11267:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""},"value":"Insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""}],"id":2937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11216:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11216:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2948,"nodeType":"ExpressionStatement","src":"11216:76:15"},{"assignments":[2950],"declarations":[{"constant":false,"id":2950,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"11310:18:15","nodeType":"VariableDeclaration","scope":2998,"src":"11305:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2949,"name":"bool","nodeType":"ElementaryTypeName","src":"11305:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2965,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":2959,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"11382:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2958,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"11362:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6342_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6342","typeString":"contract IBaluniV1Rebalancer"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11394:8:15","memberName":"treasury","nodeType":"MemberAccess","referencedDeclaration":6289,"src":"11362:40:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":2962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2963,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"11406:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":2954,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11346:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":2953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11338:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2952,"name":"address","nodeType":"ElementaryTypeName","src":"11338:7:15","typeDescriptions":{}}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11338:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2951,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11331:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11331:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11353:8:15","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"11331:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11331:79:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11305:105:15"},{"expression":{"arguments":[{"id":2967,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"11429:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11449:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":2966,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11421:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"ExpressionStatement","src":"11421:50:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2975,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11510:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":2974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11502:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2973,"name":"address","nodeType":"ElementaryTypeName","src":"11502:7:15","typeDescriptions":{}}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11502:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2972,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"11492:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11492:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2978,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11520:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11492:41:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c6971756964697479","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11535:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""},"value":"Insufficient liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad","typeString":"literal_string \"Insufficient liquidity\""}],"id":2971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11484:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11484:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2982,"nodeType":"ExpressionStatement","src":"11484:76:15"},{"expression":{"arguments":[{"arguments":[{"id":2986,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11587:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11579:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2984,"name":"address","nodeType":"ElementaryTypeName","src":"11579:7:15","typeDescriptions":{}}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11579:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2988,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11594:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2983,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"11573:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11573:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2990,"nodeType":"ExpressionStatement","src":"11573:35:15"},{"eventCall":{"arguments":[{"id":2992,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"11631:2:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2993,"name":"shareAfterFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"11635:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2991,"name":"Burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2276,"src":"11626:4:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11626:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2995,"nodeType":"EmitStatement","src":"11621:28:15"},{"expression":{"id":2996,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"11669:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2841,"id":2997,"nodeType":"Return","src":"11662:14:15"}]},"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"9416:1007:15","text":" @dev Burns the pool tokens and transfers the underlying assets to the specified address.\n @param to The address to transfer the underlying assets to.\n @notice This function can only be called by the periphery contract.\n @notice The pool tokens must have a balance greater than 0.\n @notice The total supply of pool tokens must be greater than 0.\n @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\n @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\n @notice The function checks if the pool has sufficient liquidity before performing any transfers.\n @notice If any transfer fails, the function reverts the entire operation.\n @notice After the transfers, the function updates the reserves of the pool.\n @notice Emits a `Burn` event with the address and share of pool tokens burned."},"functionSelector":"89afcb44","id":2999,"implemented":true,"kind":"function","modifiers":[{"id":2837,"kind":"modifierInvocation","modifierName":{"id":2836,"name":"onlyPeriphery","nameLocations":["10464:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2391,"src":"10464:13:15"},"nodeType":"ModifierInvocation","src":"10464:13:15"}],"name":"burn","nameLocation":"10438:4:15","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2834,"mutability":"mutable","name":"to","nameLocation":"10451:2:15","nodeType":"VariableDeclaration","scope":2999,"src":"10443:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2833,"name":"address","nodeType":"ElementaryTypeName","src":"10443:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10442:12:15"},"returnParameters":{"id":2841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2999,"src":"10487:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"10487:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2839,"nodeType":"ArrayTypeName","src":"10487:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10486:18:15"},"scope":3999,"src":"10429:1255:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3020,"nodeType":"Block","src":"12187:93:15","statements":[{"expression":{"arguments":[{"id":3015,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"12245:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3016,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"12256:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3017,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"12265:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3012,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"12225:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3011,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"12205:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6342_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12205:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6342","typeString":"contract IBaluniV1Rebalancer"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12237:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"12205:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12205:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3010,"id":3019,"nodeType":"Return","src":"12198:74:15"}]},"documentation":{"id":3000,"nodeType":"StructuredDocumentation","src":"11692:385:15","text":" @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\n @param fromToken The address of the token being swapped from.\n @param toToken The address of the token being swapped to.\n @param amount The amount of `fromToken` being swapped.\n @return The amount of `toToken` that will be received."},"functionSelector":"4aa06652","id":3021,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"12092:12:15","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"fromToken","nameLocation":"12113:9:15","nodeType":"VariableDeclaration","scope":3021,"src":"12105:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"12105:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"toToken","nameLocation":"12132:7:15","nodeType":"VariableDeclaration","scope":3021,"src":"12124:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3003,"name":"address","nodeType":"ElementaryTypeName","src":"12124:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"amount","nameLocation":"12149:6:15","nodeType":"VariableDeclaration","scope":3021,"src":"12141:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"12141:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12104:52:15"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3021,"src":"12178:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3008,"name":"uint256","nodeType":"ElementaryTypeName","src":"12178:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12177:9:15"},"scope":3999,"src":"12083:197:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3036,"nodeType":"Block","src":"12397:109:15","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3028,"name":"isRebalanceNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3998,"src":"12416:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12416:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526562616c616e6365206e6f74206e6565646564","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12437:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""},"value":"Rebalance not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4fcae9c0286e861087281117e0a3185ced905823104b290e1fe3ba826d8d280","typeString":"literal_string \"Rebalance not needed\""}],"id":3027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12408:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3032,"nodeType":"ExpressionStatement","src":"12408:52:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3033,"name":"_performRebalanceIfNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"12471:25:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12471:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3035,"nodeType":"ExpressionStatement","src":"12471:27:15"}]},"documentation":{"id":3022,"nodeType":"StructuredDocumentation","src":"12288:44:15","text":" @dev Performs rebalance"},"functionSelector":"f47b45e8","id":3037,"implemented":true,"kind":"function","modifiers":[{"id":3025,"kind":"modifierInvocation","modifierName":{"id":3024,"name":"onlyPeriphery","nameLocations":["12383:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2391,"src":"12383:13:15"},"nodeType":"ModifierInvocation","src":"12383:13:15"}],"name":"performRebalanceIfNeeded","nameLocation":"12347:24:15","nodeType":"FunctionDefinition","parameters":{"id":3023,"nodeType":"ParameterList","parameters":[],"src":"12371:2:15"},"returnParameters":{"id":3026,"nodeType":"ParameterList","parameters":[],"src":"12397:0:15"},"scope":3999,"src":"12338:168:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3144,"nodeType":"Block","src":"12891:764:15","statements":[{"assignments":[3048,3051],"declarations":[{"constant":false,"id":3048,"mutability":"mutable","name":"totVal","nameLocation":"12911:6:15","nodeType":"VariableDeclaration","scope":3144,"src":"12903:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"12903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"valuations","nameLocation":"12936:10:15","nodeType":"VariableDeclaration","scope":3144,"src":"12919:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"12919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3050,"nodeType":"ArrayTypeName","src":"12919:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3054,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3052,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"12950:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12950:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12902:72:15"},{"assignments":[3056],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"numAssets","nameLocation":"12993:9:15","nodeType":"VariableDeclaration","scope":3144,"src":"12985:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3055,"name":"uint256","nodeType":"ElementaryTypeName","src":"12985:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3059,"initialValue":{"expression":{"id":3057,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"13005:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13016:6:15","memberName":"length","nodeType":"MemberAccess","src":"13005:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12985:37:15"},{"expression":{"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3060,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"13035:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3064,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"13059:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13048:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":3061,"name":"bool","nodeType":"ElementaryTypeName","src":"13052:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3062,"nodeType":"ArrayTypeName","src":"13052:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13048:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"src":"13035:34:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3067,"nodeType":"ExpressionStatement","src":"13035:34:15"},{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3068,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"13080:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3072,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"13107:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13093:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"13097:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3070,"nodeType":"ArrayTypeName","src":"13097:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13093:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"13080:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3075,"nodeType":"ExpressionStatement","src":"13080:37:15"},{"body":{"id":3138,"nodeType":"Block","src":"13170:434:15","statements":[{"assignments":[3087],"declarations":[{"constant":false,"id":3087,"mutability":"mutable","name":"currentWeight","nameLocation":"13193:13:15","nodeType":"VariableDeclaration","scope":3138,"src":"13185:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"13185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3096,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3088,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"13210:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3090,"indexExpression":{"id":3089,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13221:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13210:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13226:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"13210:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13209:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3094,"name":"totVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"13235:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13209:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13185:56:15"},{"assignments":[3098],"declarations":[{"constant":false,"id":3098,"mutability":"mutable","name":"targetWeight","nameLocation":"13264:12:15","nodeType":"VariableDeclaration","scope":3138,"src":"13256:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3097,"name":"uint256","nodeType":"ElementaryTypeName","src":"13256:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3103,"initialValue":{"expression":{"baseExpression":{"id":3099,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"13279:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3101,"indexExpression":{"id":3100,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13290:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13279:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13293:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"13279:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13256:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3104,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"13320:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3105,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"13336:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13320:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3136,"nodeType":"Block","src":"13474:119:15","statements":[{"expression":{"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3122,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"13493:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3124,"indexExpression":{"id":3123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13504:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13493:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3125,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"13509:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3126,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"13524:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13509:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13493:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3129,"nodeType":"ExpressionStatement","src":"13493:44:15"},{"expression":{"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3130,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"13556:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3132,"indexExpression":{"id":3131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13567:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13556:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13572:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13556:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3135,"nodeType":"ExpressionStatement","src":"13556:21:15"}]},"id":3137,"nodeType":"IfStatement","src":"13316:277:15","trueBody":{"id":3121,"nodeType":"Block","src":"13350:118:15","statements":[{"expression":{"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3107,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"13369:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3109,"indexExpression":{"id":3108,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13380:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13369:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3110,"name":"currentWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"13385:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3111,"name":"targetWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"13401:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13385:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13369:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3114,"nodeType":"ExpressionStatement","src":"13369:44:15"},{"expression":{"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3115,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"13432:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3117,"indexExpression":{"id":3116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13443:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13432:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13448:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13432:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3120,"nodeType":"ExpressionStatement","src":"13432:20:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13150:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3081,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"13154:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13150:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3139,"initializationExpression":{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"i","nameLocation":"13143:1:15","nodeType":"VariableDeclaration","scope":3139,"src":"13135:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"13135:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3079,"initialValue":{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13147:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13135:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13165:3:15","subExpression":{"id":3083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"13165:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3085,"nodeType":"ExpressionStatement","src":"13165:3:15"},"nodeType":"ForStatement","src":"13130:474:15"},{"expression":{"components":[{"id":3140,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"13624:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":3141,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"13636:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13623:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"functionReturnParameters":3046,"id":3143,"nodeType":"Return","src":"13616:31:15"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"12514:271:15","text":" @dev Returns the deviation between the current weights and target weights of the assets in the pool.\n @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."},"functionSelector":"89ab3532","id":3145,"implemented":true,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"12800:12:15","nodeType":"FunctionDefinition","parameters":{"id":3039,"nodeType":"ParameterList","parameters":[],"src":"12812:2:15"},"returnParameters":{"id":3046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3042,"mutability":"mutable","name":"directions","nameLocation":"12850:10:15","nodeType":"VariableDeclaration","scope":3145,"src":"12836:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3040,"name":"bool","nodeType":"ElementaryTypeName","src":"12836:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3041,"nodeType":"ArrayTypeName","src":"12836:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3045,"mutability":"mutable","name":"deviations","nameLocation":"12879:10:15","nodeType":"VariableDeclaration","scope":3145,"src":"12862:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"12862:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3044,"nodeType":"ArrayTypeName","src":"12862:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12835:55:15"},"scope":3999,"src":"12791:864:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3173,"nodeType":"Block","src":"13919:199:15","statements":[{"assignments":[null,3157],"declarations":[null,{"constant":false,"id":3157,"mutability":"mutable","name":"usdValuations","nameLocation":"13950:13:15","nodeType":"VariableDeclaration","scope":3173,"src":"13933:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3155,"name":"uint256","nodeType":"ElementaryTypeName","src":"13933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3156,"nodeType":"ArrayTypeName","src":"13933:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3160,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3158,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"13967:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13967:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"13930:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"14010:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3163,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"14023:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14037:6:15","memberName":"length","nodeType":"MemberAccess","src":"14023:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14010:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420617373657420696e646578","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14045:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""},"value":"Invalid asset index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b105b0b4a7ff5c11f41135d6d4600fd47da6168663f6cb1810745b08d83918","typeString":"literal_string \"Invalid asset index\""}],"id":3161,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14002:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14002:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3168,"nodeType":"ExpressionStatement","src":"14002:65:15"},{"expression":{"baseExpression":{"id":3169,"name":"usdValuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3157,"src":"14085:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3171,"indexExpression":{"id":3170,"name":"assetIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"14099:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14085:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3152,"id":3172,"nodeType":"Return","src":"14078:32:15"}]},"documentation":{"id":3146,"nodeType":"StructuredDocumentation","src":"13663:174:15","text":" @dev Returns the liquidity of a specific asset in the pool.\n @param assetIndex The index of the asset.\n @return The liquidity of the asset."},"functionSelector":"cf8fa764","id":3174,"implemented":true,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"13852:14:15","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"assetIndex","nameLocation":"13875:10:15","nodeType":"VariableDeclaration","scope":3174,"src":"13867:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"13867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13866:20:15"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3174,"src":"13910:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3150,"name":"uint256","nodeType":"ElementaryTypeName","src":"13910:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13909:9:15"},"scope":3999,"src":"13843:275:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3194,"nodeType":"Block","src":"14492:108:15","statements":[{"expression":{"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3183,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"14504:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3184,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"14514:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3185,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14503:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3186,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"14528:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14528:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"src":"14503:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3189,"nodeType":"ExpressionStatement","src":"14503:49:15"},{"expression":{"components":[{"id":3190,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"14571:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3191,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"14581:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14570:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3182,"id":3193,"nodeType":"Return","src":"14563:29:15"}]},"documentation":{"id":3175,"nodeType":"StructuredDocumentation","src":"14126:257:15","text":" @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\n @return totalVal The total valuation of the pool.\n @return valuations An array of individual valuations."},"functionSelector":"36bf6e39","id":3195,"implemented":true,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"14398:21:15","nodeType":"FunctionDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[],"src":"14419:2:15"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"totalVal","nameLocation":"14453:8:15","nodeType":"VariableDeclaration","scope":3195,"src":"14445:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3177,"name":"uint256","nodeType":"ElementaryTypeName","src":"14445:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"valuations","nameLocation":"14480:10:15","nodeType":"VariableDeclaration","scope":3195,"src":"14463:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"14463:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3180,"nodeType":"ArrayTypeName","src":"14463:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14444:47:15"},"scope":3999,"src":"14389:211:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3208,"nodeType":"Block","src":"14782:92:15","statements":[{"assignments":[3202,null],"declarations":[{"constant":false,"id":3202,"mutability":"mutable","name":"totalVal","nameLocation":"14802:8:15","nodeType":"VariableDeclaration","scope":3208,"src":"14794:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3201,"name":"uint256","nodeType":"ElementaryTypeName","src":"14794:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3205,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3203,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"14816:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14816:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14793:47:15"},{"expression":{"id":3206,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14858:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3200,"id":3207,"nodeType":"Return","src":"14851:15:15"}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"14608:115:15","text":" @dev Returns the total liquidity of the pool.\n @return The total liquidity of the pool."},"functionSelector":"1a686502","id":3209,"implemented":true,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"14738:9:15","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[],"src":"14747:2:15"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3209,"src":"14773:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"14773:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14772:9:15"},"scope":3999,"src":"14729:145:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3239,"nodeType":"Block","src":"15046:227:15","statements":[{"assignments":[3216,null],"declarations":[{"constant":false,"id":3216,"mutability":"mutable","name":"totalVal","nameLocation":"15066:8:15","nodeType":"VariableDeclaration","scope":3239,"src":"15058:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"15058:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":3219,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3217,"name":"_computeTotalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"15080:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256,uint256[] memory)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15080:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"15057:47:15"},{"assignments":[3221],"declarations":[{"constant":false,"id":3221,"mutability":"mutable","name":"totalSupply","nameLocation":"15123:11:15","nodeType":"VariableDeclaration","scope":3239,"src":"15115:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"15115:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3224,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3222,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1224,"src":"15137:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15137:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15115:35:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3225,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"15165:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15180:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15165:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3231,"nodeType":"IfStatement","src":"15161:57:15","trueBody":{"id":3230,"nodeType":"Block","src":"15183:35:15","statements":[{"expression":{"hexValue":"30","id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15205:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3214,"id":3229,"nodeType":"Return","src":"15198:8:15"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3232,"name":"totalVal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"15236:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3233,"name":"ONE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"15247:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15236:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15235:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3236,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"15254:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15235:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3214,"id":3238,"nodeType":"Return","src":"15228:37:15"}]},"documentation":{"id":3210,"nodeType":"StructuredDocumentation","src":"14882:105:15","text":" @dev Returns the unit price of the pool.\n @return The unit price of the pool."},"functionSelector":"e73faa2d","id":3240,"implemented":true,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"15002:9:15","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[],"src":"15011:2:15"},"returnParameters":{"id":3214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3240,"src":"15037:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3212,"name":"uint256","nodeType":"ElementaryTypeName","src":"15037:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15036:9:15"},"scope":3999,"src":"14993:280:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3257,"nodeType":"Block","src":"15469:86:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":3253,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"15541:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15533:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3251,"name":"address","nodeType":"ElementaryTypeName","src":"15533:7:15","typeDescriptions":{}}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15533:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3248,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"15510:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3247,"name":"IBaluniV1PoolPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6221,"src":"15487:22:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolPeriphery_$6221_$","typeString":"type(contract IBaluniV1PoolPeriphery)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15487:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolPeriphery_$6221","typeString":"contract IBaluniV1PoolPeriphery"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15521:11:15","memberName":"getReserves","nodeType":"MemberAccess","referencedDeclaration":6211,"src":"15487:45:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view external returns (uint256[] memory)"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15487:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3246,"id":3256,"nodeType":"Return","src":"15480:67:15"}]},"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"15281:120:15","text":" @dev Returns an array of reserves for each asset in the pool.\n @return An array of reserves."},"functionSelector":"0902f1ac","id":3258,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"15416:11:15","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[],"src":"15427:2:15"},"returnParameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3258,"src":"15451:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3243,"name":"uint256","nodeType":"ElementaryTypeName","src":"15451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3244,"nodeType":"ArrayTypeName","src":"15451:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15450:18:15"},"scope":3999,"src":"15407:148:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3270,"nodeType":"Block","src":"15811:41:15","statements":[{"expression":{"baseExpression":{"id":3266,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"15829:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3268,"indexExpression":{"id":3267,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"15838:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15829:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3265,"id":3269,"nodeType":"Return","src":"15822:22:15"}]},"documentation":{"id":3259,"nodeType":"StructuredDocumentation","src":"15563:172:15","text":" @dev Returns the reserve amount of the specified asset.\n @param asset The address of the asset.\n @return The reserve amount of the asset."},"functionSelector":"b2b55d70","id":3271,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"15750:15:15","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3261,"mutability":"mutable","name":"asset","nameLocation":"15774:5:15","nodeType":"VariableDeclaration","scope":3271,"src":"15766:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3260,"name":"address","nodeType":"ElementaryTypeName","src":"15766:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15765:15:15"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3271,"src":"15802:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"15802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15801:9:15"},"scope":3999,"src":"15741:111:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3314,"nodeType":"Block","src":"16058:217:15","statements":[{"assignments":[3282],"declarations":[{"constant":false,"id":3282,"mutability":"mutable","name":"assets","nameLocation":"16086:6:15","nodeType":"VariableDeclaration","scope":3314,"src":"16069:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3280,"name":"address","nodeType":"ElementaryTypeName","src":"16069:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3281,"nodeType":"ArrayTypeName","src":"16069:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3289,"initialValue":{"arguments":[{"expression":{"id":3286,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16109:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16120:6:15","memberName":"length","nodeType":"MemberAccess","src":"16109:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16095:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"16099:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3284,"nodeType":"ArrayTypeName","src":"16099:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16095:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16069:58:15"},{"body":{"id":3310,"nodeType":"Block","src":"16186:58:15","statements":[{"expression":{"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3301,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"16201:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3303,"indexExpression":{"id":3302,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"16208:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16201:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3304,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16213:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3306,"indexExpression":{"id":3305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"16224:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16213:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16227:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"16213:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16201:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3309,"nodeType":"ExpressionStatement","src":"16201:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"16158:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3295,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16162:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16173:6:15","memberName":"length","nodeType":"MemberAccess","src":"16162:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16158:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"initializationExpression":{"assignments":[3291],"declarations":[{"constant":false,"id":3291,"mutability":"mutable","name":"i","nameLocation":"16151:1:15","nodeType":"VariableDeclaration","scope":3311,"src":"16143:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"16143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3293,"initialValue":{"hexValue":"30","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16155:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16143:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16181:3:15","subExpression":{"id":3298,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"16181:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3300,"nodeType":"ExpressionStatement","src":"16181:3:15"},"nodeType":"ForStatement","src":"16138:106:15"},{"expression":{"id":3312,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"16261:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3277,"id":3313,"nodeType":"Return","src":"16254:13:15"}]},"documentation":{"id":3272,"nodeType":"StructuredDocumentation","src":"15860:130:15","text":" @dev Retrieves the list of assets in the pool.\n @return An array of addresses representing the assets."},"functionSelector":"67e4ac2c","id":3315,"implemented":true,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"16005:9:15","nodeType":"FunctionDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[],"src":"16014:2:15"},"returnParameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3315,"src":"16040:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3274,"name":"address","nodeType":"ElementaryTypeName","src":"16040:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3275,"nodeType":"ArrayTypeName","src":"16040:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"16039:18:15"},"scope":3999,"src":"15996:279:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3358,"nodeType":"Block","src":"16516:221:15","statements":[{"assignments":[3326],"declarations":[{"constant":false,"id":3326,"mutability":"mutable","name":"weights","nameLocation":"16544:7:15","nodeType":"VariableDeclaration","scope":3358,"src":"16527:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3324,"name":"uint256","nodeType":"ElementaryTypeName","src":"16527:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3325,"nodeType":"ArrayTypeName","src":"16527:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3333,"initialValue":{"arguments":[{"expression":{"id":3330,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16568:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16579:6:15","memberName":"length","nodeType":"MemberAccess","src":"16568:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16554:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3328,"nodeType":"ArrayTypeName","src":"16558:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16554:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16527:59:15"},{"body":{"id":3354,"nodeType":"Block","src":"16645:60:15","statements":[{"expression":{"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3345,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"16660:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3347,"indexExpression":{"id":3346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"16668:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16660:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3348,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16673:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3350,"indexExpression":{"id":3349,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"16684:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16673:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16687:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"16673:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16660:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3353,"nodeType":"ExpressionStatement","src":"16660:33:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"16617:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3339,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"16621:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16632:6:15","memberName":"length","nodeType":"MemberAccess","src":"16621:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16617:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3355,"initializationExpression":{"assignments":[3335],"declarations":[{"constant":false,"id":3335,"mutability":"mutable","name":"i","nameLocation":"16610:1:15","nodeType":"VariableDeclaration","scope":3355,"src":"16602:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"16602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3337,"initialValue":{"hexValue":"30","id":3336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16614:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16602:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16640:3:15","subExpression":{"id":3342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"16640:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3344,"nodeType":"ExpressionStatement","src":"16640:3:15"},"nodeType":"ForStatement","src":"16597:108:15"},{"expression":{"id":3356,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"16722:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3321,"id":3357,"nodeType":"Return","src":"16715:14:15"}]},"documentation":{"id":3316,"nodeType":"StructuredDocumentation","src":"16283:164:15","text":" @dev Retrieves the list of weights associated with the assets in the pool.\n @return An array of uint256 values representing the weights."},"functionSelector":"22acb867","id":3359,"implemented":true,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"16462:10:15","nodeType":"FunctionDefinition","parameters":{"id":3317,"nodeType":"ParameterList","parameters":[],"src":"16472:2:15"},"returnParameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3359,"src":"16498:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"16498:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3319,"nodeType":"ArrayTypeName","src":"16498:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16497:18:15"},"scope":3999,"src":"16453:284:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3455,"nodeType":"Block","src":"17086:607:15","statements":[{"assignments":[3369],"declarations":[{"constant":false,"id":3369,"mutability":"mutable","name":"numAssets","nameLocation":"17105:9:15","nodeType":"VariableDeclaration","scope":3455,"src":"17097:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3368,"name":"uint256","nodeType":"ElementaryTypeName","src":"17097:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3372,"initialValue":{"expression":{"id":3370,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"17117:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17128:6:15","memberName":"length","nodeType":"MemberAccess","src":"17117:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17097:37:15"},{"expression":{"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3373,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"17145:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3377,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"17172:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17158:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"17162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3375,"nodeType":"ArrayTypeName","src":"17162:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17158:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"17145:37:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3380,"nodeType":"ExpressionStatement","src":"17145:37:15"},{"body":{"id":3449,"nodeType":"Block","src":"17233:407:15","statements":[{"assignments":[3393],"declarations":[{"constant":false,"id":3393,"mutability":"mutable","name":"asset","nameLocation":"17255:5:15","nodeType":"VariableDeclaration","scope":3449,"src":"17248:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":3392,"nodeType":"UserDefinedTypeName","pathNode":{"id":3391,"name":"IERC20","nameLocations":["17248:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"17248:6:15"},"referencedDeclaration":1729,"src":"17248:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3400,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":3395,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"17270:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3397,"indexExpression":{"id":3396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17281:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17270:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17284:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"17270:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3394,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"17263:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17263:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"17248:42:15"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3403,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17320:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17312:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3401,"name":"address","nodeType":"ElementaryTypeName","src":"17312:7:15","typeDescriptions":{}}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17312:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3405,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"17330:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17312:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17311:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3441,"nodeType":"Block","src":"17423:160:15","statements":[{"assignments":[3421],"declarations":[{"constant":false,"id":3421,"mutability":"mutable","name":"valuation","nameLocation":"17450:9:15","nodeType":"VariableDeclaration","scope":3441,"src":"17442:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"17442:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"arguments":[{"id":3425,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17490:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17482:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"17482:7:15","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17482:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3427,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"17498:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3432,"indexExpression":{"arguments":[{"id":3430,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17515:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17507:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3428,"name":"address","nodeType":"ElementaryTypeName","src":"17507:7:15","typeDescriptions":{}}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17507:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17498:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3422,"name":"_convertTokenToBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"17462:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17462:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17442:81:15"},{"expression":{"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3435,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"17542:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3437,"indexExpression":{"id":3436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17553:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17542:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3438,"name":"valuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3421,"src":"17558:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17542:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3440,"nodeType":"ExpressionStatement","src":"17542:25:15"}]},"id":3442,"nodeType":"IfStatement","src":"17307:276:15","trueBody":{"id":3419,"nodeType":"Block","src":"17342:75:15","statements":[{"expression":{"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3408,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"17361:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3410,"indexExpression":{"id":3409,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17372:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17361:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3411,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"17377:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3416,"indexExpression":{"arguments":[{"id":3414,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3393,"src":"17394:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}],"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17386:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"17386:7:15","typeDescriptions":{}}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17386:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17377:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17361:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3418,"nodeType":"ExpressionStatement","src":"17361:40:15"}]}},{"expression":{"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3443,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"17597:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3444,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"17615:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3446,"indexExpression":{"id":3445,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17626:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17615:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17597:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3448,"nodeType":"ExpressionStatement","src":"17597:31:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17213:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3386,"name":"numAssets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3369,"src":"17217:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17213:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3450,"initializationExpression":{"assignments":[3382],"declarations":[{"constant":false,"id":3382,"mutability":"mutable","name":"i","nameLocation":"17206:1:15","nodeType":"VariableDeclaration","scope":3450,"src":"17198:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"17198:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3384,"initialValue":{"hexValue":"30","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17210:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17198:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17228:3:15","subExpression":{"id":3388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"17228:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3390,"nodeType":"ExpressionStatement","src":"17228:3:15"},"nodeType":"ForStatement","src":"17193:447:15"},{"expression":{"components":[{"id":3451,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"17658:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3452,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"17674:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17657:28:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256[] memory)"}},"functionReturnParameters":3367,"id":3454,"nodeType":"Return","src":"17650:35:15"}]},"documentation":{"id":3360,"nodeType":"StructuredDocumentation","src":"16745:225:15","text":" @dev Computes the total valuation of the assets in the pool.\n @return totalValuation The total valuation of the assets.\n @return valuations An array of valuations for each asset in the pool."},"id":3456,"implemented":true,"kind":"function","modifiers":[],"name":"_computeTotalValuation","nameLocation":"16985:22:15","nodeType":"FunctionDefinition","parameters":{"id":3361,"nodeType":"ParameterList","parameters":[],"src":"17007:2:15"},"returnParameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3363,"mutability":"mutable","name":"totalValuation","nameLocation":"17041:14:15","nodeType":"VariableDeclaration","scope":3456,"src":"17033:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3362,"name":"uint256","nodeType":"ElementaryTypeName","src":"17033:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"valuations","nameLocation":"17074:10:15","nodeType":"VariableDeclaration","scope":3456,"src":"17057:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"17057:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3365,"nodeType":"ArrayTypeName","src":"17057:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17032:53:15"},"scope":3999,"src":"16976:717:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3673,"nodeType":"Block","src":"18135:1482:15","statements":[{"assignments":[3464],"declarations":[{"constant":false,"id":3464,"mutability":"mutable","name":"assets","nameLocation":"18163:6:15","nodeType":"VariableDeclaration","scope":3673,"src":"18146:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"18146:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3463,"nodeType":"ArrayTypeName","src":"18146:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3471,"initialValue":{"arguments":[{"expression":{"id":3468,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18186:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18197:6:15","memberName":"length","nodeType":"MemberAccess","src":"18186:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18172:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3465,"name":"address","nodeType":"ElementaryTypeName","src":"18176:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3466,"nodeType":"ArrayTypeName","src":"18176:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18172:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18146:58:15"},{"assignments":[3476],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"weights","nameLocation":"18232:7:15","nodeType":"VariableDeclaration","scope":3673,"src":"18215:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"18215:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ArrayTypeName","src":"18215:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3483,"initialValue":{"arguments":[{"expression":{"id":3480,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18256:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18267:6:15","memberName":"length","nodeType":"MemberAccess","src":"18256:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18242:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"18246:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3478,"nodeType":"ArrayTypeName","src":"18246:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18242:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18215:59:15"},{"assignments":[3488],"declarations":[{"constant":false,"id":3488,"mutability":"mutable","name":"peripheryBalancesB4","nameLocation":"18302:19:15","nodeType":"VariableDeclaration","scope":3673,"src":"18285:36:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"18285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3487,"nodeType":"ArrayTypeName","src":"18285:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[{"expression":{"id":3492,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18338:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18349:6:15","memberName":"length","nodeType":"MemberAccess","src":"18338:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18324:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3489,"name":"uint256","nodeType":"ElementaryTypeName","src":"18328:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3490,"nodeType":"ArrayTypeName","src":"18328:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18324:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18285:71:15"},{"assignments":[3500],"declarations":[{"constant":false,"id":3500,"mutability":"mutable","name":"peripheryBalancesAfter","nameLocation":"18384:22:15","nodeType":"VariableDeclaration","scope":3673,"src":"18367:39:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3498,"name":"uint256","nodeType":"ElementaryTypeName","src":"18367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3499,"nodeType":"ArrayTypeName","src":"18367:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3507,"initialValue":{"arguments":[{"expression":{"id":3504,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18423:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18434:6:15","memberName":"length","nodeType":"MemberAccess","src":"18423:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18409:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"18413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3502,"nodeType":"ArrayTypeName","src":"18413:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18409:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18367:74:15"},{"assignments":[3512],"declarations":[{"constant":false,"id":3512,"mutability":"mutable","name":"amountsToAdd","nameLocation":"18469:12:15","nodeType":"VariableDeclaration","scope":3673,"src":"18452:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3510,"name":"uint256","nodeType":"ElementaryTypeName","src":"18452:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3511,"nodeType":"ArrayTypeName","src":"18452:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3519,"initialValue":{"arguments":[{"expression":{"id":3516,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18498:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18509:6:15","memberName":"length","nodeType":"MemberAccess","src":"18498:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18484:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3513,"name":"uint256","nodeType":"ElementaryTypeName","src":"18488:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3514,"nodeType":"ArrayTypeName","src":"18488:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18484:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18452:64:15"},{"assignments":[3524],"declarations":[{"constant":false,"id":3524,"mutability":"mutable","name":"amountsToRemove","nameLocation":"18544:15:15","nodeType":"VariableDeclaration","scope":3673,"src":"18527:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"18527:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3523,"nodeType":"ArrayTypeName","src":"18527:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3531,"initialValue":{"arguments":[{"expression":{"id":3528,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18576:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18587:6:15","memberName":"length","nodeType":"MemberAccess","src":"18576:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"18562:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"18566:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3526,"nodeType":"ArrayTypeName","src":"18566:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18562:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18527:67:15"},{"body":{"id":3574,"nodeType":"Block","src":"18655:184:15","statements":[{"expression":{"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3543,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"18670:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3545,"indexExpression":{"id":3544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18677:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18670:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3546,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18682:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3548,"indexExpression":{"id":3547,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18693:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18682:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18696:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"18682:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"18670:31:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3551,"nodeType":"ExpressionStatement","src":"18670:31:15"},{"expression":{"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3552,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"18716:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3554,"indexExpression":{"id":3553,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18724:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18716:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":3555,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18729:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3557,"indexExpression":{"id":3556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18740:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18729:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3558,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18743:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"18729:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18716:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3560,"nodeType":"ExpressionStatement","src":"18716:33:15"},{"expression":{"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3561,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"18764:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3563,"indexExpression":{"id":3562,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18784:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18764:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3570,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"18817:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3565,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"18796:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3567,"indexExpression":{"id":3566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18803:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18796:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3564,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"18789:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18789:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18807:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"18789:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18789:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18764:63:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3573,"nodeType":"ExpressionStatement","src":"18764:63:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3536,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18627:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3537,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"18631:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18642:6:15","memberName":"length","nodeType":"MemberAccess","src":"18631:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18627:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3575,"initializationExpression":{"assignments":[3533],"declarations":[{"constant":false,"id":3533,"mutability":"mutable","name":"i","nameLocation":"18620:1:15","nodeType":"VariableDeclaration","scope":3575,"src":"18612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"18612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3535,"initialValue":{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18624:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"18612:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18650:3:15","subExpression":{"id":3540,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"18650:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3542,"nodeType":"ExpressionStatement","src":"18650:3:15"},"nodeType":"ForStatement","src":"18607:232:15"},{"assignments":[3580],"declarations":[{"constant":false,"id":3580,"mutability":"mutable","name":"balances","nameLocation":"18868:8:15","nodeType":"VariableDeclaration","scope":3673,"src":"18851:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"18851:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3579,"nodeType":"ArrayTypeName","src":"18851:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3583,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3581,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3258,"src":"18879:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (uint256[] memory)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18879:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"18851:41:15"},{"expression":{"arguments":[{"id":3588,"name":"balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"18947:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3589,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"18957:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3590,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"18965:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3591,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"18974:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3592,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"18983:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3593,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"18994:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3594,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"19005:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3585,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"18925:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3584,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"18905:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6342_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18905:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6342","typeString":"contract IBaluniV1Rebalancer"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18937:9:15","memberName":"rebalance","nodeType":"MemberAccess","referencedDeclaration":6309,"src":"18905:41:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256[] memory,address[] memory,uint256[] memory,uint256,address,address,address) external"}},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18905:110:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3596,"nodeType":"ExpressionStatement","src":"18905:110:15"},{"body":{"id":3655,"nodeType":"Block","src":"19076:380:15","statements":[{"expression":{"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3608,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"19091:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3610,"indexExpression":{"id":3609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19114:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19091:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3617,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"19147:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3612,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"19126:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3614,"indexExpression":{"id":3613,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19133:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19126:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3611,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"19119:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19119:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19137:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"19119:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19119:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19091:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3620,"nodeType":"ExpressionStatement","src":"19091:66:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3621,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"19178:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3623,"indexExpression":{"id":3622,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19201:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19178:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"baseExpression":{"id":3624,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"19206:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3626,"indexExpression":{"id":3625,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19226:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19206:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19178:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3653,"nodeType":"Block","src":"19339:106:15","statements":[{"expression":{"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3641,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"19358:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3643,"indexExpression":{"id":3642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19374:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19358:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3644,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"19379:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3646,"indexExpression":{"id":3645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19399:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19379:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3647,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"19404:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3649,"indexExpression":{"id":3648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19427:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19404:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19379:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19358:71:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3652,"nodeType":"ExpressionStatement","src":"19358:71:15"}]},"id":3654,"nodeType":"IfStatement","src":"19174:271:15","trueBody":{"id":3640,"nodeType":"Block","src":"19230:103:15","statements":[{"expression":{"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3628,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"19249:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3630,"indexExpression":{"id":3629,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19262:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19249:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3631,"name":"peripheryBalancesAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"19267:22:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3633,"indexExpression":{"id":3632,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19290:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19267:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3634,"name":"peripheryBalancesB4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"19295:19:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3636,"indexExpression":{"id":3635,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19315:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19295:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19267:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19249:68:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3639,"nodeType":"ExpressionStatement","src":"19249:68:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19048:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3602,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"19052:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19063:6:15","memberName":"length","nodeType":"MemberAccess","src":"19052:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19048:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3656,"initializationExpression":{"assignments":[3598],"declarations":[{"constant":false,"id":3598,"mutability":"mutable","name":"i","nameLocation":"19041:1:15","nodeType":"VariableDeclaration","scope":3656,"src":"19033:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"19033:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3600,"initialValue":{"hexValue":"30","id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19045:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"19033:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"19071:3:15","subExpression":{"id":3605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"19071:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3607,"nodeType":"ExpressionStatement","src":"19071:3:15"},"nodeType":"ForStatement","src":"19028:428:15"},{"expression":{"arguments":[{"id":3658,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"19484:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"74727565","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19498:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3657,"name":"_updateReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"19468:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (uint256[] memory,bool)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19468:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3661,"nodeType":"ExpressionStatement","src":"19468:35:15"},{"expression":{"arguments":[{"id":3663,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3524,"src":"19530:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"66616c7365","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19547:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3662,"name":"_updateReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"19514:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (uint256[] memory,bool)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19514:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3666,"nodeType":"ExpressionStatement","src":"19514:39:15"},{"eventCall":{"arguments":[{"expression":{"id":3668,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19590:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19594:6:15","memberName":"sender","nodeType":"MemberAccess","src":"19590:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3670,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"19602:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3667,"name":"RebalancePerformed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"19571:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address[] memory)"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19571:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3672,"nodeType":"EmitStatement","src":"19566:43:15"}]},"documentation":{"id":3457,"nodeType":"StructuredDocumentation","src":"17701:382:15","text":" @dev Performs rebalance if needed.\n This function retrieves the assets and weights from the `assetInfos` array,\n and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\n It emits a `RebalancePerformed` event after the rebalance is performed.\n @notice This function should only be called internally."},"id":3674,"implemented":true,"kind":"function","modifiers":[],"name":"_performRebalanceIfNeeded","nameLocation":"18098:25:15","nodeType":"FunctionDefinition","parameters":{"id":3458,"nodeType":"ParameterList","parameters":[],"src":"18123:2:15"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[],"src":"18135:0:15"},"scope":3999,"src":"18089:1528:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3704,"nodeType":"Block","src":"19994:168:15","statements":[{"body":{"id":3700,"nodeType":"Block","src":"20053:65:15","statements":[{"expression":{"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3694,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"20068:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3695,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"20091:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3697,"indexExpression":{"id":3696,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"20104:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20091:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20068:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3699,"nodeType":"ExpressionStatement","src":"20068:38:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3687,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"20025:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3688,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20029:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20040:6:15","memberName":"length","nodeType":"MemberAccess","src":"20029:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20025:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3701,"initializationExpression":{"assignments":[3684],"declarations":[{"constant":false,"id":3684,"mutability":"mutable","name":"i","nameLocation":"20018:1:15","nodeType":"VariableDeclaration","scope":3701,"src":"20010:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3683,"name":"uint256","nodeType":"ElementaryTypeName","src":"20010:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3686,"initialValue":{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20022:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20010:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20048:3:15","subExpression":{"id":3691,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3684,"src":"20048:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3693,"nodeType":"ExpressionStatement","src":"20048:3:15"},"nodeType":"ForStatement","src":"20005:113:15"},{"expression":{"id":3702,"name":"totalAddedLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"20135:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3682,"id":3703,"nodeType":"Return","src":"20128:26:15"}]},"documentation":{"id":3675,"nodeType":"StructuredDocumentation","src":"19625:225:15","text":" @dev Calculates the total added liquidity based on the amounts to add.\n @param amountsToAdd An array of amounts to add for each asset.\n @return totalAddedLiquidity The total added liquidity."},"id":3705,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTotalAddedLiquidity","nameLocation":"19865:29:15","nodeType":"FunctionDefinition","parameters":{"id":3679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3678,"mutability":"mutable","name":"amountsToAdd","nameLocation":"19922:12:15","nodeType":"VariableDeclaration","scope":3705,"src":"19905:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"19905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3677,"nodeType":"ArrayTypeName","src":"19905:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"19894:47:15"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"totalAddedLiquidity","nameLocation":"19973:19:15","nodeType":"VariableDeclaration","scope":3705,"src":"19965:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3680,"name":"uint256","nodeType":"ElementaryTypeName","src":"19965:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19964:29:15"},"scope":3999,"src":"19856:306:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3770,"nodeType":"Block","src":"20669:389:15","statements":[{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3717,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"20680:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3721,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20709:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20720:6:15","memberName":"length","nodeType":"MemberAccess","src":"20709:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"20695:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"20699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3719,"nodeType":"ArrayTypeName","src":"20699:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20695:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"20680:47:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3725,"nodeType":"ExpressionStatement","src":"20680:47:15"},{"body":{"id":3766,"nodeType":"Block","src":"20786:235:15","statements":[{"assignments":[3738],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"targetValuation","nameLocation":"20809:15:15","nodeType":"VariableDeclaration","scope":3766,"src":"20801:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"20801:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3748,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3739,"name":"totalValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3708,"src":"20828:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"baseExpression":{"id":3740,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20845:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3742,"indexExpression":{"id":3741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"20856:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20845:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20859:6:15","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":2255,"src":"20845:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20828:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20827:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20869:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"20827:47:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20801:73:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3749,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"20893:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3751,"indexExpression":{"id":3750,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"20904:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20893:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3752,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"20909:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20893:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"20889:121:15","trueBody":{"id":3764,"nodeType":"Block","src":"20926:84:15","statements":[{"expression":{"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3754,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"20945:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3756,"indexExpression":{"id":3755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"20958:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"20945:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"targetValuation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"20963:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":3758,"name":"valuations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"20981:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3760,"indexExpression":{"id":3759,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"20992:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20981:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20963:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20945:49:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3763,"nodeType":"ExpressionStatement","src":"20945:49:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"20758:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3731,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"20762:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20773:6:15","memberName":"length","nodeType":"MemberAccess","src":"20762:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20758:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"initializationExpression":{"assignments":[3727],"declarations":[{"constant":false,"id":3727,"mutability":"mutable","name":"i","nameLocation":"20751:1:15","nodeType":"VariableDeclaration","scope":3767,"src":"20743:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3726,"name":"uint256","nodeType":"ElementaryTypeName","src":"20743:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3729,"initialValue":{"hexValue":"30","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20755:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20743:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"20781:3:15","subExpression":{"id":3734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3727,"src":"20781:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3736,"nodeType":"ExpressionStatement","src":"20781:3:15"},"nodeType":"ForStatement","src":"20738:283:15"},{"expression":{"id":3768,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"21038:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3716,"id":3769,"nodeType":"Return","src":"21031:19:15"}]},"documentation":{"id":3706,"nodeType":"StructuredDocumentation","src":"20170:329:15","text":" @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\n @param totalValuation The total valuation of the pool.\n @param valuations An array of current valuations for each asset.\n @return amountsToAdd An array of amounts to add to each asset."},"id":3771,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateAmountsToAdd","nameLocation":"20514:22:15","nodeType":"FunctionDefinition","parameters":{"id":3712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3708,"mutability":"mutable","name":"totalValuation","nameLocation":"20555:14:15","nodeType":"VariableDeclaration","scope":3771,"src":"20547:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3707,"name":"uint256","nodeType":"ElementaryTypeName","src":"20547:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"valuations","nameLocation":"20597:10:15","nodeType":"VariableDeclaration","scope":3771,"src":"20580:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"20580:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3710,"nodeType":"ArrayTypeName","src":"20580:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20536:78:15"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"amountsToAdd","nameLocation":"20655:12:15","nodeType":"VariableDeclaration","scope":3771,"src":"20638:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3713,"name":"uint256","nodeType":"ElementaryTypeName","src":"20638:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3714,"nodeType":"ArrayTypeName","src":"20638:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"20637:31:15"},"scope":3999,"src":"20505:553:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3800,"nodeType":"Block","src":"21437:193:15","statements":[{"assignments":[3782],"declarations":[{"constant":false,"id":3782,"mutability":"mutable","name":"tokenAmount","nameLocation":"21456:11:15","nodeType":"VariableDeclaration","scope":3800,"src":"21448:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"21448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3790,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":3784,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"21490:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3786,"indexExpression":{"id":3785,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"21501:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21490:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21508:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"21490:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3788,"name":"amountToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3776,"src":"21515:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3783,"name":"_convertBaseToToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"21470:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21470:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21448:79:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3792,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"21546:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21560:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21546:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e20616d6f756e7420746f20616464","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21563:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""},"value":"Invalid token amount to add"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_231381c7ce9cab5a06140be844586c7572b2dd117d8de83c9f9bda39108cd19d","typeString":"literal_string \"Invalid token amount to add\""}],"id":3791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21538:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21538:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3797,"nodeType":"ExpressionStatement","src":"21538:55:15"},{"expression":{"id":3798,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"21611:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3780,"id":3799,"nodeType":"Return","src":"21604:18:15"}]},"documentation":{"id":3772,"nodeType":"StructuredDocumentation","src":"21066:268:15","text":" @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\n @param index The index of the asset in the assetInfos array.\n @param amountToAdd The amount of native tokens to add as liquidity."},"id":3801,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateLiquidity","nameLocation":"21349:19:15","nodeType":"FunctionDefinition","parameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"index","nameLocation":"21377:5:15","nodeType":"VariableDeclaration","scope":3801,"src":"21369:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3773,"name":"uint256","nodeType":"ElementaryTypeName","src":"21369:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"amountToAdd","nameLocation":"21392:11:15","nodeType":"VariableDeclaration","scope":3801,"src":"21384:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"21384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21368:36:15"},"returnParameters":{"id":3780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3801,"src":"21428:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3778,"name":"uint256","nodeType":"ElementaryTypeName","src":"21428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21427:9:15"},"scope":3999,"src":"21340:290:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"22029:139:15","statements":[{"assignments":[3812],"declarations":[{"constant":false,"id":3812,"mutability":"mutable","name":"tokenAmount","nameLocation":"22048:11:15","nodeType":"VariableDeclaration","scope":3824,"src":"22040:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"22040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3821,"initialValue":{"arguments":[{"id":3817,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"22102:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3818,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"22113:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3806,"src":"22124:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3814,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"22082:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3813,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"22062:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6342_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22062:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6342","typeString":"contract IBaluniV1Rebalancer"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22094:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"22062:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22062:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22040:91:15"},{"expression":{"id":3822,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"22149:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3810,"id":3823,"nodeType":"Return","src":"22142:18:15"}]},"documentation":{"id":3802,"nodeType":"StructuredDocumentation","src":"21638:289:15","text":" @dev Converts the specified amount of native token to the corresponding token amount.\n @param fromToken The address of the native token to convert from.\n @param amount The amount of native token to convert.\n @return The corresponding token amount."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"_convertBaseToToken","nameLocation":"21942:19:15","nodeType":"FunctionDefinition","parameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3804,"mutability":"mutable","name":"fromToken","nameLocation":"21970:9:15","nodeType":"VariableDeclaration","scope":3825,"src":"21962:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3803,"name":"address","nodeType":"ElementaryTypeName","src":"21962:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"amount","nameLocation":"21989:6:15","nodeType":"VariableDeclaration","scope":3825,"src":"21981:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3805,"name":"uint256","nodeType":"ElementaryTypeName","src":"21981:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21961:35:15"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"22020:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"22020:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22019:9:15"},"scope":3999,"src":"21933:235:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3842,"nodeType":"Block","src":"22440:40:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3835,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"22458:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3836,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"22463:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"22458:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3839,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"22471:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22458:14:15","trueExpression":{"id":3838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"22467:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3834,"id":3841,"nodeType":"Return","src":"22451:21:15"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"22176:198:15","text":" @dev Returns the maximum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The maximum value between a and b."},"id":3843,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"22389:3:15","nodeType":"FunctionDefinition","parameters":{"id":3831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"a","nameLocation":"22399:1:15","nodeType":"VariableDeclaration","scope":3843,"src":"22393:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3827,"name":"uint8","nodeType":"ElementaryTypeName","src":"22393:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"b","nameLocation":"22408:1:15","nodeType":"VariableDeclaration","scope":3843,"src":"22402:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3829,"name":"uint8","nodeType":"ElementaryTypeName","src":"22402:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22392:18:15"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3843,"src":"22433:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3832,"name":"uint8","nodeType":"ElementaryTypeName","src":"22433:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22432:7:15"},"scope":3999,"src":"22380:100:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3860,"nodeType":"Block","src":"22752:40:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3853,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"22770:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3854,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"22775:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"22770:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3857,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"22783:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"22770:14:15","trueExpression":{"id":3856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"22779:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3852,"id":3859,"nodeType":"Return","src":"22763:21:15"}]},"documentation":{"id":3844,"nodeType":"StructuredDocumentation","src":"22488:198:15","text":" @dev Returns the minimum of two uint8 values.\n @param a The first uint8 value.\n @param b The second uint8 value.\n @return The minimum value between a and b."},"id":3861,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"22701:3:15","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"a","nameLocation":"22711:1:15","nodeType":"VariableDeclaration","scope":3861,"src":"22705:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3845,"name":"uint8","nodeType":"ElementaryTypeName","src":"22705:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"b","nameLocation":"22720:1:15","nodeType":"VariableDeclaration","scope":3861,"src":"22714:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3847,"name":"uint8","nodeType":"ElementaryTypeName","src":"22714:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22704:18:15"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"22745:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3850,"name":"uint8","nodeType":"ElementaryTypeName","src":"22745:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"22744:7:15"},"scope":3999,"src":"22692:100:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3884,"nodeType":"Block","src":"23203:139:15","statements":[{"assignments":[3872],"declarations":[{"constant":false,"id":3872,"mutability":"mutable","name":"tokenAmount","nameLocation":"23222:11:15","nodeType":"VariableDeclaration","scope":3884,"src":"23214:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"23214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3881,"initialValue":{"arguments":[{"id":3877,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3864,"src":"23276:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3878,"name":"baseAsset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"23287:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3879,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"23298:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3874,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2247,"src":"23256:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3873,"name":"IBaluniV1Rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"23236:19:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Rebalancer_$6342_$","typeString":"type(contract IBaluniV1Rebalancer)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23236:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Rebalancer_$6342","typeString":"contract IBaluniV1Rebalancer"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23268:7:15","memberName":"convert","nodeType":"MemberAccess","referencedDeclaration":6341,"src":"23236:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23236:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23214:91:15"},{"expression":{"id":3882,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3872,"src":"23323:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3870,"id":3883,"nodeType":"Return","src":"23316:18:15"}]},"documentation":{"id":3862,"nodeType":"StructuredDocumentation","src":"22800:288:15","text":" @dev Converts the specified token to the native token using the rebalancer contract.\n @param fromToken The address of the token to convert from.\n @param amount The amount of tokens to convert.\n @return scaledAmount The converted amount of tokens."},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"_convertTokenToBase","nameLocation":"23103:19:15","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"fromToken","nameLocation":"23131:9:15","nodeType":"VariableDeclaration","scope":3885,"src":"23123:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3863,"name":"address","nodeType":"ElementaryTypeName","src":"23123:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"amount","nameLocation":"23150:6:15","nodeType":"VariableDeclaration","scope":3885,"src":"23142:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"23142:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23122:35:15"},"returnParameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"scaledAmount","nameLocation":"23189:12:15","nodeType":"VariableDeclaration","scope":3885,"src":"23181:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"23181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23180:22:15"},"scope":3999,"src":"23094:248:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3901,"nodeType":"Block","src":"23765:53:15","statements":[{"expression":{"arguments":[{"id":3897,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"23792:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3898,"name":"increase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"23801:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3896,"name":"_updateReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"23776:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$returns$__$","typeString":"function (uint256[] memory,bool)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23776:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3900,"nodeType":"ExpressionStatement","src":"23776:34:15"}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"23350:321:15","text":" @dev Updates the reserves of the pool with the given amounts.\n @param amounts An array of amounts to update the reserves with.\n @param increase A boolean indicating whether to increase or decrease the reserves.\n @notice This function can only be called by the periphery contract."},"functionSelector":"3dff5b7f","id":3902,"implemented":true,"kind":"function","modifiers":[{"id":3894,"kind":"modifierInvocation","modifierName":{"id":3893,"name":"onlyPeriphery","nameLocations":["23751:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":2391,"src":"23751:13:15"},"nodeType":"ModifierInvocation","src":"23751:13:15"}],"name":"updateReserves","nameLocation":"23686:14:15","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"amounts","nameLocation":"23718:7:15","nodeType":"VariableDeclaration","scope":3902,"src":"23701:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"23701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3888,"nodeType":"ArrayTypeName","src":"23701:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"increase","nameLocation":"23732:8:15","nodeType":"VariableDeclaration","scope":3902,"src":"23727:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3890,"name":"bool","nodeType":"ElementaryTypeName","src":"23727:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23700:41:15"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[],"src":"23765:0:15"},"scope":3999,"src":"23677:141:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3951,"nodeType":"Block","src":"24258:281:15","statements":[{"body":{"id":3949,"nodeType":"Block","src":"24317:215:15","statements":[{"assignments":[3923],"declarations":[{"constant":false,"id":3923,"mutability":"mutable","name":"asset","nameLocation":"24340:5:15","nodeType":"VariableDeclaration","scope":3949,"src":"24332:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3922,"name":"address","nodeType":"ElementaryTypeName","src":"24332:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3928,"initialValue":{"expression":{"baseExpression":{"id":3924,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"24348:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3926,"indexExpression":{"id":3925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"24359:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24348:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$2256_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref"}},"id":3927,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24362:5:15","memberName":"asset","nodeType":"MemberAccess","referencedDeclaration":2253,"src":"24348:19:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"24332:35:15"},{"assignments":[3930],"declarations":[{"constant":false,"id":3930,"mutability":"mutable","name":"newReserve","nameLocation":"24390:10:15","nodeType":"VariableDeclaration","scope":3949,"src":"24382:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"24382:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3934,"initialValue":{"baseExpression":{"id":3931,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"24403:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3933,"indexExpression":{"id":3932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"24411:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24403:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24382:31:15"},{"condition":{"id":3935,"name":"increase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"24432:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3942,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"24491:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3944,"indexExpression":{"id":3943,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"24500:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24491:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3945,"name":"newReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"24510:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24491:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3947,"nodeType":"ExpressionStatement","src":"24491:29:15"},"id":3948,"nodeType":"IfStatement","src":"24428:92:15","trueBody":{"expression":{"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3936,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"24442:8:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3938,"indexExpression":{"id":3937,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"24451:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24442:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3939,"name":"newReserve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"24461:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24442:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3941,"nodeType":"ExpressionStatement","src":"24442:29:15"}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"24289:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3916,"name":"assetInfos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"24293:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AssetInfo_$2256_storage_$dyn_storage","typeString":"struct BaluniV1Pool.AssetInfo storage ref[] storage ref"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24304:6:15","memberName":"length","nodeType":"MemberAccess","src":"24293:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24289:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"initializationExpression":{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"i","nameLocation":"24282:1:15","nodeType":"VariableDeclaration","scope":3950,"src":"24274:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"24274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3914,"initialValue":{"hexValue":"30","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24286:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24274:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24312:3:15","subExpression":{"id":3919,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"24312:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3921,"nodeType":"ExpressionStatement","src":"24312:3:15"},"nodeType":"ForStatement","src":"24269:263:15"}]},"documentation":{"id":3903,"nodeType":"StructuredDocumentation","src":"23826:351:15","text":" @dev Internal function to update the reserves of the pool with the given amounts.\n @param amounts An array of amounts to update the reserves with.\n @param increase A boolean indicating whether to increase or decrease the reserves.\n @notice This function should only be called by the `updateReserves` function."},"id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"_updateReserves","nameLocation":"24192:15:15","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"amounts","nameLocation":"24225:7:15","nodeType":"VariableDeclaration","scope":3952,"src":"24208:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3904,"name":"uint256","nodeType":"ElementaryTypeName","src":"24208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3905,"nodeType":"ArrayTypeName","src":"24208:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3908,"mutability":"mutable","name":"increase","nameLocation":"24239:8:15","nodeType":"VariableDeclaration","scope":3952,"src":"24234:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3907,"name":"bool","nodeType":"ElementaryTypeName","src":"24234:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24207:41:15"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[],"src":"24258:0:15"},"scope":3999,"src":"24183:356:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3997,"nodeType":"Block","src":"24826:290:15","statements":[{"assignments":[3962,3965],"declarations":[{"constant":false,"id":3962,"mutability":"mutable","name":"directions","nameLocation":"24852:10:15","nodeType":"VariableDeclaration","scope":3997,"src":"24838:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3960,"name":"bool","nodeType":"ElementaryTypeName","src":"24838:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3961,"nodeType":"ArrayTypeName","src":"24838:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"deviations","nameLocation":"24881:10:15","nodeType":"VariableDeclaration","scope":3997,"src":"24864:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3963,"name":"uint256","nodeType":"ElementaryTypeName","src":"24864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3964,"nodeType":"ArrayTypeName","src":"24864:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3968,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3966,"name":"getDeviation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"24895:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () view returns (bool[] memory,uint256[] memory)"}},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(bool[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"24837:72:15"},{"body":{"id":3993,"nodeType":"Block","src":"24968:118:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3980,"name":"directions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3962,"src":"24987:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":3982,"indexExpression":{"id":3981,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24998:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24987:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3983,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"25004:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3985,"indexExpression":{"id":3984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"25015:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25004:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3986,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"25020:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25004:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"24987:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3992,"nodeType":"IfStatement","src":"24983:92:15","trueBody":{"id":3991,"nodeType":"Block","src":"25029:46:15","statements":[{"expression":{"hexValue":"74727565","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25055:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3957,"id":3990,"nodeType":"Return","src":"25048:11:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24940:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3974,"name":"deviations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"24944:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24955:6:15","memberName":"length","nodeType":"MemberAccess","src":"24944:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24940:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3994,"initializationExpression":{"assignments":[3970],"declarations":[{"constant":false,"id":3970,"mutability":"mutable","name":"i","nameLocation":"24933:1:15","nodeType":"VariableDeclaration","scope":3994,"src":"24925:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"24925:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3972,"initialValue":{"hexValue":"30","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24937:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"24925:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"24963:3:15","subExpression":{"id":3977,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"24963:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3979,"nodeType":"ExpressionStatement","src":"24963:3:15"},"nodeType":"ForStatement","src":"24920:166:15"},{"expression":{"hexValue":"66616c7365","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"25103:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3957,"id":3996,"nodeType":"Return","src":"25096:12:15"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"24612:152:15","text":" @dev Checks if rebalancing is needed for the pool.\n @return A boolean value indicating whether rebalancing is needed or not."},"functionSelector":"8a77c8dc","id":3998,"implemented":true,"kind":"function","modifiers":[],"name":"isRebalanceNeeded","nameLocation":"24779:17:15","nodeType":"FunctionDefinition","parameters":{"id":3954,"nodeType":"ParameterList","parameters":[],"src":"24796:2:15"},"returnParameters":{"id":3957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3998,"src":"24820:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3955,"name":"bool","nodeType":"ElementaryTypeName","src":"24820:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24819:6:15"},"scope":3999,"src":"24770:346:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4000,"src":"1731:23388:15","usedErrors":[698,703,708,717,722,727,2052],"usedEvents":[1663,1672,2263,2270,2276,2282,2294]}],"src":"40:25081:15"},"id":15},"contracts/BaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolFactory.sol","exportedSymbols":{"BaluniV1Pool":[3999],"BaluniV1PoolFactory":[4491],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"I1inchSpotAgg":[5924],"IBaluniV1Agent":[5944],"IBaluniV1PoolPeriphery":[6221],"IBaluniV1Rebalancer":[6342],"IBaluniV1Router":[6600],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"ReentrancyGuard":[2107],"UUPSUpgradeable":[630]},"id":4492,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4001,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"absolutePath":"contracts/BaluniV1Pool.sol","file":"./BaluniV1Pool.sol","id":4002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4492,"sourceUnit":4000,"src":"1466:28:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4492,"sourceUnit":195,"src":"1496:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4492,"sourceUnit":449,"src":"1573:75:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4005,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4492,"sourceUnit":631,"src":"1650:77:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4006,"name":"Initializable","nameLocations":["1763:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1763:13:16"},"id":4007,"nodeType":"InheritanceSpecifier","src":"1763:13:16"},{"baseName":{"id":4008,"name":"UUPSUpgradeable","nameLocations":["1778:15:16"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"1778:15:16"},"id":4009,"nodeType":"InheritanceSpecifier","src":"1778:15:16"},{"baseName":{"id":4010,"name":"OwnableUpgradeable","nameLocations":["1795:18:16"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"1795:18:16"},"id":4011,"nodeType":"InheritanceSpecifier","src":"1795:18:16"}],"canonicalName":"BaluniV1PoolFactory","contractDependencies":[3999],"contractKind":"contract","fullyImplemented":true,"id":4491,"linearizedBaseContracts":[4491,194,676,630,686,448],"name":"BaluniV1PoolFactory","nameLocation":"1740:19:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"41d1de97","id":4014,"mutability":"mutable","name":"allPools","nameLocation":"1836:8:16","nodeType":"VariableDeclaration","scope":4491,"src":"1819:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":4012,"name":"address","nodeType":"ElementaryTypeName","src":"1819:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4013,"nodeType":"ArrayTypeName","src":"1819:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"531aa03e","id":4020,"mutability":"mutable","name":"getPool","nameLocation":"1904:7:16","nodeType":"VariableDeclaration","scope":4491,"src":"1849:62:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"typeName":{"id":4019,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4015,"name":"address","nodeType":"ElementaryTypeName","src":"1857:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1849:47:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4018,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1868:27:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4017,"name":"address","nodeType":"ElementaryTypeName","src":"1887:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}}},"visibility":"public"},{"constant":false,"functionSelector":"01d22ccd","id":4022,"mutability":"mutable","name":"rebalancer","nameLocation":"1933:10:16","nodeType":"VariableDeclaration","scope":4491,"src":"1918:25:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4021,"name":"address","nodeType":"ElementaryTypeName","src":"1918:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"77aace1a","id":4024,"mutability":"mutable","name":"periphery","nameLocation":"1963:9:16","nodeType":"VariableDeclaration","scope":4491,"src":"1948:24:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4023,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d1","id":4033,"name":"PoolCreated","nameLocation":"1985:11:16","nodeType":"EventDefinition","parameters":{"id":4032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4026,"indexed":true,"mutability":"mutable","name":"pool","nameLocation":"2013:4:16","nodeType":"VariableDeclaration","scope":4033,"src":"1997:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4025,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4029,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2029:6:16","nodeType":"VariableDeclaration","scope":4033,"src":"2019:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4027,"name":"address","nodeType":"ElementaryTypeName","src":"2019:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4028,"nodeType":"ArrayTypeName","src":"2019:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4031,"indexed":false,"mutability":"mutable","name":"rebalancer","nameLocation":"2045:10:16","nodeType":"VariableDeclaration","scope":4033,"src":"2037:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4030,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1996:60:16"},"src":"1979:78:16"},{"body":{"id":4052,"nodeType":"Block","src":"2123:101:16","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4040,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2130:22:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2130:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4042,"nodeType":"ExpressionStatement","src":"2130:24:16"},{"expression":{"arguments":[{"expression":{"id":4044,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2176:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2180:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4043,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2161:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4047,"nodeType":"ExpressionStatement","src":"2161:26:16"},{"expression":{"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4048,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"2194:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4049,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"2207:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2194:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4051,"nodeType":"ExpressionStatement","src":"2194:24:16"}]},"functionSelector":"c4d66de8","id":4053,"implemented":true,"kind":"function","modifiers":[{"id":4038,"kind":"modifierInvocation","modifierName":{"id":4037,"name":"initializer","nameLocations":["2111:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2111:11:16"},"nodeType":"ModifierInvocation","src":"2111:11:16"}],"name":"initialize","nameLocation":"2072:10:16","nodeType":"FunctionDefinition","parameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"_rebalancer","nameLocation":"2091:11:16","nodeType":"VariableDeclaration","scope":4053,"src":"2083:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4034,"name":"address","nodeType":"ElementaryTypeName","src":"2083:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2082:21:16"},"returnParameters":{"id":4039,"nodeType":"ParameterList","parameters":[],"src":"2123:0:16"},"scope":4491,"src":"2063:161:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4067,"nodeType":"Block","src":"2321:37:16","statements":[{"expression":{"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4063,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"2328:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4064,"name":"_rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4055,"src":"2341:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2328:24:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4066,"nodeType":"ExpressionStatement","src":"2328:24:16"}]},"functionSelector":"8f2248bc","id":4068,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4060,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"2311:8:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4061,"kind":"modifierInvocation","modifierName":{"id":4059,"name":"reinitializer","nameLocations":["2297:13:16"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2297:13:16"},"nodeType":"ModifierInvocation","src":"2297:23:16"}],"name":"reinitialize","nameLocation":"2239:12:16","nodeType":"FunctionDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"mutability":"mutable","name":"_rebalancer","nameLocation":"2260:11:16","nodeType":"VariableDeclaration","scope":4068,"src":"2252:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4054,"name":"address","nodeType":"ElementaryTypeName","src":"2252:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4057,"mutability":"mutable","name":"_version","nameLocation":"2280:8:16","nodeType":"VariableDeclaration","scope":4068,"src":"2273:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4056,"name":"uint64","nodeType":"ElementaryTypeName","src":"2273:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2251:38:16"},"returnParameters":{"id":4062,"nodeType":"ParameterList","parameters":[],"src":"2321:0:16"},"scope":4491,"src":"2230:128:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4076,"nodeType":"Block","src":"2446:2:16","statements":[]},"id":4077,"implemented":true,"kind":"function","modifiers":[{"id":4074,"kind":"modifierInvocation","modifierName":{"id":4073,"name":"onlyOwner","nameLocations":["2436:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"2436:9:16"},"nodeType":"ModifierInvocation","src":"2436:9:16"}],"name":"_authorizeUpgrade","nameLocation":"2373:17:16","nodeType":"FunctionDefinition","overrides":{"id":4072,"nodeType":"OverrideSpecifier","overrides":[],"src":"2427:8:16"},"parameters":{"id":4071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"newImplementation","nameLocation":"2399:17:16","nodeType":"VariableDeclaration","scope":4077,"src":"2391:25:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4069,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2390:27:16"},"returnParameters":{"id":4075,"nodeType":"ParameterList","parameters":[],"src":"2446:0:16"},"scope":4491,"src":"2364:84:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4253,"nodeType":"Block","src":"2941:951:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4092,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"2956:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2977:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2969:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4093,"name":"address","nodeType":"ElementaryTypeName","src":"2969:7:16","typeDescriptions":{}}},"id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2969:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2956:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506572697068657279206e6f7420736574","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:19:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""},"value":"Periphery not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_65b375d97171da936ab457dc3ee73246dd9c78a6728e209f2b7bd00d6d44e84f","typeString":"literal_string \"Periphery not set\""}],"id":4091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2948:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4100,"nodeType":"ExpressionStatement","src":"2948:53:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4102,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3016:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:16","memberName":"length","nodeType":"MemberAccess","src":"3016:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3016:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4174206c656173742074776f2061737365747320617265207265717569726564","id":4106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3035:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""},"value":"At least two assets are required"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_39cbcbdd9e6251e82f28a321c8ea534706a2cf624e365b64351e1f84ffc7ff8d","typeString":"literal_string \"At least two assets are required\""}],"id":4101,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3008:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3008:62:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4108,"nodeType":"ExpressionStatement","src":"3008:62:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4110,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3085:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3092:6:16","memberName":"length","nodeType":"MemberAccess","src":"3085:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4112,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"3102:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3110:6:16","memberName":"length","nodeType":"MemberAccess","src":"3102:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3085:31:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41737365747320616e642077656967687473206c656e677468206d69736d61746368","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3118:36:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""},"value":"Assets and weights length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebb567ad160cf2ebbf5e53ab40a3ffae6f6492169d006ee3f8bad6794e36f372","typeString":"literal_string \"Assets and weights length mismatch\""}],"id":4109,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3077:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3077:78:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4117,"nodeType":"ExpressionStatement","src":"3077:78:16"},{"body":{"id":4165,"nodeType":"Block","src":"3208:183:16","statements":[{"body":{"id":4163,"nodeType":"Block","src":"3265:119:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4145,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3292:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4149,"indexExpression":{"baseExpression":{"id":4146,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3300:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4148,"indexExpression":{"id":4147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3307:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3300:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4153,"indexExpression":{"baseExpression":{"id":4150,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3311:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4152,"indexExpression":{"id":4151,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"3318:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3311:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3292:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3284:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4143,"name":"address","nodeType":"ElementaryTypeName","src":"3284:7:16","typeDescriptions":{}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:38:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3326:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4155,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:16","typeDescriptions":{}}},"id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3284:52:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20616c72656164792065786973747320666f7220746869732070616972","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3338:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""},"value":"Pool already exists for this pair"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2258c7547209181d37eb4aebb58e4d2c60f10b97b943ea694f4dec24e242181e","typeString":"literal_string \"Pool already exists for this pair\""}],"id":4142,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3276:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3276:98:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4162,"nodeType":"ExpressionStatement","src":"3276:98:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4135,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"3241:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4136,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3245:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3252:6:16","memberName":"length","nodeType":"MemberAccess","src":"3245:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3241:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4164,"initializationExpression":{"assignments":[4130],"declarations":[{"constant":false,"id":4130,"mutability":"mutable","name":"j","nameLocation":"3230:1:16","nodeType":"VariableDeclaration","scope":4164,"src":"3222:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4129,"name":"uint256","nodeType":"ElementaryTypeName","src":"3222:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4134,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4131,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3234:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3238:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3234:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3222:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3260:3:16","subExpression":{"id":4139,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"3260:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4141,"nodeType":"ExpressionStatement","src":"3260:3:16"},"nodeType":"ForStatement","src":"3217:167:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3184:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4123,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3188:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3195:6:16","memberName":"length","nodeType":"MemberAccess","src":"3188:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3184:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4166,"initializationExpression":{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"i","nameLocation":"3177:1:16","nodeType":"VariableDeclaration","scope":4166,"src":"3169:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4121,"initialValue":{"hexValue":"30","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3181:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3169:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3203:3:16","subExpression":{"id":4126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3203:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4128,"nodeType":"ExpressionStatement","src":"3203:3:16"},"nodeType":"ForStatement","src":"3164:227:16"},{"assignments":[4169],"declarations":[{"constant":false,"id":4169,"mutability":"mutable","name":"newPool","nameLocation":"3412:7:16","nodeType":"VariableDeclaration","scope":4253,"src":"3399:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"},"typeName":{"id":4168,"nodeType":"UserDefinedTypeName","pathNode":{"id":4167,"name":"BaluniV1Pool","nameLocations":["3399:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"3399:12:16"},"referencedDeclaration":3999,"src":"3399:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4179,"initialValue":{"arguments":[{"id":4173,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3439:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4174,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3451:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4175,"name":"weights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"3459:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4176,"name":"trigger","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"3468:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4177,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"3477:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"3422:16:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_BaluniV1Pool_$3999_$","typeString":"function (address,address[] memory,uint256[] memory,uint256,address) returns (contract BaluniV1Pool)"},"typeName":{"id":4171,"nodeType":"UserDefinedTypeName","pathNode":{"id":4170,"name":"BaluniV1Pool","nameLocations":["3426:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"3426:12:16"},"referencedDeclaration":3999,"src":"3426:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3422:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3399:88:16"},{"assignments":[4181],"declarations":[{"constant":false,"id":4181,"mutability":"mutable","name":"poolAddress","nameLocation":"3504:11:16","nodeType":"VariableDeclaration","scope":4253,"src":"3496:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4180,"name":"address","nodeType":"ElementaryTypeName","src":"3496:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4186,"initialValue":{"arguments":[{"id":4184,"name":"newPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"3526:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":4183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3518:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4182,"name":"address","nodeType":"ElementaryTypeName","src":"3518:7:16","typeDescriptions":{}}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3518:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3496:38:16"},{"expression":{"arguments":[{"id":4190,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"3557:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4187,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"3543:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3552:4:16","memberName":"push","nodeType":"MemberAccess","src":"3543:13:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3543:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4192,"nodeType":"ExpressionStatement","src":"3543:26:16"},{"body":{"id":4243,"nodeType":"Block","src":"3620:182:16","statements":[{"body":{"id":4241,"nodeType":"Block","src":"3677:118:16","statements":[{"expression":{"id":4227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4217,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3688:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4224,"indexExpression":{"baseExpression":{"id":4218,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3696:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4220,"indexExpression":{"id":4219,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3703:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3696:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3688:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4225,"indexExpression":{"baseExpression":{"id":4221,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3707:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4223,"indexExpression":{"id":4222,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3714:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3707:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3688:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4226,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"3720:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3688:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4228,"nodeType":"ExpressionStatement","src":"3688:43:16"},{"expression":{"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4229,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"3742:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4236,"indexExpression":{"baseExpression":{"id":4230,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3750:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4232,"indexExpression":{"id":4231,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3757:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3750:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3742:18:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4237,"indexExpression":{"baseExpression":{"id":4233,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3761:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4235,"indexExpression":{"id":4234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3768:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3761:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3742:29:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4238,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"3774:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3742:43:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4240,"nodeType":"ExpressionStatement","src":"3742:43:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4210,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3653:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4211,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3657:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:6:16","memberName":"length","nodeType":"MemberAccess","src":"3657:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3653:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4242,"initializationExpression":{"assignments":[4205],"declarations":[{"constant":false,"id":4205,"mutability":"mutable","name":"j","nameLocation":"3642:1:16","nodeType":"VariableDeclaration","scope":4242,"src":"3634:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3634:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4209,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3646:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3650:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3646:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3634:17:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3672:3:16","subExpression":{"id":4214,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"3672:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4216,"nodeType":"ExpressionStatement","src":"3672:3:16"},"nodeType":"ForStatement","src":"3629:166:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3596:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4198,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3600:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3607:6:16","memberName":"length","nodeType":"MemberAccess","src":"3600:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3596:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4244,"initializationExpression":{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"i","nameLocation":"3589:1:16","nodeType":"VariableDeclaration","scope":4244,"src":"3581:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"3581:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4196,"initialValue":{"hexValue":"30","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3593:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3581:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3615:3:16","subExpression":{"id":4201,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"3615:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4203,"nodeType":"ExpressionStatement","src":"3615:3:16"},"nodeType":"ForStatement","src":"3576:226:16"},{"eventCall":{"arguments":[{"id":4246,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"3827:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4247,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"3840:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":4248,"name":"rebalancer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4022,"src":"3848:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4245,"name":"PoolCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"3815:11:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,address[] memory,address)"}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3815:44:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4250,"nodeType":"EmitStatement","src":"3810:49:16"},{"expression":{"id":4251,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4181,"src":"3875:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4090,"id":4252,"nodeType":"Return","src":"3868:18:16"}]},"documentation":{"id":4078,"nodeType":"StructuredDocumentation","src":"2454:368:16","text":" @dev Creates a new BaluniV1Pool contract and registers it in the factory.\n @param assets The array of asset addresses to be included in the pool.\n @param weights The array of weights corresponding to each asset in the pool.\n @param trigger The trigger value for rebalancing the pool.\n @return The address of the newly created pool."},"functionSelector":"3069873b","id":4254,"implemented":true,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"2835:10:16","nodeType":"FunctionDefinition","parameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"assets","nameLocation":"2863:6:16","nodeType":"VariableDeclaration","scope":4254,"src":"2846:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4079,"name":"address","nodeType":"ElementaryTypeName","src":"2846:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4080,"nodeType":"ArrayTypeName","src":"2846:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4084,"mutability":"mutable","name":"weights","nameLocation":"2888:7:16","nodeType":"VariableDeclaration","scope":4254,"src":"2871:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"2871:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ArrayTypeName","src":"2871:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"trigger","nameLocation":"2905:7:16","nodeType":"VariableDeclaration","scope":4254,"src":"2897:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2845:68:16"},"returnParameters":{"id":4090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4254,"src":"2932:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4088,"name":"address","nodeType":"ElementaryTypeName","src":"2932:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2931:9:16"},"scope":4491,"src":"2826:1066:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4263,"nodeType":"Block","src":"4077:28:16","statements":[{"expression":{"id":4261,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"4091:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":4260,"id":4262,"nodeType":"Return","src":"4084:15:16"}]},"documentation":{"id":4255,"nodeType":"StructuredDocumentation","src":"3898:111:16","text":" @dev Retrieves all the pools created by the factory.\n @return An array of pool addresses."},"functionSelector":"d88ff1f4","id":4264,"implemented":true,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"4022:11:16","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[],"src":"4033:2:16"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4264,"src":"4059:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4257,"name":"address","nodeType":"ElementaryTypeName","src":"4059:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4258,"nodeType":"ArrayTypeName","src":"4059:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4058:18:16"},"scope":4491,"src":"4013:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4273,"nodeType":"Block","src":"4281:35:16","statements":[{"expression":{"expression":{"id":4270,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"4295:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4304:6:16","memberName":"length","nodeType":"MemberAccess","src":"4295:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4269,"id":4272,"nodeType":"Return","src":"4288:22:16"}]},"documentation":{"id":4265,"nodeType":"StructuredDocumentation","src":"4111:109:16","text":" @dev Retrieves the number of pools created by the factory.\n @return The count of pools."},"functionSelector":"b4ac6860","id":4274,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsCount","nameLocation":"4233:13:16","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[],"src":"4246:2:16"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4274,"src":"4272:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4271:9:16"},"scope":4491,"src":"4224:92:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4294,"nodeType":"Block","src":"4566:88:16","statements":[{"assignments":[4285],"declarations":[{"constant":false,"id":4285,"mutability":"mutable","name":"pool","nameLocation":"4586:4:16","nodeType":"VariableDeclaration","scope":4294,"src":"4573:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"},"typeName":{"id":4284,"nodeType":"UserDefinedTypeName","pathNode":{"id":4283,"name":"BaluniV1Pool","nameLocations":["4573:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"4573:12:16"},"referencedDeclaration":3999,"src":"4573:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4289,"initialValue":{"arguments":[{"id":4287,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"4606:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4286,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"4593:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$3999_$","typeString":"type(contract BaluniV1Pool)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"4573:45:16"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4290,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"4632:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4637:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3315,"src":"4632:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4632:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4282,"id":4293,"nodeType":"Return","src":"4625:23:16"}]},"documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"4322:155:16","text":" @dev Retrieves the assets of a specific pool.\n @param poolAddress The address of the pool.\n @return An array of asset addresses."},"functionSelector":"4276b97b","id":4295,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAssets","nameLocation":"4490:13:16","nodeType":"FunctionDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"poolAddress","nameLocation":"4512:11:16","nodeType":"VariableDeclaration","scope":4295,"src":"4504:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4276,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4503:21:16"},"returnParameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4295,"src":"4548:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4279,"name":"address","nodeType":"ElementaryTypeName","src":"4548:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4280,"nodeType":"ArrayTypeName","src":"4548:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4547:18:16"},"scope":4491,"src":"4481:173:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4314,"nodeType":"Block","src":"4972:52:16","statements":[{"expression":{"arguments":[{"baseExpression":{"baseExpression":{"id":4307,"name":"getPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"4994:7:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$","typeString":"mapping(address => mapping(address => address))"}},"id":4309,"indexExpression":{"id":4308,"name":"asset1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4298,"src":"5002:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:15:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":4311,"indexExpression":{"id":4310,"name":"asset2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4300,"src":"5010:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4994:23:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4986:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4305,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:16","typeDescriptions":{}}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4986:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4304,"id":4313,"nodeType":"Return","src":"4979:39:16"}]},"documentation":{"id":4296,"nodeType":"StructuredDocumentation","src":"4660:219:16","text":" @dev Retrieves the pool address based on the given assets.\n @param asset1 The address of the first asset.\n @param asset2 The address of the second asset.\n @return The address of the pool."},"functionSelector":"2d5e94a7","id":4315,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"4892:15:16","nodeType":"FunctionDefinition","parameters":{"id":4301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"mutability":"mutable","name":"asset1","nameLocation":"4916:6:16","nodeType":"VariableDeclaration","scope":4315,"src":"4908:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4297,"name":"address","nodeType":"ElementaryTypeName","src":"4908:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4300,"mutability":"mutable","name":"asset2","nameLocation":"4932:6:16","nodeType":"VariableDeclaration","scope":4315,"src":"4924:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4299,"name":"address","nodeType":"ElementaryTypeName","src":"4924:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4907:32:16"},"returnParameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4315,"src":"4963:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4302,"name":"address","nodeType":"ElementaryTypeName","src":"4963:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4962:9:16"},"scope":4491,"src":"4883:141:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4444,"nodeType":"Block","src":"5306:667:16","statements":[{"assignments":[4328],"declarations":[{"constant":false,"id":4328,"mutability":"mutable","name":"pools","nameLocation":"5330:5:16","nodeType":"VariableDeclaration","scope":4444,"src":"5313:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4326,"name":"address","nodeType":"ElementaryTypeName","src":"5313:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4327,"nodeType":"ArrayTypeName","src":"5313:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4335,"initialValue":{"arguments":[{"expression":{"id":4332,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"5352:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5361:6:16","memberName":"length","nodeType":"MemberAccess","src":"5352:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5338:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4329,"name":"address","nodeType":"ElementaryTypeName","src":"5342:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4330,"nodeType":"ArrayTypeName","src":"5342:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5313:55:16"},{"assignments":[4337],"declarations":[{"constant":false,"id":4337,"mutability":"mutable","name":"count","nameLocation":"5383:5:16","nodeType":"VariableDeclaration","scope":4444,"src":"5375:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"5375:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4339,"initialValue":{"hexValue":"30","id":4338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5391:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5375:17:16"},{"body":{"id":4409,"nodeType":"Block","src":"5447:365:16","statements":[{"assignments":[4353],"declarations":[{"constant":false,"id":4353,"mutability":"mutable","name":"pool","nameLocation":"5469:4:16","nodeType":"VariableDeclaration","scope":4409,"src":"5456:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"},"typeName":{"id":4352,"nodeType":"UserDefinedTypeName","pathNode":{"id":4351,"name":"BaluniV1Pool","nameLocations":["5456:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3999,"src":"5456:12:16"},"referencedDeclaration":3999,"src":"5456:12:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"visibility":"internal"}],"id":4359,"initialValue":{"arguments":[{"baseExpression":{"id":4355,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"5489:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4357,"indexExpression":{"id":4356,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5498:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5489:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4354,"name":"BaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"5476:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BaluniV1Pool_$3999_$","typeString":"type(contract BaluniV1Pool)"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5476:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5456:45:16"},{"assignments":[4364],"declarations":[{"constant":false,"id":4364,"mutability":"mutable","name":"assets","nameLocation":"5527:6:16","nodeType":"VariableDeclaration","scope":4409,"src":"5510:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4362,"name":"address","nodeType":"ElementaryTypeName","src":"5510:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4363,"nodeType":"ArrayTypeName","src":"5510:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4368,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4365,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5536:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5541:9:16","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3315,"src":"5536:14:16","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5510:42:16"},{"body":{"id":4400,"nodeType":"Block","src":"5607:135:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4380,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"5622:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4382,"indexExpression":{"id":4381,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"5629:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5622:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4383,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"5635:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5622:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4399,"nodeType":"IfStatement","src":"5618:115:16","trueBody":{"id":4398,"nodeType":"Block","src":"5642:91:16","statements":[{"expression":{"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4385,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"5655:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4387,"indexExpression":{"id":4386,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"5661:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5655:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4390,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"5678:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1Pool_$3999","typeString":"contract BaluniV1Pool"}],"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5670:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4388,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:16","typeDescriptions":{}}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5670:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5655:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4393,"nodeType":"ExpressionStatement","src":"5655:28:16"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5696:7:16","subExpression":{"id":4394,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"5696:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ExpressionStatement","src":"5696:7:16"},{"id":4397,"nodeType":"Break","src":"5716:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4373,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"5583:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4374,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4364,"src":"5587:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5594:6:16","memberName":"length","nodeType":"MemberAccess","src":"5587:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5583:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4401,"initializationExpression":{"assignments":[4370],"declarations":[{"constant":false,"id":4370,"mutability":"mutable","name":"j","nameLocation":"5576:1:16","nodeType":"VariableDeclaration","scope":4401,"src":"5568:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5568:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4372,"initialValue":{"hexValue":"30","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5580:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5568:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5602:3:16","subExpression":{"id":4377,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"5602:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"5602:3:16"},"nodeType":"ForStatement","src":"5563:179:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4402,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"5756:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4403,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"5765:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5771:6:16","memberName":"length","nodeType":"MemberAccess","src":"5765:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5756:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4408,"nodeType":"IfStatement","src":"5752:53:16","trueBody":{"id":4407,"nodeType":"Block","src":"5779:26:16","statements":[{"id":4406,"nodeType":"Break","src":"5790:5:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5421:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4345,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"5425:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5434:6:16","memberName":"length","nodeType":"MemberAccess","src":"5425:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5421:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"initializationExpression":{"assignments":[4341],"declarations":[{"constant":false,"id":4341,"mutability":"mutable","name":"i","nameLocation":"5414:1:16","nodeType":"VariableDeclaration","scope":4410,"src":"5406:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5406:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4343,"initialValue":{"hexValue":"30","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5418:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5406:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5442:3:16","subExpression":{"id":4348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"5442:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4350,"nodeType":"ExpressionStatement","src":"5442:3:16"},"nodeType":"ForStatement","src":"5401:411:16"},{"assignments":[4415],"declarations":[{"constant":false,"id":4415,"mutability":"mutable","name":"result","nameLocation":"5837:6:16","nodeType":"VariableDeclaration","scope":4444,"src":"5820:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4413,"name":"address","nodeType":"ElementaryTypeName","src":"5820:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4414,"nodeType":"ArrayTypeName","src":"5820:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4421,"initialValue":{"arguments":[{"id":4419,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"5860:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5846:13:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"5850:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4417,"nodeType":"ArrayTypeName","src":"5850:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5820:46:16"},{"body":{"id":4440,"nodeType":"Block","src":"5909:37:16","statements":[{"expression":{"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"5918:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4434,"indexExpression":{"id":4433,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"5925:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5918:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4435,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"5930:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4437,"indexExpression":{"id":4436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"5936:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5930:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5918:20:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4439,"nodeType":"ExpressionStatement","src":"5918:20:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"5893:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4427,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"5897:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5893:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4441,"initializationExpression":{"assignments":[4423],"declarations":[{"constant":false,"id":4423,"mutability":"mutable","name":"i","nameLocation":"5886:1:16","nodeType":"VariableDeclaration","scope":4441,"src":"5878:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"5878:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4425,"initialValue":{"hexValue":"30","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5890:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5878:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5904:3:16","subExpression":{"id":4429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"5904:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"nodeType":"ExpressionStatement","src":"5904:3:16"},"nodeType":"ForStatement","src":"5873:73:16"},{"expression":{"id":4442,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"5961:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4323,"id":4443,"nodeType":"Return","src":"5954:13:16"}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"5030:191:16","text":" @dev Returns an array of pool addresses that contain the specified token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"b4340e6a","id":4445,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"5234:15:16","nodeType":"FunctionDefinition","parameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"token","nameLocation":"5258:5:16","nodeType":"VariableDeclaration","scope":4445,"src":"5250:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4317,"name":"address","nodeType":"ElementaryTypeName","src":"5250:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5249:15:16"},"returnParameters":{"id":4323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4445,"src":"5288:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4320,"name":"address","nodeType":"ElementaryTypeName","src":"5288:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4321,"nodeType":"ArrayTypeName","src":"5288:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5287:18:16"},"scope":4491,"src":"5225:748:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4457,"nodeType":"Block","src":"6188:38:16","statements":[{"expression":{"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4453,"name":"periphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"6195:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4454,"name":"_newPeriphery","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"6207:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6195:25:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4456,"nodeType":"ExpressionStatement","src":"6195:25:16"}]},"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"5979:138:16","text":" @dev Changes the address of the periphery contract.\n @param _newPeriphery The new address of the periphery contract."},"functionSelector":"e9b31cff","id":4458,"implemented":true,"kind":"function","modifiers":[{"id":4451,"kind":"modifierInvocation","modifierName":{"id":4450,"name":"onlyOwner","nameLocations":["6178:9:16"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"6178:9:16"},"nodeType":"ModifierInvocation","src":"6178:9:16"}],"name":"changePeriphery","nameLocation":"6130:15:16","nodeType":"FunctionDefinition","parameters":{"id":4449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4448,"mutability":"mutable","name":"_newPeriphery","nameLocation":"6154:13:16","nodeType":"VariableDeclaration","scope":4458,"src":"6146:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4447,"name":"address","nodeType":"ElementaryTypeName","src":"6146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6145:23:16"},"returnParameters":{"id":4452,"nodeType":"ParameterList","parameters":[],"src":"6188:0:16"},"scope":4491,"src":"6121:105:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4489,"nodeType":"Block","src":"6295:151:16","statements":[{"body":{"id":4485,"nodeType":"Block","src":"6348:74:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4476,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"6361:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4478,"indexExpression":{"id":4477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"6370:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6361:11:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4479,"name":"_pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"6376:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6361:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4484,"nodeType":"IfStatement","src":"6357:58:16","trueBody":{"id":4483,"nodeType":"Block","src":"6383:32:16","statements":[{"expression":{"hexValue":"74727565","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6401:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4464,"id":4482,"nodeType":"Return","src":"6394:11:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4469,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"6322:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4470,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"6326:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6335:6:16","memberName":"length","nodeType":"MemberAccess","src":"6326:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6322:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4486,"initializationExpression":{"assignments":[4466],"declarations":[{"constant":false,"id":4466,"mutability":"mutable","name":"i","nameLocation":"6315:1:16","nodeType":"VariableDeclaration","scope":4486,"src":"6307:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4465,"name":"uint256","nodeType":"ElementaryTypeName","src":"6307:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4468,"initialValue":{"hexValue":"30","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6319:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6307:13:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6343:3:16","subExpression":{"id":4473,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"6343:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4475,"nodeType":"ExpressionStatement","src":"6343:3:16"},"nodeType":"ForStatement","src":"6302:120:16"},{"expression":{"hexValue":"66616c7365","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6435:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4464,"id":4488,"nodeType":"Return","src":"6428:12:16"}]},"functionSelector":"89345efb","id":4490,"implemented":true,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"6241:9:16","nodeType":"FunctionDefinition","parameters":{"id":4461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4460,"mutability":"mutable","name":"_pool","nameLocation":"6259:5:16","nodeType":"VariableDeclaration","scope":4490,"src":"6251:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4459,"name":"address","nodeType":"ElementaryTypeName","src":"6251:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6250:15:16"},"returnParameters":{"id":4464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4490,"src":"6289:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4462,"name":"bool","nodeType":"ElementaryTypeName","src":"6289:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6288:6:16"},"scope":4491,"src":"6232:214:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4492,"src":"1731:4718:16","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837,4033]}],"src":"40:6411:16"},"id":16},"contracts/BaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolPeriphery.sol","exportedSymbols":{"BaluniV1PoolPeriphery":[5897],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"IBaluniV1Pool":[6168],"IBaluniV1PoolFactory":[6201],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"UUPSUpgradeable":[630]},"id":5898,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":4493,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:17"},{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","file":"./interfaces/IBaluniV1PoolFactory.sol","id":4494,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5898,"sourceUnit":6202,"src":"1466:47:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","file":"./interfaces/IBaluniV1Pool.sol","id":4495,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5898,"sourceUnit":6169,"src":"1515:40:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":4496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5898,"sourceUnit":195,"src":"1557:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":4497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5898,"sourceUnit":449,"src":"1634:75:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":4498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5898,"sourceUnit":631,"src":"1711:77:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4500,"name":"Initializable","nameLocations":["2100:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2100:13:17"},"id":4501,"nodeType":"InheritanceSpecifier","src":"2100:13:17"},{"baseName":{"id":4502,"name":"OwnableUpgradeable","nameLocations":["2115:18:17"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2115:18:17"},"id":4503,"nodeType":"InheritanceSpecifier","src":"2115:18:17"},{"baseName":{"id":4504,"name":"UUPSUpgradeable","nameLocations":["2135:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2135:15:17"},"id":4505,"nodeType":"InheritanceSpecifier","src":"2135:15:17"}],"canonicalName":"BaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"contract","documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"1792:272:17","text":" @title BaluniV1PoolPeriphery\n @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\n It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap."},"fullyImplemented":true,"id":5897,"linearizedBaseContracts":[5897,630,686,194,676,448],"name":"BaluniV1PoolPeriphery","nameLocation":"2075:21:17","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"4219dc40","id":4508,"mutability":"mutable","name":"poolFactory","nameLocation":"2186:11:17","nodeType":"VariableDeclaration","scope":5897,"src":"2158:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"},"typeName":{"id":4507,"nodeType":"UserDefinedTypeName","pathNode":{"id":4506,"name":"IBaluniV1PoolFactory","nameLocations":["2158:20:17"],"nodeType":"IdentifierPath","referencedDeclaration":6201,"src":"2158:20:17"},"referencedDeclaration":6201,"src":"2158:20:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"visibility":"public"},{"constant":false,"functionSelector":"4056c37f","id":4514,"mutability":"mutable","name":"poolsReserves","nameLocation":"2261:13:17","nodeType":"VariableDeclaration","scope":5897,"src":"2206:68:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":4513,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4509,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2206:47:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4512,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4510,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2225:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":4536,"nodeType":"Block","src":"2578:139:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4522,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2589:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4524,"nodeType":"ExpressionStatement","src":"2589:24:17"},{"expression":{"arguments":[{"expression":{"id":4526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2639:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2643:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2639:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4525,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2624:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2624:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4529,"nodeType":"ExpressionStatement","src":"2624:26:17"},{"expression":{"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4530,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"2661:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4532,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4517,"src":"2696:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4531,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"2675:20:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$6201_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"src":"2661:48:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":4535,"nodeType":"ExpressionStatement","src":"2661:48:17"}]},"documentation":{"id":4515,"nodeType":"StructuredDocumentation","src":"2347:164:17","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"c4d66de8","id":4537,"implemented":true,"kind":"function","modifiers":[{"id":4520,"kind":"modifierInvocation","modifierName":{"id":4519,"name":"initializer","nameLocations":["2566:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2566:11:17"},"nodeType":"ModifierInvocation","src":"2566:11:17"}],"name":"initialize","nameLocation":"2526:10:17","nodeType":"FunctionDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4517,"mutability":"mutable","name":"_poolFactory","nameLocation":"2545:12:17","nodeType":"VariableDeclaration","scope":4537,"src":"2537:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4516,"name":"address","nodeType":"ElementaryTypeName","src":"2537:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2536:22:17"},"returnParameters":{"id":4521,"nodeType":"ParameterList","parameters":[],"src":"2578:0:17"},"scope":5897,"src":"2517:200:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4554,"nodeType":"Block","src":"2985:67:17","statements":[{"expression":{"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4548,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"2996:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4550,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"3031:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4549,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"3010:20:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$6201_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"src":"2996:48:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":4553,"nodeType":"ExpressionStatement","src":"2996:48:17"}]},"documentation":{"id":4538,"nodeType":"StructuredDocumentation","src":"2725:164:17","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"8f2248bc","id":4555,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4545,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"2976:7:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4546,"kind":"modifierInvocation","modifierName":{"id":4544,"name":"reinitializer","nameLocations":["2962:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2962:13:17"},"nodeType":"ModifierInvocation","src":"2962:22:17"}],"name":"reinitialize","nameLocation":"2904:12:17","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"_poolFactory","nameLocation":"2925:12:17","nodeType":"VariableDeclaration","scope":4555,"src":"2917:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4539,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"version","nameLocation":"2946:7:17","nodeType":"VariableDeclaration","scope":4555,"src":"2939:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4541,"name":"uint64","nodeType":"ElementaryTypeName","src":"2939:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2916:38:17"},"returnParameters":{"id":4547,"nodeType":"ParameterList","parameters":[],"src":"2985:0:17"},"scope":5897,"src":"2895:157:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":4564,"nodeType":"Block","src":"3402:2:17","statements":[]},"documentation":{"id":4556,"nodeType":"StructuredDocumentation","src":"3060:254:17","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":4565,"implemented":true,"kind":"function","modifiers":[{"id":4562,"kind":"modifierInvocation","modifierName":{"id":4561,"name":"onlyOwner","nameLocations":["3392:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3392:9:17"},"nodeType":"ModifierInvocation","src":"3392:9:17"}],"name":"_authorizeUpgrade","nameLocation":"3329:17:17","nodeType":"FunctionDefinition","overrides":{"id":4560,"nodeType":"OverrideSpecifier","overrides":[],"src":"3383:8:17"},"parameters":{"id":4559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4558,"mutability":"mutable","name":"newImplementation","nameLocation":"3355:17:17","nodeType":"VariableDeclaration","scope":4565,"src":"3347:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4557,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3346:27:17"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[],"src":"3402:0:17"},"scope":5897,"src":"3320:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4650,"nodeType":"Block","src":"3824:566:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"3843:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3843:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3855:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":4579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3835:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4585,"nodeType":"ExpressionStatement","src":"3835:55:17"},{"assignments":[4587],"declarations":[{"constant":false,"id":4587,"mutability":"mutable","name":"poolAddress","nameLocation":"3911:11:17","nodeType":"VariableDeclaration","scope":4650,"src":"3903:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4586,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4593,"initialValue":{"arguments":[{"id":4590,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"3953:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4591,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"3964:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4588,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"3925:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3937:15:17","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"3925:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3925:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3903:69:17"},{"assignments":[4596],"declarations":[{"constant":false,"id":4596,"mutability":"mutable","name":"pool","nameLocation":"3997:4:17","nodeType":"VariableDeclaration","scope":4650,"src":"3983:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":4595,"nodeType":"UserDefinedTypeName","pathNode":{"id":4594,"name":"IBaluniV1Pool","nameLocations":["3983:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"3983:13:17"},"referencedDeclaration":6168,"src":"3983:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":4600,"initialValue":{"arguments":[{"id":4598,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"4018:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4597,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"4004:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4004:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3983:47:17"},{"expression":{"arguments":[{"expression":{"id":4605,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4074:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4078:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4074:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4609,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4094:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":4608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4086:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4607,"name":"address","nodeType":"ElementaryTypeName","src":"4086:7:17","typeDescriptions":{}}},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"4101:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4602,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"4050:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4601,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4043:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"4043:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4613,"nodeType":"ExpressionStatement","src":"4043:65:17"},{"assignments":[4615],"declarations":[{"constant":false,"id":4615,"mutability":"mutable","name":"toSend","nameLocation":"4129:6:17","nodeType":"VariableDeclaration","scope":4650,"src":"4121:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"4121:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4623,"initialValue":{"arguments":[{"id":4618,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"4148:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4619,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"4159:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"4168:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4621,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"4176:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4616,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4596,"src":"4138:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4143:4:17","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"4138:9:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4138:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4121:64:17"},{"expression":{"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4624,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"4198:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4627,"indexExpression":{"id":4625,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"4212:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4198:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4628,"indexExpression":{"id":4626,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"4225:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4198:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4629,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"4239:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4198:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4631,"nodeType":"ExpressionStatement","src":"4198:47:17"},{"expression":{"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4632,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"4256:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4635,"indexExpression":{"id":4633,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"4270:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4256:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4636,"indexExpression":{"id":4634,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"4283:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4256:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4637,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"4295:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4256:45:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4639,"nodeType":"ExpressionStatement","src":"4256:45:17"},{"expression":{"arguments":[{"id":4644,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"4339:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4645,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"4349:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4641,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"4321:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4640,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4314:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4330:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"4314:24:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4314:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4647,"nodeType":"ExpressionStatement","src":"4314:42:17"},{"expression":{"id":4648,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"4376:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4578,"id":4649,"nodeType":"Return","src":"4369:13:17"}]},"documentation":{"id":4566,"nodeType":"StructuredDocumentation","src":"3412:295:17","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":4651,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"3722:4:17","nodeType":"FunctionDefinition","parameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"fromToken","nameLocation":"3735:9:17","nodeType":"VariableDeclaration","scope":4651,"src":"3727:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4567,"name":"address","nodeType":"ElementaryTypeName","src":"3727:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"toToken","nameLocation":"3754:7:17","nodeType":"VariableDeclaration","scope":4651,"src":"3746:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4569,"name":"address","nodeType":"ElementaryTypeName","src":"3746:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4572,"mutability":"mutable","name":"amount","nameLocation":"3771:6:17","nodeType":"VariableDeclaration","scope":4651,"src":"3763:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4574,"mutability":"mutable","name":"receiver","nameLocation":"3787:8:17","nodeType":"VariableDeclaration","scope":4651,"src":"3779:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4573,"name":"address","nodeType":"ElementaryTypeName","src":"3779:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3726:70:17"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4651,"src":"3815:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"3815:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3814:9:17"},"scope":5897,"src":"3713:677:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4815,"nodeType":"Block","src":"5135:1038:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4671,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"5168:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5179:6:17","memberName":"length","nodeType":"MemberAccess","src":"5168:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4673,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"5189:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5198:6:17","memberName":"length","nodeType":"MemberAccess","src":"5189:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4676,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"5225:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5234:6:17","memberName":"length","nodeType":"MemberAccess","src":"5225:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4678,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5244:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5252:6:17","memberName":"length","nodeType":"MemberAccess","src":"5244:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5225:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5168:90:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4682,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5279:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5287:6:17","memberName":"length","nodeType":"MemberAccess","src":"5279:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4684,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"5297:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5307:6:17","memberName":"length","nodeType":"MemberAccess","src":"5297:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5279:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5168:145:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e70757420617272617973206c656e677468206d69736d61746368","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5328:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""},"value":"Input arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""}],"id":4670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5146:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:223:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4690,"nodeType":"ExpressionStatement","src":"5146:223:17"},{"assignments":[4695],"declarations":[{"constant":false,"id":4695,"mutability":"mutable","name":"amountsOut","nameLocation":"5399:10:17","nodeType":"VariableDeclaration","scope":4815,"src":"5382:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4693,"name":"uint256","nodeType":"ElementaryTypeName","src":"5382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"nodeType":"ArrayTypeName","src":"5382:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4702,"initialValue":{"arguments":[{"expression":{"id":4699,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"5426:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5437:6:17","memberName":"length","nodeType":"MemberAccess","src":"5426:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5412:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"5416:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4697,"nodeType":"ArrayTypeName","src":"5416:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5412:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5382:62:17"},{"body":{"id":4811,"nodeType":"Block","src":"5505:631:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4715,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5528:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4717,"indexExpression":{"id":4716,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5536:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5528:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5541:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5528:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":4720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5544:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":4714,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5520:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5520:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4722,"nodeType":"ExpressionStatement","src":"5520:59:17"},{"assignments":[4724],"declarations":[{"constant":false,"id":4724,"mutability":"mutable","name":"poolAddress","nameLocation":"5602:11:17","nodeType":"VariableDeclaration","scope":4811,"src":"5594:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4723,"name":"address","nodeType":"ElementaryTypeName","src":"5594:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4734,"initialValue":{"arguments":[{"baseExpression":{"id":4727,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"5644:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4729,"indexExpression":{"id":4728,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5655:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5644:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4730,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"5659:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4732,"indexExpression":{"id":4731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5668:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5659:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4725,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"5616:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5628:15:17","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"5616:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5616:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5594:77:17"},{"assignments":[4737],"declarations":[{"constant":false,"id":4737,"mutability":"mutable","name":"pool","nameLocation":"5700:4:17","nodeType":"VariableDeclaration","scope":4811,"src":"5686:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":4736,"nodeType":"UserDefinedTypeName","pathNode":{"id":4735,"name":"IBaluniV1Pool","nameLocations":["5686:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"5686:13:17"},"referencedDeclaration":6168,"src":"5686:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":4741,"initialValue":{"arguments":[{"id":4739,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"5721:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4738,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"5707:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":4740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5686:47:17"},{"expression":{"arguments":[{"expression":{"id":4748,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5783:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5787:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5783:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4752,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5803:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":4751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5795:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4750,"name":"address","nodeType":"ElementaryTypeName","src":"5795:7:17","typeDescriptions":{}}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5795:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4754,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5810:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4756,"indexExpression":{"id":4755,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5818:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5810:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":4743,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"5755:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4745,"indexExpression":{"id":4744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5766:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5755:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4742,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5748:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5748:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5770:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"5748:34:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5748:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4758,"nodeType":"ExpressionStatement","src":"5748:73:17"},{"assignments":[4760],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"amountOut","nameLocation":"5844:9:17","nodeType":"VariableDeclaration","scope":4811,"src":"5836:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"5836:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4776,"initialValue":{"arguments":[{"baseExpression":{"id":4763,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"5866:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4765,"indexExpression":{"id":4764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5877:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5866:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4766,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"5881:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4768,"indexExpression":{"id":4767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5890:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5881:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4769,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5894:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4771,"indexExpression":{"id":4770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5902:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5894:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4772,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"5906:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4774,"indexExpression":{"id":4773,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5916:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5906:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4761,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"5856:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5861:4:17","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"5856:9:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5856:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5836:83:17"},{"expression":{"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4777,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"5934:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4782,"indexExpression":{"id":4778,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"5948:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5934:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4783,"indexExpression":{"baseExpression":{"id":4779,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"5961:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4781,"indexExpression":{"id":4780,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5972:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5961:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5934:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4784,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"5979:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":4786,"indexExpression":{"id":4785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5987:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5979:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5934:55:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4788,"nodeType":"ExpressionStatement","src":"5934:55:17"},{"expression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4789,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"6004:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4794,"indexExpression":{"id":4790,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"6018:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6004:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4795,"indexExpression":{"baseExpression":{"id":4791,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"6031:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4793,"indexExpression":{"id":4792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"6040:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6031:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6004:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4796,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"6047:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6004:52:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4798,"nodeType":"ExpressionStatement","src":"6004:52:17"},{"expression":{"arguments":[{"baseExpression":{"id":4805,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4664,"src":"6100:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4807,"indexExpression":{"id":4806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"6110:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6100:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4808,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"6114:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":4800,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"6078:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4802,"indexExpression":{"id":4801,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"6087:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6078:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4799,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6071:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6071:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6091:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"6071:28:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6071:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4810,"nodeType":"ExpressionStatement","src":"6071:53:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5477:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4708,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"5481:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5492:6:17","memberName":"length","nodeType":"MemberAccess","src":"5481:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5477:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4812,"initializationExpression":{"assignments":[4704],"declarations":[{"constant":false,"id":4704,"mutability":"mutable","name":"i","nameLocation":"5470:1:17","nodeType":"VariableDeclaration","scope":4812,"src":"5462:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"5462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4706,"initialValue":{"hexValue":"30","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5474:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5462:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5500:3:17","subExpression":{"id":4711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"5500:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4713,"nodeType":"ExpressionStatement","src":"5500:3:17"},"nodeType":"ForStatement","src":"5457:679:17"},{"expression":{"id":4813,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"6155:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4669,"id":4814,"nodeType":"Return","src":"6148:17:17"}]},"documentation":{"id":4652,"nodeType":"StructuredDocumentation","src":"4398:515:17","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":4816,"implemented":true,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"4928:9:17","nodeType":"FunctionDefinition","parameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"fromTokens","nameLocation":"4967:10:17","nodeType":"VariableDeclaration","scope":4816,"src":"4948:29:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4653,"name":"address","nodeType":"ElementaryTypeName","src":"4948:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4654,"nodeType":"ArrayTypeName","src":"4948:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4658,"mutability":"mutable","name":"toTokens","nameLocation":"5007:8:17","nodeType":"VariableDeclaration","scope":4816,"src":"4988:27:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4656,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4657,"nodeType":"ArrayTypeName","src":"4988:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4661,"mutability":"mutable","name":"amounts","nameLocation":"5045:7:17","nodeType":"VariableDeclaration","scope":4816,"src":"5026:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4660,"nodeType":"ArrayTypeName","src":"5026:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4664,"mutability":"mutable","name":"receivers","nameLocation":"5082:9:17","nodeType":"VariableDeclaration","scope":4816,"src":"5063:28:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4662,"name":"address","nodeType":"ElementaryTypeName","src":"5063:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4663,"nodeType":"ArrayTypeName","src":"5063:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4937:161:17"},"returnParameters":{"id":4669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4816,"src":"5117:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"5117:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4667,"nodeType":"ArrayTypeName","src":"5117:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5116:18:17"},"scope":5897,"src":"4919:1254:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4890,"nodeType":"Block","src":"6255:402:17","statements":[{"assignments":[4825],"declarations":[{"constant":false,"id":4825,"mutability":"mutable","name":"pool","nameLocation":"6280:4:17","nodeType":"VariableDeclaration","scope":4890,"src":"6266:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":4824,"nodeType":"UserDefinedTypeName","pathNode":{"id":4823,"name":"IBaluniV1Pool","nameLocations":["6266:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"6266:13:17"},"referencedDeclaration":6168,"src":"6266:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":4829,"initialValue":{"arguments":[{"id":4827,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"6301:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4826,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"6287:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6287:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"6266:47:17"},{"assignments":[4834],"declarations":[{"constant":false,"id":4834,"mutability":"mutable","name":"amounts","nameLocation":"6341:7:17","nodeType":"VariableDeclaration","scope":4890,"src":"6324:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"6324:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4833,"nodeType":"ArrayTypeName","src":"6324:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4839,"initialValue":{"arguments":[{"id":4837,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"6373:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4835,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"6351:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6356:16:17","memberName":"rebalanceWeights","nodeType":"MemberAccess","referencedDeclaration":6116,"src":"6351:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) external returns (uint256[] memory)"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6351:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6324:58:17"},{"assignments":[4844],"declarations":[{"constant":false,"id":4844,"mutability":"mutable","name":"assets","nameLocation":"6410:6:17","nodeType":"VariableDeclaration","scope":4890,"src":"6393:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4842,"name":"address","nodeType":"ElementaryTypeName","src":"6393:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4843,"nodeType":"ArrayTypeName","src":"6393:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4848,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4845,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4825,"src":"6419:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6424:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"6419:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6393:42:17"},{"body":{"id":4888,"nodeType":"Block","src":"6490:160:17","statements":[{"expression":{"id":4870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4860,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"6505:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":4865,"indexExpression":{"id":4861,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"6519:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6505:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4866,"indexExpression":{"baseExpression":{"id":4862,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"6532:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4864,"indexExpression":{"id":4863,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6539:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6532:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6505:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4867,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"6546:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4869,"indexExpression":{"id":4868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6554:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6546:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6505:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4871,"nodeType":"ExpressionStatement","src":"6505:51:17"},{"expression":{"arguments":[{"id":4878,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4818,"src":"6602:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4881,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6620:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6612:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4879,"name":"address","nodeType":"ElementaryTypeName","src":"6612:7:17","typeDescriptions":{}}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":4883,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"6627:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4885,"indexExpression":{"id":4884,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6635:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6627:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":4873,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"6578:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4875,"indexExpression":{"id":4874,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6585:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6578:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4872,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6571:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6571:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6589:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"6571:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6571:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4887,"nodeType":"ExpressionStatement","src":"6571:67:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4853,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6466:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4854,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"6470:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6477:6:17","memberName":"length","nodeType":"MemberAccess","src":"6470:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6466:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4889,"initializationExpression":{"assignments":[4850],"declarations":[{"constant":false,"id":4850,"mutability":"mutable","name":"i","nameLocation":"6459:1:17","nodeType":"VariableDeclaration","scope":4889,"src":"6451:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4849,"name":"uint256","nodeType":"ElementaryTypeName","src":"6451:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4852,"initialValue":{"hexValue":"30","id":4851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6463:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6451:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6485:3:17","subExpression":{"id":4857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6485:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4859,"nodeType":"ExpressionStatement","src":"6485:3:17"},"nodeType":"ForStatement","src":"6446:204:17"}]},"functionSelector":"ad414263","id":4891,"implemented":true,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"6190:16:17","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4818,"mutability":"mutable","name":"receiver","nameLocation":"6215:8:17","nodeType":"VariableDeclaration","scope":4891,"src":"6207:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4817,"name":"address","nodeType":"ElementaryTypeName","src":"6207:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4820,"mutability":"mutable","name":"poolAddress","nameLocation":"6233:11:17","nodeType":"VariableDeclaration","scope":4891,"src":"6225:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4819,"name":"address","nodeType":"ElementaryTypeName","src":"6225:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6206:39:17"},"returnParameters":{"id":4822,"nodeType":"ParameterList","parameters":[],"src":"6255:0:17"},"scope":5897,"src":"6181:476:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5100,"nodeType":"Block","src":"6824:1575:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"6843:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6852:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6843:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6855:34:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":4904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6835:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6835:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4910,"nodeType":"ExpressionStatement","src":"6835:55:17"},{"assignments":[4915],"declarations":[{"constant":false,"id":4915,"mutability":"mutable","name":"pools","nameLocation":"6920:5:17","nodeType":"VariableDeclaration","scope":5100,"src":"6903:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4913,"name":"address","nodeType":"ElementaryTypeName","src":"6903:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4914,"nodeType":"ArrayTypeName","src":"6903:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4921,"initialValue":{"arguments":[{"id":4917,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"6946:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4918,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4895,"src":"6957:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4919,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"6966:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4916,"name":"_findOptimalRoute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"6928:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address,uint256) view returns (address[] memory)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6928:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6903:70:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4923,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"6992:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6998:6:17","memberName":"length","nodeType":"MemberAccess","src":"6992:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7007:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6992:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20726f75746520666f756e64","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7010:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee7b828cb0281855c8b3bbf7bd552c39ac5e8c76d8779863b91d21e559bad900","typeString":"literal_string \"No route found\""},"value":"No route found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee7b828cb0281855c8b3bbf7bd552c39ac5e8c76d8779863b91d21e559bad900","typeString":"literal_string \"No route found\""}],"id":4922,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6984:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6984:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4929,"nodeType":"ExpressionStatement","src":"6984:43:17"},{"expression":{"arguments":[{"expression":{"id":4934,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7071:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7075:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7071:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4938,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7091:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7083:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4936,"name":"address","nodeType":"ElementaryTypeName","src":"7083:7:17","typeDescriptions":{}}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4940,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"7098:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4931,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"7047:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4930,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7040:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7040:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7058:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"7040:30:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7040:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4942,"nodeType":"ExpressionStatement","src":"7040:65:17"},{"assignments":[4944],"declarations":[{"constant":false,"id":4944,"mutability":"mutable","name":"amountRemaining","nameLocation":"7126:15:17","nodeType":"VariableDeclaration","scope":5100,"src":"7118:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4943,"name":"uint256","nodeType":"ElementaryTypeName","src":"7118:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4946,"initialValue":{"id":4945,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4897,"src":"7144:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7118:32:17"},{"assignments":[4948],"declarations":[{"constant":false,"id":4948,"mutability":"mutable","name":"currentToken","nameLocation":"7169:12:17","nodeType":"VariableDeclaration","scope":5100,"src":"7161:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4947,"name":"address","nodeType":"ElementaryTypeName","src":"7161:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4950,"initialValue":{"id":4949,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"7184:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7161:32:17"},{"body":{"id":5096,"nodeType":"Block","src":"7247:1110:17","statements":[{"assignments":[4964],"declarations":[{"constant":false,"id":4964,"mutability":"mutable","name":"pool","nameLocation":"7276:4:17","nodeType":"VariableDeclaration","scope":5096,"src":"7262:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":4963,"nodeType":"UserDefinedTypeName","pathNode":{"id":4962,"name":"IBaluniV1Pool","nameLocations":["7262:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"7262:13:17"},"referencedDeclaration":6168,"src":"7262:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":4970,"initialValue":{"arguments":[{"baseExpression":{"id":4966,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"7297:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4968,"indexExpression":{"id":4967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"7303:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7297:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4965,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"7283:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7283:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"7262:44:17"},{"assignments":[4975],"declarations":[{"constant":false,"id":4975,"mutability":"mutable","name":"poolTokens","nameLocation":"7338:10:17","nodeType":"VariableDeclaration","scope":5096,"src":"7321:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4973,"name":"address","nodeType":"ElementaryTypeName","src":"7321:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4974,"nodeType":"ArrayTypeName","src":"7321:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4979,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4976,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"7351:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7356:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"7351:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7351:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7321:46:17"},{"assignments":[4984],"declarations":[{"constant":false,"id":4984,"mutability":"mutable","name":"reserves","nameLocation":"7399:8:17","nodeType":"VariableDeclaration","scope":5096,"src":"7382:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4982,"name":"uint256","nodeType":"ElementaryTypeName","src":"7382:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4983,"nodeType":"ArrayTypeName","src":"7382:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4990,"initialValue":{"arguments":[{"baseExpression":{"id":4986,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"7422:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4988,"indexExpression":{"id":4987,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"7428:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7422:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4985,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"7410:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view returns (uint256[] memory)"}},"id":4989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7410:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7382:49:17"},{"assignments":[4992],"declarations":[{"constant":false,"id":4992,"mutability":"mutable","name":"nextToken","nameLocation":"7456:9:17","nodeType":"VariableDeclaration","scope":5096,"src":"7448:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4991,"name":"address","nodeType":"ElementaryTypeName","src":"7448:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4993,"nodeType":"VariableDeclarationStatement","src":"7448:17:17"},{"body":{"id":5025,"nodeType":"Block","src":"7528:184:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5005,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"7551:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5007,"indexExpression":{"id":5006,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7562:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7551:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5008,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"7568:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7551:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5010,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"7584:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5012,"indexExpression":{"id":5011,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7593:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7584:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7598:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7584:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7551:48:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5024,"nodeType":"IfStatement","src":"7547:150:17","trueBody":{"id":5023,"nodeType":"Block","src":"7601:96:17","statements":[{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5016,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7624:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5017,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"7636:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5019,"indexExpression":{"id":5018,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7647:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7636:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7624:25:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5021,"nodeType":"ExpressionStatement","src":"7624:25:17"},{"id":5022,"nodeType":"Break","src":"7672:5:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4998,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7500:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4999,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"7504:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7515:6:17","memberName":"length","nodeType":"MemberAccess","src":"7504:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7500:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5026,"initializationExpression":{"assignments":[4995],"declarations":[{"constant":false,"id":4995,"mutability":"mutable","name":"j","nameLocation":"7493:1:17","nodeType":"VariableDeclaration","scope":5026,"src":"7485:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"7485:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4997,"initialValue":{"hexValue":"30","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7497:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7485:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7523:3:17","subExpression":{"id":5002,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"7523:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5004,"nodeType":"ExpressionStatement","src":"7523:3:17"},"nodeType":"ForStatement","src":"7480:232:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5028,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7736:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7757:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7749:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5029,"name":"address","nodeType":"ElementaryTypeName","src":"7749:7:17","typeDescriptions":{}}},"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7749:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7736:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2076616c6964206e65787420746f6b656e20666f756e64","id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7761:27:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecec49bae7da7d66a50331e2bf4afac20670ba1e1de72e63ed33afdc33ab1c0d","typeString":"literal_string \"No valid next token found\""},"value":"No valid next token found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecec49bae7da7d66a50331e2bf4afac20670ba1e1de72e63ed33afdc33ab1c0d","typeString":"literal_string \"No valid next token found\""}],"id":5027,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7728:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7728:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5036,"nodeType":"ExpressionStatement","src":"7728:61:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5040,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"7833:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5038,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"7812:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7817:15:17","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":6005,"src":"7812:20:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7812:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5042,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"7847:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7812:50:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c697175696469747920696e20706f6f6c20666f722073776170","id":5044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7864:41:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd5218ddce9f9d1325aa32ed059b5884f2ed71b9548aabcb4725b422ee8090a6","typeString":"literal_string \"Insufficient liquidity in pool for swap\""},"value":"Insufficient liquidity in pool for swap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd5218ddce9f9d1325aa32ed059b5884f2ed71b9548aabcb4725b422ee8090a6","typeString":"literal_string \"Insufficient liquidity in pool for swap\""}],"id":5037,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7804:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7804:102:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5046,"nodeType":"ExpressionStatement","src":"7804:102:17"},{"assignments":[5048],"declarations":[{"constant":false,"id":5048,"mutability":"mutable","name":"amountOut","nameLocation":"7931:9:17","nodeType":"VariableDeclaration","scope":5096,"src":"7923:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5047,"name":"uint256","nodeType":"ElementaryTypeName","src":"7923:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5067,"initialValue":{"arguments":[{"id":5051,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"7971:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5052,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"8002:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5053,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"8030:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"8064:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5055,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"8069:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8075:6:17","memberName":"length","nodeType":"MemberAccess","src":"8069:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8084:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8069:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8064:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5063,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8107:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8099:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5061,"name":"address","nodeType":"ElementaryTypeName","src":"8099:7:17","typeDescriptions":{}}},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8064:48:17","trueExpression":{"id":5060,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4899,"src":"8088:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5049,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4964,"src":"7943:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7948:4:17","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":6064,"src":"7943:9:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7943:184:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7923:204:17"},{"expression":{"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5068,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"8144:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5073,"indexExpression":{"baseExpression":{"id":5069,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"8158:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5071,"indexExpression":{"id":5070,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"8164:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8158:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8144:23:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5074,"indexExpression":{"id":5072,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"8168:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8144:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5075,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"8185:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5077,"nodeType":"ExpressionStatement","src":"8144:56:17"},{"expression":{"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5078,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"8215:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5083,"indexExpression":{"baseExpression":{"id":5079,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"8229:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5081,"indexExpression":{"id":5080,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"8235:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8229:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8215:23:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5084,"indexExpression":{"id":5082,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"8239:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8215:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":5085,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"8253:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8215:47:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5087,"nodeType":"ExpressionStatement","src":"8215:47:17"},{"expression":{"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5088,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4948,"src":"8279:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5089,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4992,"src":"8294:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8279:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5091,"nodeType":"ExpressionStatement","src":"8279:24:17"},{"expression":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5092,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"8318:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5093,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5048,"src":"8336:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8318:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5095,"nodeType":"ExpressionStatement","src":"8318:27:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"7224:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4956,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4915,"src":"7228:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7234:6:17","memberName":"length","nodeType":"MemberAccess","src":"7228:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7224:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5097,"initializationExpression":{"assignments":[4952],"declarations":[{"constant":false,"id":4952,"mutability":"mutable","name":"i","nameLocation":"7217:1:17","nodeType":"VariableDeclaration","scope":5097,"src":"7209:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4951,"name":"uint256","nodeType":"ElementaryTypeName","src":"7209:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4954,"initialValue":{"hexValue":"30","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7221:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7209:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7242:3:17","subExpression":{"id":4959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4952,"src":"7242:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4961,"nodeType":"ExpressionStatement","src":"7242:3:17"},"nodeType":"ForStatement","src":"7204:1153:17"},{"expression":{"id":5098,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"8376:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4903,"id":5099,"nodeType":"Return","src":"8369:22:17"}]},"functionSelector":"7442eca6","id":5101,"implemented":true,"kind":"function","modifiers":[],"name":"smartSwap","nameLocation":"6674:9:17","nodeType":"FunctionDefinition","parameters":{"id":4900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4893,"mutability":"mutable","name":"fromToken","nameLocation":"6702:9:17","nodeType":"VariableDeclaration","scope":5101,"src":"6694:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4892,"name":"address","nodeType":"ElementaryTypeName","src":"6694:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4895,"mutability":"mutable","name":"toToken","nameLocation":"6730:7:17","nodeType":"VariableDeclaration","scope":5101,"src":"6722:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4894,"name":"address","nodeType":"ElementaryTypeName","src":"6722:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4897,"mutability":"mutable","name":"amount","nameLocation":"6756:6:17","nodeType":"VariableDeclaration","scope":5101,"src":"6748:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4896,"name":"uint256","nodeType":"ElementaryTypeName","src":"6748:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4899,"mutability":"mutable","name":"receiver","nameLocation":"6781:8:17","nodeType":"VariableDeclaration","scope":5101,"src":"6773:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4898,"name":"address","nodeType":"ElementaryTypeName","src":"6773:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6683:113:17"},"returnParameters":{"id":4903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5101,"src":"6815:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4901,"name":"uint256","nodeType":"ElementaryTypeName","src":"6815:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6814:9:17"},"scope":5897,"src":"6665:1734:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5319,"nodeType":"Block","src":"8561:1629:17","statements":[{"assignments":[5117],"declarations":[{"constant":false,"id":5117,"mutability":"mutable","name":"allPools","nameLocation":"8589:8:17","nodeType":"VariableDeclaration","scope":5319,"src":"8572:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5115,"name":"address","nodeType":"ElementaryTypeName","src":"8572:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5116,"nodeType":"ArrayTypeName","src":"8572:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5121,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5118,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"8600:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8612:11:17","memberName":"getAllPools","nodeType":"MemberAccess","referencedDeclaration":6200,"src":"8600:23:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8600:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8572:53:17"},{"assignments":[5123],"declarations":[{"constant":false,"id":5123,"mutability":"mutable","name":"poolCount","nameLocation":"8644:9:17","nodeType":"VariableDeclaration","scope":5319,"src":"8636:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5122,"name":"uint256","nodeType":"ElementaryTypeName","src":"8636:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5126,"initialValue":{"expression":{"id":5124,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"8656:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8665:6:17","memberName":"length","nodeType":"MemberAccess","src":"8656:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8636:35:17"},{"assignments":[5131],"declarations":[{"constant":false,"id":5131,"mutability":"mutable","name":"path","nameLocation":"8701:4:17","nodeType":"VariableDeclaration","scope":5319,"src":"8684:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5129,"name":"address","nodeType":"ElementaryTypeName","src":"8684:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5130,"nodeType":"ArrayTypeName","src":"8684:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5137,"initialValue":{"arguments":[{"id":5135,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"8722:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8708:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5132,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5133,"nodeType":"ArrayTypeName","src":"8712:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8708:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8684:48:17"},{"assignments":[5139],"declarations":[{"constant":false,"id":5139,"mutability":"mutable","name":"pathLength","nameLocation":"8751:10:17","nodeType":"VariableDeclaration","scope":5319,"src":"8743:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"8743:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5141,"initialValue":{"hexValue":"30","id":5140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8764:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8743:22:17"},{"assignments":[5146],"declarations":[{"constant":false,"id":5146,"mutability":"mutable","name":"visited","nameLocation":"8790:7:17","nodeType":"VariableDeclaration","scope":5319,"src":"8776:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":5144,"name":"bool","nodeType":"ElementaryTypeName","src":"8776:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5145,"nodeType":"ArrayTypeName","src":"8776:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":5152,"initialValue":{"arguments":[{"id":5150,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"8811:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8800:10:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":5147,"name":"bool","nodeType":"ElementaryTypeName","src":"8804:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5148,"nodeType":"ArrayTypeName","src":"8804:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8800:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8776:45:17"},{"assignments":[5157],"declarations":[{"constant":false,"id":5157,"mutability":"mutable","name":"queue","nameLocation":"8851:5:17","nodeType":"VariableDeclaration","scope":5319,"src":"8834:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5155,"name":"address","nodeType":"ElementaryTypeName","src":"8834:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5156,"nodeType":"ArrayTypeName","src":"8834:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5163,"initialValue":{"arguments":[{"id":5161,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"8873:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8859:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5158,"name":"address","nodeType":"ElementaryTypeName","src":"8863:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5159,"nodeType":"ArrayTypeName","src":"8863:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8859:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8834:49:17"},{"assignments":[5165],"declarations":[{"constant":false,"id":5165,"mutability":"mutable","name":"queueHead","nameLocation":"8902:9:17","nodeType":"VariableDeclaration","scope":5319,"src":"8894:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5164,"name":"uint256","nodeType":"ElementaryTypeName","src":"8894:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5167,"initialValue":{"hexValue":"30","id":5166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8894:21:17"},{"assignments":[5169],"declarations":[{"constant":false,"id":5169,"mutability":"mutable","name":"queueTail","nameLocation":"8934:9:17","nodeType":"VariableDeclaration","scope":5319,"src":"8926:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"8926:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5171,"initialValue":{"hexValue":"30","id":5170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8946:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8926:21:17"},{"expression":{"id":5177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5172,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"8960:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5175,"indexExpression":{"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8966:11:17","subExpression":{"id":5173,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"8966:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8960:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5176,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5103,"src":"8981:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8960:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5178,"nodeType":"ExpressionStatement","src":"8960:30:17"},{"body":{"id":5304,"nodeType":"Block","src":"9033:1075:17","statements":[{"assignments":[5183],"declarations":[{"constant":false,"id":5183,"mutability":"mutable","name":"currentToken","nameLocation":"9056:12:17","nodeType":"VariableDeclaration","scope":5304,"src":"9048:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5182,"name":"address","nodeType":"ElementaryTypeName","src":"9048:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5188,"initialValue":{"baseExpression":{"id":5184,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"9071:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5187,"indexExpression":{"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9077:11:17","subExpression":{"id":5185,"name":"queueHead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"9077:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9071:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9048:41:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5189,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"9108:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5190,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5105,"src":"9124:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9108:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5226,"nodeType":"IfStatement","src":"9104:277:17","trueBody":{"id":5225,"nodeType":"Block","src":"9133:248:17","statements":[{"assignments":[5196],"declarations":[{"constant":false,"id":5196,"mutability":"mutable","name":"finalPath","nameLocation":"9169:9:17","nodeType":"VariableDeclaration","scope":5225,"src":"9152:26:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5194,"name":"address","nodeType":"ElementaryTypeName","src":"9152:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5195,"nodeType":"ArrayTypeName","src":"9152:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5202,"initialValue":{"arguments":[{"id":5200,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"9195:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9181:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5197,"name":"address","nodeType":"ElementaryTypeName","src":"9185:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5198,"nodeType":"ArrayTypeName","src":"9185:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9152:54:17"},{"body":{"id":5221,"nodeType":"Block","src":"9266:65:17","statements":[{"expression":{"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5213,"name":"finalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"9289:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5215,"indexExpression":{"id":5214,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"9299:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9289:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5216,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"9304:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5218,"indexExpression":{"id":5217,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"9309:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9304:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9289:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5220,"nodeType":"ExpressionStatement","src":"9289:22:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5207,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"9245:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5208,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"9249:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9245:14:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5222,"initializationExpression":{"assignments":[5204],"declarations":[{"constant":false,"id":5204,"mutability":"mutable","name":"i","nameLocation":"9238:1:17","nodeType":"VariableDeclaration","scope":5222,"src":"9230:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5203,"name":"uint256","nodeType":"ElementaryTypeName","src":"9230:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5206,"initialValue":{"hexValue":"30","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9242:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9230:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9261:3:17","subExpression":{"id":5210,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"9261:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5212,"nodeType":"ExpressionStatement","src":"9261:3:17"},"nodeType":"ForStatement","src":"9225:106:17"},{"expression":{"id":5223,"name":"finalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5196,"src":"9356:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5112,"id":5224,"nodeType":"Return","src":"9349:16:17"}]}},{"body":{"id":5302,"nodeType":"Block","src":"9437:660:17","statements":[{"condition":{"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9460:11:17","subExpression":{"baseExpression":{"id":5237,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"9461:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5239,"indexExpression":{"id":5238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"9469:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9461:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5301,"nodeType":"IfStatement","src":"9456:626:17","trueBody":{"id":5300,"nodeType":"Block","src":"9473:609:17","statements":[{"assignments":[5243],"declarations":[{"constant":false,"id":5243,"mutability":"mutable","name":"pool","nameLocation":"9510:4:17","nodeType":"VariableDeclaration","scope":5300,"src":"9496:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5242,"nodeType":"UserDefinedTypeName","pathNode":{"id":5241,"name":"IBaluniV1Pool","nameLocations":["9496:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"9496:13:17"},"referencedDeclaration":6168,"src":"9496:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5249,"initialValue":{"arguments":[{"baseExpression":{"id":5245,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"9531:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5247,"indexExpression":{"id":5246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"9540:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9531:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5244,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"9517:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9517:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"9496:47:17"},{"assignments":[5254],"declarations":[{"constant":false,"id":5254,"mutability":"mutable","name":"poolTokens","nameLocation":"9583:10:17","nodeType":"VariableDeclaration","scope":5300,"src":"9566:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5252,"name":"address","nodeType":"ElementaryTypeName","src":"9566:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5253,"nodeType":"ArrayTypeName","src":"9566:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5258,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5255,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"9596:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9601:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"9596:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9596:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9566:46:17"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5260,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"9682:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5261,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"9694:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5259,"name":"_containsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5355,"src":"9667:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (address[] memory,address) pure returns (bool)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9667:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":5264,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5243,"src":"9735:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},{"id":5265,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"9741:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5266,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5107,"src":"9755:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5263,"name":"_hasSufficientLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"9711:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IBaluniV1Pool_$6168_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IBaluniV1Pool,address,uint256) view returns (bool)"}},"id":5267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9711:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9667:95:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"IfStatement","src":"9637:426:17","trueBody":{"id":5298,"nodeType":"Block","src":"9786:277:17","statements":[{"assignments":[5270],"declarations":[{"constant":false,"id":5270,"mutability":"mutable","name":"nextToken","nameLocation":"9821:9:17","nodeType":"VariableDeclaration","scope":5298,"src":"9813:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5269,"name":"address","nodeType":"ElementaryTypeName","src":"9813:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5275,"initialValue":{"arguments":[{"id":5272,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5254,"src":"9854:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5273,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5183,"src":"9866:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5271,"name":"_getOtherTokenInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5456,"src":"9833:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_address_$","typeString":"function (address[] memory,address) pure returns (address)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9813:66:17"},{"expression":{"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5276,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5131,"src":"9906:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5279,"indexExpression":{"id":5278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9911:12:17","subExpression":{"id":5277,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"9911:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9906:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5280,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5117,"src":"9927:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5282,"indexExpression":{"id":5281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"9936:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9927:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9906:32:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5284,"nodeType":"ExpressionStatement","src":"9906:32:17"},{"expression":{"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5285,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5157,"src":"9965:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5288,"indexExpression":{"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9971:11:17","subExpression":{"id":5286,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"9971:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9965:18:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5289,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5270,"src":"9986:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9965:30:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5291,"nodeType":"ExpressionStatement","src":"9965:30:17"},{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5292,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"10022:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":5294,"indexExpression":{"id":5293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"10030:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10022:10:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10035:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10022:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5297,"nodeType":"ExpressionStatement","src":"10022:17:17"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5231,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"9417:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5232,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"9421:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9417:13:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5303,"initializationExpression":{"assignments":[5228],"declarations":[{"constant":false,"id":5228,"mutability":"mutable","name":"i","nameLocation":"9410:1:17","nodeType":"VariableDeclaration","scope":5303,"src":"9402:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"9402:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5230,"initialValue":{"hexValue":"30","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9414:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9402:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9432:3:17","subExpression":{"id":5234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"9432:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5236,"nodeType":"ExpressionStatement","src":"9432:3:17"},"nodeType":"ForStatement","src":"9397:700:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5179,"name":"queueHead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"9010:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5180,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"9022:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9010:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5305,"nodeType":"WhileStatement","src":"9003:1105:17"},{"assignments":[5310],"declarations":[{"constant":false,"id":5310,"mutability":"mutable","name":"addr","nameLocation":"10137:4:17","nodeType":"VariableDeclaration","scope":5319,"src":"10120:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5308,"name":"address","nodeType":"ElementaryTypeName","src":"10120:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5309,"nodeType":"ArrayTypeName","src":"10120:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5316,"initialValue":{"arguments":[{"hexValue":"30","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10158:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10144:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5311,"name":"address","nodeType":"ElementaryTypeName","src":"10148:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5312,"nodeType":"ArrayTypeName","src":"10148:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10120:40:17"},{"expression":{"id":5317,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"10178:4:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5112,"id":5318,"nodeType":"Return","src":"10171:11:17"}]},"id":5320,"implemented":true,"kind":"function","modifiers":[],"name":"_findOptimalRoute","nameLocation":"8416:17:17","nodeType":"FunctionDefinition","parameters":{"id":5108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5103,"mutability":"mutable","name":"fromToken","nameLocation":"8452:9:17","nodeType":"VariableDeclaration","scope":5320,"src":"8444:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5102,"name":"address","nodeType":"ElementaryTypeName","src":"8444:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5105,"mutability":"mutable","name":"toToken","nameLocation":"8480:7:17","nodeType":"VariableDeclaration","scope":5320,"src":"8472:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5104,"name":"address","nodeType":"ElementaryTypeName","src":"8472:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5107,"mutability":"mutable","name":"amount","nameLocation":"8506:6:17","nodeType":"VariableDeclaration","scope":5320,"src":"8498:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5106,"name":"uint256","nodeType":"ElementaryTypeName","src":"8498:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8433:86:17"},"returnParameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5320,"src":"8543:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5109,"name":"address","nodeType":"ElementaryTypeName","src":"8543:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5110,"nodeType":"ArrayTypeName","src":"8543:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8542:18:17"},"scope":5897,"src":"8407:1783:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5354,"nodeType":"Block","src":"10291:181:17","statements":[{"body":{"id":5350,"nodeType":"Block","src":"10346:96:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5341,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"10365:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5343,"indexExpression":{"id":5342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"10372:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10365:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5344,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5325,"src":"10378:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10365:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5349,"nodeType":"IfStatement","src":"10361:70:17","trueBody":{"id":5348,"nodeType":"Block","src":"10385:46:17","statements":[{"expression":{"hexValue":"74727565","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10411:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5329,"id":5347,"nodeType":"Return","src":"10404:11:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5334,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"10322:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5335,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5323,"src":"10326:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10333:6:17","memberName":"length","nodeType":"MemberAccess","src":"10326:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10322:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5351,"initializationExpression":{"assignments":[5331],"declarations":[{"constant":false,"id":5331,"mutability":"mutable","name":"i","nameLocation":"10315:1:17","nodeType":"VariableDeclaration","scope":5351,"src":"10307:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5330,"name":"uint256","nodeType":"ElementaryTypeName","src":"10307:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5333,"initialValue":{"hexValue":"30","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10307:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10341:3:17","subExpression":{"id":5338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5331,"src":"10341:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5340,"nodeType":"ExpressionStatement","src":"10341:3:17"},"nodeType":"ForStatement","src":"10302:140:17"},{"expression":{"hexValue":"66616c7365","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10459:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5329,"id":5353,"nodeType":"Return","src":"10452:12:17"}]},"id":5355,"implemented":true,"kind":"function","modifiers":[],"name":"_containsToken","nameLocation":"10207:14:17","nodeType":"FunctionDefinition","parameters":{"id":5326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"tokens","nameLocation":"10239:6:17","nodeType":"VariableDeclaration","scope":5355,"src":"10222:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5321,"name":"address","nodeType":"ElementaryTypeName","src":"10222:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5322,"nodeType":"ArrayTypeName","src":"10222:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5325,"mutability":"mutable","name":"token","nameLocation":"10255:5:17","nodeType":"VariableDeclaration","scope":5355,"src":"10247:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5324,"name":"address","nodeType":"ElementaryTypeName","src":"10247:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10221:40:17"},"returnParameters":{"id":5329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5355,"src":"10285:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5327,"name":"bool","nodeType":"ElementaryTypeName","src":"10285:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10284:6:17"},"scope":5897,"src":"10198:274:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5416,"nodeType":"Block","src":"10593:316:17","statements":[{"assignments":[5371],"declarations":[{"constant":false,"id":5371,"mutability":"mutable","name":"reserves","nameLocation":"10621:8:17","nodeType":"VariableDeclaration","scope":5416,"src":"10604:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5369,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5370,"nodeType":"ArrayTypeName","src":"10604:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5378,"initialValue":{"arguments":[{"arguments":[{"id":5375,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"10652:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}],"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5373,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:17","typeDescriptions":{}}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5372,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"10632:11:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view returns (uint256[] memory)"}},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10632:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10604:54:17"},{"assignments":[5383],"declarations":[{"constant":false,"id":5383,"mutability":"mutable","name":"assets","nameLocation":"10686:6:17","nodeType":"VariableDeclaration","scope":5416,"src":"10669:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5381,"name":"address","nodeType":"ElementaryTypeName","src":"10669:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5382,"nodeType":"ArrayTypeName","src":"10669:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5387,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5384,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5358,"src":"10695:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10700:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"10695:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10695:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10669:42:17"},{"body":{"id":5412,"nodeType":"Block","src":"10766:113:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5399,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"10785:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5401,"indexExpression":{"id":5400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"10792:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10785:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5402,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"10798:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10785:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5411,"nodeType":"IfStatement","src":"10781:87:17","trueBody":{"id":5410,"nodeType":"Block","src":"10805:63:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5404,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5371,"src":"10831:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5406,"indexExpression":{"id":5405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"10840:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10831:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5407,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"10846:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10831:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5366,"id":5409,"nodeType":"Return","src":"10824:28:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"10742:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5393,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"10746:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10753:6:17","memberName":"length","nodeType":"MemberAccess","src":"10746:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10742:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5413,"initializationExpression":{"assignments":[5389],"declarations":[{"constant":false,"id":5389,"mutability":"mutable","name":"i","nameLocation":"10735:1:17","nodeType":"VariableDeclaration","scope":5413,"src":"10727:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"10727:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5391,"initialValue":{"hexValue":"30","id":5390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10739:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10727:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10761:3:17","subExpression":{"id":5396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"10761:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5398,"nodeType":"ExpressionStatement","src":"10761:3:17"},"nodeType":"ForStatement","src":"10722:157:17"},{"expression":{"hexValue":"66616c7365","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10896:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5366,"id":5415,"nodeType":"Return","src":"10889:12:17"}]},"id":5417,"implemented":true,"kind":"function","modifiers":[],"name":"_hasSufficientLiquidity","nameLocation":"10489:23:17","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5358,"mutability":"mutable","name":"pool","nameLocation":"10527:4:17","nodeType":"VariableDeclaration","scope":5417,"src":"10513:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5357,"nodeType":"UserDefinedTypeName","pathNode":{"id":5356,"name":"IBaluniV1Pool","nameLocations":["10513:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"10513:13:17"},"referencedDeclaration":6168,"src":"10513:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"},{"constant":false,"id":5360,"mutability":"mutable","name":"token","nameLocation":"10541:5:17","nodeType":"VariableDeclaration","scope":5417,"src":"10533:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5359,"name":"address","nodeType":"ElementaryTypeName","src":"10533:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5362,"mutability":"mutable","name":"amount","nameLocation":"10556:6:17","nodeType":"VariableDeclaration","scope":5417,"src":"10548:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5361,"name":"uint256","nodeType":"ElementaryTypeName","src":"10548:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10512:51:17"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5417,"src":"10587:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5364,"name":"bool","nodeType":"ElementaryTypeName","src":"10587:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10586:6:17"},"scope":5897,"src":"10480:429:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5455,"nodeType":"Block","src":"11019:207:17","statements":[{"body":{"id":5449,"nodeType":"Block","src":"11074:101:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5438,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"11093:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5440,"indexExpression":{"id":5439,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"11100:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11093:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5441,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"11106:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11093:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5448,"nodeType":"IfStatement","src":"11089:75:17","trueBody":{"id":5447,"nodeType":"Block","src":"11113:51:17","statements":[{"expression":{"baseExpression":{"id":5443,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"11139:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5445,"indexExpression":{"id":5444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"11146:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11139:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":5426,"id":5446,"nodeType":"Return","src":"11132:16:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"11050:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5432,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"11054:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11061:6:17","memberName":"length","nodeType":"MemberAccess","src":"11054:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11050:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5450,"initializationExpression":{"assignments":[5428],"declarations":[{"constant":false,"id":5428,"mutability":"mutable","name":"i","nameLocation":"11043:1:17","nodeType":"VariableDeclaration","scope":5450,"src":"11035:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5427,"name":"uint256","nodeType":"ElementaryTypeName","src":"11035:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5430,"initialValue":{"hexValue":"30","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11047:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11035:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11069:3:17","subExpression":{"id":5435,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"11069:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5437,"nodeType":"ExpressionStatement","src":"11069:3:17"},"nodeType":"ForStatement","src":"11030:145:17"},{"expression":{"arguments":[{"hexValue":"546f6b656e206e6f7420666f756e6420696e20706f6f6c","id":5452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11192:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e31199ef32a16af0ba9ac84d3033592bb18162b307e1b8bb697aa8f6e1f80823","typeString":"literal_string \"Token not found in pool\""},"value":"Token not found in pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e31199ef32a16af0ba9ac84d3033592bb18162b307e1b8bb697aa8f6e1f80823","typeString":"literal_string \"Token not found in pool\""}],"id":5451,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11185:6:17","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11185:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5454,"nodeType":"ExpressionStatement","src":"11185:33:17"}]},"id":5456,"implemented":true,"kind":"function","modifiers":[],"name":"_getOtherTokenInPool","nameLocation":"10926:20:17","nodeType":"FunctionDefinition","parameters":{"id":5423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"tokens","nameLocation":"10964:6:17","nodeType":"VariableDeclaration","scope":5456,"src":"10947:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5418,"name":"address","nodeType":"ElementaryTypeName","src":"10947:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5419,"nodeType":"ArrayTypeName","src":"10947:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":5422,"mutability":"mutable","name":"token","nameLocation":"10980:5:17","nodeType":"VariableDeclaration","scope":5456,"src":"10972:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5421,"name":"address","nodeType":"ElementaryTypeName","src":"10972:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10946:40:17"},"returnParameters":{"id":5426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5456,"src":"11010:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5424,"name":"address","nodeType":"ElementaryTypeName","src":"11010:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11009:9:17"},"scope":5897,"src":"10917:309:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5536,"nodeType":"Block","src":"11476:444:17","statements":[{"assignments":[5469],"declarations":[{"constant":false,"id":5469,"mutability":"mutable","name":"pool","nameLocation":"11501:4:17","nodeType":"VariableDeclaration","scope":5536,"src":"11487:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5468,"nodeType":"UserDefinedTypeName","pathNode":{"id":5467,"name":"IBaluniV1Pool","nameLocations":["11487:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"11487:13:17"},"referencedDeclaration":6168,"src":"11487:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5473,"initialValue":{"arguments":[{"id":5471,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"11522:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5470,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"11508:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11508:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"11487:47:17"},{"assignments":[5478],"declarations":[{"constant":false,"id":5478,"mutability":"mutable","name":"assets","nameLocation":"11562:6:17","nodeType":"VariableDeclaration","scope":5536,"src":"11545:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5476,"name":"address","nodeType":"ElementaryTypeName","src":"11545:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5477,"nodeType":"ArrayTypeName","src":"11545:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5482,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5479,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"11571:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11576:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"11571:14:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11571:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11545:42:17"},{"body":{"id":5527,"nodeType":"Block","src":"11644:228:17","statements":[{"assignments":[5495],"declarations":[{"constant":false,"id":5495,"mutability":"mutable","name":"asset","nameLocation":"11667:5:17","nodeType":"VariableDeclaration","scope":5527,"src":"11659:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5494,"name":"address","nodeType":"ElementaryTypeName","src":"11659:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5499,"initialValue":{"baseExpression":{"id":5496,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"11675:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5498,"indexExpression":{"id":5497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"11682:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11675:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11659:25:17"},{"assignments":[5501],"declarations":[{"constant":false,"id":5501,"mutability":"mutable","name":"amount","nameLocation":"11707:6:17","nodeType":"VariableDeclaration","scope":5527,"src":"11699:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"11699:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5505,"initialValue":{"baseExpression":{"id":5502,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"11716:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":5504,"indexExpression":{"id":5503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"11724:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11716:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11699:27:17"},{"expression":{"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5506,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"11741:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5509,"indexExpression":{"id":5507,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"11755:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11741:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5510,"indexExpression":{"id":5508,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"11768:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11741:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5511,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"11778:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11741:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5513,"nodeType":"ExpressionStatement","src":"11741:43:17"},{"expression":{"arguments":[{"expression":{"id":5518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11826:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11830:6:17","memberName":"sender","nodeType":"MemberAccess","src":"11826:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5522,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11846:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":5521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11838:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5520,"name":"address","nodeType":"ElementaryTypeName","src":"11838:7:17","typeDescriptions":{}}},"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11838:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5524,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"11853:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5515,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"11806:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5514,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"11799:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11813:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"11799:26:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11799:61:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5526,"nodeType":"ExpressionStatement","src":"11799:61:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5487,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"11620:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5488,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5478,"src":"11624:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11631:6:17","memberName":"length","nodeType":"MemberAccess","src":"11624:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11620:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5528,"initializationExpression":{"assignments":[5484],"declarations":[{"constant":false,"id":5484,"mutability":"mutable","name":"i","nameLocation":"11613:1:17","nodeType":"VariableDeclaration","scope":5528,"src":"11605:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5483,"name":"uint256","nodeType":"ElementaryTypeName","src":"11605:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5486,"initialValue":{"hexValue":"30","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11617:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11605:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11639:3:17","subExpression":{"id":5491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5484,"src":"11639:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5493,"nodeType":"ExpressionStatement","src":"11639:3:17"},"nodeType":"ForStatement","src":"11600:272:17"},{"expression":{"arguments":[{"id":5532,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"11894:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5533,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"11904:7:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"expression":{"id":5529,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5469,"src":"11884:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11889:4:17","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":6074,"src":"11884:9:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256[] memory) external returns (uint256)"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11884:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5535,"nodeType":"ExpressionStatement","src":"11884:28:17"}]},"documentation":{"id":5457,"nodeType":"StructuredDocumentation","src":"11234:138:17","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity."},"functionSelector":"ec0cd2eb","id":5537,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"11387:12:17","nodeType":"FunctionDefinition","parameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"amounts","nameLocation":"11419:7:17","nodeType":"VariableDeclaration","scope":5537,"src":"11400:26:17","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5458,"name":"uint256","nodeType":"ElementaryTypeName","src":"11400:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5459,"nodeType":"ArrayTypeName","src":"11400:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":5462,"mutability":"mutable","name":"poolAddress","nameLocation":"11436:11:17","nodeType":"VariableDeclaration","scope":5537,"src":"11428:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5461,"name":"address","nodeType":"ElementaryTypeName","src":"11428:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5464,"mutability":"mutable","name":"receiver","nameLocation":"11457:8:17","nodeType":"VariableDeclaration","scope":5537,"src":"11449:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5463,"name":"address","nodeType":"ElementaryTypeName","src":"11449:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11399:67:17"},"returnParameters":{"id":5466,"nodeType":"ParameterList","parameters":[],"src":"11476:0:17"},"scope":5897,"src":"11378:542:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5696,"nodeType":"Block","src":"12209:1136:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"12228:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12236:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12228:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e207a65726f","id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12239:33:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""},"value":"Share must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""}],"id":5547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12220:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12220:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5553,"nodeType":"ExpressionStatement","src":"12220:53:17"},{"assignments":[5556],"declarations":[{"constant":false,"id":5556,"mutability":"mutable","name":"poolToken","nameLocation":"12291:9:17","nodeType":"VariableDeclaration","scope":5696,"src":"12284:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5555,"nodeType":"UserDefinedTypeName","pathNode":{"id":5554,"name":"IERC20","nameLocations":["12284:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"12284:6:17"},"referencedDeclaration":1729,"src":"12284:6:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":5560,"initialValue":{"arguments":[{"id":5558,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"12310:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5557,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12303:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12303:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"12284:38:17"},{"assignments":[5562],"declarations":[{"constant":false,"id":5562,"mutability":"mutable","name":"allowance","nameLocation":"12371:9:17","nodeType":"VariableDeclaration","scope":5696,"src":"12363:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5572,"initialValue":{"arguments":[{"expression":{"id":5565,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12403:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12407:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12403:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":5569,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12423:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":5568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12415:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5567,"name":"address","nodeType":"ElementaryTypeName","src":"12415:7:17","typeDescriptions":{}}},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12415:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5563,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"12383:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12393:9:17","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"12383:19:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12383:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:66:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5574,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"12448:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5575,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"12461:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12448:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","id":5577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12468:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""},"value":"Insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""}],"id":5573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12440:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12440:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5579,"nodeType":"ExpressionStatement","src":"12440:53:17"},{"assignments":[5581],"declarations":[{"constant":false,"id":5581,"mutability":"mutable","name":"balance","nameLocation":"12540:7:17","nodeType":"VariableDeclaration","scope":5696,"src":"12532:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5580,"name":"uint256","nodeType":"ElementaryTypeName","src":"12532:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5587,"initialValue":{"arguments":[{"expression":{"id":5584,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12570:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12574:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12570:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5582,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"12550:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12560:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"12550:19:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12550:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12532:49:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5581,"src":"12600:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5590,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"12611:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12600:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12618:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":5588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12592:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12592:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5594,"nodeType":"ExpressionStatement","src":"12592:49:17"},{"assignments":[5596],"declarations":[{"constant":false,"id":5596,"mutability":"mutable","name":"success","nameLocation":"12659:7:17","nodeType":"VariableDeclaration","scope":5696,"src":"12654:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5595,"name":"bool","nodeType":"ElementaryTypeName","src":"12654:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5604,"initialValue":{"arguments":[{"expression":{"id":5599,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12692:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12696:6:17","memberName":"sender","nodeType":"MemberAccess","src":"12692:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5601,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"12704:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5602,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"12717:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5597,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"12669:9:17","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12679:12:17","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"12669:22:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":5603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12669:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12654:69:17"},{"expression":{"arguments":[{"id":5606,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"12742:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12751:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":5605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12734:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12734:35:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5609,"nodeType":"ExpressionStatement","src":"12734:35:17"},{"assignments":[5614],"declarations":[{"constant":false,"id":5614,"mutability":"mutable","name":"amountsOut","nameLocation":"12799:10:17","nodeType":"VariableDeclaration","scope":5696,"src":"12782:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5612,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5613,"nodeType":"ArrayTypeName","src":"12782:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5621,"initialValue":{"arguments":[{"id":5619,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"12844:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5616,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"12826:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5615,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"12812:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12812:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12839:4:17","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":6082,"src":"12812:31:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) external returns (uint256[] memory)"}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12812:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12782:71:17"},{"assignments":[5626],"declarations":[{"constant":false,"id":5626,"mutability":"mutable","name":"assets","nameLocation":"12881:6:17","nodeType":"VariableDeclaration","scope":5696,"src":"12864:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5624,"name":"address","nodeType":"ElementaryTypeName","src":"12864:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5625,"nodeType":"ArrayTypeName","src":"12864:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5632,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5628,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"12904:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5627,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"12890:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12917:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"12890:36:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12864:64:17"},{"body":{"id":5694,"nodeType":"Block","src":"12985:353:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5653,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13044:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$5897","typeString":"contract BaluniV1PoolPeriphery"}],"id":5652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13036:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5651,"name":"address","nodeType":"ElementaryTypeName","src":"13036:7:17","typeDescriptions":{}}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13036:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":5646,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"13015:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5648,"indexExpression":{"id":5647,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13022:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13015:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5645,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"13008:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13008:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13026:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"13008:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13008:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":5656,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"13054:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5658,"indexExpression":{"id":5657,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13065:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13054:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13008:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":5660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13069:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":5644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13000:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13000:94:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5662,"nodeType":"ExpressionStatement","src":"13000:94:17"},{"expression":{"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5663,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"13109:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5668,"indexExpression":{"id":5664,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"13123:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13109:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5669,"indexExpression":{"baseExpression":{"id":5665,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"13136:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5667,"indexExpression":{"id":5666,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13143:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13136:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13109:37:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":5670,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"13150:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5672,"indexExpression":{"id":5671,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13161:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13150:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13109:54:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5674,"nodeType":"ExpressionStatement","src":"13109:54:17"},{"assignments":[5676],"declarations":[{"constant":false,"id":5676,"mutability":"mutable","name":"assetTransferSuccess","nameLocation":"13183:20:17","nodeType":"VariableDeclaration","scope":5694,"src":"13178:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5675,"name":"bool","nodeType":"ElementaryTypeName","src":"13178:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5688,"initialValue":{"arguments":[{"id":5683,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"13233:8:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":5684,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"13243:10:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5686,"indexExpression":{"id":5685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13254:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13243:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":5678,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"13213:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5680,"indexExpression":{"id":5679,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"13220:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13213:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5677,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"13206:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13206:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13224:8:17","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"13206:26:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13206:51:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13178:79:17"},{"expression":{"arguments":[{"id":5690,"name":"assetTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5676,"src":"13280:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4173736574207472616e73666572206661696c6564","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13302:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""},"value":"Asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""}],"id":5689,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13272:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13272:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5693,"nodeType":"ExpressionStatement","src":"13272:54:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5637,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"12961:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5638,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"12965:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12972:6:17","memberName":"length","nodeType":"MemberAccess","src":"12965:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5695,"initializationExpression":{"assignments":[5634],"declarations":[{"constant":false,"id":5634,"mutability":"mutable","name":"i","nameLocation":"12954:1:17","nodeType":"VariableDeclaration","scope":5695,"src":"12946:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5633,"name":"uint256","nodeType":"ElementaryTypeName","src":"12946:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5636,"initialValue":{"hexValue":"30","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12958:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12946:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12980:3:17","subExpression":{"id":5641,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"12980:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5643,"nodeType":"ExpressionStatement","src":"12980:3:17"},"nodeType":"ForStatement","src":"12941:397:17"}]},"documentation":{"id":5538,"nodeType":"StructuredDocumentation","src":"11928:187:17","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the BaluniV1Pool."},"functionSelector":"f31abcc4","id":5697,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"12130:15:17","nodeType":"FunctionDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5540,"mutability":"mutable","name":"share","nameLocation":"12154:5:17","nodeType":"VariableDeclaration","scope":5697,"src":"12146:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5542,"mutability":"mutable","name":"poolAddress","nameLocation":"12169:11:17","nodeType":"VariableDeclaration","scope":5697,"src":"12161:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5541,"name":"address","nodeType":"ElementaryTypeName","src":"12161:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5544,"mutability":"mutable","name":"receiver","nameLocation":"12190:8:17","nodeType":"VariableDeclaration","scope":5697,"src":"12182:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5543,"name":"address","nodeType":"ElementaryTypeName","src":"12182:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12145:54:17"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[],"src":"12209:0:17"},"scope":5897,"src":"12121:1224:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5731,"nodeType":"Block","src":"13795:209:17","statements":[{"assignments":[5710],"declarations":[{"constant":false,"id":5710,"mutability":"mutable","name":"poolAddress","nameLocation":"13814:11:17","nodeType":"VariableDeclaration","scope":5731,"src":"13806:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5709,"name":"address","nodeType":"ElementaryTypeName","src":"13806:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5716,"initialValue":{"arguments":[{"id":5713,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"13856:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5714,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"13867:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5711,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"13828:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13840:15:17","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":6179,"src":"13828:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13828:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13806:69:17"},{"assignments":[5719],"declarations":[{"constant":false,"id":5719,"mutability":"mutable","name":"pool","nameLocation":"13900:4:17","nodeType":"VariableDeclaration","scope":5731,"src":"13886:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5718,"nodeType":"UserDefinedTypeName","pathNode":{"id":5717,"name":"IBaluniV1Pool","nameLocations":["13886:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"13886:13:17"},"referencedDeclaration":6168,"src":"13886:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5723,"initialValue":{"arguments":[{"id":5721,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"13921:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5720,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"13907:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13907:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"13886:47:17"},{"expression":{"arguments":[{"id":5726,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"13969:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5727,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"13980:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5728,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"13989:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5724,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5719,"src":"13951:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13956:12:17","memberName":"getAmountOut","nodeType":"MemberAccess","referencedDeclaration":6022,"src":"13951:17:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13951:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5708,"id":5730,"nodeType":"Return","src":"13944:52:17"}]},"documentation":{"id":5698,"nodeType":"StructuredDocumentation","src":"13353:330:17","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":5732,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"13698:12:17","nodeType":"FunctionDefinition","parameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"fromToken","nameLocation":"13719:9:17","nodeType":"VariableDeclaration","scope":5732,"src":"13711:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5699,"name":"address","nodeType":"ElementaryTypeName","src":"13711:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"toToken","nameLocation":"13738:7:17","nodeType":"VariableDeclaration","scope":5732,"src":"13730:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5701,"name":"address","nodeType":"ElementaryTypeName","src":"13730:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5704,"mutability":"mutable","name":"amount","nameLocation":"13755:6:17","nodeType":"VariableDeclaration","scope":5732,"src":"13747:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5703,"name":"uint256","nodeType":"ElementaryTypeName","src":"13747:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13710:52:17"},"returnParameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5732,"src":"13786:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5706,"name":"uint256","nodeType":"ElementaryTypeName","src":"13786:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13785:9:17"},"scope":5897,"src":"13689:315:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5780,"nodeType":"Block","src":"14229:326:17","statements":[{"assignments":[5740],"declarations":[{"constant":false,"id":5740,"mutability":"mutable","name":"pool","nameLocation":"14254:4:17","nodeType":"VariableDeclaration","scope":5780,"src":"14240:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"},"typeName":{"id":5739,"nodeType":"UserDefinedTypeName","pathNode":{"id":5738,"name":"IBaluniV1Pool","nameLocations":["14240:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":6168,"src":"14240:13:17"},"referencedDeclaration":6168,"src":"14240:13:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":5744,"initialValue":{"arguments":[{"id":5742,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"14275:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5741,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"14261:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14261:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"14240:47:17"},{"assignments":[5746],"declarations":[{"constant":false,"id":5746,"mutability":"mutable","name":"balance","nameLocation":"14306:7:17","nodeType":"VariableDeclaration","scope":5780,"src":"14298:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5745,"name":"uint256","nodeType":"ElementaryTypeName","src":"14298:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5754,"initialValue":{"arguments":[{"expression":{"id":5751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14346:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14350:6:17","memberName":"sender","nodeType":"MemberAccess","src":"14346:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":5748,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"14323:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5747,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"14316:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14316:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14336:9:17","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"14316:29:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":5753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14316:41:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14298:59:17"},{"assignments":[5756],"declarations":[{"constant":false,"id":5756,"mutability":"mutable","name":"totalSupply","nameLocation":"14376:11:17","nodeType":"VariableDeclaration","scope":5780,"src":"14368:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5755,"name":"uint256","nodeType":"ElementaryTypeName","src":"14368:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5762,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5758,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5735,"src":"14397:11:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5757,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"14390:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14390:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14410:11:17","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1678,"src":"14390:31:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14390:33:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14368:55:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5764,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5746,"src":"14443:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":5765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14453:5:17","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14443:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14442:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5768,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"14462:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14442:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14477:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"14442:38:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":5772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14482:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":5763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14434:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14434:71:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5774,"nodeType":"ExpressionStatement","src":"14434:71:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5775,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5740,"src":"14516:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14521:24:17","memberName":"performRebalanceIfNeeded","nodeType":"MemberAccess","referencedDeclaration":6025,"src":"14516:29:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14516:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5779,"nodeType":"ExpressionStatement","src":"14516:31:17"}]},"documentation":{"id":5733,"nodeType":"StructuredDocumentation","src":"14012:147:17","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":5781,"implemented":true,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"14174:24:17","nodeType":"FunctionDefinition","parameters":{"id":5736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5735,"mutability":"mutable","name":"poolAddress","nameLocation":"14207:11:17","nodeType":"VariableDeclaration","scope":5781,"src":"14199:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5734,"name":"address","nodeType":"ElementaryTypeName","src":"14199:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14198:21:17"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[],"src":"14229:0:17"},"scope":5897,"src":"14165:390:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5795,"nodeType":"Block","src":"14853:60:17","statements":[{"expression":{"arguments":[{"id":5792,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5784,"src":"14899:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5790,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"14871:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14883:15:17","memberName":"getPoolsByAsset","nodeType":"MemberAccess","referencedDeclaration":6187,"src":"14871:27:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view external returns (address[] memory)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14871:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5789,"id":5794,"nodeType":"Return","src":"14864:41:17"}]},"documentation":{"id":5782,"nodeType":"StructuredDocumentation","src":"14563:195:17","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":5796,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"14773:23:17","nodeType":"FunctionDefinition","parameters":{"id":5785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5784,"mutability":"mutable","name":"token","nameLocation":"14805:5:17","nodeType":"VariableDeclaration","scope":5796,"src":"14797:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5783,"name":"address","nodeType":"ElementaryTypeName","src":"14797:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14796:15:17"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5796,"src":"14835:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5786,"name":"address","nodeType":"ElementaryTypeName","src":"14835:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5787,"nodeType":"ArrayTypeName","src":"14835:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"14834:18:17"},"scope":5897,"src":"14764:149:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5805,"nodeType":"Block","src":"15078:50:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":5802,"name":"_getInitializedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"15096:22:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15096:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5801,"id":5804,"nodeType":"Return","src":"15089:31:17"}]},"documentation":{"id":5797,"nodeType":"StructuredDocumentation","src":"14921:98:17","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":5806,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"15034:10:17","nodeType":"FunctionDefinition","parameters":{"id":5798,"nodeType":"ParameterList","parameters":[],"src":"15044:2:17"},"returnParameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5806,"src":"15070:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5799,"name":"uint64","nodeType":"ElementaryTypeName","src":"15070:6:17","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15069:8:17"},"scope":5897,"src":"15025:103:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5820,"nodeType":"Block","src":"15409:67:17","statements":[{"expression":{"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5814,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"15420:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5816,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"15455:12:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5815,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"15434:20:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$6201_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15434:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"src":"15420:48:17","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$6201","typeString":"contract IBaluniV1PoolFactory"}},"id":5819,"nodeType":"ExpressionStatement","src":"15420:48:17"}]},"documentation":{"id":5807,"nodeType":"StructuredDocumentation","src":"15136:199:17","text":" @dev Changes the address of the pool factory contract.\n Can only be called by the contract owner.\n @param _poolFactory The new address of the pool factory contract."},"functionSelector":"72591be5","id":5821,"implemented":true,"kind":"function","modifiers":[{"id":5812,"kind":"modifierInvocation","modifierName":{"id":5811,"name":"onlyOwner","nameLocations":["15399:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"15399:9:17"},"nodeType":"ModifierInvocation","src":"15399:9:17"}],"name":"changePoolFactory","nameLocation":"15350:17:17","nodeType":"FunctionDefinition","parameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"_poolFactory","nameLocation":"15376:12:17","nodeType":"VariableDeclaration","scope":5821,"src":"15368:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5808,"name":"address","nodeType":"ElementaryTypeName","src":"15368:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15367:22:17"},"returnParameters":{"id":5813,"nodeType":"ParameterList","parameters":[],"src":"15409:0:17"},"scope":5897,"src":"15341:135:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5879,"nodeType":"Block","src":"15558:294:17","statements":[{"assignments":[5833],"declarations":[{"constant":false,"id":5833,"mutability":"mutable","name":"assets","nameLocation":"15586:6:17","nodeType":"VariableDeclaration","scope":5879,"src":"15569:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5831,"name":"address","nodeType":"ElementaryTypeName","src":"15569:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5832,"nodeType":"ArrayTypeName","src":"15569:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5839,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":5835,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"15609:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5834,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"15595:13:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$6168_$","typeString":"type(contract IBaluniV1Pool)"}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15595:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$6168","typeString":"contract IBaluniV1Pool"}},"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15615:9:17","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":5998,"src":"15595:29:17","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15595:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15569:57:17"},{"assignments":[5844],"declarations":[{"constant":false,"id":5844,"mutability":"mutable","name":"reserves","nameLocation":"15654:8:17","nodeType":"VariableDeclaration","scope":5879,"src":"15637:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5842,"name":"uint256","nodeType":"ElementaryTypeName","src":"15637:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5843,"nodeType":"ArrayTypeName","src":"15637:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":5851,"initialValue":{"arguments":[{"expression":{"id":5848,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"15679:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15686:6:17","memberName":"length","nodeType":"MemberAccess","src":"15679:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"15665:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"15669:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5846,"nodeType":"ArrayTypeName","src":"15669:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15665:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15637:56:17"},{"body":{"id":5875,"nodeType":"Block","src":"15748:71:17","statements":[{"expression":{"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5863,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"15763:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5865,"indexExpression":{"id":5864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"15772:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15763:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5866,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"15777:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5868,"indexExpression":{"id":5867,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"15791:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15777:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5872,"indexExpression":{"baseExpression":{"id":5869,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"15797:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5871,"indexExpression":{"id":5870,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"15804:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15797:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15777:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15763:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5874,"nodeType":"ExpressionStatement","src":"15763:44:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"15724:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5857,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5833,"src":"15728:6:17","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15735:6:17","memberName":"length","nodeType":"MemberAccess","src":"15728:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15724:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5876,"initializationExpression":{"assignments":[5853],"declarations":[{"constant":false,"id":5853,"mutability":"mutable","name":"i","nameLocation":"15717:1:17","nodeType":"VariableDeclaration","scope":5876,"src":"15709:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5852,"name":"uint256","nodeType":"ElementaryTypeName","src":"15709:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5855,"initialValue":{"hexValue":"30","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15721:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15709:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15743:3:17","subExpression":{"id":5860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"15743:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5862,"nodeType":"ExpressionStatement","src":"15743:3:17"},"nodeType":"ForStatement","src":"15704:115:17"},{"expression":{"id":5877,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5844,"src":"15836:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":5828,"id":5878,"nodeType":"Return","src":"15829:15:17"}]},"functionSelector":"3e99c1e4","id":5880,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"15493:11:17","nodeType":"FunctionDefinition","parameters":{"id":5824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5823,"mutability":"mutable","name":"pool","nameLocation":"15513:4:17","nodeType":"VariableDeclaration","scope":5880,"src":"15505:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5822,"name":"address","nodeType":"ElementaryTypeName","src":"15505:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15504:14:17"},"returnParameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5880,"src":"15540:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5825,"name":"uint256","nodeType":"ElementaryTypeName","src":"15540:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5826,"nodeType":"ArrayTypeName","src":"15540:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15539:18:17"},"scope":5897,"src":"15484:368:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5895,"nodeType":"Block","src":"15947:52:17","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":5889,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"15965:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":5891,"indexExpression":{"id":5890,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"15979:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15965:19:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5893,"indexExpression":{"id":5892,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"15985:5:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15965:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5888,"id":5894,"nodeType":"Return","src":"15958:33:17"}]},"functionSelector":"8628991e","id":5896,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserves","nameLocation":"15869:16:17","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"pool","nameLocation":"15894:4:17","nodeType":"VariableDeclaration","scope":5896,"src":"15886:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5881,"name":"address","nodeType":"ElementaryTypeName","src":"15886:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5884,"mutability":"mutable","name":"asset","nameLocation":"15908:5:17","nodeType":"VariableDeclaration","scope":5896,"src":"15900:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5883,"name":"address","nodeType":"ElementaryTypeName","src":"15900:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15885:29:17"},"returnParameters":{"id":5888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5896,"src":"15938:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5886,"name":"uint256","nodeType":"ElementaryTypeName","src":"15938:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15937:9:17"},"scope":5897,"src":"15860:139:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5898,"src":"2066:13936:17","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837]}],"src":"40:15964:17"},"id":17},"contracts/interfaces/I1inchSpotAgg.sol":{"ast":{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","exportedSymbols":{"I1inchSpotAgg":[5924],"IERC20":[1729]},"id":5925,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5899,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":5900,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5925,"sourceUnit":1730,"src":"65:56:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"I1inchSpotAgg","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5924,"linearizedBaseContracts":[5924],"name":"I1inchSpotAgg","nameLocation":"135:13:18","nodeType":"ContractDefinition","nodes":[{"functionSelector":"802431fb","id":5913,"implemented":false,"kind":"function","modifiers":[],"name":"getRate","nameLocation":"163:7:18","nodeType":"FunctionDefinition","parameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5903,"mutability":"mutable","name":"srcToken","nameLocation":"178:8:18","nodeType":"VariableDeclaration","scope":5913,"src":"171:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5902,"nodeType":"UserDefinedTypeName","pathNode":{"id":5901,"name":"IERC20","nameLocations":["171:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"171:6:18"},"referencedDeclaration":1729,"src":"171:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5906,"mutability":"mutable","name":"dstToken","nameLocation":"195:8:18","nodeType":"VariableDeclaration","scope":5913,"src":"188:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5905,"nodeType":"UserDefinedTypeName","pathNode":{"id":5904,"name":"IERC20","nameLocations":["188:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"188:6:18"},"referencedDeclaration":1729,"src":"188:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5908,"mutability":"mutable","name":"useWrappers","nameLocation":"210:11:18","nodeType":"VariableDeclaration","scope":5913,"src":"205:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5907,"name":"bool","nodeType":"ElementaryTypeName","src":"205:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"170:52:18"},"returnParameters":{"id":5912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5911,"mutability":"mutable","name":"weightedRate","nameLocation":"254:12:18","nodeType":"VariableDeclaration","scope":5913,"src":"246:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5910,"name":"uint256","nodeType":"ElementaryTypeName","src":"246:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"245:22:18"},"scope":5924,"src":"154:114:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7de4fd10","id":5923,"implemented":false,"kind":"function","modifiers":[],"name":"getRateToEth","nameLocation":"283:12:18","nodeType":"FunctionDefinition","parameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5916,"mutability":"mutable","name":"srcToken","nameLocation":"303:8:18","nodeType":"VariableDeclaration","scope":5923,"src":"296:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":5915,"nodeType":"UserDefinedTypeName","pathNode":{"id":5914,"name":"IERC20","nameLocations":["296:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"296:6:18"},"referencedDeclaration":1729,"src":"296:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":5918,"mutability":"mutable","name":"useWrappers","nameLocation":"318:11:18","nodeType":"VariableDeclaration","scope":5923,"src":"313:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5917,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"295:35:18"},"returnParameters":{"id":5922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5921,"mutability":"mutable","name":"weightedRate","nameLocation":"362:12:18","nodeType":"VariableDeclaration","scope":5923,"src":"354:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5920,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"353:22:18"},"scope":5924,"src":"274:102:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5925,"src":"125:254:18","usedErrors":[],"usedEvents":[]}],"src":"40:341:18"},"id":18},"contracts/interfaces/IBaluniV1Agent.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","exportedSymbols":{"IBaluniV1Agent":[5944]},"id":5945,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5926,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:19"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Agent","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":5944,"linearizedBaseContracts":[5944],"name":"IBaluniV1Agent","nameLocation":"77:14:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Agent.Call","id":5933,"members":[{"constant":false,"id":5928,"mutability":"mutable","name":"to","nameLocation":"124:2:19","nodeType":"VariableDeclaration","scope":5933,"src":"116:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5927,"name":"address","nodeType":"ElementaryTypeName","src":"116:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5930,"mutability":"mutable","name":"value","nameLocation":"141:5:19","nodeType":"VariableDeclaration","scope":5933,"src":"133:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5929,"name":"uint256","nodeType":"ElementaryTypeName","src":"133:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5932,"mutability":"mutable","name":"data","nameLocation":"159:4:19","nodeType":"VariableDeclaration","scope":5933,"src":"153:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5931,"name":"bytes","nodeType":"ElementaryTypeName","src":"153:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"104:4:19","nodeType":"StructDefinition","scope":5944,"src":"97:72:19","visibility":"public"},{"functionSelector":"eedc3c50","id":5943,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"184:7:19","nodeType":"FunctionDefinition","parameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5937,"mutability":"mutable","name":"calls","nameLocation":"206:5:19","nodeType":"VariableDeclaration","scope":5943,"src":"192:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$5933_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":5935,"nodeType":"UserDefinedTypeName","pathNode":{"id":5934,"name":"Call","nameLocations":["192:4:19"],"nodeType":"IdentifierPath","referencedDeclaration":5933,"src":"192:4:19"},"referencedDeclaration":5933,"src":"192:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$5933_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":5936,"nodeType":"ArrayTypeName","src":"192:6:19","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$5933_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":5940,"mutability":"mutable","name":"tokensReturn","nameLocation":"230:12:19","nodeType":"VariableDeclaration","scope":5943,"src":"213:29:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5938,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5939,"nodeType":"ArrayTypeName","src":"213:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"191:52:19"},"returnParameters":{"id":5942,"nodeType":"ParameterList","parameters":[],"src":"252:0:19"},"scope":5944,"src":"175:78:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5945,"src":"67:189:19","usedErrors":[],"usedEvents":[]}],"src":"40:218:19"},"id":19},"contracts/interfaces/IBaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IBaluniV1Pool":[6168],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":6169,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":5946,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:20"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5947,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6169,"sourceUnit":1652,"src":"65:55:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Pool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6168,"linearizedBaseContracts":[6168],"name":"IBaluniV1Pool","nameLocation":"134:13:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"01d22ccd","id":5952,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"178:10:20","nodeType":"FunctionDefinition","parameters":{"id":5948,"nodeType":"ParameterList","parameters":[],"src":"188:2:20"},"returnParameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5952,"src":"214:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5949,"name":"address","nodeType":"ElementaryTypeName","src":"214:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"213:9:20"},"scope":6168,"src":"169:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf35bdd0","id":5959,"implemented":false,"kind":"function","modifiers":[],"name":"assets","nameLocation":"240:6:20","nodeType":"FunctionDefinition","parameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5954,"mutability":"mutable","name":"index","nameLocation":"255:5:20","nodeType":"VariableDeclaration","scope":5959,"src":"247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5953,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"246:15:20"},"returnParameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5959,"src":"285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5956,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"284:9:20"},"scope":6168,"src":"231:63:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5f163ff","id":5966,"implemented":false,"kind":"function","modifiers":[],"name":"weights","nameLocation":"311:7:20","nodeType":"FunctionDefinition","parameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"index","nameLocation":"327:5:20","nodeType":"VariableDeclaration","scope":5966,"src":"319:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5960,"name":"uint256","nodeType":"ElementaryTypeName","src":"319:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"318:15:20"},"returnParameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5966,"src":"357:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5963,"name":"uint256","nodeType":"ElementaryTypeName","src":"357:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"356:9:20"},"scope":6168,"src":"302:64:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7fec8d38","id":5971,"implemented":false,"kind":"function","modifiers":[],"name":"trigger","nameLocation":"383:7:20","nodeType":"FunctionDefinition","parameters":{"id":5967,"nodeType":"ParameterList","parameters":[],"src":"390:2:20"},"returnParameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5971,"src":"416:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5968,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:9:20"},"scope":6168,"src":"374:51:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c2ee3a08","id":5976,"implemented":false,"kind":"function","modifiers":[],"name":"ONE","nameLocation":"442:3:20","nodeType":"FunctionDefinition","parameters":{"id":5972,"nodeType":"ParameterList","parameters":[],"src":"445:2:20"},"returnParameters":{"id":5975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5974,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5976,"src":"471:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5973,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:20"},"scope":6168,"src":"433:47:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f887ea40","id":5981,"implemented":false,"kind":"function","modifiers":[],"name":"router","nameLocation":"497:6:20","nodeType":"FunctionDefinition","parameters":{"id":5977,"nodeType":"ParameterList","parameters":[],"src":"503:2:20"},"returnParameters":{"id":5980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5981,"src":"529:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5978,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"528:9:20"},"scope":6168,"src":"488:50:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67a6c440","id":5986,"implemented":false,"kind":"function","modifiers":[],"name":"SWAP_FEE_BPS","nameLocation":"555:12:20","nodeType":"FunctionDefinition","parameters":{"id":5982,"nodeType":"ParameterList","parameters":[],"src":"567:2:20"},"returnParameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5986,"src":"593:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5983,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"592:9:20"},"scope":6168,"src":"546:56:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":5992,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"619:11:20","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[],"src":"630:2:20"},"returnParameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5992,"src":"656:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5988,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5989,"nodeType":"ArrayTypeName","src":"656:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"655:18:20"},"scope":6168,"src":"610:64:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67e4ac2c","id":5998,"implemented":false,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"691:9:20","nodeType":"FunctionDefinition","parameters":{"id":5993,"nodeType":"ParameterList","parameters":[],"src":"700:2:20"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5998,"src":"726:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5994,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5995,"nodeType":"ArrayTypeName","src":"726:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"725:18:20"},"scope":6168,"src":"682:62:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b2b55d70","id":6005,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"761:15:20","nodeType":"FunctionDefinition","parameters":{"id":6001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6000,"mutability":"mutable","name":"asset","nameLocation":"785:5:20","nodeType":"VariableDeclaration","scope":6005,"src":"777:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5999,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:15:20"},"returnParameters":{"id":6004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6005,"src":"815:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6002,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"814:9:20"},"scope":6168,"src":"752:72:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"22acb867","id":6011,"implemented":false,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"841:10:20","nodeType":"FunctionDefinition","parameters":{"id":6006,"nodeType":"ParameterList","parameters":[],"src":"851:2:20"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6011,"src":"877:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6007,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6008,"nodeType":"ArrayTypeName","src":"877:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"876:18:20"},"scope":6168,"src":"832:63:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":6022,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"912:12:20","nodeType":"FunctionDefinition","parameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6013,"mutability":"mutable","name":"fromToken","nameLocation":"933:9:20","nodeType":"VariableDeclaration","scope":6022,"src":"925:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6012,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6015,"mutability":"mutable","name":"toToken","nameLocation":"952:7:20","nodeType":"VariableDeclaration","scope":6022,"src":"944:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6014,"name":"address","nodeType":"ElementaryTypeName","src":"944:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6017,"mutability":"mutable","name":"amount","nameLocation":"969:6:20","nodeType":"VariableDeclaration","scope":6022,"src":"961:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6016,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:52:20"},"returnParameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6022,"src":"1000:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6019,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:9:20"},"scope":6168,"src":"903:106:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f47b45e8","id":6025,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"1026:24:20","nodeType":"FunctionDefinition","parameters":{"id":6023,"nodeType":"ParameterList","parameters":[],"src":"1050:2:20"},"returnParameters":{"id":6024,"nodeType":"ParameterList","parameters":[],"src":"1061:0:20"},"scope":6168,"src":"1017:45:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89ab3532","id":6034,"implemented":false,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"1079:12:20","nodeType":"FunctionDefinition","parameters":{"id":6026,"nodeType":"ParameterList","parameters":[],"src":"1091:2:20"},"returnParameters":{"id":6033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6029,"mutability":"mutable","name":"directions","nameLocation":"1131:10:20","nodeType":"VariableDeclaration","scope":6034,"src":"1117:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":6027,"name":"bool","nodeType":"ElementaryTypeName","src":"1117:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6028,"nodeType":"ArrayTypeName","src":"1117:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":6032,"mutability":"mutable","name":"deviations","nameLocation":"1160:10:20","nodeType":"VariableDeclaration","scope":6034,"src":"1143:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6030,"name":"uint256","nodeType":"ElementaryTypeName","src":"1143:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6031,"nodeType":"ArrayTypeName","src":"1143:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1116:55:20"},"scope":6168,"src":"1070:102:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf8fa764","id":6041,"implemented":false,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"1189:14:20","nodeType":"FunctionDefinition","parameters":{"id":6037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6036,"mutability":"mutable","name":"assetIndex","nameLocation":"1212:10:20","nodeType":"VariableDeclaration","scope":6041,"src":"1204:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6035,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:20:20"},"returnParameters":{"id":6040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6041,"src":"1247:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1246:9:20"},"scope":6168,"src":"1180:76:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1a686502","id":6046,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"1273:9:20","nodeType":"FunctionDefinition","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[],"src":"1282:2:20"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6046,"src":"1308:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1308:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1307:9:20"},"scope":6168,"src":"1264:53:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":6051,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"1334:9:20","nodeType":"FunctionDefinition","parameters":{"id":6047,"nodeType":"ParameterList","parameters":[],"src":"1343:2:20"},"returnParameters":{"id":6050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6051,"src":"1369:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1369:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1368:9:20"},"scope":6168,"src":"1325:53:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e81221c","id":6064,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1395:4:20","nodeType":"FunctionDefinition","parameters":{"id":6060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6053,"mutability":"mutable","name":"fromToken","nameLocation":"1418:9:20","nodeType":"VariableDeclaration","scope":6064,"src":"1410:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6052,"name":"address","nodeType":"ElementaryTypeName","src":"1410:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6055,"mutability":"mutable","name":"toToken","nameLocation":"1446:7:20","nodeType":"VariableDeclaration","scope":6064,"src":"1438:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6054,"name":"address","nodeType":"ElementaryTypeName","src":"1438:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6057,"mutability":"mutable","name":"amount","nameLocation":"1472:6:20","nodeType":"VariableDeclaration","scope":6064,"src":"1464:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6059,"mutability":"mutable","name":"receiver","nameLocation":"1497:8:20","nodeType":"VariableDeclaration","scope":6064,"src":"1489:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6058,"name":"address","nodeType":"ElementaryTypeName","src":"1489:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1399:113:20"},"returnParameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"toSend","nameLocation":"1539:6:20","nodeType":"VariableDeclaration","scope":6064,"src":"1531:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1531:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1530:16:20"},"scope":6168,"src":"1386:161:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de836ebd","id":6074,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1564:4:20","nodeType":"FunctionDefinition","parameters":{"id":6070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6066,"mutability":"mutable","name":"to","nameLocation":"1577:2:20","nodeType":"VariableDeclaration","scope":6074,"src":"1569:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6065,"name":"address","nodeType":"ElementaryTypeName","src":"1569:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6069,"mutability":"mutable","name":"amounts","nameLocation":"1598:7:20","nodeType":"VariableDeclaration","scope":6074,"src":"1581:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1581:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6068,"nodeType":"ArrayTypeName","src":"1581:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1568:38:20"},"returnParameters":{"id":6073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6074,"src":"1625:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1625:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1624:9:20"},"scope":6168,"src":"1555:79:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":6082,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1651:4:20","nodeType":"FunctionDefinition","parameters":{"id":6077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"to","nameLocation":"1664:2:20","nodeType":"VariableDeclaration","scope":6082,"src":"1656:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6075,"name":"address","nodeType":"ElementaryTypeName","src":"1656:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1655:12:20"},"returnParameters":{"id":6081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6082,"src":"1686:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6078,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6079,"nodeType":"ArrayTypeName","src":"1686:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1685:18:20"},"scope":6168,"src":"1642:62:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":6087,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1721:16:20","nodeType":"FunctionDefinition","parameters":{"id":6085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6084,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1746:14:20","nodeType":"VariableDeclaration","scope":6087,"src":"1738:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6083,"name":"address","nodeType":"ElementaryTypeName","src":"1738:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1737:24:20"},"returnParameters":{"id":6086,"nodeType":"ParameterList","parameters":[],"src":"1770:0:20"},"scope":6168,"src":"1712:59:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"340ac20f","id":6092,"implemented":false,"kind":"function","modifiers":[],"name":"changeRouter","nameLocation":"1788:12:20","nodeType":"FunctionDefinition","parameters":{"id":6090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6089,"mutability":"mutable","name":"_newRouter","nameLocation":"1809:10:20","nodeType":"VariableDeclaration","scope":6092,"src":"1801:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6088,"name":"address","nodeType":"ElementaryTypeName","src":"1801:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1800:20:20"},"returnParameters":{"id":6091,"nodeType":"ParameterList","parameters":[],"src":"1829:0:20"},"scope":6168,"src":"1779:51:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"36bf6e39","id":6100,"implemented":false,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"1847:21:20","nodeType":"FunctionDefinition","parameters":{"id":6093,"nodeType":"ParameterList","parameters":[],"src":"1868:2:20"},"returnParameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6095,"mutability":"mutable","name":"totalVal","nameLocation":"1902:8:20","nodeType":"VariableDeclaration","scope":6100,"src":"1894:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"1894:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6098,"mutability":"mutable","name":"valuations","nameLocation":"1929:10:20","nodeType":"VariableDeclaration","scope":6100,"src":"1912:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6096,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6097,"nodeType":"ArrayTypeName","src":"1912:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1893:47:20"},"scope":6168,"src":"1838:103:20","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3dff5b7f","id":6108,"implemented":false,"kind":"function","modifiers":[],"name":"updateReserves","nameLocation":"1958:14:20","nodeType":"FunctionDefinition","parameters":{"id":6106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6103,"mutability":"mutable","name":"amounts","nameLocation":"1990:7:20","nodeType":"VariableDeclaration","scope":6108,"src":"1973:24:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1973:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6102,"nodeType":"ArrayTypeName","src":"1973:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6105,"mutability":"mutable","name":"increase","nameLocation":"2004:8:20","nodeType":"VariableDeclaration","scope":6108,"src":"1999:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6104,"name":"bool","nodeType":"ElementaryTypeName","src":"1999:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1972:41:20"},"returnParameters":{"id":6107,"nodeType":"ParameterList","parameters":[],"src":"2022:0:20"},"scope":6168,"src":"1949:74:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0723c999","id":6116,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"2040:16:20","nodeType":"FunctionDefinition","parameters":{"id":6111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6110,"mutability":"mutable","name":"receiver","nameLocation":"2065:8:20","nodeType":"VariableDeclaration","scope":6116,"src":"2057:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6109,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2056:18:20"},"returnParameters":{"id":6115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6116,"src":"2093:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6112,"name":"uint256","nodeType":"ElementaryTypeName","src":"2093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6113,"nodeType":"ArrayTypeName","src":"2093:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2092:18:20"},"scope":6168,"src":"2031:80:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IBaluniV1Pool.AssetInfo","id":6121,"members":[{"constant":false,"id":6118,"mutability":"mutable","name":"asset","nameLocation":"2155:5:20","nodeType":"VariableDeclaration","scope":6121,"src":"2147:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6117,"name":"address","nodeType":"ElementaryTypeName","src":"2147:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6120,"mutability":"mutable","name":"weight","nameLocation":"2179:6:20","nodeType":"VariableDeclaration","scope":6121,"src":"2171:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2126:9:20","nodeType":"StructDefinition","scope":6168,"src":"2119:74:20","visibility":"public"},{"functionSelector":"d14ef46d","id":6129,"implemented":false,"kind":"function","modifiers":[],"name":"assetInfos","nameLocation":"2210:10:20","nodeType":"FunctionDefinition","parameters":{"id":6124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"_index","nameLocation":"2226:6:20","nodeType":"VariableDeclaration","scope":6129,"src":"2221:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6122,"name":"uint","nodeType":"ElementaryTypeName","src":"2221:4:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2220:13:20"},"returnParameters":{"id":6128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6129,"src":"2257:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$6121_memory_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"},"typeName":{"id":6126,"nodeType":"UserDefinedTypeName","pathNode":{"id":6125,"name":"AssetInfo","nameLocations":["2257:9:20"],"nodeType":"IdentifierPath","referencedDeclaration":6121,"src":"2257:9:20"},"referencedDeclaration":6121,"src":"2257:9:20","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$6121_storage_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"}},"visibility":"internal"}],"src":"2256:18:20"},"scope":6168,"src":"2201:74:20","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":6136,"name":"RebalancePerformed","nameLocation":"2304:18:20","nodeType":"EventDefinition","parameters":{"id":6135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6131,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2339:2:20","nodeType":"VariableDeclaration","scope":6136,"src":"2323:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6130,"name":"address","nodeType":"ElementaryTypeName","src":"2323:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6134,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2353:6:20","nodeType":"VariableDeclaration","scope":6136,"src":"2343:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6132,"name":"address","nodeType":"ElementaryTypeName","src":"2343:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6133,"nodeType":"ArrayTypeName","src":"2343:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2322:38:20"},"src":"2298:63:20"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":6143,"name":"WeightsRebalanced","nameLocation":"2373:17:20","nodeType":"EventDefinition","parameters":{"id":6142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6138,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2407:4:20","nodeType":"VariableDeclaration","scope":6143,"src":"2391:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6137,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6141,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2423:12:20","nodeType":"VariableDeclaration","scope":6143,"src":"2413:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2413:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6140,"nodeType":"ArrayTypeName","src":"2413:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2390:46:20"},"src":"2367:70:20"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":6149,"name":"Burn","nameLocation":"2449:4:20","nodeType":"EventDefinition","parameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6145,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2470:4:20","nodeType":"VariableDeclaration","scope":6149,"src":"2454:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6144,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6147,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2484:12:20","nodeType":"VariableDeclaration","scope":6149,"src":"2476:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"2476:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2453:44:20"},"src":"2443:55:20"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":6155,"name":"Mint","nameLocation":"2510:4:20","nodeType":"EventDefinition","parameters":{"id":6154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2531:2:20","nodeType":"VariableDeclaration","scope":6155,"src":"2515:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6150,"name":"address","nodeType":"ElementaryTypeName","src":"2515:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6153,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2543:12:20","nodeType":"VariableDeclaration","scope":6155,"src":"2535:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2535:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2514:42:20"},"src":"2504:53:20"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":6167,"name":"Swap","nameLocation":"2569:4:20","nodeType":"EventDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2600:4:20","nodeType":"VariableDeclaration","scope":6167,"src":"2584:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6156,"name":"address","nodeType":"ElementaryTypeName","src":"2584:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6159,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2631:9:20","nodeType":"VariableDeclaration","scope":6167,"src":"2615:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6158,"name":"address","nodeType":"ElementaryTypeName","src":"2615:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6161,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2667:7:20","nodeType":"VariableDeclaration","scope":6167,"src":"2651:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6160,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6163,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2693:8:20","nodeType":"VariableDeclaration","scope":6167,"src":"2685:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2685:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6165,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2720:9:20","nodeType":"VariableDeclaration","scope":6167,"src":"2712:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2573:163:20"},"src":"2563:174:20"}],"scope":6169,"src":"124:2616:20","usedErrors":[],"usedEvents":[6136,6143,6149,6155,6167]}],"src":"40:2702:20"},"id":20},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","exportedSymbols":{"IBaluniV1PoolFactory":[6201]},"id":6202,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6170,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:21"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6201,"linearizedBaseContracts":[6201],"name":"IBaluniV1PoolFactory","nameLocation":"77:20:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2d5e94a7","id":6179,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"114:15:21","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"asset1","nameLocation":"138:6:21","nodeType":"VariableDeclaration","scope":6179,"src":"130:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6171,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6174,"mutability":"mutable","name":"asset2","nameLocation":"154:6:21","nodeType":"VariableDeclaration","scope":6179,"src":"146:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6173,"name":"address","nodeType":"ElementaryTypeName","src":"146:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129:32:21"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6179,"src":"185:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6176,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"184:9:21"},"scope":6201,"src":"105:89:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b4340e6a","id":6187,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"211:15:21","nodeType":"FunctionDefinition","parameters":{"id":6182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6181,"mutability":"mutable","name":"token","nameLocation":"235:5:21","nodeType":"VariableDeclaration","scope":6187,"src":"227:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6180,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"226:15:21"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6187,"src":"265:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6183,"name":"address","nodeType":"ElementaryTypeName","src":"265:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6184,"nodeType":"ArrayTypeName","src":"265:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"264:18:21"},"scope":6201,"src":"202:81:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89345efb","id":6194,"implemented":false,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"300:9:21","nodeType":"FunctionDefinition","parameters":{"id":6190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6189,"mutability":"mutable","name":"_pool","nameLocation":"318:5:21","nodeType":"VariableDeclaration","scope":6194,"src":"310:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6188,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:15:21"},"returnParameters":{"id":6193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6194,"src":"348:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6191,"name":"bool","nodeType":"ElementaryTypeName","src":"348:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"347:6:21"},"scope":6201,"src":"291:63:21","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d88ff1f4","id":6200,"implemented":false,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"371:11:21","nodeType":"FunctionDefinition","parameters":{"id":6195,"nodeType":"ParameterList","parameters":[],"src":"382:2:21"},"returnParameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6200,"src":"408:16:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6196,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6197,"nodeType":"ArrayTypeName","src":"408:9:21","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"407:18:21"},"scope":6201,"src":"362:64:21","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6202,"src":"67:362:21","usedErrors":[],"usedEvents":[]}],"src":"40:391:21"},"id":21},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolPeriphery.sol","exportedSymbols":{"IBaluniV1PoolPeriphery":[6221]},"id":6222,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6203,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6221,"linearizedBaseContracts":[6221],"name":"IBaluniV1PoolPeriphery","nameLocation":"77:22:22","nodeType":"ContractDefinition","nodes":[{"functionSelector":"3e99c1e4","id":6211,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"116:11:22","nodeType":"FunctionDefinition","parameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"pool","nameLocation":"136:4:22","nodeType":"VariableDeclaration","scope":6211,"src":"128:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6204,"name":"address","nodeType":"ElementaryTypeName","src":"128:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"127:14:22"},"returnParameters":{"id":6210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6211,"src":"165:16:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6207,"name":"uint256","nodeType":"ElementaryTypeName","src":"165:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6208,"nodeType":"ArrayTypeName","src":"165:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"164:18:22"},"scope":6221,"src":"107:76:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a3e113fb","id":6220,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"200:15:22","nodeType":"FunctionDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"pool","nameLocation":"224:4:22","nodeType":"VariableDeclaration","scope":6220,"src":"216:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6212,"name":"address","nodeType":"ElementaryTypeName","src":"216:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6215,"mutability":"mutable","name":"asset","nameLocation":"238:5:22","nodeType":"VariableDeclaration","scope":6220,"src":"230:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6214,"name":"address","nodeType":"ElementaryTypeName","src":"230:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"215:29:22"},"returnParameters":{"id":6219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6220,"src":"268:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6217,"name":"uint256","nodeType":"ElementaryTypeName","src":"268:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"267:9:22"},"scope":6221,"src":"191:86:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6222,"src":"67:213:22","usedErrors":[],"usedEvents":[]}],"src":"40:242:22"},"id":22},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Rebalancer.sol","exportedSymbols":{"I1inchSpotAgg":[5924],"IBaluniV1Agent":[5944],"IBaluniV1Rebalancer":[6342],"IBaluniV1Router":[6600],"IERC20":[1729],"IERC20Metadata":[1755]},"id":6343,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6223,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:23"},{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","file":"./IBaluniV1Router.sol","id":6224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6343,"sourceUnit":6601,"src":"67:31:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Rebalancer","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6342,"linearizedBaseContracts":[6342],"name":"IBaluniV1Rebalancer","nameLocation":"112:19:23","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Rebalancer.RebalanceVars","id":6254,"members":[{"constant":false,"id":6226,"mutability":"mutable","name":"length","nameLocation":"173:6:23","nodeType":"VariableDeclaration","scope":6254,"src":"165:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6225,"name":"uint256","nodeType":"ElementaryTypeName","src":"165:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6228,"mutability":"mutable","name":"totalValue","nameLocation":"194:10:23","nodeType":"VariableDeclaration","scope":6254,"src":"186:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6227,"name":"uint256","nodeType":"ElementaryTypeName","src":"186:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6230,"mutability":"mutable","name":"finalUsdBalance","nameLocation":"219:15:23","nodeType":"VariableDeclaration","scope":6254,"src":"211:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6232,"mutability":"mutable","name":"overweightVaultsLength","nameLocation":"249:22:23","nodeType":"VariableDeclaration","scope":6254,"src":"241:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6231,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6234,"mutability":"mutable","name":"underweightVaultsLength","nameLocation":"286:23:23","nodeType":"VariableDeclaration","scope":6254,"src":"278:31:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6233,"name":"uint256","nodeType":"ElementaryTypeName","src":"278:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6236,"mutability":"mutable","name":"totalActiveWeight","nameLocation":"324:17:23","nodeType":"VariableDeclaration","scope":6254,"src":"316:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6238,"mutability":"mutable","name":"amountOut","nameLocation":"356:9:23","nodeType":"VariableDeclaration","scope":6254,"src":"348:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6237,"name":"uint256","nodeType":"ElementaryTypeName","src":"348:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6241,"mutability":"mutable","name":"overweightVaults","nameLocation":"382:16:23","nodeType":"VariableDeclaration","scope":6254,"src":"372:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6239,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6240,"nodeType":"ArrayTypeName","src":"372:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6244,"mutability":"mutable","name":"overweightAmounts","nameLocation":"415:17:23","nodeType":"VariableDeclaration","scope":6254,"src":"405:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6242,"name":"uint256","nodeType":"ElementaryTypeName","src":"405:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6243,"nodeType":"ArrayTypeName","src":"405:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6247,"mutability":"mutable","name":"underweightVaults","nameLocation":"449:17:23","nodeType":"VariableDeclaration","scope":6254,"src":"439:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6245,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6246,"nodeType":"ArrayTypeName","src":"439:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6250,"mutability":"mutable","name":"underweightAmounts","nameLocation":"483:18:23","nodeType":"VariableDeclaration","scope":6254,"src":"473:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6248,"name":"uint256","nodeType":"ElementaryTypeName","src":"473:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6249,"nodeType":"ArrayTypeName","src":"473:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6253,"mutability":"mutable","name":"balances","nameLocation":"518:8:23","nodeType":"VariableDeclaration","scope":6254,"src":"508:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6251,"name":"uint256","nodeType":"ElementaryTypeName","src":"508:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6252,"nodeType":"ArrayTypeName","src":"508:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"RebalanceVars","nameLocation":"144:13:23","nodeType":"StructDefinition","scope":6342,"src":"137:395:23","visibility":"public"},{"functionSelector":"39b65140","id":6259,"implemented":false,"kind":"function","modifiers":[],"name":"baluniRouter","nameLocation":"563:12:23","nodeType":"FunctionDefinition","parameters":{"id":6255,"nodeType":"ParameterList","parameters":[],"src":"575:2:23"},"returnParameters":{"id":6258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6259,"src":"601:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6256,"name":"address","nodeType":"ElementaryTypeName","src":"601:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"600:9:23"},"scope":6342,"src":"554:56:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":6264,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"625:4:23","nodeType":"FunctionDefinition","parameters":{"id":6260,"nodeType":"ParameterList","parameters":[],"src":"629:2:23"},"returnParameters":{"id":6263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6264,"src":"655:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6261,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"654:9:23"},"scope":6342,"src":"616:48:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":6269,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"679:7:23","nodeType":"FunctionDefinition","parameters":{"id":6265,"nodeType":"ParameterList","parameters":[],"src":"686:2:23"},"returnParameters":{"id":6268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6269,"src":"712:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6266,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"711:9:23"},"scope":6342,"src":"670:51:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":6274,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"736:13:23","nodeType":"FunctionDefinition","parameters":{"id":6270,"nodeType":"ParameterList","parameters":[],"src":"749:2:23"},"returnParameters":{"id":6273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6274,"src":"775:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6271,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"774:9:23"},"scope":6342,"src":"727:57:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":6279,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"799:14:23","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[],"src":"813:2:23"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6279,"src":"839:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6276,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"838:9:23"},"scope":6342,"src":"790:58:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"eb06b29d","id":6284,"implemented":false,"kind":"function","modifiers":[],"name":"_1InchSpotAgg","nameLocation":"863:13:23","nodeType":"FunctionDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[],"src":"876:2:23"},"returnParameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6284,"src":"902:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6281,"name":"address","nodeType":"ElementaryTypeName","src":"902:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"901:9:23"},"scope":6342,"src":"854:57:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":6289,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"926:8:23","nodeType":"FunctionDefinition","parameters":{"id":6285,"nodeType":"ParameterList","parameters":[],"src":"934:2:23"},"returnParameters":{"id":6288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6289,"src":"960:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6286,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"959:9:23"},"scope":6342,"src":"917:52:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f0bf7714","id":6309,"implemented":false,"kind":"function","modifiers":[],"name":"rebalance","nameLocation":"1000:9:23","nodeType":"FunctionDefinition","parameters":{"id":6307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6292,"mutability":"mutable","name":"balances","nameLocation":"1033:8:23","nodeType":"VariableDeclaration","scope":6309,"src":"1016:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6291,"nodeType":"ArrayTypeName","src":"1016:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6295,"mutability":"mutable","name":"assets","nameLocation":"1067:6:23","nodeType":"VariableDeclaration","scope":6309,"src":"1048:25:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6293,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6294,"nodeType":"ArrayTypeName","src":"1048:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6298,"mutability":"mutable","name":"weights","nameLocation":"1099:7:23","nodeType":"VariableDeclaration","scope":6309,"src":"1080:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6296,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6297,"nodeType":"ArrayTypeName","src":"1080:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6300,"mutability":"mutable","name":"limit","nameLocation":"1121:5:23","nodeType":"VariableDeclaration","scope":6309,"src":"1113:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1113:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6302,"mutability":"mutable","name":"sender","nameLocation":"1141:6:23","nodeType":"VariableDeclaration","scope":6309,"src":"1133:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6301,"name":"address","nodeType":"ElementaryTypeName","src":"1133:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6304,"mutability":"mutable","name":"receiver","nameLocation":"1162:8:23","nodeType":"VariableDeclaration","scope":6309,"src":"1154:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6303,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6306,"mutability":"mutable","name":"baseAsset","nameLocation":"1185:9:23","nodeType":"VariableDeclaration","scope":6309,"src":"1177:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6305,"name":"address","nodeType":"ElementaryTypeName","src":"1177:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1009:190:23"},"returnParameters":{"id":6308,"nodeType":"ParameterList","parameters":[],"src":"1208:0:23"},"scope":6342,"src":"991:218:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"997146f5","id":6330,"implemented":false,"kind":"function","modifiers":[],"name":"checkRebalance","nameLocation":"1224:14:23","nodeType":"FunctionDefinition","parameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6312,"mutability":"mutable","name":"balances","nameLocation":"1262:8:23","nodeType":"VariableDeclaration","scope":6330,"src":"1245:25:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1245:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6311,"nodeType":"ArrayTypeName","src":"1245:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6315,"mutability":"mutable","name":"assets","nameLocation":"1296:6:23","nodeType":"VariableDeclaration","scope":6330,"src":"1277:25:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6313,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6314,"nodeType":"ArrayTypeName","src":"1277:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6318,"mutability":"mutable","name":"weights","nameLocation":"1328:7:23","nodeType":"VariableDeclaration","scope":6330,"src":"1309:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6316,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6317,"nodeType":"ArrayTypeName","src":"1309:9:23","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6320,"mutability":"mutable","name":"limit","nameLocation":"1350:5:23","nodeType":"VariableDeclaration","scope":6330,"src":"1342:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6322,"mutability":"mutable","name":"sender","nameLocation":"1370:6:23","nodeType":"VariableDeclaration","scope":6330,"src":"1362:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6321,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6324,"mutability":"mutable","name":"baseAsset","nameLocation":"1391:9:23","nodeType":"VariableDeclaration","scope":6330,"src":"1383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6323,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1238:167:23"},"returnParameters":{"id":6329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6330,"src":"1429:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$6254_memory_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"},"typeName":{"id":6327,"nodeType":"UserDefinedTypeName","pathNode":{"id":6326,"name":"RebalanceVars","nameLocations":["1429:13:23"],"nodeType":"IdentifierPath","referencedDeclaration":6254,"src":"1429:13:23"},"referencedDeclaration":6254,"src":"1429:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_RebalanceVars_$6254_storage_ptr","typeString":"struct IBaluniV1Rebalancer.RebalanceVars"}},"visibility":"internal"}],"src":"1428:22:23"},"scope":6342,"src":"1215:236:23","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"248391ff","id":6341,"implemented":false,"kind":"function","modifiers":[],"name":"convert","nameLocation":"1466:7:23","nodeType":"FunctionDefinition","parameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"fromToken","nameLocation":"1482:9:23","nodeType":"VariableDeclaration","scope":6341,"src":"1474:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6331,"name":"address","nodeType":"ElementaryTypeName","src":"1474:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6334,"mutability":"mutable","name":"toToken","nameLocation":"1501:7:23","nodeType":"VariableDeclaration","scope":6341,"src":"1493:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6333,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6336,"mutability":"mutable","name":"amount","nameLocation":"1518:6:23","nodeType":"VariableDeclaration","scope":6341,"src":"1510:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1510:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1473:52:23"},"returnParameters":{"id":6340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6341,"src":"1549:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1548:9:23"},"scope":6342,"src":"1457:101:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6343,"src":"102:1459:23","usedErrors":[],"usedEvents":[]}],"src":"40:1523:23"},"id":23},"contracts/interfaces/IBaluniV1Router.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Router.sol","exportedSymbols":{"I1inchSpotAgg":[5924],"IBaluniV1Agent":[5944],"IBaluniV1Router":[6600],"IERC20":[1729],"IERC20Metadata":[1755]},"id":6601,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":6344,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6345,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6601,"sourceUnit":1730,"src":"67:56:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","id":6346,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6601,"sourceUnit":1756,"src":"125:75:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/I1inchSpotAgg.sol","file":"./I1inchSpotAgg.sol","id":6347,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6601,"sourceUnit":5925,"src":"202:29:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Agent.sol","file":"./IBaluniV1Agent.sol","id":6348,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6601,"sourceUnit":5945,"src":"233:30:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Router","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":6600,"linearizedBaseContracts":[6600],"name":"IBaluniV1Router","nameLocation":"277:15:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IBaluniV1Router.Call","id":6355,"members":[{"constant":false,"id":6350,"mutability":"mutable","name":"to","nameLocation":"325:2:24","nodeType":"VariableDeclaration","scope":6355,"src":"317:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6349,"name":"address","nodeType":"ElementaryTypeName","src":"317:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6352,"mutability":"mutable","name":"value","nameLocation":"342:5:24","nodeType":"VariableDeclaration","scope":6355,"src":"334:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6351,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6354,"mutability":"mutable","name":"data","nameLocation":"360:4:24","nodeType":"VariableDeclaration","scope":6355,"src":"354:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":6353,"name":"bytes","nodeType":"ElementaryTypeName","src":"354:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"Call","nameLocation":"305:4:24","nodeType":"StructDefinition","scope":6600,"src":"298:72:24","visibility":"public"},{"functionSelector":"34decfc9","id":6360,"implemented":false,"kind":"function","modifiers":[],"name":"_MAX_BPS_FEE","nameLocation":"401:12:24","nodeType":"FunctionDefinition","parameters":{"id":6356,"nodeType":"ParameterList","parameters":[],"src":"413:2:24"},"returnParameters":{"id":6359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6360,"src":"439:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6357,"name":"uint256","nodeType":"ElementaryTypeName","src":"439:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"438:9:24"},"scope":6600,"src":"392:56:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b9f5e617","id":6365,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_FEE","nameLocation":"463:8:24","nodeType":"FunctionDefinition","parameters":{"id":6361,"nodeType":"ParameterList","parameters":[],"src":"471:2:24"},"returnParameters":{"id":6364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6365,"src":"497:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6362,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"496:9:24"},"scope":6600,"src":"454:52:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"85377188","id":6370,"implemented":false,"kind":"function","modifiers":[],"name":"_BPS_BASE","nameLocation":"521:9:24","nodeType":"FunctionDefinition","parameters":{"id":6366,"nodeType":"ParameterList","parameters":[],"src":"530:2:24"},"returnParameters":{"id":6369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6370,"src":"556:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6367,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"555:9:24"},"scope":6600,"src":"512:53:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"aa6ca808","id":6376,"implemented":false,"kind":"function","modifiers":[],"name":"getTokens","nameLocation":"580:9:24","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[],"src":"589:2:24"},"returnParameters":{"id":6375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6374,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6376,"src":"615:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6372,"name":"address","nodeType":"ElementaryTypeName","src":"615:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6373,"nodeType":"ArrayTypeName","src":"615:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"614:18:24"},"scope":6600,"src":"571:62:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89a30271","id":6382,"implemented":false,"kind":"function","modifiers":[],"name":"USDC","nameLocation":"648:4:24","nodeType":"FunctionDefinition","parameters":{"id":6377,"nodeType":"ParameterList","parameters":[],"src":"652:2:24"},"returnParameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6382,"src":"678:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":6379,"nodeType":"UserDefinedTypeName","pathNode":{"id":6378,"name":"IERC20","nameLocations":["678:6:24"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"678:6:24"},"referencedDeclaration":1729,"src":"678:6:24","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"677:8:24"},"scope":6600,"src":"639:47:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b381cf40","id":6387,"implemented":false,"kind":"function","modifiers":[],"name":"WNATIVE","nameLocation":"701:7:24","nodeType":"FunctionDefinition","parameters":{"id":6383,"nodeType":"ParameterList","parameters":[],"src":"708:2:24"},"returnParameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6387,"src":"734:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6384,"name":"address","nodeType":"ElementaryTypeName","src":"734:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"733:9:24"},"scope":6600,"src":"692:51:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7dc0d1d0","id":6392,"implemented":false,"kind":"function","modifiers":[],"name":"oracle","nameLocation":"758:6:24","nodeType":"FunctionDefinition","parameters":{"id":6388,"nodeType":"ParameterList","parameters":[],"src":"764:2:24"},"returnParameters":{"id":6391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6390,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6392,"src":"790:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6389,"name":"address","nodeType":"ElementaryTypeName","src":"790:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"789:9:24"},"scope":6600,"src":"749:50:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"735de9f7","id":6397,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapRouter","nameLocation":"814:13:24","nodeType":"FunctionDefinition","parameters":{"id":6393,"nodeType":"ParameterList","parameters":[],"src":"827:2:24"},"returnParameters":{"id":6396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6397,"src":"853:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6394,"name":"address","nodeType":"ElementaryTypeName","src":"853:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"852:9:24"},"scope":6600,"src":"805:57:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8bdb2afa","id":6402,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapFactory","nameLocation":"877:14:24","nodeType":"FunctionDefinition","parameters":{"id":6398,"nodeType":"ParameterList","parameters":[],"src":"891:2:24"},"returnParameters":{"id":6401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6402,"src":"917:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6399,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"916:9:24"},"scope":6600,"src":"868:58:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7df107ea","id":6407,"implemented":false,"kind":"function","modifiers":[],"name":"agentFactory","nameLocation":"941:12:24","nodeType":"FunctionDefinition","parameters":{"id":6403,"nodeType":"ParameterList","parameters":[],"src":"953:2:24"},"returnParameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6407,"src":"979:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6404,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:9:24"},"scope":6600,"src":"932:56:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"60961528","id":6412,"implemented":false,"kind":"function","modifiers":[],"name":"marketOracle","nameLocation":"1003:12:24","nodeType":"FunctionDefinition","parameters":{"id":6408,"nodeType":"ParameterList","parameters":[],"src":"1015:2:24"},"returnParameters":{"id":6411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6412,"src":"1041:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6409,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1040:9:24"},"scope":6600,"src":"994:56:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"01d22ccd","id":6417,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"1065:10:24","nodeType":"FunctionDefinition","parameters":{"id":6413,"nodeType":"ParameterList","parameters":[],"src":"1075:2:24"},"returnParameters":{"id":6416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6417,"src":"1101:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6414,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1100:9:24"},"scope":6600,"src":"1056:54:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"61d027b3","id":6422,"implemented":false,"kind":"function","modifiers":[],"name":"treasury","nameLocation":"1125:8:24","nodeType":"FunctionDefinition","parameters":{"id":6418,"nodeType":"ParameterList","parameters":[],"src":"1133:2:24"},"returnParameters":{"id":6421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6422,"src":"1159:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6419,"name":"address","nodeType":"ElementaryTypeName","src":"1159:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1158:9:24"},"scope":6600,"src":"1116:52:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cc2a9a5b","id":6437,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"1199:10:24","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6424,"mutability":"mutable","name":"_usdc","nameLocation":"1224:5:24","nodeType":"VariableDeclaration","scope":6437,"src":"1216:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6423,"name":"address","nodeType":"ElementaryTypeName","src":"1216:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6426,"mutability":"mutable","name":"_wnative","nameLocation":"1244:8:24","nodeType":"VariableDeclaration","scope":6437,"src":"1236:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6425,"name":"address","nodeType":"ElementaryTypeName","src":"1236:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6428,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1267:13:24","nodeType":"VariableDeclaration","scope":6437,"src":"1259:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6427,"name":"address","nodeType":"ElementaryTypeName","src":"1259:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6430,"mutability":"mutable","name":"_uniRouter","nameLocation":"1295:10:24","nodeType":"VariableDeclaration","scope":6437,"src":"1287:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6429,"name":"address","nodeType":"ElementaryTypeName","src":"1287:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6432,"mutability":"mutable","name":"_uniFactory","nameLocation":"1320:11:24","nodeType":"VariableDeclaration","scope":6437,"src":"1312:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6431,"name":"address","nodeType":"ElementaryTypeName","src":"1312:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6434,"mutability":"mutable","name":"_rebalancer","nameLocation":"1346:11:24","nodeType":"VariableDeclaration","scope":6437,"src":"1338:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6433,"name":"address","nodeType":"ElementaryTypeName","src":"1338:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1209:153:24"},"returnParameters":{"id":6436,"nodeType":"ParameterList","parameters":[],"src":"1371:0:24"},"scope":6600,"src":"1190:182:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b0d60ba0","id":6454,"implemented":false,"kind":"function","modifiers":[],"name":"reinitialize","nameLocation":"1387:12:24","nodeType":"FunctionDefinition","parameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6439,"mutability":"mutable","name":"_usdc","nameLocation":"1414:5:24","nodeType":"VariableDeclaration","scope":6454,"src":"1406:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6438,"name":"address","nodeType":"ElementaryTypeName","src":"1406:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6441,"mutability":"mutable","name":"_wnative","nameLocation":"1434:8:24","nodeType":"VariableDeclaration","scope":6454,"src":"1426:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6440,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6443,"mutability":"mutable","name":"_1inchSpotAgg","nameLocation":"1457:13:24","nodeType":"VariableDeclaration","scope":6454,"src":"1449:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6442,"name":"address","nodeType":"ElementaryTypeName","src":"1449:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6445,"mutability":"mutable","name":"_uniRouter","nameLocation":"1485:10:24","nodeType":"VariableDeclaration","scope":6454,"src":"1477:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6444,"name":"address","nodeType":"ElementaryTypeName","src":"1477:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6447,"mutability":"mutable","name":"_uniFactory","nameLocation":"1510:11:24","nodeType":"VariableDeclaration","scope":6454,"src":"1502:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6446,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6449,"mutability":"mutable","name":"_rebalancer","nameLocation":"1536:11:24","nodeType":"VariableDeclaration","scope":6454,"src":"1528:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6448,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6451,"mutability":"mutable","name":"version","nameLocation":"1561:7:24","nodeType":"VariableDeclaration","scope":6454,"src":"1554:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6450,"name":"uint64","nodeType":"ElementaryTypeName","src":"1554:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1399:174:24"},"returnParameters":{"id":6453,"nodeType":"ParameterList","parameters":[],"src":"1582:0:24"},"scope":6600,"src":"1378:205:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"980d24f9","id":6459,"implemented":false,"kind":"function","modifiers":[],"name":"initializeMarketOracle","nameLocation":"1598:22:24","nodeType":"FunctionDefinition","parameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"_marketOracle","nameLocation":"1629:13:24","nodeType":"VariableDeclaration","scope":6459,"src":"1621:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6455,"name":"address","nodeType":"ElementaryTypeName","src":"1621:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1620:23:24"},"returnParameters":{"id":6458,"nodeType":"ParameterList","parameters":[],"src":"1652:0:24"},"scope":6600,"src":"1589:64:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"35aa0efa","id":6464,"implemented":false,"kind":"function","modifiers":[],"name":"changeMarketOracle","nameLocation":"1668:18:24","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"_marketOracle","nameLocation":"1695:13:24","nodeType":"VariableDeclaration","scope":6464,"src":"1687:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6460,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1686:23:24"},"returnParameters":{"id":6463,"nodeType":"ParameterList","parameters":[],"src":"1718:0:24"},"scope":6600,"src":"1659:60:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06497cb9","id":6469,"implemented":false,"kind":"function","modifiers":[],"name":"changeBpsFee","nameLocation":"1734:12:24","nodeType":"FunctionDefinition","parameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"_newFee","nameLocation":"1755:7:24","nodeType":"VariableDeclaration","scope":6469,"src":"1747:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1747:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1746:17:24"},"returnParameters":{"id":6468,"nodeType":"ParameterList","parameters":[],"src":"1772:0:24"},"scope":6600,"src":"1725:48:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b14f2a39","id":6474,"implemented":false,"kind":"function","modifiers":[],"name":"changeTreasury","nameLocation":"1788:14:24","nodeType":"FunctionDefinition","parameters":{"id":6472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6471,"mutability":"mutable","name":"_newTreasury","nameLocation":"1811:12:24","nodeType":"VariableDeclaration","scope":6474,"src":"1803:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6470,"name":"address","nodeType":"ElementaryTypeName","src":"1803:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1802:22:24"},"returnParameters":{"id":6473,"nodeType":"ParameterList","parameters":[],"src":"1833:0:24"},"scope":6600,"src":"1779:55:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":6479,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1849:16:24","nodeType":"FunctionDefinition","parameters":{"id":6477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6476,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1874:14:24","nodeType":"VariableDeclaration","scope":6479,"src":"1866:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6475,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1865:24:24"},"returnParameters":{"id":6478,"nodeType":"ParameterList","parameters":[],"src":"1898:0:24"},"scope":6600,"src":"1840:59:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0a38abab","id":6484,"implemented":false,"kind":"function","modifiers":[],"name":"changeAgentFactory","nameLocation":"1914:18:24","nodeType":"FunctionDefinition","parameters":{"id":6482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6481,"mutability":"mutable","name":"_agentFactory","nameLocation":"1941:13:24","nodeType":"VariableDeclaration","scope":6484,"src":"1933:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6480,"name":"address","nodeType":"ElementaryTypeName","src":"1933:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1932:23:24"},"returnParameters":{"id":6483,"nodeType":"ParameterList","parameters":[],"src":"1964:0:24"},"scope":6600,"src":"1905:60:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"eedc3c50","id":6494,"implemented":false,"kind":"function","modifiers":[],"name":"execute","nameLocation":"1980:7:24","nodeType":"FunctionDefinition","parameters":{"id":6492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6488,"mutability":"mutable","name":"calls","nameLocation":"2017:5:24","nodeType":"VariableDeclaration","scope":6494,"src":"1988:34:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$5933_memory_ptr_$dyn_memory_ptr","typeString":"struct IBaluniV1Agent.Call[]"},"typeName":{"baseType":{"id":6486,"nodeType":"UserDefinedTypeName","pathNode":{"id":6485,"name":"IBaluniV1Agent.Call","nameLocations":["1988:14:24","2003:4:24"],"nodeType":"IdentifierPath","referencedDeclaration":5933,"src":"1988:19:24"},"referencedDeclaration":5933,"src":"1988:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_Call_$5933_storage_ptr","typeString":"struct IBaluniV1Agent.Call"}},"id":6487,"nodeType":"ArrayTypeName","src":"1988:21:24","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Call_$5933_storage_$dyn_storage_ptr","typeString":"struct IBaluniV1Agent.Call[]"}},"visibility":"internal"},{"constant":false,"id":6491,"mutability":"mutable","name":"tokensReturn","nameLocation":"2041:12:24","nodeType":"VariableDeclaration","scope":6494,"src":"2024:29:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6489,"name":"address","nodeType":"ElementaryTypeName","src":"2024:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6490,"nodeType":"ArrayTypeName","src":"2024:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1987:67:24"},"returnParameters":{"id":6493,"nodeType":"ParameterList","parameters":[],"src":"2063:0:24"},"scope":6600,"src":"1971:93:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2f865568","id":6499,"implemented":false,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"2079:9:24","nodeType":"FunctionDefinition","parameters":{"id":6497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"token","nameLocation":"2097:5:24","nodeType":"VariableDeclaration","scope":6499,"src":"2089:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6495,"name":"address","nodeType":"ElementaryTypeName","src":"2089:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2088:15:24"},"returnParameters":{"id":6498,"nodeType":"ParameterList","parameters":[],"src":"2112:0:24"},"scope":6600,"src":"2070:43:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3c2066a9","id":6502,"implemented":false,"kind":"function","modifiers":[],"name":"liquidateAll","nameLocation":"2128:12:24","nodeType":"FunctionDefinition","parameters":{"id":6500,"nodeType":"ParameterList","parameters":[],"src":"2140:2:24"},"returnParameters":{"id":6501,"nodeType":"ParameterList","parameters":[],"src":"2151:0:24"},"scope":6600,"src":"2119:33:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1a168da2","id":6507,"implemented":false,"kind":"function","modifiers":[],"name":"burnERC20","nameLocation":"2167:9:24","nodeType":"FunctionDefinition","parameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"burnAmount","nameLocation":"2185:10:24","nodeType":"VariableDeclaration","scope":6507,"src":"2177:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6503,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2176:20:24"},"returnParameters":{"id":6506,"nodeType":"ParameterList","parameters":[],"src":"2205:0:24"},"scope":6600,"src":"2158:48:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"fe0a4dd1","id":6512,"implemented":false,"kind":"function","modifiers":[],"name":"burnUSDC","nameLocation":"2221:8:24","nodeType":"FunctionDefinition","parameters":{"id":6510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6509,"mutability":"mutable","name":"burnAmount","nameLocation":"2238:10:24","nodeType":"VariableDeclaration","scope":6512,"src":"2230:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6508,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2229:20:24"},"returnParameters":{"id":6511,"nodeType":"ParameterList","parameters":[],"src":"2258:0:24"},"scope":6600,"src":"2212:47:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"27d54a92","id":6519,"implemented":false,"kind":"function","modifiers":[],"name":"getAgentAddress","nameLocation":"2274:15:24","nodeType":"FunctionDefinition","parameters":{"id":6515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6514,"mutability":"mutable","name":"_user","nameLocation":"2298:5:24","nodeType":"VariableDeclaration","scope":6519,"src":"2290:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6513,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2289:15:24"},"returnParameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6519,"src":"2328:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6516,"name":"address","nodeType":"ElementaryTypeName","src":"2328:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2327:9:24"},"scope":6600,"src":"2265:72:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0cfc7386","id":6524,"implemented":false,"kind":"function","modifiers":[],"name":"mintWithUSDC","nameLocation":"2352:12:24","nodeType":"FunctionDefinition","parameters":{"id":6522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6521,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2373:15:24","nodeType":"VariableDeclaration","scope":6524,"src":"2365:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6520,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2364:25:24"},"returnParameters":{"id":6523,"nodeType":"ParameterList","parameters":[],"src":"2398:0:24"},"scope":6600,"src":"2343:56:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"599f69f7","id":6541,"implemented":false,"kind":"function","modifiers":[],"name":"callRebalance","nameLocation":"2414:13:24","nodeType":"FunctionDefinition","parameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6527,"mutability":"mutable","name":"assets","nameLocation":"2453:6:24","nodeType":"VariableDeclaration","scope":6541,"src":"2434:25:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":6525,"name":"address","nodeType":"ElementaryTypeName","src":"2434:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6526,"nodeType":"ArrayTypeName","src":"2434:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":6530,"mutability":"mutable","name":"weights","nameLocation":"2485:7:24","nodeType":"VariableDeclaration","scope":6541,"src":"2466:26:24","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6528,"name":"uint256","nodeType":"ElementaryTypeName","src":"2466:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6529,"nodeType":"ArrayTypeName","src":"2466:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6532,"mutability":"mutable","name":"sender","nameLocation":"2507:6:24","nodeType":"VariableDeclaration","scope":6541,"src":"2499:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6531,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6534,"mutability":"mutable","name":"receiver","nameLocation":"2528:8:24","nodeType":"VariableDeclaration","scope":6541,"src":"2520:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6533,"name":"address","nodeType":"ElementaryTypeName","src":"2520:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6536,"mutability":"mutable","name":"limit","nameLocation":"2551:5:24","nodeType":"VariableDeclaration","scope":6541,"src":"2543:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6535,"name":"uint256","nodeType":"ElementaryTypeName","src":"2543:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6538,"mutability":"mutable","name":"baseAsset","nameLocation":"2571:9:24","nodeType":"VariableDeclaration","scope":6541,"src":"2563:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6537,"name":"address","nodeType":"ElementaryTypeName","src":"2563:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:158:24"},"returnParameters":{"id":6540,"nodeType":"ParameterList","parameters":[],"src":"2594:0:24"},"scope":6600,"src":"2405:190:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"aa95d893","id":6548,"implemented":false,"kind":"function","modifiers":[],"name":"requiredUSDCtoMint","nameLocation":"2610:18:24","nodeType":"FunctionDefinition","parameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"balAmountToMint","nameLocation":"2637:15:24","nodeType":"VariableDeclaration","scope":6548,"src":"2629:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6542,"name":"uint256","nodeType":"ElementaryTypeName","src":"2629:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2628:25:24"},"returnParameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6548,"src":"2677:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2677:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:9:24"},"scope":6600,"src":"2601:85:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"fe330a51","id":6561,"implemented":false,"kind":"function","modifiers":[],"name":"calculateTokenShare","nameLocation":"2701:19:24","nodeType":"FunctionDefinition","parameters":{"id":6557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"totalBaluni","nameLocation":"2735:11:24","nodeType":"VariableDeclaration","scope":6561,"src":"2727:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2727:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6552,"mutability":"mutable","name":"totalERC20Balance","nameLocation":"2761:17:24","nodeType":"VariableDeclaration","scope":6561,"src":"2753:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6554,"mutability":"mutable","name":"baluniAmount","nameLocation":"2793:12:24","nodeType":"VariableDeclaration","scope":6561,"src":"2785:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6553,"name":"uint256","nodeType":"ElementaryTypeName","src":"2785:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6556,"mutability":"mutable","name":"tokenDecimals","nameLocation":"2820:13:24","nodeType":"VariableDeclaration","scope":6561,"src":"2812:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6555,"name":"uint256","nodeType":"ElementaryTypeName","src":"2812:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2720:118:24"},"returnParameters":{"id":6560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6561,"src":"2862:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6558,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2861:9:24"},"scope":6600,"src":"2692:179:24","stateMutability":"pure","virtual":false,"visibility":"external"},{"functionSelector":"2bdd955a","id":6570,"implemented":false,"kind":"function","modifiers":[],"name":"tokenValuation","nameLocation":"2886:14:24","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"amount","nameLocation":"2909:6:24","nodeType":"VariableDeclaration","scope":6570,"src":"2901:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6562,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6565,"mutability":"mutable","name":"token","nameLocation":"2925:5:24","nodeType":"VariableDeclaration","scope":6570,"src":"2917:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6564,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2900:31:24"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6570,"src":"2955:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2954:9:24"},"scope":6600,"src":"2877:87:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"295b9300","id":6575,"implemented":false,"kind":"function","modifiers":[],"name":"totalValuation","nameLocation":"2979:14:24","nodeType":"FunctionDefinition","parameters":{"id":6571,"nodeType":"ParameterList","parameters":[],"src":"2993:2:24"},"returnParameters":{"id":6574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6575,"src":"3019:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3019:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3018:9:24"},"scope":6600,"src":"2970:58:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"71ddcfb8","id":6582,"implemented":false,"kind":"function","modifiers":[],"name":"getUSDCShareValue","nameLocation":"3043:17:24","nodeType":"FunctionDefinition","parameters":{"id":6578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6577,"mutability":"mutable","name":"amount","nameLocation":"3069:6:24","nodeType":"VariableDeclaration","scope":6582,"src":"3061:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6576,"name":"uint256","nodeType":"ElementaryTypeName","src":"3061:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3060:16:24"},"returnParameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6582,"src":"3100:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6579,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3099:9:24"},"scope":6600,"src":"3034:75:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8d483df1","id":6589,"implemented":false,"kind":"function","modifiers":[],"name":"fetchMarketPrices","nameLocation":"3124:17:24","nodeType":"FunctionDefinition","parameters":{"id":6583,"nodeType":"ParameterList","parameters":[],"src":"3141:2:24"},"returnParameters":{"id":6588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6589,"src":"3167:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3167:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6589,"src":"3176:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6586,"name":"uint256","nodeType":"ElementaryTypeName","src":"3176:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3166:18:24"},"scope":6600,"src":"3115:70:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0d8e6e2c","id":6594,"implemented":false,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"3200:10:24","nodeType":"FunctionDefinition","parameters":{"id":6590,"nodeType":"ParameterList","parameters":[],"src":"3210:2:24"},"returnParameters":{"id":6593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6594,"src":"3236:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6591,"name":"uint64","nodeType":"ElementaryTypeName","src":"3236:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3235:8:24"},"scope":6600,"src":"3191:53:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":6599,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"3259:9:24","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[],"src":"3268:2:24"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6599,"src":"3294:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6596,"name":"uint256","nodeType":"ElementaryTypeName","src":"3294:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3293:9:24"},"scope":6600,"src":"3250:53:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6601,"src":"267:3043:24","usedErrors":[],"usedEvents":[]}],"src":"40:3272:24"},"id":24}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212207005de0af9bdcd07bc27af235059474504c969d7d1eb45de76c62af2a7a1badc64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5DE0AF9BDCD07BC27AF235059474504C9 PUSH10 0xD7D1EB45DE76C62AF2A7 LOG1 0xBA 0xDC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212207005de0af9bdcd07bc27af235059474504c969d7d1eb45de76c62af2a7a1badc64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x5DE0AF9BDCD07BC27AF235059474504C9 PUSH10 0xD7D1EB45DE76C62AF2A7 LOG1 0xBA 0xDC PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"449:6273:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220ae52ad6c51835f362cf568d02ce7cb25ef5a09315361fe4f2673055c4da8e2e964736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE MSTORE 0xAD PUSH13 0x51835F362CF568D02CE7CB25EF GAS MULMOD BALANCE MSTORE8 PUSH2 0xFE4F 0x26 PUSH20 0x55C4DA8E2E964736F6C63430008190033000000 ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220ae52ad6c51835f362cf568d02ce7cb25ef5a09315361fe4f2673055c4da8e2e964736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE MSTORE 0xAD PUSH13 0x51835F362CF568D02CE7CB25EF GAS MULMOD BALANCE MSTORE8 PUSH2 0xFE4F 0x26 PUSH20 0x55C4DA8E2E964736F6C63430008190033000000 ","sourceMap":"195:6066:11:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2049,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea26469706673582212205eb4622ceec81895e086e8df181e5cb9100afea8d4db8b06145e41cbd8ce34a864736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xB4 PUSH3 0x2CEEC8 XOR SWAP6 0xE0 DUP7 0xE8 0xDF XOR 0x1E TLOAD 0xB9 LT EXP INVALID 0xA8 0xD4 0xDB DUP12 MOD EQ MCOPY COINBASE 0xCB 0xD8 0xCE CALLVALUE 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea26469706673582212205eb4622ceec81895e086e8df181e5cb9100afea8d4db8b06145e41cbd8ce34a864736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xB4 PUSH3 0x2CEEC8 XOR SWAP6 0xE0 DUP7 0xE8 0xDF XOR 0x1E TLOAD 0xB9 LT EXP INVALID 0xA8 0xD4 0xDB DUP12 MOD EQ MCOPY COINBASE 0xCB 0xD8 0xCE CALLVALUE 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1245:2685:14:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1Pool.sol":{"BaluniV1Pool":{"abi":[{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"address[]","name":"_assets","type":"address[]"},{"internalType":"uint256[]","name":"_weights","type":"uint256[]"},{"internalType":"uint256","name":"_trigger","type":"uint256"},{"internalType":"address","name":"_periphery","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"assetInfos","outputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRebalanceNeeded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"toSend","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bool","name":"increase","type":"bool"}],"name":"updateReserves","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"assetLiquidity(uint256)":{"details":"Returns the liquidity of a specific asset in the pool.","params":{"assetIndex":"The index of the asset."},"returns":{"_0":"The liquidity of the asset."}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(address)":{"details":"Burns the pool tokens and transfers the underlying assets to the specified address.","params":{"to":"The address to transfer the underlying assets to."}},"computeTotalValuation()":{"details":"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.","returns":{"totalVal":"The total valuation of the pool.","valuations":"An array of individual valuations."}},"constructor":{"details":"Initializes a new instance of the BaluniV1Pool contract.","params":{"_assets":"An array of addresses representing the assets in the pool.","_periphery":"The address of the periphery contract.","_rebalancer":"The address of the rebalancer contract.","_trigger":"The trigger value for rebalancing the pool.","_weights":"An array of weights corresponding to the assets in the pool."}},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"getAmountOut(address,address,uint256)":{"details":"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.","params":{"amount":"The amount of `fromToken` being swapped.","fromToken":"The address of the token being swapped from.","toToken":"The address of the token being swapped to."},"returns":{"_0":"The amount of `toToken` that will be received."}},"getAssetReserve(address)":{"details":"Returns the reserve amount of the specified asset.","params":{"asset":"The address of the asset."},"returns":{"_0":"The reserve amount of the asset."}},"getAssets()":{"details":"Retrieves the list of assets in the pool.","returns":{"_0":"An array of addresses representing the assets."}},"getDeviation()":{"details":"Returns the deviation between the current weights and target weights of the assets in the pool.","returns":{"directions":"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight."}},"getReserves()":{"details":"Returns an array of reserves for each asset in the pool.","returns":{"_0":"An array of reserves."}},"getWeights()":{"details":"Retrieves the list of weights associated with the assets in the pool.","returns":{"_0":"An array of uint256 values representing the weights."}},"isRebalanceNeeded()":{"details":"Checks if rebalancing is needed for the pool.","returns":{"_0":"A boolean value indicating whether rebalancing is needed or not."}},"liquidity()":{"details":"Returns the total liquidity of the pool.","returns":{"_0":"The total liquidity of the pool."}},"mint(address,uint256[])":{"details":"Mints new tokens and adds them to the specified address.","params":{"to":"The address to which the new tokens will be minted."},"returns":{"_0":"The amount of tokens minted."}},"name()":{"details":"Returns the name of the token."},"performRebalanceIfNeeded()":{"details":"Performs rebalance"},"rebalanceWeights(address)":{"details":"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.","params":{"receiver":"The address to receive the minted liquidity tokens."}},"swap(address,address,uint256,address)":{"details":"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.","params":{"amount":"The amount of `fromToken` to swap.","fromToken":"The address of the token to swap from.","receiver":"The address to receive the swapped tokens.","toToken":"The address of the token to swap to."},"returns":{"toSend":"The amount of `toToken` received after the swap."}},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."},"unitPrice()":{"details":"Returns the unit price of the pool.","returns":{"_0":"The unit price of the pool."}},"updateReserves(uint256[],bool)":{"details":"Updates the reserves of the pool with the given amounts.","params":{"amounts":"An array of amounts to update the reserves with.","increase":"A boolean indicating whether to increase or decrease the reserves."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":2337,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":2357,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2302,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_9377":{"entryPoint":2275,"id":null,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_uint256_dyn":{"entryPoint":2380,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080806040523461043957613700803803809161001c82856108fe565b8339810160a0828203126104395761003382610921565b60208301519091906001600160401b0381116104395783019181601f840112156104395782519261006384610935565b9361007160405195866108fe565b80855260208086019160051b8301019184831161043957602001905b8282106108cb5750505060408401516001600160401b0381116104395784019180601f840112156104395782516100c381610935565b936100d160405195866108fe565b81855260208086019260051b82010192831161043957602001905b8282106108bb57505050610107608060608601519501610921565b604051610113816108e3565b6009815268042616c756e69204c560bc1b602082015260405190610136826108e3565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b0382116104965760035490600182811c921680156108b1575b60208310146107925781601f849311610843575b50602090601f83116001146107bb575f926107b0575b50508160011b915f199060031b1c1916176003555b8051906001600160401b0382116104965760045490600182811c921680156107a6575b60208310146107925781601f849311610724575b50602090601f83116001146106a0575f92610695575b50508160011b915f199060031b1c1916176004555b6001600555600980546001600160a01b03199081166001600160a01b0393841617909155600a8054821633179055600c8054909116918316919091179055670de0b6b3a76400006008558251825103610645575f5b8351811015610525576001600160a01b03610280828661094c565b5116156104e057610291818461094c565b51156104aa576001600160a01b036102a9828661094c565b51166102b5828561094c565b5160408051929083018084116001600160401b0390911117610496576040830160405282526020820152600654680100000000000000008110156104965760018101806006558110156104825760065f5281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155610383828661094c565b511660018060a01b03600c5416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa908115610445575f91610450575b50156103d1575b5050600101610265565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561044557610409575b806103c7565b6020813d60201161043d575b81610422602093836108fe565b81010312610439575180151503610439575f610403565b5f80fd5b3d9150610415565b6040513d5f823e3d90fd5b90506020813d60201161047a575b8161046b602093836108fe565b8101031261043957515f6103c0565b3d915061045e565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b5060078490556040516389a3027160e01b815290602090829060049082906001600160a01b03165afa908115610445575f9161060b575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105bd57610594838361094c565b5181018091116105a957600190920191610581565b634e487b7160e01b5f52601160045260245ffd5b612710036105d457604051612d9f90816109618239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d60201161063d575b81610626602093836108fe565b810103126104395761063790610921565b8261055c565b3d9150610619565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070c57509084600195949392106106f4575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106e6565b929360206001819287860151815501950193016106d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610788575b90601f859493920160051c01905b81811061077a57506101e5565b5f815584935060010161076d565b909150819061075f565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510610828576001945083601f19811610610810575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f8080610802565b818101518355602094850194600190930192909101906107e7565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106108a7575b90601f859493920160051c01905b8181106108995750610183565b5f815584935060010161088c565b909150819061087e565b91607f169161016f565b81518152602091820191016100ec565b602080916108d884610921565b81520191019061008d565b604081019081106001600160401b0382111761049657604052565b601f909101601f19168101906001600160401b0382119082101761049657604052565b51906001600160a01b038216820361043957565b6001600160401b0381116104965760051b60200190565b80518210156104825760209160051b01019056fe60806040818152600480361015610014575f80fd5b5f925f3560e01c90816301d22ccd1461225e5750806306fdde03146121145780630723c99914611e3a5780630902f1ac14611dec578063095ea7b314611ce657806318160ddd14611caa5780631a68650214611c6857806322acb86714611bed57806323b872dd14611a99578063313ce56714611a6057806336bf6e3914611a0e5780633dff5b7f146119255780634aa066521461190a57806367a6c440146118d157806367e4ac2c146118425780636e81221c146115cf57806370a082311461156e57806377aace1a1461151c5780637fec8d38146114e057806389ab35321461145857806389afcb4414610f3f5780638a77c8dc14610efc57806395d89b4114610da8578063a9059cbb14610d5a578063b2b55d7014610ae5578063c2ee3a0814610d1e578063c45a015514610ccc578063cdf456e114610c7a578063cf8fa76414610bc1578063d14ef46d14610b47578063d66bd52414610ae5578063dd62ed3e14610a70578063de836ebd14610675578063e73faa2d146106345763f47b45e8146101a1575f80fd5b346104f1577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc915f833601126104f15773ffffffffffffffffffffffffffffffffffffffff938460095416926101f8843314612561565b610208610203612a1d565b6125c6565b600691600654916102188361262b565b966102228461262b565b61022b8561262b565b908a6102368761262b565b936102408861262b565b9a61024a8961262b565b985f8e5b8282106105585750505061026061268e565b9083600c54169060075494600b541693823b156104f1578f966102c7968f9660e0946102e85f99958f956102d98c98519d8e9c8d9b8c9a7ff0bf7714000000000000000000000000000000000000000000000000000000008c528b015260e48a019061233a565b60249f848a83030160248b01526124b3565b9187830301604488015261233a565b92606485015280608485015260a484015260c483015203925af1801561054e57610506575b5084600654948c60095416915b8d8d8883106103f3578d8d8d8d8d5f5b835481101561036c5780886103406001936124fc565b50541661034d828961267a565b51905f52600d602052610364875f20918254612a73565b90550161032a565b50928693865f5b85548110156103b55780876103896001936124fc565b505416610396828861267a565b51905f52600d6020526103ad865f209182546128a6565b905501610373565b507f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8835160208152806103ed339460208301906124b3565b0390a280f35b826103fd9161267a565b5116908b5180927f70a082310000000000000000000000000000000000000000000000000000000082528585830152818760209384935afa9081156104fc578a916104c9575b5060019250610452828961267a565b5261045d818861267a565b51610468828861267a565b5110156104a1578c61049982610493610481828c61267a565b5161048c838c61267a565b51906128a6565b9261267a565b525b0161031a565b6104b96104ae828861267a565b5161048c838a61267a565b6104c3828c61267a565b5261049b565b905082813d83116104f5575b6104df81836123cd565b810103126104f157600191515f610443565b5f80fd5b503d6104d5565b8d513d8c823e3d90fd5b90945067ffffffffffffffff81116105225787525f935f61030d565b6041847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b89513d5f823e3d90fd5b81610598918761056c8396979899956124fc565b505416610579838361267a565b526001610585836124fc565b500154610592838b61267a565b5261267a565b5116908c5180927f70a08231000000000000000000000000000000000000000000000000000000008252858b83015281602460209384935afa90811561062a575f916105fb575b50600192506105ee828961267a565b5201908e9392918e61024e565b905082813d8311610623575b61061181836123cd565b810103126104f157600191515f6105df565b503d610607565b8e513d5f823e3d90fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209061066e612a80565b9051908152f35b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576106ac6122f4565b91602492833567ffffffffffffffff81116104f1576106ce9036908501612453565b9273ffffffffffffffffffffffffffffffffffffffff936106f485600954163314612561565b6002545f9161070161268e565b9060065491518203610a145781156109b857905f915b81831061097f5750505081156108fd57806108525750935b84156107f6576107628591335f525f602052855f2054946107508482612b58565b1693845f525f602052855f20546128a6565b0361079a5750602093507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b606490600b8660208651937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606482600d8860208851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61085a612aab565b5091821561087b5761087592916108709161282f565b61286f565b9361072f565b60848460268a60208a51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848360228960208951937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091936109af6001916109a98b610995896124fc565b5054166109a2898761267a565b5190612cff565b90612a73565b94019190610717565b60648560098b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b60648560178b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610aaa6122f4565b610ab2612317565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff610b356122f4565b165f52600d8252805f20549051908152f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157356006548110156104f157610b8b906124fc565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157803590610bfc612aab565b8092915051831015610c1d57602084610c15858561267a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906008549051908152f35b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610da1610d976122f4565b6024359033612bf2565b5160018152f35b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9280549060018260011c9160018416938415610ef2575b6020948585108114610ec657848852908115610e865750600114610e2d575b610bbd8686610e23828b03836123cd565b51918291826122ac565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610e735750505082610bbd94610e23928201019486610e12565b8054868501880152928601928101610e56565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610e2382610bbd86610e12565b6022837f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f1692610df3565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610f36612a1d565b90519015158152f35b5090346104f157602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610f7a6122f4565b73ffffffffffffffffffffffffffffffffffffffff806009541691610fa0833314612561565b305f525f8552835f20549586156113fc576002549687156113a057600654610fc78161262b565b98601e8302838104601e0361137457612710610fe5910480946128a6565b965f5b8381106112bb5750505050305f525f875261100885875f205410156129b8565b818785600c54168851928380927f61d027b30000000000000000000000000000000000000000000000000000000082525afa9081156112b1579088915f91611277575b5087517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116848201908152602081019390935291829081906040015b03815f305af190811561126d575f91611237575b50156111db57305f525f86526110cf84865f205410156129b8565b30156111ac57305f525f8652845f205490848210611168575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592610bbd96958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a25192828493845283019061233a565b85517fe450d38c0000000000000000000000000000000000000000000000000000000081523091810191825260208201929092526040810185905281906060010390fd5b6024905f8651917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b90508681813d8311611266575b61124e81836123cd565b810103126104f1575180151581036104f157886110b4565b503d611244565b86513d5f823e3d90fd5b82819392503d83116112aa575b61128e81836123cd565b810103126104f1575184811681036104f15787906110a061104b565b503d611284565b87513d5f823e3d90fd5b876112c5826124fc565b5054168a51907fa3e113fb000000000000000000000000000000000000000000000000000000008252308883015260248201528b81604481865afa90811561136a578a8593928f925f91611330575b5061049360019561087061132994879461282f565b5201610fe8565b94505050508b82813d8311611363575b61134a81836123cd565b810103126104f15790518391908d908b90610493611314565b503d611340565b8b513d5f823e3d90fd5b6011857f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b606482888851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15761148f6128b3565b8251928391818301918352835180925260608301916020809501945f5b8281106114c7578580610bbd8787838203602085015261233a565b86511515855295810195879550938101936001016114ac565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906007549051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600954169051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff6115be6122f4565b165f525f8252805f20549051908152f35b5090346104f15760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576116086122f4565b90611611612317565b6044359260643573ffffffffffffffffffffffffffffffffffffffff928382168092036104f15760026005541461181a576002600555838116938316928484146117bd57861561176057611666918791612786565b95835f52600d60205286855f20541061170357601e870290878204601e14881517156116d75750846116c06020986127107fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460629404906128a6565b9681519081528789820152a4600160055551908152f35b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b60649060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8685517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760065461187d8161262b565b905f5b81811061189c57835160208082528190610bbd908201866124b3565b8073ffffffffffffffffffffffffffffffffffffffff6118bd6001936124fc565b5054166118ca828661267a565b5201611880565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209051601e8152f35b82346104f15760209061066e61191f3661236d565b91612786565b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15780359067ffffffffffffffff82116104f15761197291369101612453565b9060243580151581036104f15773ffffffffffffffffffffffffffffffffffffffff926119a484600954163314612561565b5f5b600654811015611a0c5780856119bd6001936124fc565b5054166119ca828561267a565b519085156119f0575f52600d6020526119e7865f20918254612a73565b90555b016119a6565b5f52600d602052611a05865f209182546128a6565b90556119ea565b005b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd611a48612aab565b8392919251938493845280602085015283019061233a565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020905160128152f35b50346104f157611aa83661236d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8303611b0e575b602087610da1888888612bf2565b858310611ba8578115611b79573315611b4a57505f90815260016020908152868220338352815290869020918590039091558290610da1611b00565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157600654611c288161262b565b905f5b818110611c4757835160208082528190610bbd9082018661233a565b806001611c5481936124fc565b500154611c61828661267a565b5201611c2b565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090611ca2612aab565b509051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906002549051908152f35b5090346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611d1e6122f4565b602435903315611dbd5773ffffffffffffffffffffffffffffffffffffffff16908115611d8e5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd90611e2761268e565b905191829160208352602083019061233a565b50346104f157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611e746122f4565b9173ffffffffffffffffffffffffffffffffffffffff93611e9a85600954163314612561565b611ea5610203612a1d565b611ead612aab565b6006549491611ebb8661262b565b915f5b8781106120bf575050505f945f5b8181106120a05750611edd9061262b565b945f5b825181101561204857611ef3818461267a565b51611f01575b600101611ee0565b611f0b818461267a565b51858a611f17846124fc565b5054168b600c54168c600b54168a611f868a51968795869485947f248391ff000000000000000000000000000000000000000000000000000000008652850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03915afa90811561203e575f91612011575b508015611fb55790600191611fad828a61267a565b529050611ef9565b606487878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b90508581813d8311612037575b61202881836123cd565b810103126104f157518a611f98565b503d61201e565b85513d5f823e3d90fd5b50610bbd9394506120599087612b58565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e82518581528061208e33948883019061233a565b0390a25192828493845283019061233a565b956120b86001916120b1898661267a565b5190612a73565b9601611ecc565b806127106120db60016120d281956124fc565b5001548661282f565b04806120e7838661267a565b51106120f5575b5001611ebe565b6121039061048c838661267a565b61210d828761267a565b528b6120ee565b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9260035460018160011c91600181168015612254575b602094858510821461222857508387529081156121ea5750600114612190575b505050610e2382610bbd9403836123cd565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106121d75750505082610bbd94610e23928201019461217e565b80548685018801529286019281016121bb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610e2382610bbd61217e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261215e565b346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600c54168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b9081518082526020808093019301915f5b828110612359575050505090565b83518552938101939281019260010161234b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126104f15773ffffffffffffffffffffffffffffffffffffffff9060043582811681036104f1579160243590811681036104f1579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761240e57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161240e5760051b60200190565b9080601f830112156104f157602090823561246d8161243b565b9361247b60405195866123cd565b81855260208086019260051b8201019283116104f157602001905b8282106124a4575050505090565b81358152908301908301612496565b9081518082526020808093019301915f5b8281106124d2575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016124c4565b6006548110156125345760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b1561256857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b156125cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b906126358261243b565b61264260405191826123cd565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612670829461243b565b0190602036910137565b80518210156125345760209160051b010190565b60245f73ffffffffffffffffffffffffffffffffffffffff60095416604051928380927f3e99c1e40000000000000000000000000000000000000000000000000000000082523060048301525afa90811561277b575f916126ed575090565b90503d805f833e6126fe81836123cd565b81019060209081818403126104f15780519067ffffffffffffffff82116104f157019180601f840112156104f15782516127378161243b565b9361274560405195866123cd565b818552838086019260051b8201019283116104f1578301905b82821061276c575050505090565b8151815290830190830161275e565b6040513d5f823e3d90fd5b600c546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa90811561277b575f91612800575090565b90506020813d602011612827575b8161281b602093836123cd565b810103126104f1575190565b3d915061280e565b8181029291811591840414171561284257565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612879570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b9190820391821161284257565b6128bb612aab565b9190600654906128ca8261243b565b916128d860405193846123cd565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06129058261243b565b013660208501376129158161262b565b945f5b82811061292757505050509190565b612931818361267a565b519061271091828102928184041490151715612842576129538560019361286f565b61295c826124fc565b508301548391818111156129915790612974916128a6565b61297e838b61267a565b52612989828861267a565b525b01612918565b9061299c92506128a6565b6129a6828a61267a565b525f6129b2828861267a565b5261298b565b156129bf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612a256128b3565b5f5b8151811015612a6c57612a3a818461267a565b51151580612a57575b612a4f57600101612a27565b505050600190565b50612a62818361267a565b5160075410612a43565b5050505f90565b9190820180921161284257565b612a88612aab565b506002548015612aa557610870612aa2926008549061282f565b90565b50505f90565b600654905f612ab98361262b565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b828410612ae757505050509190565b90919293612b2760019183612afb886124fc565b505416858103612b31575f52600d60205260405f2054612b1b888b61267a565b525b6120b1878a61267a565b9401929190612ad8565b80612b48915f52600d60205260405f205490612cff565b612b52888b61267a565b52612b1d565b73ffffffffffffffffffffffffffffffffffffffff16908115612bc2577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612ba65f94600254612a73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff808416928315612ccf5716928315612bc257825f525f60205260405f205490828210612c775750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600c54600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101939093526020918391168180606481016127eb56fea264697066735822122002fb5f90be03d678677ac304ec3f491eda7f0caccb27a4d0da4f22dcce0a35b064736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x3700 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x2D9F SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x225E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2114 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1E3A JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x1DEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CE6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CAA JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1C68 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x1BED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A99 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A60 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x3DFF5B7F EQ PUSH2 0x1925 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x190A JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x18D1 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x1842 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x15CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0x151C JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x14E0 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x1458 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xF3F JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xEFC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDA8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD5A JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0xD1E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xCCC JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0xC7A JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x634 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP2 PUSH0 DUP4 CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 PUSH1 0x9 SLOAD AND SWAP3 PUSH2 0x1F8 DUP5 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x6 SWAP2 PUSH1 0x6 SLOAD SWAP2 PUSH2 0x218 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP7 PUSH2 0x222 DUP5 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x22B DUP6 PUSH2 0x262B JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x236 DUP8 PUSH2 0x262B JUMP JUMPDEST SWAP4 PUSH2 0x240 DUP9 PUSH2 0x262B JUMP JUMPDEST SWAP11 PUSH2 0x24A DUP10 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH0 DUP15 JUMPDEST DUP3 DUP3 LT PUSH2 0x558 JUMPI POP POP POP PUSH2 0x260 PUSH2 0x268E JUMP JUMPDEST SWAP1 DUP4 PUSH1 0xC SLOAD AND SWAP1 PUSH1 0x7 SLOAD SWAP5 PUSH1 0xB SLOAD AND SWAP4 DUP3 EXTCODESIZE ISZERO PUSH2 0x4F1 JUMPI DUP16 SWAP7 PUSH2 0x2C7 SWAP7 DUP16 SWAP7 PUSH1 0xE0 SWAP5 PUSH2 0x2E8 PUSH0 SWAP10 SWAP6 DUP16 SWAP6 PUSH2 0x2D9 DUP13 SWAP9 MLOAD SWAP14 DUP15 SWAP13 DUP14 SWAP12 DUP13 SWAP11 PUSH32 0xF0BF771400000000000000000000000000000000000000000000000000000000 DUP13 MSTORE DUP12 ADD MSTORE PUSH1 0xE4 DUP11 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x24 SWAP16 DUP5 DUP11 DUP4 SUB ADD PUSH1 0x24 DUP12 ADD MSTORE PUSH2 0x24B3 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB ADD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x54E JUMPI PUSH2 0x506 JUMPI JUMPDEST POP DUP5 PUSH1 0x6 SLOAD SWAP5 DUP13 PUSH1 0x9 SLOAD AND SWAP2 JUMPDEST DUP14 DUP14 DUP9 DUP4 LT PUSH2 0x3F3 JUMPI DUP14 DUP14 DUP14 DUP14 DUP14 PUSH0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x36C JUMPI DUP1 DUP9 PUSH2 0x340 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x34D DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x364 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x32A JUMP JUMPDEST POP SWAP3 DUP7 SWAP4 DUP7 PUSH0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0x3B5 JUMPI DUP1 DUP8 PUSH2 0x389 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x396 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x3AD DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x373 JUMP JUMPDEST POP PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP4 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x3ED CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x24B3 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH2 0x3FD SWAP2 PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP12 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP6 DUP4 ADD MSTORE DUP2 DUP8 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4FC JUMPI DUP11 SWAP2 PUSH2 0x4C9 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x452 DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x45D DUP2 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x468 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x4A1 JUMPI DUP13 PUSH2 0x499 DUP3 PUSH2 0x493 PUSH2 0x481 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP3 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x31A JUMP JUMPDEST PUSH2 0x4B9 PUSH2 0x4AE DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP11 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x4C3 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4F5 JUMPI JUMPDEST PUSH2 0x4DF DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x443 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4D5 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x522 JUMPI DUP8 MSTORE PUSH0 SWAP4 PUSH0 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x598 SWAP2 DUP8 PUSH2 0x56C DUP4 SWAP7 SWAP8 SWAP9 SWAP10 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x579 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x585 DUP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x592 DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP13 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP12 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x62A JUMPI PUSH0 SWAP2 PUSH2 0x5FB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x5EE DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD SWAP1 DUP15 SWAP4 SWAP3 SWAP2 DUP15 PUSH2 0x24E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x623 JUMPI JUMPDEST PUSH2 0x611 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x5DF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x607 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x2A80 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x6AC PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F1 JUMPI PUSH2 0x6CE SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x6F4 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x701 PUSH2 0x268E JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA14 JUMPI DUP2 ISZERO PUSH2 0x9B8 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x97F JUMPI POP POP POP DUP2 ISZERO PUSH2 0x8FD JUMPI DUP1 PUSH2 0x852 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x762 DUP6 SWAP2 CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP5 PUSH2 0x750 DUP5 DUP3 PUSH2 0x2B58 JUMP JUMPDEST AND SWAP4 DUP5 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SUB PUSH2 0x79A JUMPI POP PUSH1 0x20 SWAP4 POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0xB DUP7 PUSH1 0x20 DUP7 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0xD DUP9 PUSH1 0x20 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x85A PUSH2 0x2AAB JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x87B JUMPI PUSH2 0x875 SWAP3 SWAP2 PUSH2 0x870 SWAP2 PUSH2 0x282F JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST SWAP4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x26 DUP11 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x22 DUP10 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x9AF PUSH1 0x1 SWAP2 PUSH2 0x9A9 DUP12 PUSH2 0x995 DUP10 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x9A2 DUP10 DUP8 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x9 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x17 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAAA PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x2317 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB35 PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xD DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0xB8B SWAP1 PUSH2 0x24FC JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xBFC PUSH2 0x2AAB JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x20 DUP5 PUSH2 0xC15 DUP6 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xDA1 PUSH2 0xD97 PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2BF2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xEF2 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xEC6 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE2D JUMPI JUMPDEST PUSH2 0xBBD DUP7 DUP7 PUSH2 0xE23 DUP3 DUP12 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22AC JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xE73 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE12 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE56 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD DUP7 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xDF3 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF36 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xF7A PUSH2 0x22F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x9 SLOAD AND SWAP2 PUSH2 0xFA0 DUP4 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x13FC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC7 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1374 JUMPI PUSH2 0x2710 PUSH2 0xFE5 SWAP2 DIV DUP1 SWAP5 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x12BB JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE PUSH2 0x1008 DUP6 DUP8 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x61D027B300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12B1 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x1277 JUMPI JUMPDEST POP DUP8 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x126D JUMPI PUSH0 SWAP2 PUSH2 0x1237 JUMPI JUMPDEST POP ISZERO PUSH2 0x11DB JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE PUSH2 0x10CF DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x11AC JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1168 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0xBBD SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP6 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1266 JUMPI JUMPDEST PUSH2 0x124E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI DUP9 PUSH2 0x10B4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1244 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x12AA JUMPI JUMPDEST PUSH2 0x128E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI DUP8 SWAP1 PUSH2 0x10A0 PUSH2 0x104B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1284 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x12C5 DUP3 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP11 MLOAD SWAP1 PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP9 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP12 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x136A JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x1330 JUMPI JUMPDEST POP PUSH2 0x493 PUSH1 0x1 SWAP6 PUSH2 0x870 PUSH2 0x1329 SWAP5 DUP8 SWAP5 PUSH2 0x282F JUMP JUMPDEST MSTORE ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1363 JUMPI JUMPDEST PUSH2 0x134A DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x493 PUSH2 0x1314 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1340 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 DUP3 DUP9 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x148F PUSH2 0x28B3 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x14C7 JUMPI DUP6 DUP1 PUSH2 0xBBD DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x14AC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x15BE PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1608 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 PUSH2 0x1611 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x4F1 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x181A JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x17BD JUMPI DUP7 ISZERO PUSH2 0x1760 JUMPI PUSH2 0x1666 SWAP2 DUP8 SWAP2 PUSH2 0x2786 JUMP JUMPDEST SWAP6 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP7 DUP6 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1703 JUMPI PUSH1 0x1E DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x1E EQ DUP9 ISZERO OR ISZERO PUSH2 0x16D7 JUMPI POP DUP5 PUSH2 0x16C0 PUSH1 0x20 SWAP9 PUSH2 0x2710 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP5 DIV SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP6 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x187D DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x189C JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x24B3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x18BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x18CA DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1880 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x191F CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP2 PUSH2 0x2786 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI PUSH2 0x1972 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x19A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1A0C JUMPI DUP1 DUP6 PUSH2 0x19BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x19CA DUP3 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x19F0 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x19E7 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x19A6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x1A05 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x19EA JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD PUSH2 0x1A48 PUSH2 0x2AAB JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x1AA8 CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x1B0E JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xDA1 DUP9 DUP9 DUP9 PUSH2 0x2BF2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1BA8 JUMPI DUP2 ISZERO PUSH2 0x1B79 JUMPI CALLER ISZERO PUSH2 0x1B4A JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xDA1 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1C28 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C47 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x233A JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1C54 DUP2 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1C61 DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1C2B JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CA2 PUSH2 0x2AAB JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1D1E PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1DBD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD SWAP1 PUSH2 0x1E27 PUSH2 0x268E JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1E74 PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x1E9A DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1EA5 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x1EAD PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x1EBB DUP7 PUSH2 0x262B JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x20BF JUMPI POP POP POP PUSH0 SWAP5 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20A0 JUMPI POP PUSH2 0x1EDD SWAP1 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2048 JUMPI PUSH2 0x1EF3 DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x1F01 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x1F0B DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD DUP6 DUP11 PUSH2 0x1F17 DUP5 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP12 PUSH1 0xC SLOAD AND DUP13 PUSH1 0xB SLOAD AND DUP11 PUSH2 0x1F86 DUP11 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x203E JUMPI PUSH0 SWAP2 PUSH2 0x2011 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1FB5 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1FAD DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x64 DUP8 DUP8 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x2028 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP11 PUSH2 0x1F98 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x201E JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0xBBD SWAP4 SWAP5 POP PUSH2 0x2059 SWAP1 DUP8 PUSH2 0x2B58 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x208E CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SWAP6 PUSH2 0x20B8 PUSH1 0x1 SWAP2 PUSH2 0x20B1 DUP10 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP7 ADD PUSH2 0x1ECC JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x20DB PUSH1 0x1 PUSH2 0x20D2 DUP2 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x282F JUMP JUMPDEST DIV DUP1 PUSH2 0x20E7 DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD LT PUSH2 0x20F5 JUMPI JUMPDEST POP ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x2103 SWAP1 PUSH2 0x48C DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x210D DUP3 DUP8 PUSH2 0x267A JUMP JUMPDEST MSTORE DUP12 PUSH2 0x20EE JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2254 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2228 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x21EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2190 JUMPI JUMPDEST POP POP POP PUSH2 0xE23 DUP3 PUSH2 0xBBD SWAP5 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x21D7 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x217E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x21BB JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD PUSH2 0x217E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x215E JUMP JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xC SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2359 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x234B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x240E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x240E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x246D DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x247B PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x24A4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2496 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24D2 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2568 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2635 DUP3 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2642 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x23CD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2670 DUP3 SWAP5 PUSH2 0x243B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x26ED JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x26FE DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4F1 JUMPI DUP3 MLOAD PUSH2 0x2737 DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x2745 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x276C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x2800 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2827 JUMPI JUMPDEST DUP2 PUSH2 0x281B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x280E JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2879 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x28BB PUSH2 0x2AAB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x28CA DUP3 PUSH2 0x243B JUMP JUMPDEST SWAP2 PUSH2 0x28D8 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x23CD JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2905 DUP3 PUSH2 0x243B JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2915 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2927 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2931 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2953 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x295C DUP3 PUSH2 0x24FC JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2991 JUMPI SWAP1 PUSH2 0x2974 SWAP2 PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x297E DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2989 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2918 JUMP JUMPDEST SWAP1 PUSH2 0x299C SWAP3 POP PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x29A6 DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x29B2 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x298B JUMP JUMPDEST ISZERO PUSH2 0x29BF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2A25 PUSH2 0x28B3 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2A6C JUMPI PUSH2 0x2A3A DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2A57 JUMPI JUMPDEST PUSH2 0x2A4F JUMPI PUSH1 0x1 ADD PUSH2 0x2A27 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2A62 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2A43 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x2A88 PUSH2 0x2AAB JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2AA5 JUMPI PUSH2 0x870 PUSH2 0x2AA2 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x282F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2AB9 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2AE7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2B27 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2AFB DUP9 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x2B31 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2B1B DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x20B1 DUP8 DUP11 PUSH2 0x267A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST DUP1 PUSH2 0x2B48 SWAP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0x2B52 DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x2BC2 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2BA6 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2A73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2CCF JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2BC2 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2C77 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x27EB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xFB PUSH0 SWAP1 0xBE SUB 0xD6 PUSH25 0x677AC304EC3F491EDA7F0CACCB27A4D0DA4F22DCCE0A35B064 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1731:23388:15:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1731:23388:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:23388:15;;;;-1:-1:-1;;;;;1731:23388:15;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;-1:-1:-1;;;1731:23388:15;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1731:23388:15;;;;;;;-1:-1:-1;;;;;1731:23388:15;;;;1962:13:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;1962:13:8;1731:23388:15;;;;;1962:13:8;1731:23388:15;;;;;-1:-1:-1;;;;;1731:23388:15;;;;1985:17:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;1962:13:8;1731:23388:15;;;;;1985:17:8;1731:23388:15;;;;;;;;-1:-1:-1;;;;;;1731:23388:15;;;-1:-1:-1;;;;;1731:23388:15;;;;;;;3393:20;1731:23388;;;;3403:10;1731:23388;;;3424:24;1731:23388;;;;;;;;;;;;;;3465:4;3459:10;1731:23388;;;;;4416:33;1731:23388;;-1:-1:-1;4541:3:15;1731:23388;;4521:18;;;;;-1:-1:-1;;;;;4569:10:15;;;;:::i;:::-;1731:23388;;4569:24;1731:23388;;4642:11;;;;:::i;:::-;1731:23388;4642:15;1731:23388;;-1:-1:-1;;;;;4727:10:15;;;;:::i;:::-;1731:23388;;4747:11;;;;:::i;:::-;1731:23388;;;;;;;;-1:-1:-1;;;;;;;;1731:23388:15;;;;;;;;;;;;;;4709:51;;1731:23388;4693:10;1731:23388;;;;;;;;;;;4693:10;1731:23388;;;;;;4693:10;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:23388:15;;;-1:-1:-1;;;;;;1731:23388:15;;;;;;;4709:51;;;1731:23388;;;;;;4800:10;;;;:::i;:::-;1731:23388;;;;;;;3424:24;1731:23388;;;;;;;4830:51;;4854:4;1985:17:8;4830:51:15;;1731:23388;;;;;;;4830:51;1731:23388;4830:51;;;;;;;;;-1:-1:-1;4830:51:15;;;4541:3;4830:56;;4826:150;;4541:3;;;1731:23388;;4506:13;;4826:150;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;4907:53;;1985:17:8;4907:53:15;;1731:23388;;;;;;;4907:53;;;;;;;;4826:150;;;;4907:53;1731:23388;4907:53;;1731:23388;4907:53;;;;;;1731:23388;4907:53;;;:::i;:::-;;;1731:23388;;;;;;;;;;;4907:53;;;1731:23388;-1:-1:-1;1731:23388:15;;4907:53;;;-1:-1:-1;4907:53:15;;;1731:23388;;;-1:-1:-1;1731:23388:15;;;;;4830:51;;;1731:23388;4830:51;;1731:23388;4830:51;;;;;;1731:23388;4830:51;;;:::i;:::-;;;1731:23388;;;;;4830:51;;;;;;-1:-1:-1;4830:51:15;;1731:23388;;;;-1:-1:-1;1731:23388:15;;1985:17:8;1731:23388:15;;-1:-1:-1;1731:23388:15;;;;;-1:-1:-1;1731:23388:15;;1985:17:8;1731:23388:15;;-1:-1:-1;1731:23388:15;;;;-1:-1:-1;;;1731:23388:15;;;1985:17:8;1731:23388:15;;;;;;;;-1:-1:-1;;;1731:23388:15;;;;;;;;;;-1:-1:-1;;;1731:23388:15;;;1985:17:8;1731:23388:15;;;;;;;;;;;;;;;;4521:18;-1:-1:-1;3602:18:15;1731:23388;;;;;-1:-1:-1;;;3672:39:15;;1731:23388;;;;;1985:17:8;;1731:23388:15;;-1:-1:-1;;;;;1731:23388:15;3672:39;;;;;;;-1:-1:-1;3672:39:15;;;4501:486;-1:-1:-1;3660:51:15;1731:23388;;-1:-1:-1;;;;;;1731:23388:15;-1:-1:-1;;;;;1731:23388:15;;;;;;;;;;-1:-1:-1;;;3850:3:15;1731:23388;;3829:19;;;;;3885:11;;;;:::i;:::-;1731:23388;;;;;;;;;3870:26;3850:3;1731:23388;3814:13;;;1731:23388;;;;-1:-1:-1;1731:23388:15;;1985:17:8;1731:23388:15;;-1:-1:-1;1731:23388:15;3829:19;3941:5;3926:20;1731:23388;;;;;;;;;;;;;;-1:-1:-1;;;1731:23388:15;;;1985:17:8;1731:23388:15;;;;;;;;-1:-1:-1;;;1731:23388:15;;;;;;;3672:39;;;1731:23388;3672:39;;1731:23388;3672:39;;;;;;1731:23388;3672:39;;;:::i;:::-;;;1731:23388;;;;;;;:::i;:::-;3672:39;;;;;;-1:-1:-1;3672:39:15;;1731:23388;;;-1:-1:-1;;;1731:23388:15;;;1985:17:8;1731:23388:15;;;;;;;;;;;;;-1:-1:-1;;;1731:23388:15;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;1985:17:8;-1:-1:-1;1731:23388:15;;;;;-1:-1:-1;;;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;1731:23388:15;;;;;;;;;;1962:13:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:17:8;-1:-1:-1;1731:23388:15;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;-1:-1:-1;1731:23388:15;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;-1:-1:-1;1731:23388:15;;1985:17:8;1731:23388:15;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;1962:13:8;-1:-1:-1;1731:23388:15;;;-1:-1:-1;;1731:23388:15;;;;-1:-1:-1;;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;1731:23388:15;;;;;;;;;;1962:13:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:13:8;-1:-1:-1;1731:23388:15;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;-1:-1:-1;1731:23388:15;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1731:23388:15;;;;;;;:::o;:::-;;;;;-1:-1:-1;;1731:23388:15;;;;-1:-1:-1;;;;;1731:23388:15;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1731:23388:15;;;;;;:::o;:::-;-1:-1:-1;;;;;1731:23388:15;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8983,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_24157":{"entryPoint":8948,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":9069,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_uint256_dyn":{"entryPoint":9299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":9395,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":9018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":8876,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":9771,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":9275,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":10867,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":10351,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":10287,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":10406,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9165,"id":null,"parameterSlots":2,"returnSlots":0},"fun_computeTotalValuation":{"entryPoint":10923,"id":3456,"parameterSlots":0,"returnSlots":2},"fun_convertTokenToBase":{"entryPoint":11519,"id":3885,"parameterSlots":2,"returnSlots":1},"fun_getAmountOut":{"entryPoint":10118,"id":3021,"parameterSlots":3,"returnSlots":1},"fun_getDeviation":{"entryPoint":10419,"id":3145,"parameterSlots":0,"returnSlots":2},"fun_getReserves":{"entryPoint":9870,"id":3258,"parameterSlots":0,"returnSlots":1},"fun_isRebalanceNeeded":{"entryPoint":10781,"id":3998,"parameterSlots":0,"returnSlots":1},"fun_mint":{"entryPoint":11096,"id":1491,"parameterSlots":2,"returnSlots":0},"fun_transfer":{"entryPoint":11250,"id":1381,"parameterSlots":3,"returnSlots":0},"fun_unitPrice":{"entryPoint":10880,"id":3240,"parameterSlots":0,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":9850,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":10680,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e4fc":{"entryPoint":9670,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e84c":{"entryPoint":9569,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_AssetInfo__dyn":{"entryPoint":9468,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"60806040818152600480361015610014575f80fd5b5f925f3560e01c90816301d22ccd1461225e5750806306fdde03146121145780630723c99914611e3a5780630902f1ac14611dec578063095ea7b314611ce657806318160ddd14611caa5780631a68650214611c6857806322acb86714611bed57806323b872dd14611a99578063313ce56714611a6057806336bf6e3914611a0e5780633dff5b7f146119255780634aa066521461190a57806367a6c440146118d157806367e4ac2c146118425780636e81221c146115cf57806370a082311461156e57806377aace1a1461151c5780637fec8d38146114e057806389ab35321461145857806389afcb4414610f3f5780638a77c8dc14610efc57806395d89b4114610da8578063a9059cbb14610d5a578063b2b55d7014610ae5578063c2ee3a0814610d1e578063c45a015514610ccc578063cdf456e114610c7a578063cf8fa76414610bc1578063d14ef46d14610b47578063d66bd52414610ae5578063dd62ed3e14610a70578063de836ebd14610675578063e73faa2d146106345763f47b45e8146101a1575f80fd5b346104f1577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc915f833601126104f15773ffffffffffffffffffffffffffffffffffffffff938460095416926101f8843314612561565b610208610203612a1d565b6125c6565b600691600654916102188361262b565b966102228461262b565b61022b8561262b565b908a6102368761262b565b936102408861262b565b9a61024a8961262b565b985f8e5b8282106105585750505061026061268e565b9083600c54169060075494600b541693823b156104f1578f966102c7968f9660e0946102e85f99958f956102d98c98519d8e9c8d9b8c9a7ff0bf7714000000000000000000000000000000000000000000000000000000008c528b015260e48a019061233a565b60249f848a83030160248b01526124b3565b9187830301604488015261233a565b92606485015280608485015260a484015260c483015203925af1801561054e57610506575b5084600654948c60095416915b8d8d8883106103f3578d8d8d8d8d5f5b835481101561036c5780886103406001936124fc565b50541661034d828961267a565b51905f52600d602052610364875f20918254612a73565b90550161032a565b50928693865f5b85548110156103b55780876103896001936124fc565b505416610396828861267a565b51905f52600d6020526103ad865f209182546128a6565b905501610373565b507f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8835160208152806103ed339460208301906124b3565b0390a280f35b826103fd9161267a565b5116908b5180927f70a082310000000000000000000000000000000000000000000000000000000082528585830152818760209384935afa9081156104fc578a916104c9575b5060019250610452828961267a565b5261045d818861267a565b51610468828861267a565b5110156104a1578c61049982610493610481828c61267a565b5161048c838c61267a565b51906128a6565b9261267a565b525b0161031a565b6104b96104ae828861267a565b5161048c838a61267a565b6104c3828c61267a565b5261049b565b905082813d83116104f5575b6104df81836123cd565b810103126104f157600191515f610443565b5f80fd5b503d6104d5565b8d513d8c823e3d90fd5b90945067ffffffffffffffff81116105225787525f935f61030d565b6041847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b89513d5f823e3d90fd5b81610598918761056c8396979899956124fc565b505416610579838361267a565b526001610585836124fc565b500154610592838b61267a565b5261267a565b5116908c5180927f70a08231000000000000000000000000000000000000000000000000000000008252858b83015281602460209384935afa90811561062a575f916105fb575b50600192506105ee828961267a565b5201908e9392918e61024e565b905082813d8311610623575b61061181836123cd565b810103126104f157600191515f6105df565b503d610607565b8e513d5f823e3d90fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209061066e612a80565b9051908152f35b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576106ac6122f4565b91602492833567ffffffffffffffff81116104f1576106ce9036908501612453565b9273ffffffffffffffffffffffffffffffffffffffff936106f485600954163314612561565b6002545f9161070161268e565b9060065491518203610a145781156109b857905f915b81831061097f5750505081156108fd57806108525750935b84156107f6576107628591335f525f602052855f2054946107508482612b58565b1693845f525f602052855f20546128a6565b0361079a5750602093507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b606490600b8660208651937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606482600d8860208851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61085a612aab565b5091821561087b5761087592916108709161282f565b61286f565b9361072f565b60848460268a60208a51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848360228960208951937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091936109af6001916109a98b610995896124fc565b5054166109a2898761267a565b5190612cff565b90612a73565b94019190610717565b60648560098b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b60648560178b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610aaa6122f4565b610ab2612317565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff610b356122f4565b165f52600d8252805f20549051908152f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157356006548110156104f157610b8b906124fc565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157803590610bfc612aab565b8092915051831015610c1d57602084610c15858561267a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906008549051908152f35b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610da1610d976122f4565b6024359033612bf2565b5160018152f35b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9280549060018260011c9160018416938415610ef2575b6020948585108114610ec657848852908115610e865750600114610e2d575b610bbd8686610e23828b03836123cd565b51918291826122ac565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610e735750505082610bbd94610e23928201019486610e12565b8054868501880152928601928101610e56565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610e2382610bbd86610e12565b6022837f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f1692610df3565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610f36612a1d565b90519015158152f35b5090346104f157602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610f7a6122f4565b73ffffffffffffffffffffffffffffffffffffffff806009541691610fa0833314612561565b305f525f8552835f20549586156113fc576002549687156113a057600654610fc78161262b565b98601e8302838104601e0361137457612710610fe5910480946128a6565b965f5b8381106112bb5750505050305f525f875261100885875f205410156129b8565b818785600c54168851928380927f61d027b30000000000000000000000000000000000000000000000000000000082525afa9081156112b1579088915f91611277575b5087517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116848201908152602081019390935291829081906040015b03815f305af190811561126d575f91611237575b50156111db57305f525f86526110cf84865f205410156129b8565b30156111ac57305f525f8652845f205490848210611168575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592610bbd96958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a25192828493845283019061233a565b85517fe450d38c0000000000000000000000000000000000000000000000000000000081523091810191825260208201929092526040810185905281906060010390fd5b6024905f8651917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b90508681813d8311611266575b61124e81836123cd565b810103126104f1575180151581036104f157886110b4565b503d611244565b86513d5f823e3d90fd5b82819392503d83116112aa575b61128e81836123cd565b810103126104f1575184811681036104f15787906110a061104b565b503d611284565b87513d5f823e3d90fd5b876112c5826124fc565b5054168a51907fa3e113fb000000000000000000000000000000000000000000000000000000008252308883015260248201528b81604481865afa90811561136a578a8593928f925f91611330575b5061049360019561087061132994879461282f565b5201610fe8565b94505050508b82813d8311611363575b61134a81836123cd565b810103126104f15790518391908d908b90610493611314565b503d611340565b8b513d5f823e3d90fd5b6011857f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b606482888851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15761148f6128b3565b8251928391818301918352835180925260608301916020809501945f5b8281106114c7578580610bbd8787838203602085015261233a565b86511515855295810195879550938101936001016114ac565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906007549051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600954169051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff6115be6122f4565b165f525f8252805f20549051908152f35b5090346104f15760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576116086122f4565b90611611612317565b6044359260643573ffffffffffffffffffffffffffffffffffffffff928382168092036104f15760026005541461181a576002600555838116938316928484146117bd57861561176057611666918791612786565b95835f52600d60205286855f20541061170357601e870290878204601e14881517156116d75750846116c06020986127107fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460629404906128a6565b9681519081528789820152a4600160055551908152f35b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b60649060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8685517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760065461187d8161262b565b905f5b81811061189c57835160208082528190610bbd908201866124b3565b8073ffffffffffffffffffffffffffffffffffffffff6118bd6001936124fc565b5054166118ca828661267a565b5201611880565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209051601e8152f35b82346104f15760209061066e61191f3661236d565b91612786565b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15780359067ffffffffffffffff82116104f15761197291369101612453565b9060243580151581036104f15773ffffffffffffffffffffffffffffffffffffffff926119a484600954163314612561565b5f5b600654811015611a0c5780856119bd6001936124fc565b5054166119ca828561267a565b519085156119f0575f52600d6020526119e7865f20918254612a73565b90555b016119a6565b5f52600d602052611a05865f209182546128a6565b90556119ea565b005b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd611a48612aab565b8392919251938493845280602085015283019061233a565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020905160128152f35b50346104f157611aa83661236d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8303611b0e575b602087610da1888888612bf2565b858310611ba8578115611b79573315611b4a57505f90815260016020908152868220338352815290869020918590039091558290610da1611b00565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157600654611c288161262b565b905f5b818110611c4757835160208082528190610bbd9082018661233a565b806001611c5481936124fc565b500154611c61828661267a565b5201611c2b565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090611ca2612aab565b509051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906002549051908152f35b5090346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611d1e6122f4565b602435903315611dbd5773ffffffffffffffffffffffffffffffffffffffff16908115611d8e5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd90611e2761268e565b905191829160208352602083019061233a565b50346104f157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611e746122f4565b9173ffffffffffffffffffffffffffffffffffffffff93611e9a85600954163314612561565b611ea5610203612a1d565b611ead612aab565b6006549491611ebb8661262b565b915f5b8781106120bf575050505f945f5b8181106120a05750611edd9061262b565b945f5b825181101561204857611ef3818461267a565b51611f01575b600101611ee0565b611f0b818461267a565b51858a611f17846124fc565b5054168b600c54168c600b54168a611f868a51968795869485947f248391ff000000000000000000000000000000000000000000000000000000008652850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03915afa90811561203e575f91612011575b508015611fb55790600191611fad828a61267a565b529050611ef9565b606487878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b90508581813d8311612037575b61202881836123cd565b810103126104f157518a611f98565b503d61201e565b85513d5f823e3d90fd5b50610bbd9394506120599087612b58565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e82518581528061208e33948883019061233a565b0390a25192828493845283019061233a565b956120b86001916120b1898661267a565b5190612a73565b9601611ecc565b806127106120db60016120d281956124fc565b5001548661282f565b04806120e7838661267a565b51106120f5575b5001611ebe565b6121039061048c838661267a565b61210d828761267a565b528b6120ee565b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9260035460018160011c91600181168015612254575b602094858510821461222857508387529081156121ea5750600114612190575b505050610e2382610bbd9403836123cd565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106121d75750505082610bbd94610e23928201019461217e565b80548685018801529286019281016121bb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610e2382610bbd61217e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261215e565b346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600c54168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b9081518082526020808093019301915f5b828110612359575050505090565b83518552938101939281019260010161234b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126104f15773ffffffffffffffffffffffffffffffffffffffff9060043582811681036104f1579160243590811681036104f1579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761240e57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161240e5760051b60200190565b9080601f830112156104f157602090823561246d8161243b565b9361247b60405195866123cd565b81855260208086019260051b8201019283116104f157602001905b8282106124a4575050505090565b81358152908301908301612496565b9081518082526020808093019301915f5b8281106124d2575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016124c4565b6006548110156125345760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b1561256857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b156125cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b906126358261243b565b61264260405191826123cd565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612670829461243b565b0190602036910137565b80518210156125345760209160051b010190565b60245f73ffffffffffffffffffffffffffffffffffffffff60095416604051928380927f3e99c1e40000000000000000000000000000000000000000000000000000000082523060048301525afa90811561277b575f916126ed575090565b90503d805f833e6126fe81836123cd565b81019060209081818403126104f15780519067ffffffffffffffff82116104f157019180601f840112156104f15782516127378161243b565b9361274560405195866123cd565b818552838086019260051b8201019283116104f1578301905b82821061276c575050505090565b8151815290830190830161275e565b6040513d5f823e3d90fd5b600c546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa90811561277b575f91612800575090565b90506020813d602011612827575b8161281b602093836123cd565b810103126104f1575190565b3d915061280e565b8181029291811591840414171561284257565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612879570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b9190820391821161284257565b6128bb612aab565b9190600654906128ca8261243b565b916128d860405193846123cd565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06129058261243b565b013660208501376129158161262b565b945f5b82811061292757505050509190565b612931818361267a565b519061271091828102928184041490151715612842576129538560019361286f565b61295c826124fc565b508301548391818111156129915790612974916128a6565b61297e838b61267a565b52612989828861267a565b525b01612918565b9061299c92506128a6565b6129a6828a61267a565b525f6129b2828861267a565b5261298b565b156129bf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612a256128b3565b5f5b8151811015612a6c57612a3a818461267a565b51151580612a57575b612a4f57600101612a27565b505050600190565b50612a62818361267a565b5160075410612a43565b5050505f90565b9190820180921161284257565b612a88612aab565b506002548015612aa557610870612aa2926008549061282f565b90565b50505f90565b600654905f612ab98361262b565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b828410612ae757505050509190565b90919293612b2760019183612afb886124fc565b505416858103612b31575f52600d60205260405f2054612b1b888b61267a565b525b6120b1878a61267a565b9401929190612ad8565b80612b48915f52600d60205260405f205490612cff565b612b52888b61267a565b52612b1d565b73ffffffffffffffffffffffffffffffffffffffff16908115612bc2577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612ba65f94600254612a73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff808416928315612ccf5716928315612bc257825f525f60205260405f205490828210612c775750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600c54600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101939093526020918391168180606481016127eb56fea264697066735822122002fb5f90be03d678677ac304ec3f491eda7f0caccb27a4d0da4f22dcce0a35b064736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x225E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2114 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1E3A JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x1DEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CE6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CAA JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1C68 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x1BED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A99 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A60 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x3DFF5B7F EQ PUSH2 0x1925 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x190A JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x18D1 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x1842 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x15CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0x151C JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x14E0 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x1458 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xF3F JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xEFC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDA8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD5A JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0xD1E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xCCC JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0xC7A JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x634 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP2 PUSH0 DUP4 CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 PUSH1 0x9 SLOAD AND SWAP3 PUSH2 0x1F8 DUP5 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x6 SWAP2 PUSH1 0x6 SLOAD SWAP2 PUSH2 0x218 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP7 PUSH2 0x222 DUP5 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x22B DUP6 PUSH2 0x262B JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x236 DUP8 PUSH2 0x262B JUMP JUMPDEST SWAP4 PUSH2 0x240 DUP9 PUSH2 0x262B JUMP JUMPDEST SWAP11 PUSH2 0x24A DUP10 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH0 DUP15 JUMPDEST DUP3 DUP3 LT PUSH2 0x558 JUMPI POP POP POP PUSH2 0x260 PUSH2 0x268E JUMP JUMPDEST SWAP1 DUP4 PUSH1 0xC SLOAD AND SWAP1 PUSH1 0x7 SLOAD SWAP5 PUSH1 0xB SLOAD AND SWAP4 DUP3 EXTCODESIZE ISZERO PUSH2 0x4F1 JUMPI DUP16 SWAP7 PUSH2 0x2C7 SWAP7 DUP16 SWAP7 PUSH1 0xE0 SWAP5 PUSH2 0x2E8 PUSH0 SWAP10 SWAP6 DUP16 SWAP6 PUSH2 0x2D9 DUP13 SWAP9 MLOAD SWAP14 DUP15 SWAP13 DUP14 SWAP12 DUP13 SWAP11 PUSH32 0xF0BF771400000000000000000000000000000000000000000000000000000000 DUP13 MSTORE DUP12 ADD MSTORE PUSH1 0xE4 DUP11 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x24 SWAP16 DUP5 DUP11 DUP4 SUB ADD PUSH1 0x24 DUP12 ADD MSTORE PUSH2 0x24B3 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB ADD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x54E JUMPI PUSH2 0x506 JUMPI JUMPDEST POP DUP5 PUSH1 0x6 SLOAD SWAP5 DUP13 PUSH1 0x9 SLOAD AND SWAP2 JUMPDEST DUP14 DUP14 DUP9 DUP4 LT PUSH2 0x3F3 JUMPI DUP14 DUP14 DUP14 DUP14 DUP14 PUSH0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x36C JUMPI DUP1 DUP9 PUSH2 0x340 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x34D DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x364 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x32A JUMP JUMPDEST POP SWAP3 DUP7 SWAP4 DUP7 PUSH0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0x3B5 JUMPI DUP1 DUP8 PUSH2 0x389 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x396 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x3AD DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x373 JUMP JUMPDEST POP PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP4 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x3ED CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x24B3 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH2 0x3FD SWAP2 PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP12 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP6 DUP4 ADD MSTORE DUP2 DUP8 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4FC JUMPI DUP11 SWAP2 PUSH2 0x4C9 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x452 DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x45D DUP2 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x468 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x4A1 JUMPI DUP13 PUSH2 0x499 DUP3 PUSH2 0x493 PUSH2 0x481 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP3 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x31A JUMP JUMPDEST PUSH2 0x4B9 PUSH2 0x4AE DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP11 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x4C3 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4F5 JUMPI JUMPDEST PUSH2 0x4DF DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x443 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4D5 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x522 JUMPI DUP8 MSTORE PUSH0 SWAP4 PUSH0 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x598 SWAP2 DUP8 PUSH2 0x56C DUP4 SWAP7 SWAP8 SWAP9 SWAP10 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x579 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x585 DUP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x592 DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP13 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP12 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x62A JUMPI PUSH0 SWAP2 PUSH2 0x5FB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x5EE DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD SWAP1 DUP15 SWAP4 SWAP3 SWAP2 DUP15 PUSH2 0x24E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x623 JUMPI JUMPDEST PUSH2 0x611 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x5DF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x607 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x2A80 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x6AC PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F1 JUMPI PUSH2 0x6CE SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x6F4 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x701 PUSH2 0x268E JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA14 JUMPI DUP2 ISZERO PUSH2 0x9B8 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x97F JUMPI POP POP POP DUP2 ISZERO PUSH2 0x8FD JUMPI DUP1 PUSH2 0x852 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x762 DUP6 SWAP2 CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP5 PUSH2 0x750 DUP5 DUP3 PUSH2 0x2B58 JUMP JUMPDEST AND SWAP4 DUP5 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SUB PUSH2 0x79A JUMPI POP PUSH1 0x20 SWAP4 POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0xB DUP7 PUSH1 0x20 DUP7 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0xD DUP9 PUSH1 0x20 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x85A PUSH2 0x2AAB JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x87B JUMPI PUSH2 0x875 SWAP3 SWAP2 PUSH2 0x870 SWAP2 PUSH2 0x282F JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST SWAP4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x26 DUP11 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x22 DUP10 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x9AF PUSH1 0x1 SWAP2 PUSH2 0x9A9 DUP12 PUSH2 0x995 DUP10 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x9A2 DUP10 DUP8 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x9 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x17 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAAA PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x2317 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB35 PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xD DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0xB8B SWAP1 PUSH2 0x24FC JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xBFC PUSH2 0x2AAB JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x20 DUP5 PUSH2 0xC15 DUP6 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xDA1 PUSH2 0xD97 PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2BF2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xEF2 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xEC6 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE2D JUMPI JUMPDEST PUSH2 0xBBD DUP7 DUP7 PUSH2 0xE23 DUP3 DUP12 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22AC JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xE73 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE12 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE56 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD DUP7 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xDF3 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF36 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xF7A PUSH2 0x22F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x9 SLOAD AND SWAP2 PUSH2 0xFA0 DUP4 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x13FC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC7 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1374 JUMPI PUSH2 0x2710 PUSH2 0xFE5 SWAP2 DIV DUP1 SWAP5 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x12BB JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE PUSH2 0x1008 DUP6 DUP8 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x61D027B300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12B1 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x1277 JUMPI JUMPDEST POP DUP8 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x126D JUMPI PUSH0 SWAP2 PUSH2 0x1237 JUMPI JUMPDEST POP ISZERO PUSH2 0x11DB JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE PUSH2 0x10CF DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x11AC JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1168 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0xBBD SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP6 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1266 JUMPI JUMPDEST PUSH2 0x124E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI DUP9 PUSH2 0x10B4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1244 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x12AA JUMPI JUMPDEST PUSH2 0x128E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI DUP8 SWAP1 PUSH2 0x10A0 PUSH2 0x104B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1284 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x12C5 DUP3 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP11 MLOAD SWAP1 PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP9 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP12 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x136A JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x1330 JUMPI JUMPDEST POP PUSH2 0x493 PUSH1 0x1 SWAP6 PUSH2 0x870 PUSH2 0x1329 SWAP5 DUP8 SWAP5 PUSH2 0x282F JUMP JUMPDEST MSTORE ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1363 JUMPI JUMPDEST PUSH2 0x134A DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x493 PUSH2 0x1314 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1340 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 DUP3 DUP9 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x148F PUSH2 0x28B3 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x14C7 JUMPI DUP6 DUP1 PUSH2 0xBBD DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x14AC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x15BE PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1608 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 PUSH2 0x1611 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x4F1 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x181A JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x17BD JUMPI DUP7 ISZERO PUSH2 0x1760 JUMPI PUSH2 0x1666 SWAP2 DUP8 SWAP2 PUSH2 0x2786 JUMP JUMPDEST SWAP6 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP7 DUP6 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1703 JUMPI PUSH1 0x1E DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x1E EQ DUP9 ISZERO OR ISZERO PUSH2 0x16D7 JUMPI POP DUP5 PUSH2 0x16C0 PUSH1 0x20 SWAP9 PUSH2 0x2710 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP5 DIV SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP6 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x187D DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x189C JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x24B3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x18BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x18CA DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1880 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x191F CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP2 PUSH2 0x2786 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI PUSH2 0x1972 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x19A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1A0C JUMPI DUP1 DUP6 PUSH2 0x19BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x19CA DUP3 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x19F0 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x19E7 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x19A6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x1A05 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x19EA JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD PUSH2 0x1A48 PUSH2 0x2AAB JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x1AA8 CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x1B0E JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xDA1 DUP9 DUP9 DUP9 PUSH2 0x2BF2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1BA8 JUMPI DUP2 ISZERO PUSH2 0x1B79 JUMPI CALLER ISZERO PUSH2 0x1B4A JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xDA1 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1C28 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C47 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x233A JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1C54 DUP2 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1C61 DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1C2B JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CA2 PUSH2 0x2AAB JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1D1E PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1DBD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD SWAP1 PUSH2 0x1E27 PUSH2 0x268E JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1E74 PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x1E9A DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1EA5 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x1EAD PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x1EBB DUP7 PUSH2 0x262B JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x20BF JUMPI POP POP POP PUSH0 SWAP5 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20A0 JUMPI POP PUSH2 0x1EDD SWAP1 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2048 JUMPI PUSH2 0x1EF3 DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x1F01 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x1F0B DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD DUP6 DUP11 PUSH2 0x1F17 DUP5 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP12 PUSH1 0xC SLOAD AND DUP13 PUSH1 0xB SLOAD AND DUP11 PUSH2 0x1F86 DUP11 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x203E JUMPI PUSH0 SWAP2 PUSH2 0x2011 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1FB5 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1FAD DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x64 DUP8 DUP8 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x2028 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP11 PUSH2 0x1F98 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x201E JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0xBBD SWAP4 SWAP5 POP PUSH2 0x2059 SWAP1 DUP8 PUSH2 0x2B58 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x208E CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SWAP6 PUSH2 0x20B8 PUSH1 0x1 SWAP2 PUSH2 0x20B1 DUP10 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP7 ADD PUSH2 0x1ECC JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x20DB PUSH1 0x1 PUSH2 0x20D2 DUP2 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x282F JUMP JUMPDEST DIV DUP1 PUSH2 0x20E7 DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD LT PUSH2 0x20F5 JUMPI JUMPDEST POP ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x2103 SWAP1 PUSH2 0x48C DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x210D DUP3 DUP8 PUSH2 0x267A JUMP JUMPDEST MSTORE DUP12 PUSH2 0x20EE JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2254 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2228 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x21EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2190 JUMPI JUMPDEST POP POP POP PUSH2 0xE23 DUP3 PUSH2 0xBBD SWAP5 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x21D7 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x217E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x21BB JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD PUSH2 0x217E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x215E JUMP JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xC SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2359 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x234B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x240E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x240E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x246D DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x247B PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x24A4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2496 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24D2 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2568 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2635 DUP3 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2642 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x23CD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2670 DUP3 SWAP5 PUSH2 0x243B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x26ED JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x26FE DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4F1 JUMPI DUP3 MLOAD PUSH2 0x2737 DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x2745 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x276C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x2800 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2827 JUMPI JUMPDEST DUP2 PUSH2 0x281B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x280E JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2879 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x28BB PUSH2 0x2AAB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x28CA DUP3 PUSH2 0x243B JUMP JUMPDEST SWAP2 PUSH2 0x28D8 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x23CD JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2905 DUP3 PUSH2 0x243B JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2915 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2927 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2931 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2953 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x295C DUP3 PUSH2 0x24FC JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2991 JUMPI SWAP1 PUSH2 0x2974 SWAP2 PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x297E DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2989 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2918 JUMP JUMPDEST SWAP1 PUSH2 0x299C SWAP3 POP PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x29A6 DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x29B2 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x298B JUMP JUMPDEST ISZERO PUSH2 0x29BF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2A25 PUSH2 0x28B3 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2A6C JUMPI PUSH2 0x2A3A DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2A57 JUMPI JUMPDEST PUSH2 0x2A4F JUMPI PUSH1 0x1 ADD PUSH2 0x2A27 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2A62 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2A43 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x2A88 PUSH2 0x2AAB JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2AA5 JUMPI PUSH2 0x870 PUSH2 0x2AA2 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x282F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2AB9 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2AE7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2B27 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2AFB DUP9 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x2B31 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2B1B DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x20B1 DUP8 DUP11 PUSH2 0x267A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST DUP1 PUSH2 0x2B48 SWAP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0x2B52 DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x2BC2 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2BA6 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2A73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2CCF JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2BC2 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2C77 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x27EB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xFB PUSH0 SWAP1 0xBE SUB 0xD6 PUSH25 0x677AC304EC3F491EDA7F0CACCB27A4D0DA4F22DCCE0A35B064 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"1731:23388:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4040:9;1731:23388;;4026:10;4018:50;4026:10;;:23;4018:50;:::i;:::-;12408:52;12416:19;;:::i;:::-;12408:52;:::i;:::-;18186:10;1731:23388;18186:10;1731:23388;18172:32;;;;:::i;:::-;18242;;;;:::i;:::-;18324;;;:::i;:::-;18409;;;;;:::i;:::-;18484;;;;:::i;:::-;18562;;;;:::i;:::-;18612:13;1731:23388;18612:13;18627:21;;;;;;18879:13;;;;;:::i;:::-;1731:23388;;18925:10;1731:23388;;;18974:7;1731:23388;;19005:9;1731:23388;;18905:110;;;;;;1731:23388;;;;;;;;;;;;;;;;;;18905:110;;;;;;;1731:23388;18905:110;;;;1731:23388;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18905:110;;;;;;;;;;18607:232;19033:13;;18186:10;1731:23388;;;4040:9;1731:23388;;19028:428;19048:21;;;;;;;;24274:13;;;;;1731:23388;24312:3;1731:23388;;24289:21;;;;;24348:13;;;1731:23388;24348:13;;:::i;:::-;1731:23388;;;24403:10;;;;:::i;:::-;1731:23388;;;;24442:8;18789:38;1731:23388;24442:29;1731:23388;;;;;;24442:29;:::i;:::-;1731:23388;;;24274:13;;24289:21;;;;;;1731:23388;24312:3;1731:23388;;24289:21;;;;;24348:13;;;1731:23388;24348:13;;:::i;:::-;1731:23388;;;24403:10;;;;:::i;:::-;1731:23388;;;;24442:8;18789:38;1731:23388;24491:29;1731:23388;;;;;;24491:29;:::i;:::-;1731:23388;;;24274:13;;24289:21;;19571:38;24289:21;1731:23388;18789:38;1731:23388;;4026:10;1731:23388;4026:10;1731:23388;18789:38;1731:23388;;;;:::i;:::-;19571:38;;;1731:23388;;19071:3;19126:9;;;;:::i;:::-;1731:23388;;;;;19119:38;;1731:23388;19119:38;;;;;;1731:23388;18789:38;;;19119;;;;;;;;;;;;;;19071:3;19091:66;1731:23388;19091:66;;;;;;:::i;:::-;1731:23388;19178:25;;;;:::i;:::-;1731:23388;19206:22;;;;:::i;:::-;1731:23388;-1:-1:-1;19206:22:15;;;19267:25;19249:68;19267:25;:50;:25;;;;:::i;:::-;1731:23388;19295:22;;;;:::i;:::-;1731:23388;19267:50;;:::i;:::-;19249:68;;:::i;:::-;1731:23388;19174:271;1731:23388;19033:13;;19174:271;19379:50;:22;;;;:::i;:::-;1731:23388;19404:25;;;;:::i;19379:50::-;19358:71;;;;:::i;:::-;1731:23388;19174:271;;19119:38;;;;;;;;;;;;;;;:::i;:::-;;;1731:23388;;;;;;;19119:38;;;1731:23388;;;;19119:38;;;;;;1731:23388;;;;;;;;;18905:110;1731:23388;;;;;;;;;;;18905:110;;;;1731:23388;;;;;;;;;;18905:110;1731:23388;;;;;;;;;18650:3;18682:13;18796:9;18682:13;;;;;;;;;;:::i;:::-;1731:23388;;;18670:31;;;;:::i;:::-;1731:23388;;18729:13;;;:::i;:::-;:20;;1731:23388;18716:33;;;;:::i;:::-;1731:23388;18796:9;:::i;:::-;1731:23388;;;;;18789:38;;1731:23388;18789:38;;;;;;1731:23388;18789:38;1731:23388;18789:38;;;;;;;;;;;1731:23388;18789:38;;;18650:3;18764:63;1731:23388;18764:63;;;;;;:::i;:::-;1731:23388;;18612:13;;;;;;;;18789:38;;;;;;;;;;;;;;;:::i;:::-;;;1731:23388;;;;;;;18789:38;;;;;;;;;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;4018:50;1731:23388;4040:9;1731:23388;;4026:10;:23;4018:50;:::i;:::-;3222:12:8;1731:23388:15;;8322:13;;;:::i;:::-;1731:23388;8354:10;1731:23388;;;8354:37;;1731:23388;;8438:21;;1731:23388;;8491:13;1731:23388;8486:223;8506:21;;;;;;8729:14;;;;;1731:23388;;8826:16;;;8859:19;8822:307;;9147:11;;1731:23388;;9274:18;4026:10;;;1731:23388;;;;;;;;;9244:6;;;;;:::i;:::-;1731:23388;;;;;;;;;;;;9274:18;:::i;:::-;9313:11;1731:23388;;;;;;9358:16;1731:23388;;;;;;9358:16;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8822:307;8940:24;;:::i;:::-;8987:18;;;;1731:23388;;9072:45;9073:26;;;;;:::i;:::-;9072:45;:::i;:::-;8822:307;;;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8529:3;8565:13;;;8674:23;1731:23388;8565:13;8621:38;8565:13;;;;:::i;:::-;1731:23388;;;8648:10;;;;:::i;:::-;1731:23388;8621:38;;:::i;:::-;8674:23;;:::i;:::-;8529:3;1731:23388;8491:13;;;;1731:23388;;;4040:9;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;3952:11:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2057:43;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;1786:29;1731:23388;1786:29;;;;;;;;:::i;:::-;-1:-1:-1;1731:23388:15;;;1786:29;;;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13967:24;;;:::i;:::-;1731:23388;;;;;14010:33;;1731:23388;;;;14085:25;;;;;:::i;:::-;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1992:24;1731:23388;;;;;;;;;;;;;;;;;;;;;;;1907:22;1731:23388;;;;;;;;;;;;;;;;;;;;;;1851:18;1731:23388;;;;;;;;;;;;;;;;;;;;;3754:5:8;1731:23388:15;;:::i;:::-;;;735:10:12;;3754:5:8;:::i;:::-;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:23388:15;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4040:9;1731:23388;;4026:10;4018:50;4026:10;;:23;4018:50;:::i;:::-;10550:4;1731:23388;;;;;;;;;10575:9;;;1731:23388;;3222:12:8;1731:23388:15;10684:15;;;1731:23388;;10770:10;1731:23388;10756:32;;;:::i;:::-;1731:23388;1975:2;1731:23388;;;;;1975:2;1731:23388;;;10838:5;10878:11;1731:23388;;10878:11;;;:::i;:::-;10907:13;1731:23388;10922:21;;;;;;10550:4;;;;;1731:23388;;;;;11216:76;1731:23388;;;;;11224:41;;11216:76;:::i;:::-;1731:23388;;;11382:10;1731:23388;;;;11362:42;;;;1731:23388;11362:42;;;;;;;;;;;;1731:23388;11362:42;;;10902:304;-1:-1:-1;1731:23388:15;;;11331:79;;1731:23388;;;;11331:79;;;1731:23388;;;;;;;;;;;;;;;;;11331:79;;10550:4;1731:23388;10550:4;11331:79;;;;;;;1731:23388;11331:79;;;10902:304;1731:23388;;;;10550:4;1731:23388;;;;;11484:76;1731:23388;;;;;11492:41;;11484:76;:::i;:::-;10550:4;8317:21:8;8313:89;;10550:4:15;1731:23388;;;;;;;;;6603:19:8;;;;6599:115;;10550:4:15;;;11626:23;10550:4;1731:23388;10550:4;;;;;1731:23388;;;;;;;;;;;3222:12:8;1731:23388:15;;3222:12:8;1731:23388:15;;;;;;;7346:25:8;10550:4:15;;7346:25:8;;1731:23388:15;;;;;;11626:23;;1731:23388;;;;;;;;;;;:::i;6599:115:8:-;1731:23388:15;;6649:50:8;;;10550:4:15;6649:50:8;;;1731:23388:15;;;;;;;;;;;;;;;;;;;;6649:50:8;;;8313:89;1731:23388:15;;;;;8361:30:8;;;;;;1731:23388:15;8361:30:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;11331:79;;;;;;;;;;;;;;;;:::i;:::-;;;1731:23388;;;;;;;;;;;;11331:79;;;;;;;;;1731:23388;;;;;;;;;11362:42;;;;;;;;;;;;;;;;:::i;:::-;;;1731:23388;;;;;;;;;;;;11362:42;;11331:79;11362:42;;;;;;;;1731:23388;;;;;;;;;10945:3;11088:13;;;;:::i;:::-;1731:23388;;;;;10988:134;1731:23388;10988:134;;10550:4;10988:134;;;1731:23388;;;;;10988:134;;1731:23388;10988:134;;;;;;;;;;;;;;;1731:23388;10988:134;;;10945:3;11151:28;11150:44;1731:23388;11151:28;;11137:57;11151:28;;;;:::i;11137:57::-;1731:23388;;10907:13;;10988:134;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:23388;;;;;;;;;;;;;11150:44;10988:134;;;;;;;;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;1822:22;1731:23388;;;;;;;;;;;;;;;;;;;;;;1876:24;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;1755:1:13;2558:7;1731:23388:15;2558:18:13;2554:86;;1755:1;2558:7;1731:23388:15;;;;;;;7287:20;;;;1731:23388;;7357:10;;1731:23388;;7495:40;;;;;:::i;:::-;1731:23388;;;;7607:8;1731:23388;;;;;;;7607:35;1731:23388;;1975:2;1731:23388;;;;;;1975:2;1731:23388;;;;;;;;;7777:20;1731:23388;;7752:5;7815:50;1731:23388;;7777:20;;:::i;:::-;1731:23388;;;;;;;;;;;7815:50;1731:23388;2558:7:13;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2554:86:13;1731:23388:15;;;2599:30:13;;;;1731:23388:15;;;;;;;;;;;;16109:10;1731:23388;16095:32;;;:::i;:::-;16143:13;1731:23388;16158:21;;;;;;1731:23388;;;;;;;;;;;;;;:::i;16181:3::-;16213:13;1731:23388;16213:13;1731:23388;16213:13;;:::i;:::-;1731:23388;;;16201:31;;;;:::i;:::-;1731:23388;;16143:13;;1731:23388;;;;;;;;;;;;;;;1975:2;1731:23388;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4018:50;1731:23388;4040:9;1731:23388;;4026:10;:23;4018:50;:::i;:::-;1731:23388;24312:3;24293:10;1731:23388;24289:21;;;;;24348:13;;;1731:23388;24348:13;;:::i;:::-;1731:23388;;;24403:10;;;;:::i;:::-;1731:23388;;24428:92;;;;1731:23388;;24442:8;1731:23388;;24442:29;1731:23388;;;;;;24442:29;:::i;:::-;1731:23388;;24428:92;1731:23388;24274:13;;24428:92;1731:23388;;24491:8;1731:23388;;24491:29;1731:23388;;;;;;24491:29;:::i;:::-;1731:23388;;24428:92;;24289:21;1731:23388;;;;;;;;;;;;;;14528:24;;:::i;:::-;1731:23388;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3075:2:8;1731:23388:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;3952:11:8;1731:23388:15;;;;;735:10:12;1731:23388:15;;;;;;;;10828:37:8;10848:17;10828:37;;10824:310;;1731:23388:15;;5249:5:8;;;;;;:::i;10824:310::-;10885:24;;;10881:130;;10061:19;;10057:89;;735:10:12;10159:21:8;10155:90;;-1:-1:-1;1731:23388:15;;;;3952:11:8;1731:23388:15;;;;;;;735:10:12;1731:23388:15;;;;;;;;;;;;;;;;;5249:5:8;10824:310;;10155:90;1731:23388:15;;;;;10203:31:8;;;;;;1731:23388:15;10203:31:8;10057:89;1731:23388:15;;;;;10103:32:8;;;;;;1731:23388:15;10103:32:8;10881:130;1731:23388:15;;10936:60:8;;;735:10:12;10936:60:8;;;1731:23388:15;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;6649:50:8;;;1731:23388:15;;;;;;;;;;;;16568:10;1731:23388;16554:32;;;:::i;:::-;16602:13;1731:23388;16617:21;;;;;;1731:23388;;;;;;;;;;;;;;:::i;16640:3::-;16673:13;1731:23388;16673:13;;;;:::i;:::-;:20;;1731:23388;16660:33;;;;:::i;:::-;1731:23388;;16602:13;;1731:23388;;;;;;;;;;;;;14816:24;;;:::i;:::-;1731:23388;;;;;;;;;;;;;;;;;;;;;3222:12:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;735:10:12;;10061:19:8;10057:89;;1731:23388:15;;10159:21:8;;;10155:90;;1731:23388:15;735:10:12;;;1731:23388:15;;9105:4:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;10333:31:8;735:10:12;;10333:31:8;;1731:23388:15;9105:4:8;1731:23388:15;;;10155:90:8;1731:23388:15;;;;;10203:31:8;;;;;;1731:23388:15;10203:31:8;10057:89;1731:23388:15;;;;;10103:32:8;;;;;;1731:23388:15;10103:32:8;1731:23388:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;4018:50;1731:23388;4040:9;1731:23388;;4026:10;:23;4018:50;:::i;:::-;5498:52;5506:19;;:::i;5498:52::-;5617:24;;:::i;:::-;20709:10;1731:23388;;;20695:32;1731:23388;20695:32;:::i;:::-;20743:13;1731:23388;20758:21;;;;;;5838:43;;;1731:23388;20010:13;1731:23388;20025:21;;;;;;5921:32;;;;:::i;:::-;5971:13;1731:23388;6011:3;1731:23388;;5986:23;;;;;6035:15;;;;:::i;:::-;1731:23388;6031:112;;6011:3;1731:23388;;5971:13;;6031:112;6111:15;;;;:::i;:::-;1731:23388;21490:17;;;;;:::i;:::-;1731:23388;;;;22082:10;1731:23388;;;22102:9;1731:23388;;;22062:69;1731:23388;;22062:69;;;;;;;1731:23388;22062:69;;;;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;22062:69;;;;;;;;;;1731:23388;22062:69;;;6031:112;21546:15;;;1731:23388;;6075:52;1731:23388;6075:52;;;;;:::i;:::-;1731:23388;6031:112;;;;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;22062:69;;;;;;;;;;;;;;;;:::i;:::-;;;1731:23388;;;;;22062:69;;;;;;;;;1731:23388;;;;;;;;;5986:23;;1731:23388;5986:23;;;6182:19;5986:23;;6182:19;:::i;:::-;6220:43;1731:23388;;;;;4026:10;1731:23388;4026:10;1731:23388;;;;;;:::i;:::-;6220:43;;;1731:23388;;;;;;;;;;;:::i;20048:3::-;20091:15;20068:38;1731:23388;20091:15;;;;;:::i;:::-;1731:23388;20068:38;;:::i;:::-;20048:3;1731:23388;20010:13;;20781:3;20845:13;20869:5;20828:37;1731:23388;20845:13;;;;:::i;:::-;:20;;1731:23388;20828:37;;:::i;:::-;1731:23388;20893:13;;;;;:::i;:::-;1731:23388;20893:31;20889:121;;20781:3;;1731:23388;20743:13;;20889:121;20963:31;20981:13;;;;;:::i;20963:31::-;20945:49;;;;:::i;:::-;1731:23388;20889:121;;;1731:23388;;;;;;;;;;;;;;;;;;2151:5:8;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2151:5:8;1731:23388:15;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1731:23388:15;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2023:25;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:23388:15;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;20709:10;1731:23388;;;;;;20709:10;-1:-1:-1;1731:23388:15;;;;;;-1:-1:-1;1731:23388:15;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;15407:148::-;1731:23388;-1:-1:-1;1731:23388:15;15510:9;1731:23388;;;;15487:60;;;;1731:23388;15487:60;;15541:4;15487:60;;;1731:23388;15487:60;;;;;;;-1:-1:-1;15487:60:15;;;15480:67;15407:148;:::o;15487:60::-;;;;;-1:-1:-1;15487:60:15;;;;;;:::i;:::-;;;1731:23388;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;15487:60;;;;15407:148;:::o;1731:23388::-;;;;;;;;;;;;;15487:60;1731:23388;;;-1:-1:-1;1731:23388:15;;;;;12083:197;12225:10;1731:23388;;;;12205:67;;1731:23388;;;;12205:67;;;1731:23388;;;;;;;;;;;;;;;;;12205:67;;1731:23388;;;;;;;;12205:67;;;;;;;;;;-1:-1:-1;12205:67:15;;;12198:74;12083:197;:::o;12205:67::-;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:23388;;;;;12083:197;:::o;12205:67::-;;;-1:-1:-1;12205:67:15;;1731:23388;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;12791:864::-;12950:24;;:::i;:::-;1731:23388;;13005:10;1731:23388;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;13093:24;;;:::i;:::-;13135:13;-1:-1:-1;13150:13:15;;;;;;13616:31;;;;;12791:864;:::o;13165:3::-;13210:13;;;;:::i;:::-;1731:23388;13226:5;;1731:23388;;;;;;;;;;;;;;;13209:32;;1731:23388;13209:32;;:::i;:::-;13279:13;;;:::i;:::-;-1:-1:-1;13279:20:15;;1731:23388;;;13320:28;;;;;;13385;;;;:::i;:::-;13369:44;;;;:::i;:::-;1731:23388;13432:20;;;;:::i;:::-;1731:23388;13316:277;1731:23388;13135:13;;13316:277;13509:28;;;;;:::i;:::-;13493:44;;;;:::i;:::-;1731:23388;-1:-1:-1;13556:21:15;;;;:::i;:::-;1731:23388;13316:277;;1731:23388;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;24770:346;24895:14;;:::i;:::-;24937:1;24963:3;1731:23388;;24940:21;;;;;24987:13;;;;:::i;:::-;1731:23388;;;24987:40;;;24963:3;24983:92;;1731:23388;;24925:13;;24983:92;25048:11;;;1731:23388;25048:11;:::o;24987:40::-;25004:13;;;;;:::i;:::-;1731:23388;25020:7;1731:23388;-1:-1:-1;24987:40:15;;24940:21;;;;24937:1;24770:346;:::o;1731:23388::-;;;;;;;;;;:::o;14993:280::-;15080:24;;:::i;:::-;1731:23388;3222:12:8;1731:23388:15;15165:16;;15161:57;;15236:14;15235:30;1731:23388;15247:3;1731:23388;15236:14;;:::i;15235:30::-;14993:280;:::o;15161:57::-;15198:8;;-1:-1:-1;15198:8:15;:::o;16976:717::-;17117:10;1731:23388;;;17158:24;1731:23388;17158:24;:::i;:::-;17198:13;1731:23388;;;;17330:9;1731:23388;;17193:447;17213:13;;;;;;17650:35;;;;;16976:717;:::o;17228:3::-;17270:13;;;;17597:31;1731:23388;17270:13;;;;;:::i;:::-;-1:-1:-1;1731:23388:15;;17312:27;;;;;1731:23388;;17377:8;1731:23388;;;;;;17361:40;;;;:::i;:::-;1731:23388;17307:276;17615:13;;;;:::i;17597:31::-;17228:3;1731:23388;17198:13;;;;;17307:276;1731:23388;17462:61;1731:23388;;;17498:8;1731:23388;;;;;;17462:61;;:::i;:::-;17542:25;;;;:::i;:::-;1731:23388;17307:276;;7721:208:8;1731:23388:15;;7791:21:8;;;7787:91;;7346:25;1731:23388:15;;6496:21:8;6906:425;1731:23388:15;6496:21:8;1731:23388:15;6496:21:8;:::i;:::-;;1731:23388:15;;;;;;;;;;;;;;;;;;;;;7346:25:8;7721:208::o;7787:91::-;1731:23388:15;;;7835:32:8;;;7810:1;7835:32;;;1731:23388:15;7835:32:8;5656:300;;1731:23388:15;;;;5739:18:8;;;5735:86;;1731:23388:15;5834:16:8;;;5830:86;;1731:23388:15;6356:540:8;1731:23388:15;6356:540:8;1731:23388:15;;;6356:540:8;1731:23388:15;;6603:19:8;;;;6599:115;;1731:23388:15;;7346:25:8;1731:23388:15;;;;6356:540:8;1731:23388:15;6356:540:8;1731:23388:15;;;;6356:540:8;1731:23388:15;;;6356:540:8;1731:23388:15;;6356:540:8;1731:23388:15;;;;;;;;;;;;7346:25:8;5656:300::o;6599:115::-;1731:23388:15;;6649:50:8;;;1731:23388:15;;;;;6649:50:8;;;1731:23388:15;;;;;;;;;;;;;;;;6649:50:8;5735:86;1731:23388:15;;;5780:30:8;;;5755:1;5780:30;;;1731:23388:15;5780:30:8;23094:248:15;23256:10;1731:23388;23287:9;1731:23388;;;;23236:69;;1731:23388;;;;23236:69;;;1731:23388;;;;;;;;;;;;;;;23236:69;;1731:23388;;;;;;;;23236:69;1731:23388"},"gasEstimates":{"creation":{"codeDepositCost":"2335800","executionCost":"infinite","totalCost":"infinite"},"external":{"ONE()":"2820","SWAP_FEE_BPS()":"450","allowance(address,address)":"3212","approve(address,uint256)":"24382","assetInfos(uint256)":"9363","assetLiquidity(uint256)":"infinite","balanceOf(address)":"2747","baseAsset()":"2870","burn(address)":"infinite","computeTotalValuation()":"infinite","decimals()":"362","factory()":"2848","getAmountOut(address,address,uint256)":"infinite","getAssetReserve(address)":"2924","getAssets()":"infinite","getDeviation()":"infinite","getReserves()":"infinite","getWeights()":"infinite","isRebalanceNeeded()":"infinite","liquidity()":"infinite","mint(address,uint256[])":"infinite","name()":"infinite","performRebalanceIfNeeded()":"infinite","periphery()":"2650","rebalanceWeights(address)":"infinite","rebalancer()":"2262","reserves(address)":"3056","swap(address,address,uint256,address)":"infinite","symbol()":"infinite","totalSupply()":"2380","transfer(address,uint256)":"51238","transferFrom(address,address,uint256)":"75567","trigger()":"2666","unitPrice()":"infinite","updateReserves(uint256[],bool)":"infinite"},"internal":{"_calculateAmountsToAdd(uint256,uint256[] memory)":"infinite","_calculateLiquidity(uint256,uint256)":"infinite","_calculateTotalAddedLiquidity(uint256[] memory)":"infinite","_computeTotalValuation()":"infinite","_convertBaseToToken(address,uint256)":"infinite","_convertTokenToBase(address,uint256)":"infinite","_performRebalanceIfNeeded()":"infinite","_updateReserves(uint256[] memory,bool)":"infinite","initializeAssets(address[] memory,uint256[] memory)":"infinite","max(uint8,uint8)":"infinite","min(uint8,uint8)":"infinite"}},"methodIdentifiers":{"ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","balanceOf(address)":"70a08231","baseAsset()":"cdf456e1","burn(address)":"89afcb44","computeTotalValuation()":"36bf6e39","decimals()":"313ce567","factory()":"c45a0155","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","isRebalanceNeeded()":"8a77c8dc","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","name()":"06fdde03","performRebalanceIfNeeded()":"f47b45e8","periphery()":"77aace1a","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","reserves(address)":"d66bd524","swap(address,address,uint256,address)":"6e81221c","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","trigger()":"7fec8d38","unitPrice()":"e73faa2d","updateReserves(uint256[],bool)":"3dff5b7f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_trigger\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_periphery\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRebalanceNeeded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"reserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"increase\",\"type\":\"bool\"}],\"name\":\"updateReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"assetLiquidity(uint256)\":{\"details\":\"Returns the liquidity of a specific asset in the pool.\",\"params\":{\"assetIndex\":\"The index of the asset.\"},\"returns\":{\"_0\":\"The liquidity of the asset.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address)\":{\"details\":\"Burns the pool tokens and transfers the underlying assets to the specified address.\",\"params\":{\"to\":\"The address to transfer the underlying assets to.\"}},\"computeTotalValuation()\":{\"details\":\"Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\",\"returns\":{\"totalVal\":\"The total valuation of the pool.\",\"valuations\":\"An array of individual valuations.\"}},\"constructor\":{\"details\":\"Initializes a new instance of the BaluniV1Pool contract.\",\"params\":{\"_assets\":\"An array of addresses representing the assets in the pool.\",\"_periphery\":\"The address of the periphery contract.\",\"_rebalancer\":\"The address of the rebalancer contract.\",\"_trigger\":\"The trigger value for rebalancing the pool.\",\"_weights\":\"An array of weights corresponding to the assets in the pool.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(address,address,uint256)\":{\"details\":\"Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\",\"params\":{\"amount\":\"The amount of `fromToken` being swapped.\",\"fromToken\":\"The address of the token being swapped from.\",\"toToken\":\"The address of the token being swapped to.\"},\"returns\":{\"_0\":\"The amount of `toToken` that will be received.\"}},\"getAssetReserve(address)\":{\"details\":\"Returns the reserve amount of the specified asset.\",\"params\":{\"asset\":\"The address of the asset.\"},\"returns\":{\"_0\":\"The reserve amount of the asset.\"}},\"getAssets()\":{\"details\":\"Retrieves the list of assets in the pool.\",\"returns\":{\"_0\":\"An array of addresses representing the assets.\"}},\"getDeviation()\":{\"details\":\"Returns the deviation between the current weights and target weights of the assets in the pool.\",\"returns\":{\"directions\":\"An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\"}},\"getReserves()\":{\"details\":\"Returns an array of reserves for each asset in the pool.\",\"returns\":{\"_0\":\"An array of reserves.\"}},\"getWeights()\":{\"details\":\"Retrieves the list of weights associated with the assets in the pool.\",\"returns\":{\"_0\":\"An array of uint256 values representing the weights.\"}},\"isRebalanceNeeded()\":{\"details\":\"Checks if rebalancing is needed for the pool.\",\"returns\":{\"_0\":\"A boolean value indicating whether rebalancing is needed or not.\"}},\"liquidity()\":{\"details\":\"Returns the total liquidity of the pool.\",\"returns\":{\"_0\":\"The total liquidity of the pool.\"}},\"mint(address,uint256[])\":{\"details\":\"Mints new tokens and adds them to the specified address.\",\"params\":{\"to\":\"The address to which the new tokens will be minted.\"},\"returns\":{\"_0\":\"The amount of tokens minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"performRebalanceIfNeeded()\":{\"details\":\"Performs rebalance\"},\"rebalanceWeights(address)\":{\"details\":\"Rebalances the weights of the pool by calculating the amounts to add for each token, transferring the calculated amounts from the user to the pool, minting the total added liquidity, updating the reserves, and emitting an event to indicate the rebalancing of weights.\",\"params\":{\"receiver\":\"The address to receive the minted liquidity tokens.\"}},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`. Requirements: - `fromToken` and `toToken` must be different tokens. - `amount` must be greater than zero. - Sufficient liquidity of `toToken` must be available in the contract. Emits a `Swap` event with the details of the swap. Updates the reserves after the swap.\",\"params\":{\"amount\":\"The amount of `fromToken` to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"receiver\":\"The address to receive the swapped tokens.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"toSend\":\"The amount of `toToken` received after the swap.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unitPrice()\":{\"details\":\"Returns the unit price of the pool.\",\"returns\":{\"_0\":\"The unit price of the pool.\"}},\"updateReserves(uint256[],bool)\":{\"details\":\"Updates the reserves of the pool with the given amounts.\",\"params\":{\"amounts\":\"An array of amounts to update the reserves with.\",\"increase\":\"A boolean indicating whether to increase or decrease the reserves.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address)\":{\"notice\":\"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned.\"},\"updateReserves(uint256[],bool)\":{\"notice\":\"This function can only be called by the periphery contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1Pool.sol\":\"BaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public periphery;\\r\\n    address public factory;\\r\\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\\r\\n    address public baseAsset;\\r\\n    address public rebalancer;\\r\\n\\r\\n    mapping(address => uint256) public reserves;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\\r\\n     * @param _rebalancer The address of the rebalancer contract.\\r\\n     * @param _assets An array of addresses representing the assets in the pool.\\r\\n     * @param _weights An array of weights corresponding to the assets in the pool.\\r\\n     * @param _trigger The trigger value for rebalancing the pool.\\r\\n     * @param _periphery The address of the periphery contract.\\r\\n     */\\r\\n    constructor(\\r\\n        address _rebalancer,\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _periphery\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        // Initialize contract state variables\\r\\n        periphery = _periphery;\\r\\n        factory = msg.sender;\\r\\n        rebalancer = _rebalancer;\\r\\n        ONE = 1e18;\\r\\n\\r\\n        // Initialize assets and weights\\r\\n        initializeAssets(_assets, _weights);\\r\\n\\r\\n        // Set trigger value\\r\\n        trigger = _trigger;\\r\\n\\r\\n        // Set base asset\\r\\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\\r\\n\\r\\n        // Ensure the sum of weights equals 10000\\r\\n        uint256 totalWeight = 0;\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return toSend The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 toSend) {\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        // Get the amount of toToken to be received\\r\\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n        // Check if there is sufficient liquidity\\r\\n        require(reserves[toToken] >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        // apply fee\\r\\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n        toSend = receivedAmount - fee;\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n\\r\\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = ((totalValue) * totalSupply) / totalLiquidity;\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        uint256 b4 = balanceOf(msg.sender);\\r\\n        _mint(to, toMint);\\r\\n        uint256 b = balanceOf(to) - b4;\\r\\n\\r\\n        require(b == toMint, 'Mint Failed');\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded() external onlyPeriphery {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (totalVal * ONE) / totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        return reserves[asset];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            IERC20 asset = IERC20(assetInfos[i].asset);\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = reserves[address(asset)];\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), reserves[address(asset)]);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _updateReserves(amountsToAdd, true);\\r\\n        _updateReserves(amountsToRemove, false);\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param fromToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, fromToken, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the maximum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The maximum value between a and b.\\r\\n     */\\r\\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the minimum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The minimum value between a and b.\\r\\n     */\\r\\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a <= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return scaledAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates the reserves of the pool with the given amounts.\\r\\n     * @param amounts An array of amounts to update the reserves with.\\r\\n     * @param increase A boolean indicating whether to increase or decrease the reserves.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     */\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external onlyPeriphery {\\r\\n        _updateReserves(amounts, increase);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to update the reserves of the pool with the given amounts.\\r\\n     * @param amounts An array of amounts to update the reserves with.\\r\\n     * @param increase A boolean indicating whether to increase or decrease the reserves.\\r\\n     * @notice This function should only be called by the `updateReserves` function.\\r\\n     */\\r\\n    function _updateReserves(uint256[] memory amounts, bool increase) internal {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 newReserve = amounts[i];\\r\\n            if (increase) reserves[asset] += newReserve;\\r\\n            else reserves[asset] -= newReserve;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x116aadd2cefd019295bcb7f8caf4bddb88026baf9de060a3aad514a38c1d8d31\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x07a47e40a96a436f7dab0a5bb58c27622fd7f9a7c98b5c3f3d223ce848cbdf28\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":2049,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"_status","offset":0,"slot":"5","type":"t_uint256"},{"astId":2232,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"assetInfos","offset":0,"slot":"6","type":"t_array(t_struct(AssetInfo)2256_storage)dyn_storage"},{"astId":2234,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"trigger","offset":0,"slot":"7","type":"t_uint256"},{"astId":2236,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"ONE","offset":0,"slot":"8","type":"t_uint256"},{"astId":2238,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"periphery","offset":0,"slot":"9","type":"t_address"},{"astId":2240,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"factory","offset":0,"slot":"10","type":"t_address"},{"astId":2245,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"baseAsset","offset":0,"slot":"11","type":"t_address"},{"astId":2247,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"rebalancer","offset":0,"slot":"12","type":"t_address"},{"astId":2251,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"reserves","offset":0,"slot":"13","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(AssetInfo)2256_storage)dyn_storage":{"base":"t_struct(AssetInfo)2256_storage","encoding":"dynamic_array","label":"struct BaluniV1Pool.AssetInfo[]","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(AssetInfo)2256_storage":{"encoding":"inplace","label":"struct BaluniV1Pool.AssetInfo","members":[{"astId":2253,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"asset","offset":0,"slot":"0","type":"t_address"},{"astId":2255,"contract":"contracts/BaluniV1Pool.sol:BaluniV1Pool","label":"weight","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"burn(address)":{"notice":"This function can only be called by the periphery contract.The pool tokens must have a balance greater than 0.The total supply of pool tokens must be greater than 0.The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.The function checks if the pool has sufficient liquidity before performing any transfers.If any transfer fails, the function reverts the entire operation.After the transfers, the function updates the reserves of the pool.Emits a `Burn` event with the address and share of pool tokens burned."},"updateReserves(uint256[],bool)":{"notice":"This function can only be called by the periphery contract."}},"version":1}}},"contracts/BaluniV1PoolFactory.sol":{"BaluniV1PoolFactory":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"pool","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"},{"indexed":false,"internalType":"address","name":"rebalancer","type":"address"}],"name":"PoolCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allPools","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newPeriphery","type":"address"}],"name":"changePeriphery","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"trigger","type":"uint256"}],"name":"createPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"getPoolAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periphery","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"_version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"changePeriphery(address)":{"details":"Changes the address of the periphery contract.","params":{"_newPeriphery":"The new address of the periphery contract."}},"createPool(address[],uint256[],uint256)":{"details":"Creates a new BaluniV1Pool contract and registers it in the factory.","params":{"assets":"The array of asset addresses to be included in the pool.","trigger":"The trigger value for rebalancing the pool.","weights":"The array of weights corresponding to each asset in the pool."},"returns":{"_0":"The address of the newly created pool."}},"getAllPools()":{"details":"Retrieves all the pools created by the factory.","returns":{"_0":"An array of pool addresses."}},"getPoolAssets(address)":{"details":"Retrieves the assets of a specific pool.","params":{"poolAddress":"The address of the pool."},"returns":{"_0":"An array of asset addresses."}},"getPoolByAssets(address,address)":{"details":"Retrieves the pool address based on the given assets.","params":{"asset1":"The address of the first asset.","asset2":"The address of the second asset."},"returns":{"_0":"The address of the pool."}},"getPoolsByAsset(address)":{"details":"Returns an array of pool addresses that contain the specified token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getPoolsCount()":{"details":"Retrieves the number of pools created by the factory.","returns":{"_0":"The count of pools."}},"owner()":{"details":"Returns the address of the current owner."},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0806040523460295730608052615372908161002e8239608051818181610b990152610cb20152f35b5f80fdfe60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd146116c8575082632d5e94a714610add5782633069873b1461106757826341d1de9714610ffe5782634276b97b14610f395782634f1ef28614610c0e57826352d1902d14610b53578263531aa03e14610add578263715018a614610a2157826377aace1a146109cf57826389345efb146109835782638da5cb5b146109125782638f2248bc14610793578263ad3cb1cc146106a6578263b4340e6a146104b6578263b4ac68601461047b578263c4d66de81461028a57508163d88ff1f4146101cb57508063e9b31cff146101495763f2fde38b146100fc575f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610143610136611716565b61013e611ad3565b611a12565b005b5f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff610195611716565b61019d611ad3565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060035416176003555f80f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b82821061025d576102598686610247828b038361175c565b51918291602083526020830190611842565b0390f35b835473ffffffffffffffffffffffffffffffffffffffff168752958601956001938401939091019061022f565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576102c1611716565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff821680159081610473575b6001149081610469575b159081610460575b50610439575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655610404575b50610368611b43565b610370611b43565b610378611b43565b61038133611a12565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060025416176002556103b157005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784558561035f565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501587610314565b303b15915061030c565b859150610302565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020905f549051908152f35b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576104ed611716565b905f54916104fa836119c3565b925f925f9073ffffffffffffffffffffffffffffffffffffffff8094165b83831061056d575b5050505061052d826119c3565b925f5b83811061054c5785516020808252819061025990820188611842565b808361055a600193856118c5565b511661056682886118c5565b5201610530565b8461057d849794989695986117e2565b90549060031b1c16908851977f67e4ac2c0000000000000000000000000000000000000000000000000000000089525f898581865afa98891561069c575f99610678575b505f5b895181101561066a5782876105d9838d6118c5565b5116146105e8576001016105c4565b50939190949597506105fa82896118c5565b527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461063e57600101945b86518614610639576001019192610518565b610520565b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b509396915093949650610627565b6106959199503d805f833e61068d818361175c565b8101906118d9565b978a6105c1565b8a513d5f823e3d90fd5b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145578051918183019083821067ffffffffffffffff831117610767575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b903461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576107ca611716565b916024359267ffffffffffffffff90818516809503610145577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610905575b50506108de577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8516101590508688610817565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b50346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020906109c66109c1611716565b611970565b90519015158152f35b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610a57611ad3565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557602090610b17611716565b610b1f611739565b73ffffffffffffffffffffffffffffffffffffffff8092165f526001845281835f2091165f528352815f2054169051908152f35b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610be857602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610c3f611716565b602492833567ffffffffffffffff811161014557366023820112156101455780840135610c6b8161188b565b93610c788451958661175c565b818552602091828601933689838301011161014557815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115610f0b575b50610ee357610cea611ad3565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181610eb4575b50610d5557505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103610e875750853b15610e5a5750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610e275750505f6101439581925190845af4913d15610e1d573d610e0f610e068261188b565b9251928361175c565b81525f81943d92013e611b9c565b5060609250611b9c565b9450945050505034610e3557005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311610edc575b610ecc818361175c565b810103126101455751908a610d21565b503d610ec2565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141589610cdd565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145575f73ffffffffffffffffffffffffffffffffffffffff610f86611716565b168351928380927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa908115610ff45791610259925f92610fd8575b5051918291602083526020830190611842565b610fed9192503d805f833e61068d818361175c565b9083610fc5565b82513d5f823e3d90fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455735905f548210156101455773ffffffffffffffffffffffffffffffffffffffff6110586020936117e2565b92905490519260031b1c168152f35b346101455760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455767ffffffffffffffff918135838111610145573660238201121561014557808301359360246110c4866117ca565b926110d18551948561175c565b868452602096828886019160051b83010191368311610145578301905b82821061169c575050508035828111610145573660238201121561014557808601359061111a826117ca565b906111278751928361175c565b8282528882019260051b81018401908336831161014557858b9201905b83821061168d575050505060449173ffffffffffffffffffffffffffffffffffffffff9485600354169081156116325760019485895111156115d8578851855103611557575f865b61141a575b505086600254169389519461370080870193878510908511176113ef5790869594939291611c3d8739825260a08d8301528c6111d060a084018c611842565b8381038d8501529151808352910193905f888f5b8383106113d857505050604435606084015250506080015203905ff080156113ce578316955f54680100000000000000008110156113a3579061123082848a9897969594015f556117e2565b81549060031b908689831b921b1916179055815f905b611298575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d19161128a9160025416855192839287845287840190611842565b90888301520390a251908152f35b909192939495865182101561139b57508281018082116113705783929190835b6112ca575b5082018896959493611246565b879391929351811015611367578190876112e4858b6118c5565b51165f52818c52895f20886112f9838c6118c5565b51165f528c52895f207fffffffffffffffffffffffff0000000000000000000000000000000000000000908c8282541617905588611337838c6118c5565b51165f52828d528a5f208961134c878d6118c5565b51165f528d528b8b5f209182541617905501819392916112b8565b929190926112bd565b846011847f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b95949361124b565b836041837f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f6111e4565b8860418e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b89518110156115525786810180821161152757879291908b8f8c8f875b61144a575b50505050508201909161118c565b90919293949596845186101561151a57508461147a918361146b89886118c5565b51165f528d85525f20946118c5565b51165f5252898c5f205416611499578792919083018b8f8c8f87611437565b8b517f08c379a0000000000000000000000000000000000000000000000000000000008152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f72207468697320706169818501527f72000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b969594509083929161143c565b8860118e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b611191565b60848b6022898f8e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f41737365747320616e642077656967687473206c656e677468206d69736d617460448201527f63680000000000000000000000000000000000000000000000000000000000006064820152fd5b60648b8d89818e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b60648a6011888e8d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f506572697068657279206e6f74207365740000000000000000000000000000006044820152fd5b81358152908201908201611144565b813573ffffffffffffffffffffffffffffffffffffffff811681036101455781529088019088016110ee565b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600254168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761179d57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161179d5760051b60200190565b5f54811015611815575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9081518082526020808093019301915f5b828110611861575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101611853565b67ffffffffffffffff811161179d57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b80518210156118155760209160051b010190565b60209081818403126101455780519067ffffffffffffffff821161014557019180601f8401121561014557825161190f816117ca565b9361191d604051958661175c565b818552838086019260051b820101928311610145578301905b828210611944575050505090565b815173ffffffffffffffffffffffffffffffffffffffff81168103610145578152908301908301611936565b5f905f54915b828110611984575050505f90565b61198d816117e2565b9073ffffffffffffffffffffffffffffffffffffffff90548185169260031b1c16146119bb57600101611976565b505050600190565b906119cd826117ca565b6119da604051918261175c565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611a0882946117ca565b0190602036910137565b73ffffffffffffffffffffffffffffffffffffffff809116908115611aa3577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054163303611b1357565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611b7257565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90611bdb5750805115611bb157805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611c33575b611bec575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15611be456fe6080806040523461043957613700803803809161001c82856108fe565b8339810160a0828203126104395761003382610921565b60208301519091906001600160401b0381116104395783019181601f840112156104395782519261006384610935565b9361007160405195866108fe565b80855260208086019160051b8301019184831161043957602001905b8282106108cb5750505060408401516001600160401b0381116104395784019180601f840112156104395782516100c381610935565b936100d160405195866108fe565b81855260208086019260051b82010192831161043957602001905b8282106108bb57505050610107608060608601519501610921565b604051610113816108e3565b6009815268042616c756e69204c560bc1b602082015260405190610136826108e3565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b0382116104965760035490600182811c921680156108b1575b60208310146107925781601f849311610843575b50602090601f83116001146107bb575f926107b0575b50508160011b915f199060031b1c1916176003555b8051906001600160401b0382116104965760045490600182811c921680156107a6575b60208310146107925781601f849311610724575b50602090601f83116001146106a0575f92610695575b50508160011b915f199060031b1c1916176004555b6001600555600980546001600160a01b03199081166001600160a01b0393841617909155600a8054821633179055600c8054909116918316919091179055670de0b6b3a76400006008558251825103610645575f5b8351811015610525576001600160a01b03610280828661094c565b5116156104e057610291818461094c565b51156104aa576001600160a01b036102a9828661094c565b51166102b5828561094c565b5160408051929083018084116001600160401b0390911117610496576040830160405282526020820152600654680100000000000000008110156104965760018101806006558110156104825760065f5281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155610383828661094c565b511660018060a01b03600c5416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa908115610445575f91610450575b50156103d1575b5050600101610265565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561044557610409575b806103c7565b6020813d60201161043d575b81610422602093836108fe565b81010312610439575180151503610439575f610403565b5f80fd5b3d9150610415565b6040513d5f823e3d90fd5b90506020813d60201161047a575b8161046b602093836108fe565b8101031261043957515f6103c0565b3d915061045e565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b5060078490556040516389a3027160e01b815290602090829060049082906001600160a01b03165afa908115610445575f9161060b575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105bd57610594838361094c565b5181018091116105a957600190920191610581565b634e487b7160e01b5f52601160045260245ffd5b612710036105d457604051612d9f90816109618239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d60201161063d575b81610626602093836108fe565b810103126104395761063790610921565b8261055c565b3d9150610619565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070c57509084600195949392106106f4575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106e6565b929360206001819287860151815501950193016106d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610788575b90601f859493920160051c01905b81811061077a57506101e5565b5f815584935060010161076d565b909150819061075f565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510610828576001945083601f19811610610810575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f8080610802565b818101518355602094850194600190930192909101906107e7565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106108a7575b90601f859493920160051c01905b8181106108995750610183565b5f815584935060010161088c565b909150819061087e565b91607f169161016f565b81518152602091820191016100ec565b602080916108d884610921565b81520191019061008d565b604081019081106001600160401b0382111761049657604052565b601f909101601f19168101906001600160401b0382119082101761049657604052565b51906001600160a01b038216820361043957565b6001600160401b0381116104965760051b60200190565b80518210156104825760209160051b01019056fe60806040818152600480361015610014575f80fd5b5f925f3560e01c90816301d22ccd1461225e5750806306fdde03146121145780630723c99914611e3a5780630902f1ac14611dec578063095ea7b314611ce657806318160ddd14611caa5780631a68650214611c6857806322acb86714611bed57806323b872dd14611a99578063313ce56714611a6057806336bf6e3914611a0e5780633dff5b7f146119255780634aa066521461190a57806367a6c440146118d157806367e4ac2c146118425780636e81221c146115cf57806370a082311461156e57806377aace1a1461151c5780637fec8d38146114e057806389ab35321461145857806389afcb4414610f3f5780638a77c8dc14610efc57806395d89b4114610da8578063a9059cbb14610d5a578063b2b55d7014610ae5578063c2ee3a0814610d1e578063c45a015514610ccc578063cdf456e114610c7a578063cf8fa76414610bc1578063d14ef46d14610b47578063d66bd52414610ae5578063dd62ed3e14610a70578063de836ebd14610675578063e73faa2d146106345763f47b45e8146101a1575f80fd5b346104f1577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc915f833601126104f15773ffffffffffffffffffffffffffffffffffffffff938460095416926101f8843314612561565b610208610203612a1d565b6125c6565b600691600654916102188361262b565b966102228461262b565b61022b8561262b565b908a6102368761262b565b936102408861262b565b9a61024a8961262b565b985f8e5b8282106105585750505061026061268e565b9083600c54169060075494600b541693823b156104f1578f966102c7968f9660e0946102e85f99958f956102d98c98519d8e9c8d9b8c9a7ff0bf7714000000000000000000000000000000000000000000000000000000008c528b015260e48a019061233a565b60249f848a83030160248b01526124b3565b9187830301604488015261233a565b92606485015280608485015260a484015260c483015203925af1801561054e57610506575b5084600654948c60095416915b8d8d8883106103f3578d8d8d8d8d5f5b835481101561036c5780886103406001936124fc565b50541661034d828961267a565b51905f52600d602052610364875f20918254612a73565b90550161032a565b50928693865f5b85548110156103b55780876103896001936124fc565b505416610396828861267a565b51905f52600d6020526103ad865f209182546128a6565b905501610373565b507f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8835160208152806103ed339460208301906124b3565b0390a280f35b826103fd9161267a565b5116908b5180927f70a082310000000000000000000000000000000000000000000000000000000082528585830152818760209384935afa9081156104fc578a916104c9575b5060019250610452828961267a565b5261045d818861267a565b51610468828861267a565b5110156104a1578c61049982610493610481828c61267a565b5161048c838c61267a565b51906128a6565b9261267a565b525b0161031a565b6104b96104ae828861267a565b5161048c838a61267a565b6104c3828c61267a565b5261049b565b905082813d83116104f5575b6104df81836123cd565b810103126104f157600191515f610443565b5f80fd5b503d6104d5565b8d513d8c823e3d90fd5b90945067ffffffffffffffff81116105225787525f935f61030d565b6041847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b89513d5f823e3d90fd5b81610598918761056c8396979899956124fc565b505416610579838361267a565b526001610585836124fc565b500154610592838b61267a565b5261267a565b5116908c5180927f70a08231000000000000000000000000000000000000000000000000000000008252858b83015281602460209384935afa90811561062a575f916105fb575b50600192506105ee828961267a565b5201908e9392918e61024e565b905082813d8311610623575b61061181836123cd565b810103126104f157600191515f6105df565b503d610607565b8e513d5f823e3d90fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209061066e612a80565b9051908152f35b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576106ac6122f4565b91602492833567ffffffffffffffff81116104f1576106ce9036908501612453565b9273ffffffffffffffffffffffffffffffffffffffff936106f485600954163314612561565b6002545f9161070161268e565b9060065491518203610a145781156109b857905f915b81831061097f5750505081156108fd57806108525750935b84156107f6576107628591335f525f602052855f2054946107508482612b58565b1693845f525f602052855f20546128a6565b0361079a5750602093507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b606490600b8660208651937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606482600d8860208851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61085a612aab565b5091821561087b5761087592916108709161282f565b61286f565b9361072f565b60848460268a60208a51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848360228960208951937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091936109af6001916109a98b610995896124fc565b5054166109a2898761267a565b5190612cff565b90612a73565b94019190610717565b60648560098b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b60648560178b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610aaa6122f4565b610ab2612317565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff610b356122f4565b165f52600d8252805f20549051908152f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157356006548110156104f157610b8b906124fc565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157803590610bfc612aab565b8092915051831015610c1d57602084610c15858561267a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906008549051908152f35b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610da1610d976122f4565b6024359033612bf2565b5160018152f35b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9280549060018260011c9160018416938415610ef2575b6020948585108114610ec657848852908115610e865750600114610e2d575b610bbd8686610e23828b03836123cd565b51918291826122ac565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610e735750505082610bbd94610e23928201019486610e12565b8054868501880152928601928101610e56565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610e2382610bbd86610e12565b6022837f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f1692610df3565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610f36612a1d565b90519015158152f35b5090346104f157602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610f7a6122f4565b73ffffffffffffffffffffffffffffffffffffffff806009541691610fa0833314612561565b305f525f8552835f20549586156113fc576002549687156113a057600654610fc78161262b565b98601e8302838104601e0361137457612710610fe5910480946128a6565b965f5b8381106112bb5750505050305f525f875261100885875f205410156129b8565b818785600c54168851928380927f61d027b30000000000000000000000000000000000000000000000000000000082525afa9081156112b1579088915f91611277575b5087517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116848201908152602081019390935291829081906040015b03815f305af190811561126d575f91611237575b50156111db57305f525f86526110cf84865f205410156129b8565b30156111ac57305f525f8652845f205490848210611168575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592610bbd96958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a25192828493845283019061233a565b85517fe450d38c0000000000000000000000000000000000000000000000000000000081523091810191825260208201929092526040810185905281906060010390fd5b6024905f8651917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b90508681813d8311611266575b61124e81836123cd565b810103126104f1575180151581036104f157886110b4565b503d611244565b86513d5f823e3d90fd5b82819392503d83116112aa575b61128e81836123cd565b810103126104f1575184811681036104f15787906110a061104b565b503d611284565b87513d5f823e3d90fd5b876112c5826124fc565b5054168a51907fa3e113fb000000000000000000000000000000000000000000000000000000008252308883015260248201528b81604481865afa90811561136a578a8593928f925f91611330575b5061049360019561087061132994879461282f565b5201610fe8565b94505050508b82813d8311611363575b61134a81836123cd565b810103126104f15790518391908d908b90610493611314565b503d611340565b8b513d5f823e3d90fd5b6011857f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b606482888851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15761148f6128b3565b8251928391818301918352835180925260608301916020809501945f5b8281106114c7578580610bbd8787838203602085015261233a565b86511515855295810195879550938101936001016114ac565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906007549051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600954169051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff6115be6122f4565b165f525f8252805f20549051908152f35b5090346104f15760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576116086122f4565b90611611612317565b6044359260643573ffffffffffffffffffffffffffffffffffffffff928382168092036104f15760026005541461181a576002600555838116938316928484146117bd57861561176057611666918791612786565b95835f52600d60205286855f20541061170357601e870290878204601e14881517156116d75750846116c06020986127107fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460629404906128a6565b9681519081528789820152a4600160055551908152f35b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b60649060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8685517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760065461187d8161262b565b905f5b81811061189c57835160208082528190610bbd908201866124b3565b8073ffffffffffffffffffffffffffffffffffffffff6118bd6001936124fc565b5054166118ca828661267a565b5201611880565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209051601e8152f35b82346104f15760209061066e61191f3661236d565b91612786565b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15780359067ffffffffffffffff82116104f15761197291369101612453565b9060243580151581036104f15773ffffffffffffffffffffffffffffffffffffffff926119a484600954163314612561565b5f5b600654811015611a0c5780856119bd6001936124fc565b5054166119ca828561267a565b519085156119f0575f52600d6020526119e7865f20918254612a73565b90555b016119a6565b5f52600d602052611a05865f209182546128a6565b90556119ea565b005b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd611a48612aab565b8392919251938493845280602085015283019061233a565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020905160128152f35b50346104f157611aa83661236d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8303611b0e575b602087610da1888888612bf2565b858310611ba8578115611b79573315611b4a57505f90815260016020908152868220338352815290869020918590039091558290610da1611b00565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157600654611c288161262b565b905f5b818110611c4757835160208082528190610bbd9082018661233a565b806001611c5481936124fc565b500154611c61828661267a565b5201611c2b565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090611ca2612aab565b509051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906002549051908152f35b5090346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611d1e6122f4565b602435903315611dbd5773ffffffffffffffffffffffffffffffffffffffff16908115611d8e5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd90611e2761268e565b905191829160208352602083019061233a565b50346104f157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611e746122f4565b9173ffffffffffffffffffffffffffffffffffffffff93611e9a85600954163314612561565b611ea5610203612a1d565b611ead612aab565b6006549491611ebb8661262b565b915f5b8781106120bf575050505f945f5b8181106120a05750611edd9061262b565b945f5b825181101561204857611ef3818461267a565b51611f01575b600101611ee0565b611f0b818461267a565b51858a611f17846124fc565b5054168b600c54168c600b54168a611f868a51968795869485947f248391ff000000000000000000000000000000000000000000000000000000008652850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03915afa90811561203e575f91612011575b508015611fb55790600191611fad828a61267a565b529050611ef9565b606487878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b90508581813d8311612037575b61202881836123cd565b810103126104f157518a611f98565b503d61201e565b85513d5f823e3d90fd5b50610bbd9394506120599087612b58565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e82518581528061208e33948883019061233a565b0390a25192828493845283019061233a565b956120b86001916120b1898661267a565b5190612a73565b9601611ecc565b806127106120db60016120d281956124fc565b5001548661282f565b04806120e7838661267a565b51106120f5575b5001611ebe565b6121039061048c838661267a565b61210d828761267a565b528b6120ee565b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9260035460018160011c91600181168015612254575b602094858510821461222857508387529081156121ea5750600114612190575b505050610e2382610bbd9403836123cd565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106121d75750505082610bbd94610e23928201019461217e565b80548685018801529286019281016121bb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610e2382610bbd61217e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261215e565b346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600c54168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b9081518082526020808093019301915f5b828110612359575050505090565b83518552938101939281019260010161234b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126104f15773ffffffffffffffffffffffffffffffffffffffff9060043582811681036104f1579160243590811681036104f1579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761240e57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161240e5760051b60200190565b9080601f830112156104f157602090823561246d8161243b565b9361247b60405195866123cd565b81855260208086019260051b8201019283116104f157602001905b8282106124a4575050505090565b81358152908301908301612496565b9081518082526020808093019301915f5b8281106124d2575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016124c4565b6006548110156125345760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b1561256857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b156125cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b906126358261243b565b61264260405191826123cd565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612670829461243b565b0190602036910137565b80518210156125345760209160051b010190565b60245f73ffffffffffffffffffffffffffffffffffffffff60095416604051928380927f3e99c1e40000000000000000000000000000000000000000000000000000000082523060048301525afa90811561277b575f916126ed575090565b90503d805f833e6126fe81836123cd565b81019060209081818403126104f15780519067ffffffffffffffff82116104f157019180601f840112156104f15782516127378161243b565b9361274560405195866123cd565b818552838086019260051b8201019283116104f1578301905b82821061276c575050505090565b8151815290830190830161275e565b6040513d5f823e3d90fd5b600c546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa90811561277b575f91612800575090565b90506020813d602011612827575b8161281b602093836123cd565b810103126104f1575190565b3d915061280e565b8181029291811591840414171561284257565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612879570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b9190820391821161284257565b6128bb612aab565b9190600654906128ca8261243b565b916128d860405193846123cd565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06129058261243b565b013660208501376129158161262b565b945f5b82811061292757505050509190565b612931818361267a565b519061271091828102928184041490151715612842576129538560019361286f565b61295c826124fc565b508301548391818111156129915790612974916128a6565b61297e838b61267a565b52612989828861267a565b525b01612918565b9061299c92506128a6565b6129a6828a61267a565b525f6129b2828861267a565b5261298b565b156129bf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612a256128b3565b5f5b8151811015612a6c57612a3a818461267a565b51151580612a57575b612a4f57600101612a27565b505050600190565b50612a62818361267a565b5160075410612a43565b5050505f90565b9190820180921161284257565b612a88612aab565b506002548015612aa557610870612aa2926008549061282f565b90565b50505f90565b600654905f612ab98361262b565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b828410612ae757505050509190565b90919293612b2760019183612afb886124fc565b505416858103612b31575f52600d60205260405f2054612b1b888b61267a565b525b6120b1878a61267a565b9401929190612ad8565b80612b48915f52600d60205260405f205490612cff565b612b52888b61267a565b52612b1d565b73ffffffffffffffffffffffffffffffffffffffff16908115612bc2577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612ba65f94600254612a73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff808416928315612ccf5716928315612bc257825f525f60205260405f205490828210612c775750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600c54600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101939093526020918391168180606481016127eb56fea264697066735822122002fb5f90be03d678677ac304ec3f491eda7f0caccb27a4d0da4f22dcce0a35b064736f6c63430008190033a264697066735822122098cd2134185ee021f9d0cbc6efdd940fe95bb657c5ea1c931c807c50d871a2ba64736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x5372 SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0xB99 ADD MSTORE PUSH2 0xCB2 ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x16C8 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0x1067 JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xFFE JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xF39 JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0xC0E JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0xB53 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0xA21 JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x9CF JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x983 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x912 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x793 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x6A6 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x4B6 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x47B JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x28A JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x1CB JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x149 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x143 PUSH2 0x136 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x195 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1AD3 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x25D JUMPI PUSH2 0x259 DUP7 DUP7 PUSH2 0x247 DUP3 DUP12 SUB DUP4 PUSH2 0x175C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22F JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x2C1 PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x473 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x469 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x460 JUMPI JUMPDEST POP PUSH2 0x439 JUMPI POP SWAP1 DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x404 JUMPI JUMPDEST POP PUSH2 0x368 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x370 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x378 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x381 CALLER PUSH2 0x1A12 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x3B1 JUMPI STOP JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH1 0x20 SWAP4 SLOAD AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE DUP6 PUSH2 0x35F JUMP JUMPDEST DUP6 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x314 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x30C JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x302 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x4ED PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x4FA DUP4 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x56D JUMPI JUMPDEST POP POP POP POP PUSH2 0x52D DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x54C JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x259 SWAP1 DUP3 ADD DUP9 PUSH2 0x1842 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x55A PUSH1 0x1 SWAP4 DUP6 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH2 0x566 DUP3 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MSTORE ADD PUSH2 0x530 JUMP JUMPDEST DUP5 PUSH2 0x57D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x69C JUMPI PUSH0 SWAP10 PUSH2 0x678 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x66A JUMPI DUP3 DUP8 PUSH2 0x5D9 DUP4 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND EQ PUSH2 0x5E8 JUMPI PUSH1 0x1 ADD PUSH2 0x5C4 JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x5FA DUP3 DUP10 PUSH2 0x18C5 JUMP JUMPDEST MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x63E JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x639 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x627 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18D9 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x5C1 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x767 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x7CA PUSH2 0x1716 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x145 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x905 JUMPI JUMPDEST POP POP PUSH2 0x8DE JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 DUP8 DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND OR OR AND SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x817 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9C6 PUSH2 0x9C1 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xA57 PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xB17 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xB1F PUSH2 0x1739 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP2 DUP4 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP4 MSTORE DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xBE8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xC3F PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0xC6B DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH2 0xC78 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x145 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0xF0B JUMPI JUMPDEST POP PUSH2 0xEE3 JUMPI PUSH2 0xCEA PUSH2 0x1AD3 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xEB4 JUMPI JUMPDEST POP PUSH2 0xD55 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0xE87 JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0xE5A JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0xE27 JUMPI POP POP PUSH0 PUSH2 0x143 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0xE1D JUMPI RETURNDATASIZE PUSH2 0xE0F PUSH2 0xE06 DUP3 PUSH2 0x188B JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1B9C JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1B9C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0xE35 JUMPI STOP JUMPDEST PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 DUP9 MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 SWAP1 DUP9 MLOAD SWAP2 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEDC JUMPI JUMPDEST PUSH2 0xECC DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x145 JUMPI MLOAD SWAP1 DUP11 PUSH2 0xD21 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEC2 JUMP JUMPDEST DUP7 DUP6 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0xCDD JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF86 PUSH2 0x1716 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFF4 JUMPI SWAP2 PUSH2 0x259 SWAP3 PUSH0 SWAP3 PUSH2 0xFD8 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xFED SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1058 PUSH1 0x20 SWAP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 SWAP1 SLOAD SWAP1 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0x10C4 DUP7 PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH2 0x10D1 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x175C JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x169C JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0x111A DUP3 PUSH2 0x17CA JUMP JUMPDEST SWAP1 PUSH2 0x1127 DUP8 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x168D JUMPI POP POP POP POP PUSH1 0x44 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0x15D8 JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0x1557 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0x141A JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x3700 DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0x13EF JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1C3D DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0x11D0 PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1842 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0x13D8 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0x13CE JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13A3 JUMPI SWAP1 PUSH2 0x1230 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x17E2 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0x1298 JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0x128A SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0x139B JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1370 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0x12CA JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x1246 JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0x1367 JUMPI DUP2 SWAP1 DUP8 PUSH2 0x12E4 DUP6 DUP12 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0x12F9 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0x1337 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0x134C DUP8 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0x12B8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x12BD JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0x124B JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0x11E4 JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1552 JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1527 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0x144A JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0x118C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0x151A JUMPI POP DUP5 PUSH2 0x147A SWAP2 DUP4 PUSH2 0x146B DUP10 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0x1499 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0x1437 JUMP JUMPDEST DUP12 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0x143C JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x22 DUP10 DUP16 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6368000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP11 PUSH1 0x11 DUP9 DUP15 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x506572697068657279206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x1144 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x10EE JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x179D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1815 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1861 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1853 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1815 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x145 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP3 MLOAD PUSH2 0x190F DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP4 PUSH2 0x191D PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1944 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1984 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SLOAD DUP2 DUP6 AND SWAP3 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x19BB JUMPI PUSH1 0x1 ADD PUSH2 0x1976 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CD DUP3 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x19DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1A08 DUP3 SWAP5 PUSH2 0x17CA JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AA3 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x1B13 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1B72 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x1BDB JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1BB1 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1C33 JUMPI JUMPDEST PUSH2 0x1BEC JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1BE4 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x3700 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x2D9F SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x225E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2114 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1E3A JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x1DEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CE6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CAA JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1C68 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x1BED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A99 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A60 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x3DFF5B7F EQ PUSH2 0x1925 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x190A JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x18D1 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x1842 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x15CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0x151C JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x14E0 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x1458 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xF3F JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xEFC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDA8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD5A JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0xD1E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xCCC JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0xC7A JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x634 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP2 PUSH0 DUP4 CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 PUSH1 0x9 SLOAD AND SWAP3 PUSH2 0x1F8 DUP5 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x6 SWAP2 PUSH1 0x6 SLOAD SWAP2 PUSH2 0x218 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP7 PUSH2 0x222 DUP5 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x22B DUP6 PUSH2 0x262B JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x236 DUP8 PUSH2 0x262B JUMP JUMPDEST SWAP4 PUSH2 0x240 DUP9 PUSH2 0x262B JUMP JUMPDEST SWAP11 PUSH2 0x24A DUP10 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH0 DUP15 JUMPDEST DUP3 DUP3 LT PUSH2 0x558 JUMPI POP POP POP PUSH2 0x260 PUSH2 0x268E JUMP JUMPDEST SWAP1 DUP4 PUSH1 0xC SLOAD AND SWAP1 PUSH1 0x7 SLOAD SWAP5 PUSH1 0xB SLOAD AND SWAP4 DUP3 EXTCODESIZE ISZERO PUSH2 0x4F1 JUMPI DUP16 SWAP7 PUSH2 0x2C7 SWAP7 DUP16 SWAP7 PUSH1 0xE0 SWAP5 PUSH2 0x2E8 PUSH0 SWAP10 SWAP6 DUP16 SWAP6 PUSH2 0x2D9 DUP13 SWAP9 MLOAD SWAP14 DUP15 SWAP13 DUP14 SWAP12 DUP13 SWAP11 PUSH32 0xF0BF771400000000000000000000000000000000000000000000000000000000 DUP13 MSTORE DUP12 ADD MSTORE PUSH1 0xE4 DUP11 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x24 SWAP16 DUP5 DUP11 DUP4 SUB ADD PUSH1 0x24 DUP12 ADD MSTORE PUSH2 0x24B3 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB ADD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x54E JUMPI PUSH2 0x506 JUMPI JUMPDEST POP DUP5 PUSH1 0x6 SLOAD SWAP5 DUP13 PUSH1 0x9 SLOAD AND SWAP2 JUMPDEST DUP14 DUP14 DUP9 DUP4 LT PUSH2 0x3F3 JUMPI DUP14 DUP14 DUP14 DUP14 DUP14 PUSH0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x36C JUMPI DUP1 DUP9 PUSH2 0x340 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x34D DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x364 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x32A JUMP JUMPDEST POP SWAP3 DUP7 SWAP4 DUP7 PUSH0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0x3B5 JUMPI DUP1 DUP8 PUSH2 0x389 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x396 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x3AD DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x373 JUMP JUMPDEST POP PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP4 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x3ED CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x24B3 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH2 0x3FD SWAP2 PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP12 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP6 DUP4 ADD MSTORE DUP2 DUP8 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4FC JUMPI DUP11 SWAP2 PUSH2 0x4C9 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x452 DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x45D DUP2 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x468 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x4A1 JUMPI DUP13 PUSH2 0x499 DUP3 PUSH2 0x493 PUSH2 0x481 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP3 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x31A JUMP JUMPDEST PUSH2 0x4B9 PUSH2 0x4AE DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP11 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x4C3 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4F5 JUMPI JUMPDEST PUSH2 0x4DF DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x443 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4D5 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x522 JUMPI DUP8 MSTORE PUSH0 SWAP4 PUSH0 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x598 SWAP2 DUP8 PUSH2 0x56C DUP4 SWAP7 SWAP8 SWAP9 SWAP10 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x579 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x585 DUP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x592 DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP13 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP12 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x62A JUMPI PUSH0 SWAP2 PUSH2 0x5FB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x5EE DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD SWAP1 DUP15 SWAP4 SWAP3 SWAP2 DUP15 PUSH2 0x24E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x623 JUMPI JUMPDEST PUSH2 0x611 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x5DF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x607 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x2A80 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x6AC PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F1 JUMPI PUSH2 0x6CE SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x6F4 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x701 PUSH2 0x268E JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA14 JUMPI DUP2 ISZERO PUSH2 0x9B8 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x97F JUMPI POP POP POP DUP2 ISZERO PUSH2 0x8FD JUMPI DUP1 PUSH2 0x852 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x762 DUP6 SWAP2 CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP5 PUSH2 0x750 DUP5 DUP3 PUSH2 0x2B58 JUMP JUMPDEST AND SWAP4 DUP5 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SUB PUSH2 0x79A JUMPI POP PUSH1 0x20 SWAP4 POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0xB DUP7 PUSH1 0x20 DUP7 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0xD DUP9 PUSH1 0x20 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x85A PUSH2 0x2AAB JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x87B JUMPI PUSH2 0x875 SWAP3 SWAP2 PUSH2 0x870 SWAP2 PUSH2 0x282F JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST SWAP4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x26 DUP11 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x22 DUP10 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x9AF PUSH1 0x1 SWAP2 PUSH2 0x9A9 DUP12 PUSH2 0x995 DUP10 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x9A2 DUP10 DUP8 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x9 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x17 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAAA PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x2317 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB35 PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xD DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0xB8B SWAP1 PUSH2 0x24FC JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xBFC PUSH2 0x2AAB JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x20 DUP5 PUSH2 0xC15 DUP6 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xDA1 PUSH2 0xD97 PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2BF2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xEF2 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xEC6 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE2D JUMPI JUMPDEST PUSH2 0xBBD DUP7 DUP7 PUSH2 0xE23 DUP3 DUP12 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22AC JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xE73 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE12 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE56 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD DUP7 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xDF3 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF36 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xF7A PUSH2 0x22F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x9 SLOAD AND SWAP2 PUSH2 0xFA0 DUP4 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x13FC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC7 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1374 JUMPI PUSH2 0x2710 PUSH2 0xFE5 SWAP2 DIV DUP1 SWAP5 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x12BB JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE PUSH2 0x1008 DUP6 DUP8 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x61D027B300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12B1 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x1277 JUMPI JUMPDEST POP DUP8 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x126D JUMPI PUSH0 SWAP2 PUSH2 0x1237 JUMPI JUMPDEST POP ISZERO PUSH2 0x11DB JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE PUSH2 0x10CF DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x11AC JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1168 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0xBBD SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP6 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1266 JUMPI JUMPDEST PUSH2 0x124E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI DUP9 PUSH2 0x10B4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1244 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x12AA JUMPI JUMPDEST PUSH2 0x128E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI DUP8 SWAP1 PUSH2 0x10A0 PUSH2 0x104B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1284 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x12C5 DUP3 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP11 MLOAD SWAP1 PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP9 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP12 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x136A JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x1330 JUMPI JUMPDEST POP PUSH2 0x493 PUSH1 0x1 SWAP6 PUSH2 0x870 PUSH2 0x1329 SWAP5 DUP8 SWAP5 PUSH2 0x282F JUMP JUMPDEST MSTORE ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1363 JUMPI JUMPDEST PUSH2 0x134A DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x493 PUSH2 0x1314 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1340 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 DUP3 DUP9 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x148F PUSH2 0x28B3 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x14C7 JUMPI DUP6 DUP1 PUSH2 0xBBD DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x14AC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x15BE PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1608 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 PUSH2 0x1611 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x4F1 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x181A JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x17BD JUMPI DUP7 ISZERO PUSH2 0x1760 JUMPI PUSH2 0x1666 SWAP2 DUP8 SWAP2 PUSH2 0x2786 JUMP JUMPDEST SWAP6 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP7 DUP6 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1703 JUMPI PUSH1 0x1E DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x1E EQ DUP9 ISZERO OR ISZERO PUSH2 0x16D7 JUMPI POP DUP5 PUSH2 0x16C0 PUSH1 0x20 SWAP9 PUSH2 0x2710 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP5 DIV SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP6 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x187D DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x189C JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x24B3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x18BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x18CA DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1880 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x191F CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP2 PUSH2 0x2786 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI PUSH2 0x1972 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x19A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1A0C JUMPI DUP1 DUP6 PUSH2 0x19BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x19CA DUP3 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x19F0 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x19E7 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x19A6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x1A05 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x19EA JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD PUSH2 0x1A48 PUSH2 0x2AAB JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x1AA8 CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x1B0E JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xDA1 DUP9 DUP9 DUP9 PUSH2 0x2BF2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1BA8 JUMPI DUP2 ISZERO PUSH2 0x1B79 JUMPI CALLER ISZERO PUSH2 0x1B4A JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xDA1 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1C28 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C47 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x233A JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1C54 DUP2 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1C61 DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1C2B JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CA2 PUSH2 0x2AAB JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1D1E PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1DBD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD SWAP1 PUSH2 0x1E27 PUSH2 0x268E JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1E74 PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x1E9A DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1EA5 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x1EAD PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x1EBB DUP7 PUSH2 0x262B JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x20BF JUMPI POP POP POP PUSH0 SWAP5 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20A0 JUMPI POP PUSH2 0x1EDD SWAP1 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2048 JUMPI PUSH2 0x1EF3 DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x1F01 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x1F0B DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD DUP6 DUP11 PUSH2 0x1F17 DUP5 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP12 PUSH1 0xC SLOAD AND DUP13 PUSH1 0xB SLOAD AND DUP11 PUSH2 0x1F86 DUP11 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x203E JUMPI PUSH0 SWAP2 PUSH2 0x2011 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1FB5 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1FAD DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x64 DUP8 DUP8 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x2028 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP11 PUSH2 0x1F98 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x201E JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0xBBD SWAP4 SWAP5 POP PUSH2 0x2059 SWAP1 DUP8 PUSH2 0x2B58 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x208E CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SWAP6 PUSH2 0x20B8 PUSH1 0x1 SWAP2 PUSH2 0x20B1 DUP10 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP7 ADD PUSH2 0x1ECC JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x20DB PUSH1 0x1 PUSH2 0x20D2 DUP2 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x282F JUMP JUMPDEST DIV DUP1 PUSH2 0x20E7 DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD LT PUSH2 0x20F5 JUMPI JUMPDEST POP ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x2103 SWAP1 PUSH2 0x48C DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x210D DUP3 DUP8 PUSH2 0x267A JUMP JUMPDEST MSTORE DUP12 PUSH2 0x20EE JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2254 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2228 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x21EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2190 JUMPI JUMPDEST POP POP POP PUSH2 0xE23 DUP3 PUSH2 0xBBD SWAP5 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x21D7 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x217E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x21BB JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD PUSH2 0x217E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x215E JUMP JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xC SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2359 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x234B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x240E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x240E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x246D DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x247B PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x24A4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2496 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24D2 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2568 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2635 DUP3 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2642 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x23CD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2670 DUP3 SWAP5 PUSH2 0x243B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x26ED JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x26FE DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4F1 JUMPI DUP3 MLOAD PUSH2 0x2737 DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x2745 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x276C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x2800 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2827 JUMPI JUMPDEST DUP2 PUSH2 0x281B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x280E JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2879 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x28BB PUSH2 0x2AAB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x28CA DUP3 PUSH2 0x243B JUMP JUMPDEST SWAP2 PUSH2 0x28D8 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x23CD JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2905 DUP3 PUSH2 0x243B JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2915 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2927 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2931 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2953 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x295C DUP3 PUSH2 0x24FC JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2991 JUMPI SWAP1 PUSH2 0x2974 SWAP2 PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x297E DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2989 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2918 JUMP JUMPDEST SWAP1 PUSH2 0x299C SWAP3 POP PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x29A6 DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x29B2 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x298B JUMP JUMPDEST ISZERO PUSH2 0x29BF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2A25 PUSH2 0x28B3 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2A6C JUMPI PUSH2 0x2A3A DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2A57 JUMPI JUMPDEST PUSH2 0x2A4F JUMPI PUSH1 0x1 ADD PUSH2 0x2A27 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2A62 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2A43 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x2A88 PUSH2 0x2AAB JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2AA5 JUMPI PUSH2 0x870 PUSH2 0x2AA2 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x282F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2AB9 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2AE7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2B27 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2AFB DUP9 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x2B31 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2B1B DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x20B1 DUP8 DUP11 PUSH2 0x267A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST DUP1 PUSH2 0x2B48 SWAP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0x2B52 DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x2BC2 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2BA6 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2A73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2CCF JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2BC2 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2C77 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x27EB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xFB PUSH0 SWAP1 0xBE SUB 0xD6 PUSH25 0x677AC304EC3F491EDA7F0CACCB27A4D0DA4F22DCCE0A35B064 PUSH20 0x6F6C63430008190033A264697066735822122098 0xCD 0x21 CALLVALUE XOR MCOPY 0xE0 0x21 0xF9 0xD0 0xCB 0xC6 0xEF 0xDD SWAP5 0xF 0xE9 JUMPDEST 0xB6 JUMPI 0xC5 0xEA SHR SWAP4 SHR DUP1 PUSH29 0x50D871A2BA64736F6C6343000819003300000000000000000000000000 ","sourceMap":"1731:4718:16:-:0;;;;;;;1171:4:2;1163:13;;1731:4718:16;;;;;;1163:13:2;1731:4718:16;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5945,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_13183":{"entryPoint":5910,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":6361,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":6210,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_address_dyn":{"entryPoint":6595,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":6090,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":6283,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5980,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":6979,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":6867,"id":122,"parameterSlots":0,"returnSlots":0},"fun_poolExist":{"entryPoint":6512,"id":4490,"parameterSlots":1,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":6674,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":7068,"id":1967,"parameterSlots":3,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":6341,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_address_dyn":{"entryPoint":6114,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":2969},{"length":32,"start":3250}]},"linkReferences":{},"object":"60806040818152600480361015610014575f80fd5b5f3560e01c92836301d22ccd146116c8575082632d5e94a714610add5782633069873b1461106757826341d1de9714610ffe5782634276b97b14610f395782634f1ef28614610c0e57826352d1902d14610b53578263531aa03e14610add578263715018a614610a2157826377aace1a146109cf57826389345efb146109835782638da5cb5b146109125782638f2248bc14610793578263ad3cb1cc146106a6578263b4340e6a146104b6578263b4ac68601461047b578263c4d66de81461028a57508163d88ff1f4146101cb57508063e9b31cff146101495763f2fde38b146100fc575f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610143610136611716565b61013e611ad3565b611a12565b005b5f80fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff610195611716565b61019d611ad3565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060035416176003555f80f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455780515f8054808352818052602080840194927f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392915b82821061025d576102598686610247828b038361175c565b51918291602083526020830190611842565b0390f35b835473ffffffffffffffffffffffffffffffffffffffff168752958601956001938401939091019061022f565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576102c1611716565b907ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0091825460ff81861c16159267ffffffffffffffff821680159081610473575b6001149081610469575b159081610460575b50610439575090818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516178655610404575b50610368611b43565b610370611b43565b610378611b43565b61038133611a12565b167fffffffffffffffffffffffff000000000000000000000000000000000000000060025416176002556103b157005b7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291817fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff602093541690555160018152a1005b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784558561035f565b85517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b90501587610314565b303b15915061030c565b859150610302565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020905f549051908152f35b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576104ed611716565b905f54916104fa836119c3565b925f925f9073ffffffffffffffffffffffffffffffffffffffff8094165b83831061056d575b5050505061052d826119c3565b925f5b83811061054c5785516020808252819061025990820188611842565b808361055a600193856118c5565b511661056682886118c5565b5201610530565b8461057d849794989695986117e2565b90549060031b1c16908851977f67e4ac2c0000000000000000000000000000000000000000000000000000000089525f898581865afa98891561069c575f99610678575b505f5b895181101561066a5782876105d9838d6118c5565b5116146105e8576001016105c4565b50939190949597506105fa82896118c5565b527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461063e57600101945b86518614610639576001019192610518565b610520565b6011827f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b509396915093949650610627565b6106959199503d805f833e61068d818361175c565b8101906118d9565b978a6105c1565b8a513d5f823e3d90fd5b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145578051918183019083821067ffffffffffffffff831117610767575081526005825260208201917f352e302e3000000000000000000000000000000000000000000000000000000083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8351948593602085525180918160208701528686015e5f85828601015201168101030190f35b6041907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b903461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576107ca611716565b916024359267ffffffffffffffff90818516809503610145577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00928354928660ff85881c16918215610905575b50506108de577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260208787877fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000847fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000008b73ffffffffffffffffffffffffffffffffffffffff8c167fffffffffffffffffffffffff0000000000000000000000000000000000000000600254161760025516171716905551908152a1005b84517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8516101590508688610817565b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054169051908152f35b50346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145576020906109c66109c1611716565b611970565b90519015158152f35b5034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600354169051908152f35b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610a57611ad3565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b503461014557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557602090610b17611716565b610b1f611739565b73ffffffffffffffffffffffffffffffffffffffff8092165f526001845281835f2091165f528352815f2054169051908152f35b9034610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610be857602090517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261014557610c3f611716565b602492833567ffffffffffffffff811161014557366023820112156101455780840135610c6b8161188b565b93610c788451958661175c565b818552602091828601933689838301011161014557815f928a86930187378701015273ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115610f0b575b50610ee357610cea611ad3565b81169484517f52d1902d000000000000000000000000000000000000000000000000000000008152838189818a5afa5f9181610eb4575b50610d5557505050505051917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b9087878794938b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103610e875750853b15610e5a5750817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558451907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2825115610e275750505f6101439581925190845af4913d15610e1d573d610e0f610e068261188b565b9251928361175c565b81525f81943d92013e611b9c565b5060609250611b9c565b9450945050505034610e3557005b7fb398979f000000000000000000000000000000000000000000000000000000008152fd5b83838851917f4c9c8ce3000000000000000000000000000000000000000000000000000000008352820152fd5b84908851917faa1d49a4000000000000000000000000000000000000000000000000000000008352820152fd5b9091508481813d8311610edc575b610ecc818361175c565b810103126101455751908a610d21565b503d610ec2565b8685517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141589610cdd565b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610145575f73ffffffffffffffffffffffffffffffffffffffff610f86611716565b168351928380927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa908115610ff45791610259925f92610fd8575b5051918291602083526020830190611842565b610fed9192503d805f833e61068d818361175c565b9083610fc5565b82513d5f823e3d90fd5b346101455760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455735905f548210156101455773ffffffffffffffffffffffffffffffffffffffff6110586020936117e2565b92905490519260031b1c168152f35b346101455760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455767ffffffffffffffff918135838111610145573660238201121561014557808301359360246110c4866117ca565b926110d18551948561175c565b868452602096828886019160051b83010191368311610145578301905b82821061169c575050508035828111610145573660238201121561014557808601359061111a826117ca565b906111278751928361175c565b8282528882019260051b81018401908336831161014557858b9201905b83821061168d575050505060449173ffffffffffffffffffffffffffffffffffffffff9485600354169081156116325760019485895111156115d8578851855103611557575f865b61141a575b505086600254169389519461370080870193878510908511176113ef5790869594939291611c3d8739825260a08d8301528c6111d060a084018c611842565b8381038d8501529151808352910193905f888f5b8383106113d857505050604435606084015250506080015203905ff080156113ce578316955f54680100000000000000008110156113a3579061123082848a9897969594015f556117e2565b81549060031b908689831b921b1916179055815f905b611298575b505050507f93de7d9de9f3e05ba87a0170fcbb71af623439caf5e5079587b9d38c5da9b0d19161128a9160025416855192839287845287840190611842565b90888301520390a251908152f35b909192939495865182101561139b57508281018082116113705783929190835b6112ca575b5082018896959493611246565b879391929351811015611367578190876112e4858b6118c5565b51165f52818c52895f20886112f9838c6118c5565b51165f528c52895f207fffffffffffffffffffffffff0000000000000000000000000000000000000000908c8282541617905588611337838c6118c5565b51165f52828d528a5f208961134c878d6118c5565b51165f528d528b8b5f209182541617905501819392916112b8565b929190926112bd565b846011847f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b95949361124b565b836041837f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b85513d5f823e3d90fd5b84518852899850968701969093019201888f6111e4565b8860418e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b89518110156115525786810180821161152757879291908b8f8c8f875b61144a575b50505050508201909161118c565b90919293949596845186101561151a57508461147a918361146b89886118c5565b51165f528d85525f20946118c5565b51165f5252898c5f205416611499578792919083018b8f8c8f87611437565b8b517f08c379a0000000000000000000000000000000000000000000000000000000008152808e018f90526021818b01527f506f6f6c20616c72656164792065786973747320666f72207468697320706169818501527f72000000000000000000000000000000000000000000000000000000000000006064820152608490fd5b969594509083929161143c565b8860118e7f4e487b71000000000000000000000000000000000000000000000000000000005f52525ffd5b611191565b60848b6022898f8e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f41737365747320616e642077656967687473206c656e677468206d69736d617460448201527f63680000000000000000000000000000000000000000000000000000000000006064820152fd5b60648b8d89818e51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4174206c656173742074776f20617373657473206172652072657175697265646044820152fd5b60648a6011888e8d51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f506572697068657279206e6f74207365740000000000000000000000000000006044820152fd5b81358152908201908201611144565b813573ffffffffffffffffffffffffffffffffffffffff811681036101455781529088019088016110ee565b34610145575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101455760209073ffffffffffffffffffffffffffffffffffffffff600254168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361014557565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761179d57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161179d5760051b60200190565b5f54811015611815575f80527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9081518082526020808093019301915f5b828110611861575050505090565b835173ffffffffffffffffffffffffffffffffffffffff1685529381019392810192600101611853565b67ffffffffffffffff811161179d57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b80518210156118155760209160051b010190565b60209081818403126101455780519067ffffffffffffffff821161014557019180601f8401121561014557825161190f816117ca565b9361191d604051958661175c565b818552838086019260051b820101928311610145578301905b828210611944575050505090565b815173ffffffffffffffffffffffffffffffffffffffff81168103610145578152908301908301611936565b5f905f54915b828110611984575050505f90565b61198d816117e2565b9073ffffffffffffffffffffffffffffffffffffffff90548185169260031b1c16146119bb57600101611976565b505050600190565b906119cd826117ca565b6119da604051918261175c565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611a0882946117ca565b0190602036910137565b73ffffffffffffffffffffffffffffffffffffffff809116908115611aa3577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930054163303611b1357565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c1615611b7257565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90611bdb5750805115611bb157805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b81511580611c33575b611bec575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b15611be456fe6080806040523461043957613700803803809161001c82856108fe565b8339810160a0828203126104395761003382610921565b60208301519091906001600160401b0381116104395783019181601f840112156104395782519261006384610935565b9361007160405195866108fe565b80855260208086019160051b8301019184831161043957602001905b8282106108cb5750505060408401516001600160401b0381116104395784019180601f840112156104395782516100c381610935565b936100d160405195866108fe565b81855260208086019260051b82010192831161043957602001905b8282106108bb57505050610107608060608601519501610921565b604051610113816108e3565b6009815268042616c756e69204c560bc1b602082015260405190610136826108e3565b6009825268042414c554e492d4c560bc1b60208301528051906001600160401b0382116104965760035490600182811c921680156108b1575b60208310146107925781601f849311610843575b50602090601f83116001146107bb575f926107b0575b50508160011b915f199060031b1c1916176003555b8051906001600160401b0382116104965760045490600182811c921680156107a6575b60208310146107925781601f849311610724575b50602090601f83116001146106a0575f92610695575b50508160011b915f199060031b1c1916176004555b6001600555600980546001600160a01b03199081166001600160a01b0393841617909155600a8054821633179055600c8054909116918316919091179055670de0b6b3a76400006008558251825103610645575f5b8351811015610525576001600160a01b03610280828661094c565b5116156104e057610291818461094c565b51156104aa576001600160a01b036102a9828661094c565b51166102b5828561094c565b5160408051929083018084116001600160401b0390911117610496576040830160405282526020820152600654680100000000000000008110156104965760018101806006558110156104825760065f5281517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f60019290921b91820180546001600160a01b039283166001600160a01b03199091161790556020909201517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4090910155610383828661094c565b511660018060a01b03600c5416604051636eb1769f60e11b8152306004820152816024820152602081604481865afa908115610445575f91610450575b50156103d1575b5050600101610265565b5f916044602092604051948593849263095ea7b360e01b84526004840152811960248401525af1801561044557610409575b806103c7565b6020813d60201161043d575b81610422602093836108fe565b81010312610439575180151503610439575f610403565b5f80fd5b3d9150610415565b6040513d5f823e3d90fd5b90506020813d60201161047a575b8161046b602093836108fe565b8101031261043957515f6103c0565b3d915061045e565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081dd95a59da1d60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527f496e76616c6964206173736574206164647265737300000000000000000000006044820152606490fd5b5060078490556040516389a3027160e01b815290602090829060049082906001600160a01b03165afa908115610445575f9161060b575b50600b80546001600160a01b0319166001600160a01b03929092169190911790555f90815b81518310156105bd57610594838361094c565b5181018091116105a957600190920191610581565b634e487b7160e01b5f52601160045260245ffd5b612710036105d457604051612d9f90816109618239f35b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207765696768747360881b6044820152606490fd5b90506020813d60201161063d575b81610626602093836108fe565b810103126104395761063790610921565b8261055c565b3d9150610619565b60405162461bcd60e51b815260206004820152602260248201527f41737365747320616e642077656967687473206c656e677468206d69736d61746044820152610c6d60f31b6064820152608490fd5b015190505f806101fb565b60045f9081527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9350601f198516905b81811061070c57509084600195949392106106f4575b505050811b01600455610210565b01515f1960f88460031b161c191690555f80806106e6565b929360206001819287860151815501950193016106d0565b60045f529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c81019160208510610788575b90601f859493920160051c01905b81811061077a57506101e5565b5f815584935060010161076d565b909150819061075f565b634e487b7160e01b5f52602260045260245ffd5b91607f16916101d1565b015190505f80610199565b60035f90815293507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b91905b601f1984168510610828576001945083601f19811610610810575b505050811b016003556101ae565b01515f1960f88460031b161c191690555f8080610802565b818101518355602094850194600190930192909101906107e7565b60035f529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f840160051c810191602085106108a7575b90601f859493920160051c01905b8181106108995750610183565b5f815584935060010161088c565b909150819061087e565b91607f169161016f565b81518152602091820191016100ec565b602080916108d884610921565b81520191019061008d565b604081019081106001600160401b0382111761049657604052565b601f909101601f19168101906001600160401b0382119082101761049657604052565b51906001600160a01b038216820361043957565b6001600160401b0381116104965760051b60200190565b80518210156104825760209160051b01019056fe60806040818152600480361015610014575f80fd5b5f925f3560e01c90816301d22ccd1461225e5750806306fdde03146121145780630723c99914611e3a5780630902f1ac14611dec578063095ea7b314611ce657806318160ddd14611caa5780631a68650214611c6857806322acb86714611bed57806323b872dd14611a99578063313ce56714611a6057806336bf6e3914611a0e5780633dff5b7f146119255780634aa066521461190a57806367a6c440146118d157806367e4ac2c146118425780636e81221c146115cf57806370a082311461156e57806377aace1a1461151c5780637fec8d38146114e057806389ab35321461145857806389afcb4414610f3f5780638a77c8dc14610efc57806395d89b4114610da8578063a9059cbb14610d5a578063b2b55d7014610ae5578063c2ee3a0814610d1e578063c45a015514610ccc578063cdf456e114610c7a578063cf8fa76414610bc1578063d14ef46d14610b47578063d66bd52414610ae5578063dd62ed3e14610a70578063de836ebd14610675578063e73faa2d146106345763f47b45e8146101a1575f80fd5b346104f1577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc915f833601126104f15773ffffffffffffffffffffffffffffffffffffffff938460095416926101f8843314612561565b610208610203612a1d565b6125c6565b600691600654916102188361262b565b966102228461262b565b61022b8561262b565b908a6102368761262b565b936102408861262b565b9a61024a8961262b565b985f8e5b8282106105585750505061026061268e565b9083600c54169060075494600b541693823b156104f1578f966102c7968f9660e0946102e85f99958f956102d98c98519d8e9c8d9b8c9a7ff0bf7714000000000000000000000000000000000000000000000000000000008c528b015260e48a019061233a565b60249f848a83030160248b01526124b3565b9187830301604488015261233a565b92606485015280608485015260a484015260c483015203925af1801561054e57610506575b5084600654948c60095416915b8d8d8883106103f3578d8d8d8d8d5f5b835481101561036c5780886103406001936124fc565b50541661034d828961267a565b51905f52600d602052610364875f20918254612a73565b90550161032a565b50928693865f5b85548110156103b55780876103896001936124fc565b505416610396828861267a565b51905f52600d6020526103ad865f209182546128a6565b905501610373565b507f279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8835160208152806103ed339460208301906124b3565b0390a280f35b826103fd9161267a565b5116908b5180927f70a082310000000000000000000000000000000000000000000000000000000082528585830152818760209384935afa9081156104fc578a916104c9575b5060019250610452828961267a565b5261045d818861267a565b51610468828861267a565b5110156104a1578c61049982610493610481828c61267a565b5161048c838c61267a565b51906128a6565b9261267a565b525b0161031a565b6104b96104ae828861267a565b5161048c838a61267a565b6104c3828c61267a565b5261049b565b905082813d83116104f5575b6104df81836123cd565b810103126104f157600191515f610443565b5f80fd5b503d6104d5565b8d513d8c823e3d90fd5b90945067ffffffffffffffff81116105225787525f935f61030d565b6041847f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b89513d5f823e3d90fd5b81610598918761056c8396979899956124fc565b505416610579838361267a565b526001610585836124fc565b500154610592838b61267a565b5261267a565b5116908c5180927f70a08231000000000000000000000000000000000000000000000000000000008252858b83015281602460209384935afa90811561062a575f916105fb575b50600192506105ee828961267a565b5201908e9392918e61024e565b905082813d8311610623575b61061181836123cd565b810103126104f157600191515f6105df565b503d610607565b8e513d5f823e3d90fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209061066e612a80565b9051908152f35b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576106ac6122f4565b91602492833567ffffffffffffffff81116104f1576106ce9036908501612453565b9273ffffffffffffffffffffffffffffffffffffffff936106f485600954163314612561565b6002545f9161070161268e565b9060065491518203610a145781156109b857905f915b81831061097f5750505081156108fd57806108525750935b84156107f6576107628591335f525f602052855f2054946107508482612b58565b1693845f525f602052855f20546128a6565b0361079a5750602093507f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885848351858152a251908152f35b606490600b8660208651937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74204661696c65640000000000000000000000000000000000000000006044820152fd5b606482600d8860208851937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4d696e74207174792069732030000000000000000000000000000000000000006044820152fd5b61085a612aab565b5091821561087b5761087592916108709161282f565b61286f565b9361072f565b60848460268a60208a51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c206c6971756964697479206d75737420626520677265617465722060448201527f7468616e203000000000000000000000000000000000000000000000000000006064820152fd5b60848360228960208951937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f546f74616c2076616c7565206d7573742062652067726561746572207468616e60448201527f20300000000000000000000000000000000000000000000000000000000000006064820152fd5b9091936109af6001916109a98b610995896124fc565b5054166109a2898761267a565b5190612cff565b90612a73565b94019190610717565b60648560098b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f4e6f2061737365747300000000000000000000000000000000000000000000006044820152fd5b60648560178b60208b51937f08c379a00000000000000000000000000000000000000000000000000000000085528401528201527f496e76616c6964207265736572766573206c656e6774680000000000000000006044820152fd5b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610aaa6122f4565b610ab2612317565b9073ffffffffffffffffffffffffffffffffffffffff8091165f5260018452825f2091165f528252805f20549051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff610b356122f4565b165f52600d8252805f20549051908152f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157356006548110156104f157610b8b906124fc565b508054600190910154915173ffffffffffffffffffffffffffffffffffffffff90911681526020810191909152604090f35b0390f35b50346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157803590610bfc612aab565b8092915051831015610c1d57602084610c15858561267a565b519051908152f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f496e76616c696420617373657420696e646578000000000000000000000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600b54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600a54169051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906008549051908152f35b82346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610da1610d976122f4565b6024359033612bf2565b5160018152f35b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9280549060018260011c9160018416938415610ef2575b6020948585108114610ec657848852908115610e865750600114610e2d575b610bbd8686610e23828b03836123cd565b51918291826122ac565b5f9081529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b828410610e735750505082610bbd94610e23928201019486610e12565b8054868501880152928601928101610e56565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001687860152505050151560051b8301019250610e2382610bbd86610e12565b6022837f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f1692610df3565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090610f36612a1d565b90519015158152f35b5090346104f157602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610f7a6122f4565b73ffffffffffffffffffffffffffffffffffffffff806009541691610fa0833314612561565b305f525f8552835f20549586156113fc576002549687156113a057600654610fc78161262b565b98601e8302838104601e0361137457612710610fe5910480946128a6565b965f5b8381106112bb5750505050305f525f875261100885875f205410156129b8565b818785600c54168851928380927f61d027b30000000000000000000000000000000000000000000000000000000082525afa9081156112b1579088915f91611277575b5087517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116848201908152602081019390935291829081906040015b03815f305af190811561126d575f91611237575b50156111db57305f525f86526110cf84865f205410156129b8565b30156111ac57305f525f8652845f205490848210611168575083927fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca592610bbd96958893305f525f855203865f205584600254036002555f86518681527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef853092a385519485521692a25192828493845283019061233a565b85517fe450d38c0000000000000000000000000000000000000000000000000000000081523091810191825260208201929092526040810185905281906060010390fd5b6024905f8651917f96c6fd1e000000000000000000000000000000000000000000000000000000008352820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601360248201527f466565207472616e73666572206661696c6564000000000000000000000000006044820152fd5b90508681813d8311611266575b61124e81836123cd565b810103126104f1575180151581036104f157886110b4565b503d611244565b86513d5f823e3d90fd5b82819392503d83116112aa575b61128e81836123cd565b810103126104f1575184811681036104f15787906110a061104b565b503d611284565b87513d5f823e3d90fd5b876112c5826124fc565b5054168a51907fa3e113fb000000000000000000000000000000000000000000000000000000008252308883015260248201528b81604481865afa90811561136a578a8593928f925f91611330575b5061049360019561087061132994879461282f565b5201610fe8565b94505050508b82813d8311611363575b61134a81836123cd565b810103126104f15790518391908d908b90610493611314565b503d611340565b8b513d5f823e3d90fd5b6011857f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b606482888851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152600c60248201527f4e6f206c697175696469747900000000000000000000000000000000000000006044820152fd5b606490868651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601c60248201527f5368617265206d7573742062652067726561746572207468616e2030000000006044820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15761148f6128b3565b8251928391818301918352835180925260608301916020809501945f5b8281106114c7578580610bbd8787838203602085015261233a565b86511515855295810195879550938101936001016114ac565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906007549051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600954169051908152f35b82346104f15760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff6115be6122f4565b165f525f8252805f20549051908152f35b5090346104f15760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576116086122f4565b90611611612317565b6044359260643573ffffffffffffffffffffffffffffffffffffffff928382168092036104f15760026005541461181a576002600555838116938316928484146117bd57861561176057611666918791612786565b95835f52600d60205286855f20541061170357601e870290878204601e14881517156116d75750846116c06020986127107fcd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e460629404906128a6565b9681519081528789820152a4600160055551908152f35b6011907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b60649060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601660248201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b60648860208851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601a60248201527f43616e6e6f742073776170207468652073616d6520746f6b656e0000000000006044820152fd5b8685517f3ee5aeb5000000000000000000000000000000000000000000000000000000008152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760065461187d8161262b565b905f5b81811061189c57835160208082528190610bbd908201866124b3565b8073ffffffffffffffffffffffffffffffffffffffff6118bd6001936124fc565b5054166118ca828661267a565b5201611880565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209051601e8152f35b82346104f15760209061066e61191f3661236d565b91612786565b50346104f157817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15780359067ffffffffffffffff82116104f15761197291369101612453565b9060243580151581036104f15773ffffffffffffffffffffffffffffffffffffffff926119a484600954163314612561565b5f5b600654811015611a0c5780856119bd6001936124fc565b5054166119ca828561267a565b519085156119f0575f52600d6020526119e7865f20918254612a73565b90555b016119a6565b5f52600d602052611a05865f209182546128a6565b90556119ea565b005b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd611a48612aab565b8392919251938493845280602085015283019061233a565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020905160128152f35b50346104f157611aa83661236d565b9273ffffffffffffffffffffffffffffffffffffffff83929316805f526001602052855f20335f52602052855f2054917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8303611b0e575b602087610da1888888612bf2565b858310611ba8578115611b79573315611b4a57505f90815260016020908152868220338352815290869020918590039091558290610da1611b00565b6024905f8851917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024905f8851917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b86517ffb8f41b2000000000000000000000000000000000000000000000000000000008152339181019182526020820193909352604081018690528291506060010390fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157600654611c288161262b565b905f5b818110611c4757835160208082528190610bbd9082018661233a565b806001611c5481936124fc565b500154611c61828661267a565b5201611c2b565b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157602090611ca2612aab565b509051908152f35b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1576020906002549051908152f35b5090346104f157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611d1e6122f4565b602435903315611dbd5773ffffffffffffffffffffffffffffffffffffffff16908115611d8e5760209350335f5260018452825f20825f52845280835f205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b6024845f8551917f94280d62000000000000000000000000000000000000000000000000000000008352820152fd5b6024845f8551917fe602df05000000000000000000000000000000000000000000000000000000008352820152fd5b82346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157610bbd90611e2761268e565b905191829160208352602083019061233a565b50346104f157602091827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f157611e746122f4565b9173ffffffffffffffffffffffffffffffffffffffff93611e9a85600954163314612561565b611ea5610203612a1d565b611ead612aab565b6006549491611ebb8661262b565b915f5b8781106120bf575050505f945f5b8181106120a05750611edd9061262b565b945f5b825181101561204857611ef3818461267a565b51611f01575b600101611ee0565b611f0b818461267a565b51858a611f17846124fc565b5054168b600c54168c600b54168a611f868a51968795869485947f248391ff000000000000000000000000000000000000000000000000000000008652850160409194939294606082019573ffffffffffffffffffffffffffffffffffffffff80921683521660208201520152565b03915afa90811561203e575f91612011575b508015611fb55790600191611fad828a61267a565b529050611ef9565b606487878751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601b60248201527f496e76616c696420746f6b656e20616d6f756e7420746f2061646400000000006044820152fd5b90508581813d8311612037575b61202881836123cd565b810103126104f157518a611f98565b503d61201e565b85513d5f823e3d90fd5b50610bbd9394506120599087612b58565b7fa95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e82518581528061208e33948883019061233a565b0390a25192828493845283019061233a565b956120b86001916120b1898661267a565b5190612a73565b9601611ecc565b806127106120db60016120d281956124fc565b5001548661282f565b04806120e7838661267a565b51106120f5575b5001611ebe565b6121039061048c838661267a565b61210d828761267a565b528b6120ee565b5090346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f1578051905f9260035460018160011c91600181168015612254575b602094858510821461222857508387529081156121ea5750600114612190575b505050610e2382610bbd9403836123cd565b60035f9081529295507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106121d75750505082610bbd94610e23928201019461217e565b80548685018801529286019281016121bb565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016868501525050151560051b8301019250610e2382610bbd61217e565b6022907f4e487b71000000000000000000000000000000000000000000000000000000005f525260245ffd5b92607f169261215e565b346104f1575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f15760209073ffffffffffffffffffffffffffffffffffffffff600c54168152f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104f157565b9081518082526020808093019301915f5b828110612359575050505090565b83518552938101939281019260010161234b565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126104f15773ffffffffffffffffffffffffffffffffffffffff9060043582811681036104f1579160243590811681036104f1579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761240e57604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161240e5760051b60200190565b9080601f830112156104f157602090823561246d8161243b565b9361247b60405195866123cd565b81855260208086019260051b8201019283116104f157602001905b8282106124a4575050505090565b81358152908301908301612496565b9081518082526020808093019301915f5b8281106124d2575050505090565b835173ffffffffffffffffffffffffffffffffffffffff16855293810193928101926001016124c4565b6006548110156125345760065f5260011b7ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01905f90565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b1561256857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f6e6c79205065726970686572790000000000000000000000000000000000006044820152fd5b156125cd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f526562616c616e6365206e6f74206e65656465640000000000000000000000006044820152fd5b906126358261243b565b61264260405191826123cd565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612670829461243b565b0190602036910137565b80518210156125345760209160051b010190565b60245f73ffffffffffffffffffffffffffffffffffffffff60095416604051928380927f3e99c1e40000000000000000000000000000000000000000000000000000000082523060048301525afa90811561277b575f916126ed575090565b90503d805f833e6126fe81836123cd565b81019060209081818403126104f15780519067ffffffffffffffff82116104f157019180601f840112156104f15782516127378161243b565b9361274560405195866123cd565b818552838086019260051b8201019283116104f1578301905b82821061276c575050505090565b8151815290830190830161275e565b6040513d5f823e3d90fd5b600c546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201529282166024840152604483019390935290916020918391168180606481015b03915afa90811561277b575f91612800575090565b90506020813d602011612827575b8161281b602093836123cd565b810103126104f1575190565b3d915061280e565b8181029291811591840414171561284257565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b8115612879570490565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b9190820391821161284257565b6128bb612aab565b9190600654906128ca8261243b565b916128d860405193846123cd565b8083527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06129058261243b565b013660208501376129158161262b565b945f5b82811061292757505050509190565b612931818361267a565b519061271091828102928184041490151715612842576129538560019361286f565b61295c826124fc565b508301548391818111156129915790612974916128a6565b61297e838b61267a565b52612989828861267a565b525b01612918565b9061299c92506128a6565b6129a6828a61267a565b525f6129b2828861267a565b5261298b565b156129bf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e74206c6971756964697479000000000000000000006044820152fd5b612a256128b3565b5f5b8151811015612a6c57612a3a818461267a565b51151580612a57575b612a4f57600101612a27565b505050600190565b50612a62818361267a565b5160075410612a43565b5050505f90565b9190820180921161284257565b612a88612aab565b506002548015612aa557610870612aa2926008549061282f565b90565b50505f90565b600654905f612ab98361262b565b925f9073ffffffffffffffffffffffffffffffffffffffff80600b5416905b828410612ae757505050509190565b90919293612b2760019183612afb886124fc565b505416858103612b31575f52600d60205260405f2054612b1b888b61267a565b525b6120b1878a61267a565b9401929190612ad8565b80612b48915f52600d60205260405f205490612cff565b612b52888b61267a565b52612b1d565b73ffffffffffffffffffffffffffffffffffffffff16908115612bc2577fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602082612ba65f94600254612a73565b60025584845283825260408420818154019055604051908152a3565b60246040517fec442f050000000000000000000000000000000000000000000000000000000081525f6004820152fd5b9173ffffffffffffffffffffffffffffffffffffffff808416928315612ccf5716928315612bc257825f525f60205260405f205490828210612c775750817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f5260405f20818154019055604051908152a3565b6040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019190915260448101829052606490fd5b60246040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f6004820152fd5b600c54600b546040517f248391ff00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101939093526020918391168180606481016127eb56fea264697066735822122002fb5f90be03d678677ac304ec3f491eda7f0caccb27a4d0da4f22dcce0a35b064736f6c63430008190033a264697066735822122098cd2134185ee021f9d0cbc6efdd940fe95bb657c5ea1c931c807c50d871a2ba64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP3 DUP4 PUSH4 0x1D22CCD EQ PUSH2 0x16C8 JUMPI POP DUP3 PUSH4 0x2D5E94A7 EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x3069873B EQ PUSH2 0x1067 JUMPI DUP3 PUSH4 0x41D1DE97 EQ PUSH2 0xFFE JUMPI DUP3 PUSH4 0x4276B97B EQ PUSH2 0xF39 JUMPI DUP3 PUSH4 0x4F1EF286 EQ PUSH2 0xC0E JUMPI DUP3 PUSH4 0x52D1902D EQ PUSH2 0xB53 JUMPI DUP3 PUSH4 0x531AA03E EQ PUSH2 0xADD JUMPI DUP3 PUSH4 0x715018A6 EQ PUSH2 0xA21 JUMPI DUP3 PUSH4 0x77AACE1A EQ PUSH2 0x9CF JUMPI DUP3 PUSH4 0x89345EFB EQ PUSH2 0x983 JUMPI DUP3 PUSH4 0x8DA5CB5B EQ PUSH2 0x912 JUMPI DUP3 PUSH4 0x8F2248BC EQ PUSH2 0x793 JUMPI DUP3 PUSH4 0xAD3CB1CC EQ PUSH2 0x6A6 JUMPI DUP3 PUSH4 0xB4340E6A EQ PUSH2 0x4B6 JUMPI DUP3 PUSH4 0xB4AC6860 EQ PUSH2 0x47B JUMPI DUP3 PUSH4 0xC4D66DE8 EQ PUSH2 0x28A JUMPI POP DUP2 PUSH4 0xD88FF1F4 EQ PUSH2 0x1CB JUMPI POP DUP1 PUSH4 0xE9B31CFF EQ PUSH2 0x149 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x143 PUSH2 0x136 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0x1A12 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x195 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1AD3 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE DUP2 DUP1 MSTORE PUSH1 0x20 DUP1 DUP5 ADD SWAP5 SWAP3 PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP3 SWAP2 JUMPDEST DUP3 DUP3 LT PUSH2 0x25D JUMPI PUSH2 0x259 DUP7 DUP7 PUSH2 0x247 DUP3 DUP12 SUB DUP4 PUSH2 0x175C JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 MSTORE SWAP6 DUP7 ADD SWAP6 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x22F JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x2C1 PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP2 DUP3 SLOAD PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x473 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x469 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x460 JUMPI JUMPDEST POP PUSH2 0x439 JUMPI POP SWAP1 DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x404 JUMPI JUMPDEST POP PUSH2 0x368 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x370 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x378 PUSH2 0x1B43 JUMP JUMPDEST PUSH2 0x381 CALLER PUSH2 0x1A12 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x3B1 JUMPI STOP JUMPDEST PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP2 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH1 0x20 SWAP4 SLOAD AND SWAP1 SSTORE MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE DUP6 PUSH2 0x35F JUMP JUMPDEST DUP6 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO DUP8 PUSH2 0x314 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x30C JUMP JUMPDEST DUP6 SWAP2 POP PUSH2 0x302 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH0 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x4ED PUSH2 0x1716 JUMP JUMPDEST SWAP1 PUSH0 SLOAD SWAP2 PUSH2 0x4FA DUP4 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP5 AND JUMPDEST DUP4 DUP4 LT PUSH2 0x56D JUMPI JUMPDEST POP POP POP POP PUSH2 0x52D DUP3 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x54C JUMPI DUP6 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x259 SWAP1 DUP3 ADD DUP9 PUSH2 0x1842 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x55A PUSH1 0x1 SWAP4 DUP6 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH2 0x566 DUP3 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MSTORE ADD PUSH2 0x530 JUMP JUMPDEST DUP5 PUSH2 0x57D DUP5 SWAP8 SWAP5 SWAP9 SWAP7 SWAP6 SWAP9 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND SWAP1 DUP9 MLOAD SWAP8 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH0 DUP10 DUP6 DUP2 DUP7 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x69C JUMPI PUSH0 SWAP10 PUSH2 0x678 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x66A JUMPI DUP3 DUP8 PUSH2 0x5D9 DUP4 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND EQ PUSH2 0x5E8 JUMPI PUSH1 0x1 ADD PUSH2 0x5C4 JUMP JUMPDEST POP SWAP4 SWAP2 SWAP1 SWAP5 SWAP6 SWAP8 POP PUSH2 0x5FA DUP3 DUP10 PUSH2 0x18C5 JUMP JUMPDEST MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x63E JUMPI PUSH1 0x1 ADD SWAP5 JUMPDEST DUP7 MLOAD DUP7 EQ PUSH2 0x639 JUMPI PUSH1 0x1 ADD SWAP2 SWAP3 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x520 JUMP JUMPDEST PUSH1 0x11 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP4 SWAP7 SWAP2 POP SWAP4 SWAP5 SWAP7 POP PUSH2 0x627 JUMP JUMPDEST PUSH2 0x695 SWAP2 SWAP10 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x18D9 JUMP JUMPDEST SWAP8 DUP11 PUSH2 0x5C1 JUMP JUMPDEST DUP11 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP2 DUP2 DUP4 ADD SWAP1 DUP4 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x767 JUMPI POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP8 ADD MSTORE DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH1 0x41 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x7CA PUSH2 0x1716 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP1 SWAP6 SUB PUSH2 0x145 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP3 DUP4 SLOAD SWAP3 DUP7 PUSH1 0xFF DUP6 DUP9 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x905 JUMPI JUMPDEST POP POP PUSH2 0x8DE JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 DUP8 DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP13 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE AND OR OR AND SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 AND LT ISZERO SWAP1 POP DUP7 DUP9 PUSH2 0x817 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x9C6 PUSH2 0x9C1 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xA57 PUSH2 0x1AD3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xB17 PUSH2 0x1716 JUMP JUMPDEST PUSH2 0xB1F PUSH2 0x1739 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP2 DUP4 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP4 MSTORE DUP2 PUSH0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xBE8 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0xC3F PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP5 ADD CALLDATALOAD PUSH2 0xC6B DUP2 PUSH2 0x188B JUMP JUMPDEST SWAP4 PUSH2 0xC78 DUP5 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP7 ADD SWAP4 CALLDATASIZE DUP10 DUP4 DUP4 ADD ADD GT PUSH2 0x145 JUMPI DUP2 PUSH0 SWAP3 DUP11 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP8 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0xF0B JUMPI JUMPDEST POP PUSH2 0xEE3 JUMPI PUSH2 0xCEA PUSH2 0x1AD3 JUMP JUMPDEST DUP2 AND SWAP5 DUP5 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 DUP10 DUP2 DUP11 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0xEB4 JUMPI JUMPDEST POP PUSH2 0xD55 JUMPI POP POP POP POP POP MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP8 DUP8 DUP8 SWAP5 SWAP4 DUP12 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0xE87 JUMPI POP DUP6 EXTCODESIZE ISZERO PUSH2 0xE5A JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP3 MLOAD ISZERO PUSH2 0xE27 JUMPI POP POP PUSH0 PUSH2 0x143 SWAP6 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0xE1D JUMPI RETURNDATASIZE PUSH2 0xE0F PUSH2 0xE06 DUP3 PUSH2 0x188B JUMP JUMPDEST SWAP3 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x1B9C JUMP JUMPDEST POP PUSH1 0x60 SWAP3 POP PUSH2 0x1B9C JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP CALLVALUE PUSH2 0xE35 JUMPI STOP JUMPDEST PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 DUP4 DUP9 MLOAD SWAP2 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP5 SWAP1 DUP9 MLOAD SWAP2 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xEDC JUMPI JUMPDEST PUSH2 0xECC DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x145 JUMPI MLOAD SWAP1 DUP11 PUSH2 0xD21 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xEC2 JUMP JUMPDEST DUP7 DUP6 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP10 PUSH2 0xCDD JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF86 PUSH2 0x1716 JUMP JUMPDEST AND DUP4 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xFF4 JUMPI SWAP2 PUSH2 0x259 SWAP3 PUSH0 SWAP3 PUSH2 0xFD8 JUMPI JUMPDEST POP MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH2 0xFED SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x68D DUP2 DUP4 PUSH2 0x175C JUMP JUMPDEST SWAP1 DUP4 PUSH2 0xFC5 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI CALLDATALOAD SWAP1 PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0x145 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1058 PUSH1 0x20 SWAP4 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 SWAP1 SLOAD SWAP1 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP2 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP4 ADD CALLDATALOAD SWAP4 PUSH1 0x24 PUSH2 0x10C4 DUP7 PUSH2 0x17CA JUMP JUMPDEST SWAP3 PUSH2 0x10D1 DUP6 MLOAD SWAP5 DUP6 PUSH2 0x175C JUMP JUMPDEST DUP7 DUP5 MSTORE PUSH1 0x20 SWAP7 DUP3 DUP9 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x169C JUMPI POP POP POP DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x145 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP1 DUP7 ADD CALLDATALOAD SWAP1 PUSH2 0x111A DUP3 PUSH2 0x17CA JUMP JUMPDEST SWAP1 PUSH2 0x1127 DUP8 MLOAD SWAP3 DUP4 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP3 MSTORE DUP9 DUP3 ADD SWAP3 PUSH1 0x5 SHL DUP2 ADD DUP5 ADD SWAP1 DUP4 CALLDATASIZE DUP4 GT PUSH2 0x145 JUMPI DUP6 DUP12 SWAP3 ADD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x168D JUMPI POP POP POP POP PUSH1 0x44 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 PUSH1 0x3 SLOAD AND SWAP1 DUP2 ISZERO PUSH2 0x1632 JUMPI PUSH1 0x1 SWAP5 DUP6 DUP10 MLOAD GT ISZERO PUSH2 0x15D8 JUMPI DUP9 MLOAD DUP6 MLOAD SUB PUSH2 0x1557 JUMPI PUSH0 DUP7 JUMPDEST PUSH2 0x141A JUMPI JUMPDEST POP POP DUP7 PUSH1 0x2 SLOAD AND SWAP4 DUP10 MLOAD SWAP5 PUSH2 0x3700 DUP1 DUP8 ADD SWAP4 DUP8 DUP6 LT SWAP1 DUP6 GT OR PUSH2 0x13EF JUMPI SWAP1 DUP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x1C3D DUP8 CODECOPY DUP3 MSTORE PUSH1 0xA0 DUP14 DUP4 ADD MSTORE DUP13 PUSH2 0x11D0 PUSH1 0xA0 DUP5 ADD DUP13 PUSH2 0x1842 JUMP JUMPDEST DUP4 DUP2 SUB DUP14 DUP6 ADD MSTORE SWAP2 MLOAD DUP1 DUP4 MSTORE SWAP2 ADD SWAP4 SWAP1 PUSH0 DUP9 DUP16 JUMPDEST DUP4 DUP4 LT PUSH2 0x13D8 JUMPI POP POP POP PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP5 ADD MSTORE POP POP PUSH1 0x80 ADD MSTORE SUB SWAP1 PUSH0 CREATE DUP1 ISZERO PUSH2 0x13CE JUMPI DUP4 AND SWAP6 PUSH0 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x13A3 JUMPI SWAP1 PUSH2 0x1230 DUP3 DUP5 DUP11 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 ADD PUSH0 SSTORE PUSH2 0x17E2 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 DUP7 DUP10 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE DUP2 PUSH0 SWAP1 JUMPDEST PUSH2 0x1298 JUMPI JUMPDEST POP POP POP POP PUSH32 0x93DE7D9DE9F3E05BA87A0170FCBB71AF623439CAF5E5079587B9D38C5DA9B0D1 SWAP2 PUSH2 0x128A SWAP2 PUSH1 0x2 SLOAD AND DUP6 MLOAD SWAP3 DUP4 SWAP3 DUP8 DUP5 MSTORE DUP8 DUP5 ADD SWAP1 PUSH2 0x1842 JUMP JUMPDEST SWAP1 DUP9 DUP4 ADD MSTORE SUB SWAP1 LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP7 MLOAD DUP3 LT ISZERO PUSH2 0x139B JUMPI POP DUP3 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1370 JUMPI DUP4 SWAP3 SWAP2 SWAP1 DUP4 JUMPDEST PUSH2 0x12CA JUMPI JUMPDEST POP DUP3 ADD DUP9 SWAP7 SWAP6 SWAP5 SWAP4 PUSH2 0x1246 JUMP JUMPDEST DUP8 SWAP4 SWAP2 SWAP3 SWAP4 MLOAD DUP2 LT ISZERO PUSH2 0x1367 JUMPI DUP2 SWAP1 DUP8 PUSH2 0x12E4 DUP6 DUP12 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP2 DUP13 MSTORE DUP10 PUSH0 KECCAK256 DUP9 PUSH2 0x12F9 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP13 MSTORE DUP10 PUSH0 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP13 DUP3 DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0x1337 DUP4 DUP13 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 DUP14 MSTORE DUP11 PUSH0 KECCAK256 DUP10 PUSH2 0x134C DUP8 DUP14 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 MSTORE DUP12 DUP12 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE ADD DUP2 SWAP4 SWAP3 SWAP2 PUSH2 0x12B8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x12BD JUMP JUMPDEST DUP5 PUSH1 0x11 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST SWAP6 SWAP5 SWAP4 PUSH2 0x124B JUMP JUMPDEST DUP4 PUSH1 0x41 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 MLOAD DUP9 MSTORE DUP10 SWAP9 POP SWAP7 DUP8 ADD SWAP7 SWAP1 SWAP4 ADD SWAP3 ADD DUP9 DUP16 PUSH2 0x11E4 JUMP JUMPDEST DUP9 PUSH1 0x41 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST DUP10 MLOAD DUP2 LT ISZERO PUSH2 0x1552 JUMPI DUP7 DUP2 ADD DUP1 DUP3 GT PUSH2 0x1527 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP12 DUP16 DUP13 DUP16 DUP8 JUMPDEST PUSH2 0x144A JUMPI JUMPDEST POP POP POP POP POP DUP3 ADD SWAP1 SWAP2 PUSH2 0x118C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 DUP5 MLOAD DUP7 LT ISZERO PUSH2 0x151A JUMPI POP DUP5 PUSH2 0x147A SWAP2 DUP4 PUSH2 0x146B DUP10 DUP9 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP14 DUP6 MSTORE PUSH0 KECCAK256 SWAP5 PUSH2 0x18C5 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP10 DUP13 PUSH0 KECCAK256 SLOAD AND PUSH2 0x1499 JUMPI DUP8 SWAP3 SWAP2 SWAP1 DUP4 ADD DUP12 DUP16 DUP13 DUP16 DUP8 PUSH2 0x1437 JUMP JUMPDEST DUP12 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP1 DUP15 ADD DUP16 SWAP1 MSTORE PUSH1 0x21 DUP2 DUP12 ADD MSTORE PUSH32 0x506F6F6C20616C72656164792065786973747320666F72207468697320706169 DUP2 DUP6 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP7 SWAP6 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0x143C JUMP JUMPDEST DUP9 PUSH1 0x11 DUP15 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH0 REVERT JUMPDEST PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x84 DUP12 PUSH1 0x22 DUP10 DUP16 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6368000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP12 DUP14 DUP10 DUP2 DUP15 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4174206C656173742074776F2061737365747320617265207265717569726564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP11 PUSH1 0x11 DUP9 DUP15 DUP14 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x506572697068657279206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP3 ADD SWAP1 DUP3 ADD PUSH2 0x1144 JUMP JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP9 ADD SWAP1 DUP9 ADD PUSH2 0x10EE JUMP JUMPDEST CALLVALUE PUSH2 0x145 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x179D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 LT ISZERO PUSH2 0x1815 JUMPI PUSH0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1861 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1853 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x179D JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1815 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x145 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x145 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x145 JUMPI DUP3 MLOAD PUSH2 0x190F DUP2 PUSH2 0x17CA JUMP JUMPDEST SWAP4 PUSH2 0x191D PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x175C JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x145 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1944 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x145 JUMPI DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1936 JUMP JUMPDEST PUSH0 SWAP1 PUSH0 SLOAD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1984 JUMPI POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x17E2 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SLOAD DUP2 DUP6 AND SWAP3 PUSH1 0x3 SHL SHR AND EQ PUSH2 0x19BB JUMPI PUSH1 0x1 ADD PUSH2 0x1976 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x19CD DUP3 PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x19DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x175C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x1A08 DUP3 SWAP5 PUSH2 0x17CA JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1AA3 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x1B13 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1B72 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x1BDB JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1BB1 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x1C33 JUMPI JUMPDEST PUSH2 0x1BEC JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1BE4 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x439 JUMPI PUSH2 0x3700 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x8FE JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD PUSH1 0xA0 DUP3 DUP3 SUB SLT PUSH2 0x439 JUMPI PUSH2 0x33 DUP3 PUSH2 0x921 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP4 ADD SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD SWAP3 PUSH2 0x63 DUP5 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0x71 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 DUP5 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8CB JUMPI POP POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x439 JUMPI DUP5 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x439 JUMPI DUP3 MLOAD PUSH2 0xC3 DUP2 PUSH2 0x935 JUMP JUMPDEST SWAP4 PUSH2 0xD1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x8FE JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x439 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x8BB JUMPI POP POP POP PUSH2 0x107 PUSH1 0x80 PUSH1 0x60 DUP7 ADD MLOAD SWAP6 ADD PUSH2 0x921 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 DUP2 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP2 MSTORE PUSH9 0x42616C756E69204C5 PUSH1 0xBC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0x136 DUP3 PUSH2 0x8E3 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x42414C554E492D4C5 PUSH1 0xBC SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x8B1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x843 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x7BB JUMPI PUSH0 SWAP3 PUSH2 0x7B0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x496 JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x7A6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x792 JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH2 0x724 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x6A0 JUMPI PUSH0 SWAP3 PUSH2 0x695 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0xC DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 SSTORE DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x645 JUMPI PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x525 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND ISZERO PUSH2 0x4E0 JUMPI PUSH2 0x291 DUP2 DUP5 PUSH2 0x94C JUMP JUMPDEST MLOAD ISZERO PUSH2 0x4AA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2A9 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH2 0x2B5 DUP3 DUP6 PUSH2 0x94C JUMP JUMPDEST MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD DUP1 DUP5 GT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 DUP4 ADD PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x496 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x6 SSTORE DUP2 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x6 PUSH0 MSTORE DUP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F PUSH1 0x1 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 SWAP1 SWAP2 ADD SSTORE PUSH2 0x383 DUP3 DUP7 PUSH2 0x94C JUMP JUMPDEST MLOAD AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC SLOAD AND PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x450 JUMPI JUMPDEST POP ISZERO PUSH2 0x3D1 JUMPI JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x265 JUMP JUMPDEST PUSH0 SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP2 NOT PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x445 JUMPI PUSH2 0x409 JUMPI JUMPDEST DUP1 PUSH2 0x3C7 JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x43D JUMPI JUMPDEST DUP2 PUSH2 0x422 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD DUP1 ISZERO ISZERO SUB PUSH2 0x439 JUMPI PUSH0 PUSH2 0x403 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x47A JUMPI JUMPDEST DUP2 PUSH2 0x46B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI MLOAD PUSH0 PUSH2 0x3C0 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x45E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A59081DD95A59DA1D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x7 DUP5 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x89A30271 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x445 JUMPI PUSH0 SWAP2 PUSH2 0x60B JUMPI JUMPDEST POP PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 SWAP1 DUP2 JUMPDEST DUP2 MLOAD DUP4 LT ISZERO PUSH2 0x5BD JUMPI PUSH2 0x594 DUP4 DUP4 PUSH2 0x94C JUMP JUMPDEST MLOAD DUP2 ADD DUP1 SWAP2 GT PUSH2 0x5A9 JUMPI PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0x581 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2710 SUB PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH2 0x2D9F SWAP1 DUP2 PUSH2 0x961 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642077656967687473 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x63D JUMPI JUMPDEST DUP2 PUSH2 0x626 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x8FE JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x439 JUMPI PUSH2 0x637 SWAP1 PUSH2 0x921 JUMP JUMPDEST DUP3 PUSH2 0x55C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41737365747320616E642077656967687473206C656E677468206D69736D6174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC6D PUSH1 0xF3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x70C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x6F4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x210 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x6E6 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x6D0 JUMP JUMPDEST PUSH1 0x4 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x788 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x77A JUMPI POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x76D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x75F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D1 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x199 JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x828 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x810 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x1AE JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x802 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x7E7 JUMP JUMPDEST PUSH1 0x3 PUSH0 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x8A7 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x899 JUMPI POP PUSH2 0x183 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x88C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x87E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x16F JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xEC JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x8D8 DUP5 PUSH2 0x921 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x496 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x439 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x496 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x482 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP3 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1D22CCD EQ PUSH2 0x225E JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x2114 JUMPI DUP1 PUSH4 0x723C999 EQ PUSH2 0x1E3A JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x1DEC JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CE6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1CAA JUMPI DUP1 PUSH4 0x1A686502 EQ PUSH2 0x1C68 JUMPI DUP1 PUSH4 0x22ACB867 EQ PUSH2 0x1BED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A99 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A60 JUMPI DUP1 PUSH4 0x36BF6E39 EQ PUSH2 0x1A0E JUMPI DUP1 PUSH4 0x3DFF5B7F EQ PUSH2 0x1925 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x190A JUMPI DUP1 PUSH4 0x67A6C440 EQ PUSH2 0x18D1 JUMPI DUP1 PUSH4 0x67E4AC2C EQ PUSH2 0x1842 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x15CF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x77AACE1A EQ PUSH2 0x151C JUMPI DUP1 PUSH4 0x7FEC8D38 EQ PUSH2 0x14E0 JUMPI DUP1 PUSH4 0x89AB3532 EQ PUSH2 0x1458 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0xF3F JUMPI DUP1 PUSH4 0x8A77C8DC EQ PUSH2 0xEFC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xDA8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD5A JUMPI DUP1 PUSH4 0xB2B55D70 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xC2EE3A08 EQ PUSH2 0xD1E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xCCC JUMPI DUP1 PUSH4 0xCDF456E1 EQ PUSH2 0xC7A JUMPI DUP1 PUSH4 0xCF8FA764 EQ PUSH2 0xBC1 JUMPI DUP1 PUSH4 0xD14EF46D EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0xD66BD524 EQ PUSH2 0xAE5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xDE836EBD EQ PUSH2 0x675 JUMPI DUP1 PUSH4 0xE73FAA2D EQ PUSH2 0x634 JUMPI PUSH4 0xF47B45E8 EQ PUSH2 0x1A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC SWAP2 PUSH0 DUP4 CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 PUSH1 0x9 SLOAD AND SWAP3 PUSH2 0x1F8 DUP5 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x208 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x25C6 JUMP JUMPDEST PUSH1 0x6 SWAP2 PUSH1 0x6 SLOAD SWAP2 PUSH2 0x218 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP7 PUSH2 0x222 DUP5 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x22B DUP6 PUSH2 0x262B JUMP JUMPDEST SWAP1 DUP11 PUSH2 0x236 DUP8 PUSH2 0x262B JUMP JUMPDEST SWAP4 PUSH2 0x240 DUP9 PUSH2 0x262B JUMP JUMPDEST SWAP11 PUSH2 0x24A DUP10 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH0 DUP15 JUMPDEST DUP3 DUP3 LT PUSH2 0x558 JUMPI POP POP POP PUSH2 0x260 PUSH2 0x268E JUMP JUMPDEST SWAP1 DUP4 PUSH1 0xC SLOAD AND SWAP1 PUSH1 0x7 SLOAD SWAP5 PUSH1 0xB SLOAD AND SWAP4 DUP3 EXTCODESIZE ISZERO PUSH2 0x4F1 JUMPI DUP16 SWAP7 PUSH2 0x2C7 SWAP7 DUP16 SWAP7 PUSH1 0xE0 SWAP5 PUSH2 0x2E8 PUSH0 SWAP10 SWAP6 DUP16 SWAP6 PUSH2 0x2D9 DUP13 SWAP9 MLOAD SWAP14 DUP15 SWAP13 DUP14 SWAP12 DUP13 SWAP11 PUSH32 0xF0BF771400000000000000000000000000000000000000000000000000000000 DUP13 MSTORE DUP12 ADD MSTORE PUSH1 0xE4 DUP11 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST PUSH1 0x24 SWAP16 DUP5 DUP11 DUP4 SUB ADD PUSH1 0x24 DUP12 ADD MSTORE PUSH2 0x24B3 JUMP JUMPDEST SWAP2 DUP8 DUP4 SUB ADD PUSH1 0x44 DUP9 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST SWAP3 PUSH1 0x64 DUP6 ADD MSTORE DUP1 PUSH1 0x84 DUP6 ADD MSTORE PUSH1 0xA4 DUP5 ADD MSTORE PUSH1 0xC4 DUP4 ADD MSTORE SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x54E JUMPI PUSH2 0x506 JUMPI JUMPDEST POP DUP5 PUSH1 0x6 SLOAD SWAP5 DUP13 PUSH1 0x9 SLOAD AND SWAP2 JUMPDEST DUP14 DUP14 DUP9 DUP4 LT PUSH2 0x3F3 JUMPI DUP14 DUP14 DUP14 DUP14 DUP14 PUSH0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x36C JUMPI DUP1 DUP9 PUSH2 0x340 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x34D DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x364 DUP8 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x32A JUMP JUMPDEST POP SWAP3 DUP7 SWAP4 DUP7 PUSH0 JUMPDEST DUP6 SLOAD DUP2 LT ISZERO PUSH2 0x3B5 JUMPI DUP1 DUP8 PUSH2 0x389 PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x396 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x3AD DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x373 JUMP JUMPDEST POP PUSH32 0x279B343370F587AF7FB675AE7C8578E9C8ABCC373236AD02C501A4771FE7A7B8 DUP4 MLOAD PUSH1 0x20 DUP2 MSTORE DUP1 PUSH2 0x3ED CALLER SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x24B3 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH2 0x3FD SWAP2 PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP12 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP6 DUP4 ADD MSTORE DUP2 DUP8 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4FC JUMPI DUP11 SWAP2 PUSH2 0x4C9 JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x452 DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x45D DUP2 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x468 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD LT ISZERO PUSH2 0x4A1 JUMPI DUP13 PUSH2 0x499 DUP3 PUSH2 0x493 PUSH2 0x481 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP13 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP3 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x31A JUMP JUMPDEST PUSH2 0x4B9 PUSH2 0x4AE DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x48C DUP4 DUP11 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x4C3 DUP3 DUP13 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x49B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x4F5 JUMPI JUMPDEST PUSH2 0x4DF DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x443 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4D5 JUMP JUMPDEST DUP14 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP5 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x522 JUMPI DUP8 MSTORE PUSH0 SWAP4 PUSH0 PUSH2 0x30D JUMP JUMPDEST PUSH1 0x41 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP10 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x598 SWAP2 DUP8 PUSH2 0x56C DUP4 SWAP7 SWAP8 SWAP9 SWAP10 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x579 DUP4 DUP4 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH1 0x1 PUSH2 0x585 DUP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x592 DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x267A JUMP JUMPDEST MLOAD AND SWAP1 DUP13 MLOAD DUP1 SWAP3 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP12 DUP4 ADD MSTORE DUP2 PUSH1 0x24 PUSH1 0x20 SWAP4 DUP5 SWAP4 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x62A JUMPI PUSH0 SWAP2 PUSH2 0x5FB JUMPI JUMPDEST POP PUSH1 0x1 SWAP3 POP PUSH2 0x5EE DUP3 DUP10 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD SWAP1 DUP15 SWAP4 SWAP3 SWAP2 DUP15 PUSH2 0x24E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x623 JUMPI JUMPDEST PUSH2 0x611 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI PUSH1 0x1 SWAP2 MLOAD PUSH0 PUSH2 0x5DF JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x607 JUMP JUMPDEST DUP15 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x2A80 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x6AC PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH1 0x24 SWAP3 DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x4F1 JUMPI PUSH2 0x6CE SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x6F4 DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH0 SWAP2 PUSH2 0x701 PUSH2 0x268E JUMP JUMPDEST SWAP1 PUSH1 0x6 SLOAD SWAP2 MLOAD DUP3 SUB PUSH2 0xA14 JUMPI DUP2 ISZERO PUSH2 0x9B8 JUMPI SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x97F JUMPI POP POP POP DUP2 ISZERO PUSH2 0x8FD JUMPI DUP1 PUSH2 0x852 JUMPI POP SWAP4 JUMPDEST DUP5 ISZERO PUSH2 0x7F6 JUMPI PUSH2 0x762 DUP6 SWAP2 CALLER PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP5 PUSH2 0x750 DUP5 DUP3 PUSH2 0x2B58 JUMP JUMPDEST AND SWAP4 DUP5 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SUB PUSH2 0x79A JUMPI POP PUSH1 0x20 SWAP4 POP PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 DUP5 DUP4 MLOAD DUP6 DUP2 MSTORE LOG2 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0xB DUP7 PUSH1 0x20 DUP7 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E74204661696C6564000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP3 PUSH1 0xD DUP9 PUSH1 0x20 DUP9 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4D696E7420717479206973203000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x85A PUSH2 0x2AAB JUMP JUMPDEST POP SWAP2 DUP3 ISZERO PUSH2 0x87B JUMPI PUSH2 0x875 SWAP3 SWAP2 PUSH2 0x870 SWAP2 PUSH2 0x282F JUMP JUMPDEST PUSH2 0x286F JUMP JUMPDEST SWAP4 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x26 DUP11 PUSH1 0x20 DUP11 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C206C6971756964697479206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468616E20300000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x22 DUP10 PUSH1 0x20 DUP10 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x546F74616C2076616C7565206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2030000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP4 PUSH2 0x9AF PUSH1 0x1 SWAP2 PUSH2 0x9A9 DUP12 PUSH2 0x995 DUP10 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x9A2 DUP10 DUP8 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP5 ADD SWAP2 SWAP1 PUSH2 0x717 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x9 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4E6F206173736574730000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x17 DUP12 PUSH1 0x20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E76616C6964207265736572766573206C656E677468000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xAAA PUSH2 0x22F4 JUMP JUMPDEST PUSH2 0xAB2 PUSH2 0x2317 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xB35 PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0xD DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x4F1 JUMPI PUSH2 0xB8B SWAP1 PUSH2 0x24FC JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 RETURN JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xBFC PUSH2 0x2AAB JUMP JUMPDEST DUP1 SWAP3 SWAP2 POP MLOAD DUP4 LT ISZERO PUSH2 0xC1D JUMPI PUSH1 0x20 DUP5 PUSH2 0xC15 DUP6 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP6 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420617373657420696E64657800000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xB SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x8 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xDA1 PUSH2 0xD97 PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x2BF2 JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0xEF2 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP2 EQ PUSH2 0xEC6 JUMPI DUP5 DUP9 MSTORE SWAP1 DUP2 ISZERO PUSH2 0xE86 JUMPI POP PUSH1 0x1 EQ PUSH2 0xE2D JUMPI JUMPDEST PUSH2 0xBBD DUP7 DUP7 PUSH2 0xE23 DUP3 DUP12 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x22AC JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP5 LT PUSH2 0xE73 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 DUP7 PUSH2 0xE12 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0xE56 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP8 DUP7 ADD MSTORE POP POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD DUP7 PUSH2 0xE12 JUMP JUMPDEST PUSH1 0x22 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xDF3 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xF36 PUSH2 0x2A1D JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xF7A PUSH2 0x22F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x9 SLOAD AND SWAP2 PUSH2 0xFA0 DUP4 CALLER EQ PUSH2 0x2561 JUMP JUMPDEST ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE DUP4 PUSH0 KECCAK256 SLOAD SWAP6 DUP7 ISZERO PUSH2 0x13FC JUMPI PUSH1 0x2 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x13A0 JUMPI PUSH1 0x6 SLOAD PUSH2 0xFC7 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP9 PUSH1 0x1E DUP4 MUL DUP4 DUP2 DIV PUSH1 0x1E SUB PUSH2 0x1374 JUMPI PUSH2 0x2710 PUSH2 0xFE5 SWAP2 DIV DUP1 SWAP5 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x12BB JUMPI POP POP POP POP ADDRESS PUSH0 MSTORE PUSH0 DUP8 MSTORE PUSH2 0x1008 DUP6 DUP8 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST DUP2 DUP8 DUP6 PUSH1 0xC SLOAD AND DUP9 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x61D027B300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x12B1 JUMPI SWAP1 DUP9 SWAP2 PUSH0 SWAP2 PUSH2 0x1277 JUMPI JUMPDEST POP DUP8 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP5 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD JUMPDEST SUB DUP2 PUSH0 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x126D JUMPI PUSH0 SWAP2 PUSH2 0x1237 JUMPI JUMPDEST POP ISZERO PUSH2 0x11DB JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE PUSH2 0x10CF DUP5 DUP7 PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x29B8 JUMP JUMPDEST ADDRESS ISZERO PUSH2 0x11AC JUMPI ADDRESS PUSH0 MSTORE PUSH0 DUP7 MSTORE DUP5 PUSH0 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1168 JUMPI POP DUP4 SWAP3 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP3 PUSH2 0xBBD SWAP7 SWAP6 DUP9 SWAP4 ADDRESS PUSH0 MSTORE PUSH0 DUP6 MSTORE SUB DUP7 PUSH0 KECCAK256 SSTORE DUP5 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH0 DUP7 MLOAD DUP7 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 ADDRESS SWAP3 LOG3 DUP6 MLOAD SWAP5 DUP6 MSTORE AND SWAP3 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP6 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP7 MLOAD SWAP2 PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1266 JUMPI JUMPDEST PUSH2 0x124E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI DUP9 PUSH2 0x10B4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1244 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP2 SWAP4 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x12AA JUMPI JUMPDEST PUSH2 0x128E DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI DUP8 SWAP1 PUSH2 0x10A0 PUSH2 0x104B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1284 JUMP JUMPDEST DUP8 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP8 PUSH2 0x12C5 DUP3 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP11 MLOAD SWAP1 PUSH32 0xA3E113FB00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS DUP9 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE DUP12 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x136A JUMPI DUP11 DUP6 SWAP4 SWAP3 DUP16 SWAP3 PUSH0 SWAP2 PUSH2 0x1330 JUMPI JUMPDEST POP PUSH2 0x493 PUSH1 0x1 SWAP6 PUSH2 0x870 PUSH2 0x1329 SWAP5 DUP8 SWAP5 PUSH2 0x282F JUMP JUMPDEST MSTORE ADD PUSH2 0xFE8 JUMP JUMPDEST SWAP5 POP POP POP POP DUP12 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1363 JUMPI JUMPDEST PUSH2 0x134A DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI SWAP1 MLOAD DUP4 SWAP2 SWAP1 DUP14 SWAP1 DUP12 SWAP1 PUSH2 0x493 PUSH2 0x1314 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1340 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 DUP3 DUP9 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F206C69717569646974790000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP7 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E203000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x148F PUSH2 0x28B3 JUMP JUMPDEST DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP2 DUP4 ADD SWAP2 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH1 0x20 DUP1 SWAP6 ADD SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x14C7 JUMPI DUP6 DUP1 PUSH2 0xBBD DUP8 DUP8 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x233A JUMP JUMPDEST DUP7 MLOAD ISZERO ISZERO DUP6 MSTORE SWAP6 DUP2 ADD SWAP6 DUP8 SWAP6 POP SWAP4 DUP2 ADD SWAP4 PUSH1 0x1 ADD PUSH2 0x14AC JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x15BE PUSH2 0x22F4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH0 DUP3 MSTORE DUP1 PUSH0 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1608 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 PUSH2 0x1611 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x4F1 JUMPI PUSH1 0x2 PUSH1 0x5 SLOAD EQ PUSH2 0x181A JUMPI PUSH1 0x2 PUSH1 0x5 SSTORE DUP4 DUP2 AND SWAP4 DUP4 AND SWAP3 DUP5 DUP5 EQ PUSH2 0x17BD JUMPI DUP7 ISZERO PUSH2 0x1760 JUMPI PUSH2 0x1666 SWAP2 DUP8 SWAP2 PUSH2 0x2786 JUMP JUMPDEST SWAP6 DUP4 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP7 DUP6 PUSH0 KECCAK256 SLOAD LT PUSH2 0x1703 JUMPI PUSH1 0x1E DUP8 MUL SWAP1 DUP8 DUP3 DIV PUSH1 0x1E EQ DUP9 ISZERO OR ISZERO PUSH2 0x16D7 JUMPI POP DUP5 PUSH2 0x16C0 PUSH1 0x20 SWAP9 PUSH2 0x2710 PUSH32 0xCD3829A3813DC3CDD188FD3D01DCF3268C16BE2FDD2DD21D0665418816E46062 SWAP5 DIV SWAP1 PUSH2 0x28A6 JUMP JUMPDEST SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP8 DUP10 DUP3 ADD MSTORE LOG4 PUSH1 0x1 PUSH1 0x5 SSTORE MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x11 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x64 SWAP1 PUSH1 0x20 DUP7 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP9 PUSH1 0x20 DUP9 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742073776170207468652073616D6520746F6B656E000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP7 DUP6 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x187D DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x189C JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x24B3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x18BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x18CA DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1880 JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x1E DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x66E PUSH2 0x191F CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP2 PUSH2 0x2786 JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI PUSH2 0x1972 SWAP2 CALLDATASIZE SWAP2 ADD PUSH2 0x2453 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH2 0x19A4 DUP5 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x1A0C JUMPI DUP1 DUP6 PUSH2 0x19BD PUSH1 0x1 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND PUSH2 0x19CA DUP3 DUP6 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 DUP6 ISZERO PUSH2 0x19F0 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x19E7 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2A73 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD PUSH2 0x19A6 JUMP JUMPDEST PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH2 0x1A05 DUP7 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x28A6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x19EA JUMP JUMPDEST STOP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD PUSH2 0x1A48 PUSH2 0x2AAB JUMP JUMPDEST DUP4 SWAP3 SWAP2 SWAP3 MLOAD SWAP4 DUP5 SWAP4 DUP5 MSTORE DUP1 PUSH1 0x20 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH2 0x1AA8 CALLDATASIZE PUSH2 0x236D JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SWAP3 SWAP4 AND DUP1 PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 CALLER PUSH0 MSTORE PUSH1 0x20 MSTORE DUP6 PUSH0 KECCAK256 SLOAD SWAP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 SUB PUSH2 0x1B0E JUMPI JUMPDEST PUSH1 0x20 DUP8 PUSH2 0xDA1 DUP9 DUP9 DUP9 PUSH2 0x2BF2 JUMP JUMPDEST DUP6 DUP4 LT PUSH2 0x1BA8 JUMPI DUP2 ISZERO PUSH2 0x1B79 JUMPI CALLER ISZERO PUSH2 0x1B4A JUMPI POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP3 KECCAK256 CALLER DUP4 MSTORE DUP2 MSTORE SWAP1 DUP7 SWAP1 KECCAK256 SWAP2 DUP6 SWAP1 SUB SWAP1 SWAP2 SSTORE DUP3 SWAP1 PUSH2 0xDA1 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 SWAP1 PUSH0 DUP9 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP7 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP7 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x6 SLOAD PUSH2 0x1C28 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1C47 JUMPI DUP4 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBBD SWAP1 DUP3 ADD DUP7 PUSH2 0x233A JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH2 0x1C54 DUP2 SWAP4 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD PUSH2 0x1C61 DUP3 DUP7 PUSH2 0x267A JUMP JUMPDEST MSTORE ADD PUSH2 0x1C2B JUMP JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1CA2 PUSH2 0x2AAB JUMP JUMPDEST POP SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1D1E PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x1DBD JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x1D8E JUMPI PUSH1 0x20 SWAP4 POP CALLER PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH0 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE DUP1 DUP4 PUSH0 KECCAK256 SSTORE DUP3 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 CALLER SWAP3 LOG3 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x24 DUP5 PUSH0 DUP6 MLOAD SWAP2 PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0xBBD SWAP1 PUSH2 0x1E27 PUSH2 0x268E JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST POP CALLVALUE PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH2 0x1E74 PUSH2 0x22F4 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH2 0x1E9A DUP6 PUSH1 0x9 SLOAD AND CALLER EQ PUSH2 0x2561 JUMP JUMPDEST PUSH2 0x1EA5 PUSH2 0x203 PUSH2 0x2A1D JUMP JUMPDEST PUSH2 0x1EAD PUSH2 0x2AAB JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP5 SWAP2 PUSH2 0x1EBB DUP7 PUSH2 0x262B JUMP JUMPDEST SWAP2 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x20BF JUMPI POP POP POP PUSH0 SWAP5 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x20A0 JUMPI POP PUSH2 0x1EDD SWAP1 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2048 JUMPI PUSH2 0x1EF3 DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH2 0x1F01 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EE0 JUMP JUMPDEST PUSH2 0x1F0B DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD DUP6 DUP11 PUSH2 0x1F17 DUP5 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP12 PUSH1 0xC SLOAD AND DUP13 PUSH1 0xB SLOAD AND DUP11 PUSH2 0x1F86 DUP11 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP5 PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 SWAP5 PUSH1 0x60 DUP3 ADD SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP4 MSTORE AND PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x203E JUMPI PUSH0 SWAP2 PUSH2 0x2011 JUMPI JUMPDEST POP DUP1 ISZERO PUSH2 0x1FB5 JUMPI SWAP1 PUSH1 0x1 SWAP2 PUSH2 0x1FAD DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE SWAP1 POP PUSH2 0x1EF9 JUMP JUMPDEST PUSH1 0x64 DUP8 DUP8 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420746F6B656E20616D6F756E7420746F206164640000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2037 JUMPI JUMPDEST PUSH2 0x2028 DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD DUP11 PUSH2 0x1F98 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x201E JUMP JUMPDEST DUP6 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0xBBD SWAP4 SWAP5 POP PUSH2 0x2059 SWAP1 DUP8 PUSH2 0x2B58 JUMP JUMPDEST PUSH32 0xA95AD530009C6F929555E70A66AADBEAE7231E45756C5B028CA77FBAA376E73E DUP3 MLOAD DUP6 DUP2 MSTORE DUP1 PUSH2 0x208E CALLER SWAP5 DUP9 DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SUB SWAP1 LOG2 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x233A JUMP JUMPDEST SWAP6 PUSH2 0x20B8 PUSH1 0x1 SWAP2 PUSH2 0x20B1 DUP10 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A73 JUMP JUMPDEST SWAP7 ADD PUSH2 0x1ECC JUMP JUMPDEST DUP1 PUSH2 0x2710 PUSH2 0x20DB PUSH1 0x1 PUSH2 0x20D2 DUP2 SWAP6 PUSH2 0x24FC JUMP JUMPDEST POP ADD SLOAD DUP7 PUSH2 0x282F JUMP JUMPDEST DIV DUP1 PUSH2 0x20E7 DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST MLOAD LT PUSH2 0x20F5 JUMPI JUMPDEST POP ADD PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x2103 SWAP1 PUSH2 0x48C DUP4 DUP7 PUSH2 0x267A JUMP JUMPDEST PUSH2 0x210D DUP3 DUP8 PUSH2 0x267A JUMP JUMPDEST MSTORE DUP12 PUSH2 0x20EE JUMP JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH0 SWAP3 PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2254 JUMPI JUMPDEST PUSH1 0x20 SWAP5 DUP6 DUP6 LT DUP3 EQ PUSH2 0x2228 JUMPI POP DUP4 DUP8 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x21EA JUMPI POP PUSH1 0x1 EQ PUSH2 0x2190 JUMPI JUMPDEST POP POP POP PUSH2 0xE23 DUP3 PUSH2 0xBBD SWAP5 SUB DUP4 PUSH2 0x23CD JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 DUP2 MSTORE SWAP3 SWAP6 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP5 LT PUSH2 0x21D7 JUMPI POP POP POP DUP3 PUSH2 0xBBD SWAP5 PUSH2 0xE23 SWAP3 DUP3 ADD ADD SWAP5 PUSH2 0x217E JUMP JUMPDEST DUP1 SLOAD DUP7 DUP6 ADD DUP9 ADD MSTORE SWAP3 DUP7 ADD SWAP3 DUP2 ADD PUSH2 0x21BB JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 DUP6 ADD MSTORE POP POP ISZERO ISZERO PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 POP PUSH2 0xE23 DUP3 PUSH2 0xBBD PUSH2 0x217E JUMP JUMPDEST PUSH1 0x22 SWAP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x215E JUMP JUMPDEST CALLVALUE PUSH2 0x4F1 JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xC SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 PUSH1 0x40 SWAP5 DUP2 DUP6 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP2 DUP3 DUP3 DUP9 ADD MSTORE ADD DUP7 DUP7 ADD MCOPY PUSH0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x4F1 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2359 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x234B JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x4F1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x4F1 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x240E JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x240E JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x20 SWAP1 DUP3 CALLDATALOAD PUSH2 0x246D DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x247B PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x24A4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2496 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x24D2 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x6 PUSH0 MSTORE PUSH1 0x1 SHL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH0 SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ISZERO PUSH2 0x2568 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920506572697068657279000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x25CD JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526562616C616E6365206E6F74206E6565646564000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x2635 DUP3 PUSH2 0x243B JUMP JUMPDEST PUSH2 0x2642 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x23CD JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2670 DUP3 SWAP5 PUSH2 0x243B JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2534 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x24 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x9 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x3E99C1E400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x26ED JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x26FE DUP2 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x4F1 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x4F1 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x4F1 JUMPI DUP3 MLOAD PUSH2 0x2737 DUP2 PUSH2 0x243B JUMP JUMPDEST SWAP4 PUSH2 0x2745 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x23CD JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x4F1 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x276C JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x275E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 DUP3 AND PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x277B JUMPI PUSH0 SWAP2 PUSH2 0x2800 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2827 JUMPI JUMPDEST DUP2 PUSH2 0x281B PUSH1 0x20 SWAP4 DUP4 PUSH2 0x23CD JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4F1 JUMPI MLOAD SWAP1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x280E JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x2879 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x28BB PUSH2 0x2AAB JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x6 SLOAD SWAP1 PUSH2 0x28CA DUP3 PUSH2 0x243B JUMP JUMPDEST SWAP2 PUSH2 0x28D8 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x23CD JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2905 DUP3 PUSH2 0x243B JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH2 0x2915 DUP2 PUSH2 0x262B JUMP JUMPDEST SWAP5 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2927 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST PUSH2 0x2931 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2710 SWAP2 DUP3 DUP2 MUL SWAP3 DUP2 DUP5 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2953 DUP6 PUSH1 0x1 SWAP4 PUSH2 0x286F JUMP JUMPDEST PUSH2 0x295C DUP3 PUSH2 0x24FC JUMP JUMPDEST POP DUP4 ADD SLOAD DUP4 SWAP2 DUP2 DUP2 GT ISZERO PUSH2 0x2991 JUMPI SWAP1 PUSH2 0x2974 SWAP2 PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x297E DUP4 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2989 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST ADD PUSH2 0x2918 JUMP JUMPDEST SWAP1 PUSH2 0x299C SWAP3 POP PUSH2 0x28A6 JUMP JUMPDEST PUSH2 0x29A6 DUP3 DUP11 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH0 PUSH2 0x29B2 DUP3 DUP9 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x298B JUMP JUMPDEST ISZERO PUSH2 0x29BF JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2A25 PUSH2 0x28B3 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2A6C JUMPI PUSH2 0x2A3A DUP2 DUP5 PUSH2 0x267A JUMP JUMPDEST MLOAD ISZERO ISZERO DUP1 PUSH2 0x2A57 JUMPI JUMPDEST PUSH2 0x2A4F JUMPI PUSH1 0x1 ADD PUSH2 0x2A27 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x2A62 DUP2 DUP4 PUSH2 0x267A JUMP JUMPDEST MLOAD PUSH1 0x7 SLOAD LT PUSH2 0x2A43 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2842 JUMPI JUMP JUMPDEST PUSH2 0x2A88 PUSH2 0x2AAB JUMP JUMPDEST POP PUSH1 0x2 SLOAD DUP1 ISZERO PUSH2 0x2AA5 JUMPI PUSH2 0x870 PUSH2 0x2AA2 SWAP3 PUSH1 0x8 SLOAD SWAP1 PUSH2 0x282F JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH0 PUSH2 0x2AB9 DUP4 PUSH2 0x262B JUMP JUMPDEST SWAP3 PUSH0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0xB SLOAD AND SWAP1 JUMPDEST DUP3 DUP5 LT PUSH2 0x2AE7 JUMPI POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x2B27 PUSH1 0x1 SWAP2 DUP4 PUSH2 0x2AFB DUP9 PUSH2 0x24FC JUMP JUMPDEST POP SLOAD AND DUP6 DUP2 SUB PUSH2 0x2B31 JUMPI PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH2 0x2B1B DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE JUMPDEST PUSH2 0x20B1 DUP8 DUP11 PUSH2 0x267A JUMP JUMPDEST SWAP5 ADD SWAP3 SWAP2 SWAP1 PUSH2 0x2AD8 JUMP JUMPDEST DUP1 PUSH2 0x2B48 SWAP2 PUSH0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 PUSH2 0x2CFF JUMP JUMPDEST PUSH2 0x2B52 DUP9 DUP12 PUSH2 0x267A JUMP JUMPDEST MSTORE PUSH2 0x2B1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO PUSH2 0x2BC2 JUMPI PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 DUP3 PUSH2 0x2BA6 PUSH0 SWAP5 PUSH1 0x2 SLOAD PUSH2 0x2A73 JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 ISZERO PUSH2 0x2CCF JUMPI AND SWAP3 DUP4 ISZERO PUSH2 0x2BC2 JUMPI DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SLOAD SWAP1 DUP3 DUP3 LT PUSH2 0x2C77 JUMPI POP DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 PUSH0 MSTORE PUSH0 DUP5 MSTORE SUB PUSH1 0x40 PUSH0 KECCAK256 SSTORE DUP5 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xC SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH32 0x248391FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x20 SWAP2 DUP4 SWAP2 AND DUP2 DUP1 PUSH1 0x64 DUP2 ADD PUSH2 0x27EB JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xFB PUSH0 SWAP1 0xBE SUB 0xD6 PUSH25 0x677AC304EC3F491EDA7F0CACCB27A4D0DA4F22DCCE0A35B064 PUSH20 0x6F6C63430008190033A264697066735822122098 0xCD 0x21 CALLVALUE XOR MCOPY 0xE0 0x21 0xF9 0xD0 0xCB 0xC6 0xEF 0xDD SWAP5 0xF 0xE9 JUMPDEST 0xB6 JUMPI 0xC5 0xEA SHR SWAP4 SHR DUP1 PUSH29 0x50D871A2BA64736F6C6343000819003300000000000000000000000000 ","sourceMap":"1731:4718:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:1:0;1731:4718:16;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;1731:4718:16;;;;;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;1731:4718:16;;6195:25;1731:4718;;;6195:25;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8837:64:1;;1731:4718:16;;;;;;;;4301:16:1;1731:4718:16;;;;4726:16:1;;:34;;;;1731:4718:16;4805:1:1;4790:16;:50;;;;1731:4718:16;4855:13:1;:30;;;;1731:4718:16;4851:91:1;;;1731:4718:16;;;;4805:1:1;1731:4718:16;;;;;;;4979:67:1;;1731:4718:16;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2176:10:16;6961:1:1;:::i;:::-;1731:4718:16;;2194:24;1731:4718;;;2194:24;1731:4718;5066:101:1;;1731:4718:16;5066:101:1;5142:14;1731:4718:16;;;;;;;;;;4805:1:1;1731:4718:16;;5142:14:1;1731:4718:16;4979:67:1;1731:4718:16;;;;;;4979:67:1;;;4851:91;1731:4718:16;;4908:23:1;;;;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;5338:30;;;;:::i;:::-;5375:17;1731:4718;5406:13;1731:4718;;;;;;5421:19;;;;;;5401:411;5846:20;;;;;;;:::i;:::-;5878:13;1731:4718;5893:9;;;;;;1731:4718;;;;;;;;;;;;;;:::i;5904:3::-;5930:8;;;1731:4718;5930:8;;;:::i;:::-;1731:4718;;5918:20;;;;:::i;:::-;1731:4718;;5878:13;;5442:3;5489:11;;;;;;;;;;:::i;:::-;1731:4718;;;;;;;;;;5536:16;1731:4718;5536:16;;1731:4718;5536:16;;;;;;;;;;;1731:4718;5536:16;;;5442:3;5568:13;1731:4718;5602:3;1731:4718;;5583:17;;;;;5622:9;;;;;;:::i;:::-;1731:4718;;5622:18;5618:115;;1731:4718;;5568:13;;5618:115;5655:28;;;;;;;;;;;;:::i;:::-;1731:4718;;;;;;;;5716:5;5563:179;1731:4718;;5756:21;;5752:53;;1731:4718;;5406:13;;;;5752:53;5790:5;;1731:4718;;;;;;;;;;5583:17;;;;;;;;;;;;5536:16;;;;;;;1731:4718;5536:16;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;8837:64:1;1731:4718:16;;;;;;;;;;6431:44:1;;;;;1731:4718:16;6427:105:1;;;;6656:20;1731:4718:16;;;;;;;;;;;;;2328:24;1731:4718;;;2328:24;1731:4718;;;;;;;;;;;6656:20:1;1731:4718:16;6427:105:1;1731:4718:16;;6498:23:1;;;;6431:44;1731:4718:16;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;1731:4718:16;;;;;;;;;;;;;;;1280:65:0;1731:4718:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1948:24;1731:4718;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;1731:4718:16;;1280:65:0;1731:4718:16;;;;;;;;;3975:40:0;;;;1731:4718:16;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;1849:62;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5111:6:2;1731:4718:16;5102:4:2;5094:23;5090:145;;1731:4718:16;;;1327:66:6;1731:4718:16;;;5090:145:2;1731:4718:16;5195:29:2;;;;1731:4718:16;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:6:2;;1731:4718:16;4679:4:2;;4671:23;:120;;;;;1731:4718:16;4654:251:2;;;2303:62:0;;:::i;:::-;1731:4718:16;;;;;;6151:52:2;;;;;;;;;1731:4718:16;;6151:52:2;;;1731:4718:16;-1:-1:-1;6147:437:2;;1731:4718:16;;;;;;6513:60:2;;;;;;1731:4718:16;6513:60:2;6147:437;1327:66:6;;;;;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;1731:4718:16;;;;;;;;;;;2922:27:6;;1731:4718:16;2922:27:6;;1731:4718:16;;2964:15:6;:11;;4255:25:11;;1731:4718:16;4297:55:11;4255:25;;;;;;;;;1731:4718:16;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;1731:4718:16:-;-1:-1:-1;1731:4718:16;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;;;6644:70;;1731:4718:16;6644:70:6;6684:19;;;;2259:119;1731:4718:16;;;;2320:47:6;;;;;;1731:4718:16;2320:47:6;6241:120:2;1731:4718:16;;;;6312:34:2;;;;;;1731:4718:16;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;1731:4718:16;;;;;6151:52:2;;;;;;;;;4654:251;1731:4718:16;;;4865:29:2;;;;4671:120;1731:4718:16;;;1327:66:6;1731:4718:16;;4749:42:2;;4671:120;;;1731:4718:16;;;;;;;;;;;;;;;:::i;:::-;;;;4632:16;;;;1731:4718;4632:16;;;;;;;;;;1731:4718;4632:16;1731:4718;4632:16;;;1731:4718;;;;;;;;;;;;;;:::i;4632:16::-;;;;;;;1731:4718;4632:16;;;;;;:::i;:::-;;;;;;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;1819:25;;;;;1731:4718;1819:25;1731:4718;1819:25;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2956:9;1731:4718;;2956:23;;;1731:4718;;;;;;;3016:17;1731:4718;;;;;;;3085:31;1731:4718;;;3169:13;1731:4718;;;3164:227;1731:4718;;;3439:10;1731:4718;;;;;3422:65;;;;;;;;;;;;;;;;;;;;;;;;;1731:4718;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1731:4718:16;;;;;;-1:-1:-1;;1731:4718:16;;;3422:65;;-1:-1:-1;3422:65:16;;;;;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2956:9;1731:4718;;;;;;;;;;;;;3581:13;1731:4718;3576:226;1731:4718;;;3576:226;1731:4718;;;;3815:44;1731:4718;;;3439:10;1731:4718;;;;;;;;;;;;;;;:::i;:::-;;;;;;3815:44;;;1731:4718;;;;;3615:3;1731:4718;;;;;;;;3596:17;;;;;1731:4718;;;;;;;;;3634:17;;;;;1731:4718;;;3629:166;3615:3;;1731:4718;3581:13;;;;;;;3672:3;1731:4718;;;;;;3653:17;;;;;3696:9;;;;;;;:::i;:::-;1731:4718;;;;;;;;;;3707:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;;3750:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;3761:9;;;;;:::i;:::-;1731:4718;;;;;;;;;;;;;;;;;;3634:17;;;;;;3653;;;;;;;1731:4718;;;;;;;;;;3596:17;;;;;;1731:4718;;;;;;;;;;3422:65;1731:4718;;;;;;;;;;;;;;;;-1:-1:-1;1731:4718:16;;;;;;;;;;;;;3422:65;1731:4718;;;;;;;;;3203:3;1731:4718;;3184:17;;;;;1731:4718;;;;;;;;3222:17;;;;;;;;;1731:4718;;;3217:167;3203:3;;;;;;1731:4718;3169:13;;;;3260:3;1731:4718;;;;;;;;;3241:17;;;;;3300:9;;3311;3300;;;;;;:::i;:::-;1731:4718;;;;;;;;;3311:9;;:::i;:::-;1731:4718;;;;;;;;;;;;;3260:3;;3222:17;;1731:4718;;3222:17;;;;3260:3;3222:17;;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3241:17;;;;;;;;;;;1731:4718;;;;;;;;;;3184:17;;;1731:4718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:25;1731:4718;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1731:4718:16;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;6232:214;6319:1;1731:4718;6319:1;1731:4718;6302:120;6322:19;;;;;;6428:12;;;6319:1;6232:214;:::o;6343:3::-;6361:11;;;:::i;:::-;1731:4718;;;;;;;;;;;;6361:20;6357:58;;1731:4718;;6307:13;;6357:58;6394:11;;;1731:4718;6394:11;:::o;1731:4718::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::o;3405:215:0:-;1731:4718:16;;;;3489:22:0;;;3485:91;;1280:65;1731:4718:16;;;;;;;;;;;3975:40:0;-1:-1:-1;3975:40:0;;3405:215::o;3485:91::-;1731:4718:16;;;3534:31:0;;;3509:1;3534:31;;;1731:4718:16;3534:31:0;2658:162;1731:4718:16;1280:65:0;1731:4718:16;;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;1731:4718:16;;;2763:40:0;;;966:10:3;2763:40:0;;;1731:4718:16;2763:40:0;7084:141:1;1731:4718:16;8837:64:1;1731:4718:16;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;7191:17;1731:4718:16;;7191:17:1;;;;4625:582:11;;4797:8;;-1:-1:-1;1731:4718:16;;5874:21:11;:17;;6046:142;;;;;;5870:383;6225:17;1731:4718:16;;6225:17:11;;;;4793:408;1731:4718:16;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;1731:4718:16;;;;;5121:24:11;;;;1731:4718:16;5121:24:11;;;1731:4718:16;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"4272400","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"645","allPools(uint256)":"6647","changePeriphery(address)":"26971","createPool(address[],uint256[],uint256)":"infinite","getAllPools()":"infinite","getPool(address,address)":"2681","getPoolAssets(address)":"infinite","getPoolByAssets(address,address)":"2549","getPoolsByAsset(address)":"infinite","getPoolsCount()":"2593","initialize(address)":"infinite","owner()":"2512","periphery()":"2468","poolExist(address)":"infinite","proxiableUUID()":"infinite","rebalancer()":"2257","reinitialize(address,uint64)":"50108","renounceOwnership()":"28197","transferOwnership(address)":"28560","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","allPools(uint256)":"41d1de97","changePeriphery(address)":"e9b31cff","createPool(address[],uint256[],uint256)":"3069873b","getAllPools()":"d88ff1f4","getPool(address,address)":"531aa03e","getPoolAssets(address)":"4276b97b","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","getPoolsCount()":"b4ac6860","initialize(address)":"c4d66de8","owner()":"8da5cb5b","periphery()":"77aace1a","poolExist(address)":"89345efb","proxiableUUID()":"52d1902d","rebalancer()":"01d22ccd","reinitialize(address,uint64)":"8f2248bc","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rebalancer\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newPeriphery\",\"type\":\"address\"}],\"name\":\"changePeriphery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"trigger\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"getPoolAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periphery\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"changePeriphery(address)\":{\"details\":\"Changes the address of the periphery contract.\",\"params\":{\"_newPeriphery\":\"The new address of the periphery contract.\"}},\"createPool(address[],uint256[],uint256)\":{\"details\":\"Creates a new BaluniV1Pool contract and registers it in the factory.\",\"params\":{\"assets\":\"The array of asset addresses to be included in the pool.\",\"trigger\":\"The trigger value for rebalancing the pool.\",\"weights\":\"The array of weights corresponding to each asset in the pool.\"},\"returns\":{\"_0\":\"The address of the newly created pool.\"}},\"getAllPools()\":{\"details\":\"Retrieves all the pools created by the factory.\",\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolAssets(address)\":{\"details\":\"Retrieves the assets of a specific pool.\",\"params\":{\"poolAddress\":\"The address of the pool.\"},\"returns\":{\"_0\":\"An array of asset addresses.\"}},\"getPoolByAssets(address,address)\":{\"details\":\"Retrieves the pool address based on the given assets.\",\"params\":{\"asset1\":\"The address of the first asset.\",\"asset2\":\"The address of the second asset.\"},\"returns\":{\"_0\":\"The address of the pool.\"}},\"getPoolsByAsset(address)\":{\"details\":\"Returns an array of pool addresses that contain the specified token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getPoolsCount()\":{\"details\":\"Retrieves the number of pools created by the factory.\",\"returns\":{\"_0\":\"The count of pools.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolFactory.sol\":\"BaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1Rebalancer.sol';\\r\\nimport './interfaces/IBaluniV1Router.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\nimport '@openzeppelin/contracts/utils/ReentrancyGuard.sol';\\r\\n\\r\\nimport './interfaces/IBaluniV1PoolPeriphery.sol';\\r\\n\\r\\ncontract BaluniV1Pool is ERC20, ReentrancyGuard {\\r\\n    AssetInfo[] public assetInfos;\\r\\n    uint256 public trigger;\\r\\n    uint256 public ONE;\\r\\n    address public periphery;\\r\\n    address public factory;\\r\\n    uint256 public constant SWAP_FEE_BPS = 30; // 0.3%\\r\\n    address public baseAsset;\\r\\n    address public rebalancer;\\r\\n\\r\\n    mapping(address => uint256) public reserves;\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes a new instance of the BaluniV1Pool contract.\\r\\n     * @param _rebalancer The address of the rebalancer contract.\\r\\n     * @param _assets An array of addresses representing the assets in the pool.\\r\\n     * @param _weights An array of weights corresponding to the assets in the pool.\\r\\n     * @param _trigger The trigger value for rebalancing the pool.\\r\\n     * @param _periphery The address of the periphery contract.\\r\\n     */\\r\\n    constructor(\\r\\n        address _rebalancer,\\r\\n        address[] memory _assets,\\r\\n        uint256[] memory _weights,\\r\\n        uint256 _trigger,\\r\\n        address _periphery\\r\\n    ) ERC20('Baluni LP', 'BALUNI-LP') {\\r\\n        // Initialize contract state variables\\r\\n        periphery = _periphery;\\r\\n        factory = msg.sender;\\r\\n        rebalancer = _rebalancer;\\r\\n        ONE = 1e18;\\r\\n\\r\\n        // Initialize assets and weights\\r\\n        initializeAssets(_assets, _weights);\\r\\n\\r\\n        // Set trigger value\\r\\n        trigger = _trigger;\\r\\n\\r\\n        // Set base asset\\r\\n        baseAsset = IBaluniV1Rebalancer(_rebalancer).USDC();\\r\\n\\r\\n        // Ensure the sum of weights equals 10000\\r\\n        uint256 totalWeight = 0;\\r\\n        for (uint256 i = 0; i < _weights.length; i++) {\\r\\n            totalWeight += _weights[i];\\r\\n        }\\r\\n        require(totalWeight == 10000, 'Invalid weights');\\r\\n    }\\r\\n\\r\\n    modifier onlyPeriphery() {\\r\\n        require(msg.sender == periphery, 'Only Periphery');\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the assets and their weights for the pool.\\r\\n     * @param _assets The array of asset addresses.\\r\\n     * @param _weights The array of weights corresponding to each asset.\\r\\n     */\\r\\n    function initializeAssets(address[] memory _assets, uint256[] memory _weights) internal {\\r\\n        require(_assets.length == _weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n        for (uint256 i = 0; i < _assets.length; i++) {\\r\\n            require(_assets[i] != address(0), 'Invalid asset address');\\r\\n            require(_weights[i] > 0, 'Invalid weight');\\r\\n\\r\\n            assetInfos.push(AssetInfo({asset: _assets[i], weight: _weights[i]}));\\r\\n\\r\\n            IERC20 asset = IERC20(_assets[i]);\\r\\n            if (asset.allowance(address(this), address(rebalancer)) == 0) {\\r\\n                asset.approve(address(rebalancer), type(uint256).max);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Rebalances the weights of the pool by calculating the amounts to add for each token,\\r\\n     * transferring the calculated amounts from the user to the pool, minting the total added liquidity,\\r\\n     * updating the reserves, and emitting an event to indicate the rebalancing of weights.\\r\\n     * @param receiver The address to receive the minted liquidity tokens.\\r\\n     */\\r\\n    function rebalanceWeights(address receiver) external onlyPeriphery returns (uint256[] memory) {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        (uint256 totalValuation, uint256[] memory valuations) = _computeTotalValuation();\\r\\n\\r\\n        uint256[] memory amountsToAdd = _calculateAmountsToAdd(totalValuation, valuations);\\r\\n\\r\\n        // Calculate total added liquidity before minting\\r\\n        uint256 totalAddedLiquidity = _calculateTotalAddedLiquidity(amountsToAdd);\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < amountsToAdd.length; i++) {\\r\\n            if (amountsToAdd[i] > 0) {\\r\\n                amounts[i] = _calculateLiquidity(i, amountsToAdd[i]);\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _mint(receiver, totalAddedLiquidity);\\r\\n\\r\\n        emit WeightsRebalanced(msg.sender, amountsToAdd);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps `amount` of `fromToken` to `toToken` and transfers the received amount to `receiver`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - `fromToken` and `toToken` must be different tokens.\\r\\n     * - `amount` must be greater than zero.\\r\\n     * - Sufficient liquidity of `toToken` must be available in the contract.\\r\\n     *\\r\\n     * Emits a `Swap` event with the details of the swap.\\r\\n     *\\r\\n     * Updates the reserves after the swap.\\r\\n     *\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of `fromToken` to swap.\\r\\n     * @param receiver The address to receive the swapped tokens.\\r\\n     * @return toSend The amount of `toToken` received after the swap.\\r\\n     */\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external nonReentrant returns (uint256 toSend) {\\r\\n        require(fromToken != toToken, 'Cannot swap the same token');\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        // Get the amount of toToken to be received\\r\\n        uint256 receivedAmount = getAmountOut(fromToken, toToken, amount);\\r\\n\\r\\n        // Check if there is sufficient liquidity\\r\\n        require(reserves[toToken] >= receivedAmount, 'Insufficient Liquidity');\\r\\n\\r\\n        // apply fee\\r\\n        uint256 fee = (receivedAmount * SWAP_FEE_BPS) / 10000;\\r\\n        toSend = receivedAmount - fee;\\r\\n\\r\\n        emit Swap(receiver, fromToken, toToken, amount, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Mints new tokens and adds them to the specified address.\\r\\n     * @param to The address to which the new tokens will be minted.\\r\\n     * @return The amount of tokens minted.\\r\\n     */\\r\\n    function mint(address to, uint256[] memory amounts) external onlyPeriphery returns (uint256) {\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        uint256 totalValue = 0;\\r\\n        uint256[] memory _reserves = getReserves();\\r\\n        require(assetInfos.length == _reserves.length, 'Invalid reserves length');\\r\\n        require(assetInfos.length > 0, 'No assets');\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n\\r\\n            uint256 valuation = _convertTokenToBase(asset, amounts[i]);\\r\\n            totalValue += valuation;\\r\\n        }\\r\\n\\r\\n        require(totalValue > 0, 'Total value must be greater than 0');\\r\\n\\r\\n        uint256 toMint;\\r\\n\\r\\n        if (totalSupply == 0) {\\r\\n            toMint = totalValue;\\r\\n        } else {\\r\\n            (uint256 totalLiquidity, ) = _computeTotalValuation();\\r\\n            require(totalLiquidity > 0, 'Total liquidity must be greater than 0');\\r\\n            toMint = ((totalValue) * totalSupply) / totalLiquidity;\\r\\n        }\\r\\n        require(toMint != 0, 'Mint qty is 0');\\r\\n\\r\\n        uint256 b4 = balanceOf(msg.sender);\\r\\n        _mint(to, toMint);\\r\\n        uint256 b = balanceOf(to) - b4;\\r\\n\\r\\n        require(b == toMint, 'Mint Failed');\\r\\n\\r\\n        emit Mint(to, toMint);\\r\\n\\r\\n        return toMint;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Burns the pool tokens and transfers the underlying assets to the specified address.\\r\\n     * @param to The address to transfer the underlying assets to.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     * @notice The pool tokens must have a balance greater than 0.\\r\\n     * @notice The total supply of pool tokens must be greater than 0.\\r\\n     * @notice The function calculates the amounts of each underlying asset to transfer based on the share of pool tokens being burned.\\r\\n     * @notice A fee is deducted from the share of pool tokens being burned and transferred to the treasury address.\\r\\n     * @notice The function checks if the pool has sufficient liquidity before performing any transfers.\\r\\n     * @notice If any transfer fails, the function reverts the entire operation.\\r\\n     * @notice After the transfers, the function updates the reserves of the pool.\\r\\n     * @notice Emits a `Burn` event with the address and share of pool tokens burned.\\r\\n     */\\r\\n    function burn(address to) external onlyPeriphery returns (uint256[] memory) {\\r\\n        uint256 share = balanceOf(address(this));\\r\\n        require(share > 0, 'Share must be greater than 0');\\r\\n\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        require(totalSupply > 0, 'No liquidity');\\r\\n\\r\\n        uint256[] memory amounts = new uint256[](assetInfos.length);\\r\\n        uint256 fee = (share * SWAP_FEE_BPS) / 10000;\\r\\n        uint256 shareAfterFee = share - fee;\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 assetBalance = IBaluniV1PoolPeriphery(periphery).getAssetReserve(\\r\\n                address(this),\\r\\n                assetInfos[i].asset\\r\\n            );\\r\\n            amounts[i] = (assetBalance * shareAfterFee) / totalSupply;\\r\\n        }\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n\\r\\n        bool feeTransferSuccess = IERC20(address(this)).transfer(IBaluniV1Rebalancer(rebalancer).treasury(), fee);\\r\\n        require(feeTransferSuccess, 'Fee transfer failed');\\r\\n\\r\\n        require(balanceOf(address(this)) >= shareAfterFee, 'Insufficient liquidity');\\r\\n\\r\\n        _burn(address(this), shareAfterFee);\\r\\n\\r\\n        emit Burn(to, shareAfterFee);\\r\\n\\r\\n        return amounts;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amount of `toToken` that will be received when swapping `fromToken` for `toToken`.\\r\\n     * @param fromToken The address of the token being swapped from.\\r\\n     * @param toToken The address of the token being swapped to.\\r\\n     * @param amount The amount of `fromToken` being swapped.\\r\\n     * @return The amount of `toToken` that will be received.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) public view returns (uint256) {\\r\\n        return IBaluniV1Rebalancer(rebalancer).convert(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance\\r\\n     */\\r\\n    function performRebalanceIfNeeded() external onlyPeriphery {\\r\\n        require(isRebalanceNeeded(), 'Rebalance not needed');\\r\\n        _performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the deviation between the current weights and target weights of the assets in the pool.\\r\\n     * @return directions An array of boolean values indicating whether the current weight is higher (true) or lower (false) than the target weight.\\r\\n     */\\r\\n    function getDeviation() public view returns (bool[] memory directions, uint256[] memory deviations) {\\r\\n        (uint256 totVal, uint256[] memory valuations) = _computeTotalValuation();\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n\\r\\n        directions = new bool[](numAssets);\\r\\n        deviations = new uint256[](numAssets);\\r\\n\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            uint256 currentWeight = (valuations[i] * 10000) / totVal;\\r\\n            uint256 targetWeight = assetInfos[i].weight;\\r\\n\\r\\n            if (currentWeight > targetWeight) {\\r\\n                deviations[i] = currentWeight - targetWeight;\\r\\n                directions[i] = true;\\r\\n            } else {\\r\\n                deviations[i] = targetWeight - currentWeight;\\r\\n                directions[i] = false;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        return (directions, deviations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the liquidity of a specific asset in the pool.\\r\\n     * @param assetIndex The index of the asset.\\r\\n     * @return The liquidity of the asset.\\r\\n     */\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256) {\\r\\n        (, uint256[] memory usdValuations) = _computeTotalValuation();\\r\\n        require(assetIndex < usdValuations.length, 'Invalid asset index');\\r\\n        return usdValuations[assetIndex];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the pool and returns the total valuation and an array of individual valuations.\\r\\n     * @return totalVal The total valuation of the pool.\\r\\n     * @return valuations An array of individual valuations.\\r\\n     */\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations) {\\r\\n        (totalVal, valuations) = _computeTotalValuation();\\r\\n        return (totalVal, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the total liquidity of the pool.\\r\\n     * @return The total liquidity of the pool.\\r\\n     */\\r\\n    function liquidity() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        return totalVal;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the unit price of the pool.\\r\\n     * @return The unit price of the pool.\\r\\n     */\\r\\n    function unitPrice() external view returns (uint256) {\\r\\n        (uint256 totalVal, ) = _computeTotalValuation();\\r\\n        uint256 totalSupply = totalSupply();\\r\\n        if (totalSupply == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        return (totalVal * ONE) / totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of reserves for each asset in the pool.\\r\\n     * @return An array of reserves.\\r\\n     */\\r\\n    function getReserves() public view returns (uint256[] memory) {\\r\\n        return IBaluniV1PoolPeriphery(periphery).getReserves(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the reserve amount of the specified asset.\\r\\n     * @param asset The address of the asset.\\r\\n     * @return The reserve amount of the asset.\\r\\n     */\\r\\n    function getAssetReserve(address asset) public view returns (uint256) {\\r\\n        return reserves[asset];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of assets in the pool.\\r\\n     * @return An array of addresses representing the assets.\\r\\n     */\\r\\n    function getAssets() external view returns (address[] memory) {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n        }\\r\\n        return assets;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Retrieves the list of weights associated with the assets in the pool.\\r\\n     * @return An array of uint256 values representing the weights.\\r\\n     */\\r\\n    function getWeights() external view returns (uint256[] memory) {\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n        }\\r\\n        return weights;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Computes the total valuation of the assets in the pool.\\r\\n     * @return totalValuation The total valuation of the assets.\\r\\n     * @return valuations An array of valuations for each asset in the pool.\\r\\n     */\\r\\n    function _computeTotalValuation() internal view returns (uint256 totalValuation, uint256[] memory valuations) {\\r\\n        uint256 numAssets = assetInfos.length;\\r\\n        valuations = new uint256[](numAssets);\\r\\n        for (uint256 i = 0; i < numAssets; i++) {\\r\\n            IERC20 asset = IERC20(assetInfos[i].asset);\\r\\n\\r\\n            if ((address(asset) == baseAsset)) {\\r\\n                valuations[i] = reserves[address(asset)];\\r\\n            } else {\\r\\n                uint256 valuation = _convertTokenToBase(address(asset), reserves[address(asset)]);\\r\\n                valuations[i] = valuation;\\r\\n            }\\r\\n            totalValuation += valuations[i];\\r\\n        }\\r\\n        return (totalValuation, valuations);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed.\\r\\n     * This function retrieves the assets and weights from the `assetInfos` array,\\r\\n     * and calls the `rebalance` function of the `rebalancer` contract with the retrieved values.\\r\\n     * It emits a `RebalancePerformed` event after the rebalance is performed.\\r\\n     * @notice This function should only be called internally.\\r\\n     */\\r\\n    function _performRebalanceIfNeeded() internal {\\r\\n        address[] memory assets = new address[](assetInfos.length);\\r\\n        uint256[] memory weights = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesB4 = new uint256[](assetInfos.length);\\r\\n        uint256[] memory peripheryBalancesAfter = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToAdd = new uint256[](assetInfos.length);\\r\\n        uint256[] memory amountsToRemove = new uint256[](assetInfos.length);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            assets[i] = assetInfos[i].asset;\\r\\n            weights[i] = assetInfos[i].weight;\\r\\n            peripheryBalancesB4[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n        }\\r\\n\\r\\n        uint256[] memory balances = getReserves();\\r\\n\\r\\n        IBaluniV1Rebalancer(rebalancer).rebalance(balances, assets, weights, trigger, periphery, periphery, baseAsset);\\r\\n\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            peripheryBalancesAfter[i] = IERC20(assets[i]).balanceOf(periphery);\\r\\n\\r\\n            if (peripheryBalancesAfter[i] > peripheryBalancesB4[i]) {\\r\\n                amountsToAdd[i] = peripheryBalancesAfter[i] - peripheryBalancesB4[i];\\r\\n            } else {\\r\\n                amountsToRemove[i] = peripheryBalancesB4[i] - peripheryBalancesAfter[i];\\r\\n            }\\r\\n        }\\r\\n\\r\\n        _updateReserves(amountsToAdd, true);\\r\\n        _updateReserves(amountsToRemove, false);\\r\\n\\r\\n        emit RebalancePerformed(msg.sender, assets);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the total added liquidity based on the amounts to add.\\r\\n     * @param amountsToAdd An array of amounts to add for each asset.\\r\\n     * @return totalAddedLiquidity The total added liquidity.\\r\\n     */\\r\\n    function _calculateTotalAddedLiquidity(\\r\\n        uint256[] memory amountsToAdd\\r\\n    ) internal view returns (uint256 totalAddedLiquidity) {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            totalAddedLiquidity += amountsToAdd[i];\\r\\n        }\\r\\n        return totalAddedLiquidity;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates the amounts to add to each asset based on the total valuation and current valuations.\\r\\n     * @param totalValuation The total valuation of the pool.\\r\\n     * @param valuations An array of current valuations for each asset.\\r\\n     * @return amountsToAdd An array of amounts to add to each asset.\\r\\n     */\\r\\n    function _calculateAmountsToAdd(\\r\\n        uint256 totalValuation,\\r\\n        uint256[] memory valuations\\r\\n    ) internal view returns (uint256[] memory amountsToAdd) {\\r\\n        amountsToAdd = new uint256[](assetInfos.length);\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            uint256 targetValuation = (totalValuation * assetInfos[i].weight) / 10000;\\r\\n            if (valuations[i] < targetValuation) {\\r\\n                amountsToAdd[i] = targetValuation - valuations[i];\\r\\n            }\\r\\n        }\\r\\n        return amountsToAdd;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to transfer tokens from the caller to the contract and calculate the liquidity.\\r\\n     * @param index The index of the asset in the assetInfos array.\\r\\n     * @param amountToAdd The amount of native tokens to add as liquidity.\\r\\n     */\\r\\n    function _calculateLiquidity(uint256 index, uint256 amountToAdd) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = _convertBaseToToken(assetInfos[index].asset, amountToAdd);\\r\\n        require(tokenAmount > 0, 'Invalid token amount to add');\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified amount of native token to the corresponding token amount.\\r\\n     * @param fromToken The address of the native token to convert from.\\r\\n     * @param amount The amount of native token to convert.\\r\\n     * @return The corresponding token amount.\\r\\n     */\\r\\n    function _convertBaseToToken(address fromToken, uint256 amount) internal view returns (uint256) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(baseAsset, fromToken, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the maximum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The maximum value between a and b.\\r\\n     */\\r\\n    function max(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a >= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the minimum of two uint8 values.\\r\\n     * @param a The first uint8 value.\\r\\n     * @param b The second uint8 value.\\r\\n     * @return The minimum value between a and b.\\r\\n     */\\r\\n    function min(uint8 a, uint8 b) private pure returns (uint8) {\\r\\n        return a <= b ? a : b;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Converts the specified token to the native token using the rebalancer contract.\\r\\n     * @param fromToken The address of the token to convert from.\\r\\n     * @param amount The amount of tokens to convert.\\r\\n     * @return scaledAmount The converted amount of tokens.\\r\\n     */\\r\\n    function _convertTokenToBase(address fromToken, uint256 amount) internal view returns (uint256 scaledAmount) {\\r\\n        uint256 tokenAmount = IBaluniV1Rebalancer(rebalancer).convert(fromToken, baseAsset, amount);\\r\\n        return tokenAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates the reserves of the pool with the given amounts.\\r\\n     * @param amounts An array of amounts to update the reserves with.\\r\\n     * @param increase A boolean indicating whether to increase or decrease the reserves.\\r\\n     * @notice This function can only be called by the periphery contract.\\r\\n     */\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external onlyPeriphery {\\r\\n        _updateReserves(amounts, increase);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to update the reserves of the pool with the given amounts.\\r\\n     * @param amounts An array of amounts to update the reserves with.\\r\\n     * @param increase A boolean indicating whether to increase or decrease the reserves.\\r\\n     * @notice This function should only be called by the `updateReserves` function.\\r\\n     */\\r\\n    function _updateReserves(uint256[] memory amounts, bool increase) internal {\\r\\n        for (uint256 i = 0; i < assetInfos.length; i++) {\\r\\n            address asset = assetInfos[i].asset;\\r\\n            uint256 newReserve = amounts[i];\\r\\n            if (increase) reserves[asset] += newReserve;\\r\\n            else reserves[asset] -= newReserve;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // return true if one of the deviation overcome the trigger\\r\\n    /**\\r\\n     * @dev Checks if rebalancing is needed for the pool.\\r\\n     * @return A boolean value indicating whether rebalancing is needed or not.\\r\\n     */\\r\\n    function isRebalanceNeeded() public view returns (bool) {\\r\\n        (bool[] memory directions, uint256[] memory deviations) = getDeviation();\\r\\n        for (uint256 i = 0; i < deviations.length; i++) {\\r\\n            if (directions[i] && deviations[i] > trigger) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x116aadd2cefd019295bcb7f8caf4bddb88026baf9de060a3aad514a38c1d8d31\",\"license\":\"GNU AGPLv3\"},\"contracts/BaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './BaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\ncontract BaluniV1PoolFactory is Initializable, UUPSUpgradeable, OwnableUpgradeable {\\r\\n  address[] public allPools;\\r\\n  mapping(address => mapping(address => address)) public getPool;\\r\\n\\r\\n  address public rebalancer;\\r\\n  address public periphery;\\r\\n\\r\\n  event PoolCreated(address indexed pool, address[] assets, address rebalancer);\\r\\n\\r\\n  function initialize(address _rebalancer) public initializer {\\r\\n    __UUPSUpgradeable_init();\\r\\n    __Ownable_init(msg.sender);\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function reinitialize(address _rebalancer, uint64 _version) public reinitializer(_version) {\\r\\n    rebalancer = _rebalancer;\\r\\n  }\\r\\n\\r\\n  function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n  /**\\r\\n   * @dev Creates a new BaluniV1Pool contract and registers it in the factory.\\r\\n   * @param assets The array of asset addresses to be included in the pool.\\r\\n   * @param weights The array of weights corresponding to each asset in the pool.\\r\\n   * @param trigger The trigger value for rebalancing the pool.\\r\\n   * @return The address of the newly created pool.\\r\\n   */\\r\\n  function createPool(address[] memory assets, uint256[] memory weights, uint256 trigger) external returns (address) {\\r\\n    require(periphery != address(0), 'Periphery not set');\\r\\n    require(assets.length > 1, 'At least two assets are required');\\r\\n    require(assets.length == weights.length, 'Assets and weights length mismatch');\\r\\n\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        require(address(getPool[assets[i]][assets[j]]) == address(0), 'Pool already exists for this pair');\\r\\n      }\\r\\n    }\\r\\n\\r\\n    BaluniV1Pool newPool = new BaluniV1Pool(rebalancer, assets, weights, trigger, periphery);\\r\\n\\r\\n    address poolAddress = address(newPool);\\r\\n\\r\\n    allPools.push(poolAddress);\\r\\n    for (uint256 i = 0; i < assets.length; i++) {\\r\\n      for (uint256 j = i + 1; j < assets.length; j++) {\\r\\n        getPool[assets[i]][assets[j]] = poolAddress;\\r\\n        getPool[assets[j]][assets[i]] = poolAddress;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    emit PoolCreated(poolAddress, assets, rebalancer);\\r\\n\\r\\n    return poolAddress;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves all the pools created by the factory.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getAllPools() external view returns (address[] memory) {\\r\\n    return allPools;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the number of pools created by the factory.\\r\\n   * @return The count of pools.\\r\\n   */\\r\\n  function getPoolsCount() external view returns (uint256) {\\r\\n    return allPools.length;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the assets of a specific pool.\\r\\n   * @param poolAddress The address of the pool.\\r\\n   * @return An array of asset addresses.\\r\\n   */\\r\\n  function getPoolAssets(address poolAddress) external view returns (address[] memory) {\\r\\n    BaluniV1Pool pool = BaluniV1Pool(poolAddress);\\r\\n    return pool.getAssets();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Retrieves the pool address based on the given assets.\\r\\n   * @param asset1 The address of the first asset.\\r\\n   * @param asset2 The address of the second asset.\\r\\n   * @return The address of the pool.\\r\\n   */\\r\\n  function getPoolByAssets(address asset1, address asset2) external view returns (address) {\\r\\n    return address(getPool[asset1][asset2]);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Returns an array of pool addresses that contain the specified token.\\r\\n   * @param token The address of the token to search for.\\r\\n   * @return An array of pool addresses.\\r\\n   */\\r\\n  function getPoolsByAsset(address token) external view returns (address[] memory) {\\r\\n    address[] memory pools = new address[](allPools.length);\\r\\n    uint256 count = 0;\\r\\n\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      BaluniV1Pool pool = BaluniV1Pool(allPools[i]);\\r\\n      address[] memory assets = pool.getAssets();\\r\\n\\r\\n      for (uint256 j = 0; j < assets.length; j++) {\\r\\n        if (assets[j] == token) {\\r\\n          pools[count] = address(pool);\\r\\n          count++;\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (count == pools.length) {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    address[] memory result = new address[](count);\\r\\n    for (uint256 i = 0; i < count; i++) {\\r\\n      result[i] = pools[i];\\r\\n    }\\r\\n\\r\\n    return result;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @dev Changes the address of the periphery contract.\\r\\n   * @param _newPeriphery The new address of the periphery contract.\\r\\n   */\\r\\n  function changePeriphery(address _newPeriphery) external onlyOwner {\\r\\n    periphery = _newPeriphery;\\r\\n  }\\r\\n\\r\\n  function poolExist(address _pool) external view returns (bool) {\\r\\n    for (uint256 i = 0; i < allPools.length; i++) {\\r\\n      if (allPools[i] == _pool) {\\r\\n        return true;\\r\\n      }\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0xa8e6121f55010cdfc0eb044b9bafc81c33f6b1c44cba7aa529855fc0f592dc4d\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x07a47e40a96a436f7dab0a5bb58c27622fd7f9a7c98b5c3f3d223ce848cbdf28\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4014,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"allPools","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":4020,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"getPool","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_address))"},{"astId":4022,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"rebalancer","offset":0,"slot":"2","type":"t_address"},{"astId":4024,"contract":"contracts/BaluniV1PoolFactory.sol:BaluniV1PoolFactory","label":"periphery","offset":0,"slot":"3","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_mapping(t_address,t_address))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => address))","numberOfBytes":"32","value":"t_mapping(t_address,t_address)"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1PoolPeriphery.sol":{"BaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"changePoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolFactory","outputs":[{"internalType":"contract IBaluniV1PoolFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"poolsReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"poolAddress","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"smartSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"changePoolFactory(address)":{"details":"Changes the address of the pool factory contract. Can only be called by the contract owner.","params":{"_poolFactory":"The new address of the pool factory contract."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"initialize(address)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"owner()":{"details":"Returns the address of the current owner."},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"reinitialize(address,uint64)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the BaluniV1Pool.","share":"The amount of liquidity tokens to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"BaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a08060405234602957306080526136e9908161002e82396080518181816123ed015261250e0152f35b5f80fdfe6080806040526004361015610012575f80fd5b5f905f3560e01c9081630d8e6e2c14612a1c575080633e99c1e4146129ce5780634056c37f146129555780634219dc40146129055780634aa06652146127735780634f1ef2861461246757806352d1902d146123a85780635568081a146121905780636e81221c14611eb3578063715018a614611df557806372591be514611d755780637442eca6146118615780638628991e146117e85780638da5cb5b146117775780638f2248bc14611621578063ad3cb1cc14611532578063ad41426314611311578063ae3cce1c1461121f578063c4d66de81461102b578063e74e9b0614610a2d578063ec0cd2eb146107bc578063f2fde38b146107715763f31abcc41461011b575f80fd5b3461076e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5760043590610156612aa0565b61015e612ac3565b918315610710576040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201526020939073ffffffffffffffffffffffffffffffffffffffff848116918681604481865afa9081156105be5790889186916106df575b501061068157604051947f70a08231000000000000000000000000000000000000000000000000000000009788875233600488015260249688818981885afa90811561067657908992918891610643575b509261022f8261028c951015612e4e565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9091166024820152604481019190915291829081906064820190565b038188875af19081156105be578591610626575b50156105c957604051917f89afcb4400000000000000000000000000000000000000000000000000000000835281841660048401528483878183855af19283156105be57859361059a575b50604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082528582600481845afa91821561058f57869261056b575b50855b825181101561056757836103408285612d44565b5116898b8a6040518094819382523060048301525afa9081156104ce578891610536575b5061036f8287612d44565b51116104d95761037f8186612d44565b5182885260018a5260408820856103968487612d44565b51165f528a526103ab60405f20918254612f3d565b905561042489856103bc8487612d44565b51166103c88489612d44565b5190898b6040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af19081156104ce5788916104a1575b50156104445760010161032c565b60648960158a604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b6104c191508a3d8c116104c7575b6104b98183612b21565b810190612f18565b5f610436565b503d6104af565b6040513d8a823e3d90fd5b60648960168a604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b90508981813d8311610560575b61054d8183612b21565b8101031261055c57515f610364565b5f80fd5b503d610543565b8680f35b6105889192503d8088833e6105808183612b21565b810190612c73565b905f610329565b6040513d88823e3d90fd5b6105b79193503d8087833e6105af8183612b21565b810190612f4a565b915f6102eb565b6040513d87823e3d90fd5b606486600f87604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b61063d9150873d89116104c7576104b98183612b21565b5f6102a0565b83819492503d831161066f575b61065a8183612b21565b8101031261055c57905188919061022f61021e565b503d610650565b6040513d89823e3d90fd5b606486604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601660248201527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006044820152fd5b809250888092503d8311610709575b6106f88183612b21565b8101031261055c578790515f6101cd565b503d6106ee565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152fd5b80fd5b503461076e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e576107b96107ac612a7d565b6107b46130b6565b612ff5565b80f35b503461076e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5760043567ffffffffffffffff8111610a295761080c903690600401612c09565b9082610816612aa0565b61081e612ac3565b9373ffffffffffffffffffffffffffffffffffffffff809216916040517f67e4ac2c0000000000000000000000000000000000000000000000000000000081528481600481875afa9081156105be578591610a0f575b508495945b815181101561094d5795868361089183989985612d44565b511661089e82878b612fc4565b3587845261091160209283926001845260408720825f52845260405f206108c6828254612f30565b90556040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481019190915295869283919082906064820190565b03925af19283156104ce5760019361092f575b505001959495610879565b8161094592903d106104c7576104b98183612b21565b505f80610924565b5050604051957fde836ebd000000000000000000000000000000000000000000000000000000008752166004860152604060248601528060448601527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610a0b576020936064868095819460051b80918484013781010301925af18015610a00576109d8575080f35b602090813d83116109f9575b6109ee8183612b21565b8101031261055c5780f35b503d6109e4565b6040513d84823e3d90fd5b8380fd5b610a2391503d8087833e6105808183612b21565b5f610874565b5080fd5b503461076e5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5767ffffffffffffffff60043581811161102757610a7e903690600401612c09565b9160243581811161102357610a97903690600401612c09565b91909360443582811161101f57610ab2903690600401612c09565b95909260643590811161101b57610acd903690600401612c09565b91909285811480611012575b80611009575b15610fab57610aed81612cf5565b97895b828110610b095760405180610b058c82612ae6565b0390f35b80610b23610b1b610bbb93858b612fc4565b351515612eb3565b8b60208a8c610b61610b5586610b5a610b55828d73ffffffffffffffffffffffffffffffffffffffff8b541697612fc4565b612fd4565b948c612fc4565b6040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152921660248301529094859190829081906044820190565b03915afa928315610f9e5784868d8c938597610f2b575b5085610c509373ffffffffffffffffffffffffffffffffffffffff610c01610b558460209997610c0897612fc4565b1693612fc4565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201529035604482015293849283919082906064820190565b03925af18015610f2057610f01575b50610c6b81858c612fc4565b610c7490612fd4565b918c610c81838c89612fc4565b610c8a90612fd4565b610c9584878d612fc4565b3590610ca2858b8d612fc4565b610cab90612fd4565b6040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff97881660048201529187166024830152604482019290925294166064850152838060848101038173ffffffffffffffffffffffffffffffffffffffff8516935a94602095f1908d8215610ef557888c898f948a8f968f978c90889a610e96575b610e529c508b610df997610b55978b73ffffffffffffffffffffffffffffffffffffffff60209f9e9d9c9899859a829983610da7610b558a610d8f81610df29f610b559f612fc4565b35958488168a52604060019a60208c90522095612fc4565b165f52602052610dbc60405f20918254612f30565b9055168c528e5260408b2086610dd6610b55868686612fc4565b165f528e528c610deb60405f20918254612f3d565b9055612fc4565b1695612fc4565b906040518097819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1918215610e8b57600192610e6c575b5001610af0565b610e849060203d6020116104c7576104b98183612b21565b505f610e65565b6040513d8e823e3d90fd5b50505050955050505050506020833d602011610eed575b81610eba60209383612b21565b8101031261055c578c8881878e868f8f99828f928f8e918394918492519d9750979450979498505090508b989798610d46565b3d9150610ead565b604051903d90823e3d90fd5b610f199060203d6020116104c7576104b98183612b21565b505f610c5f565b6040513d8f823e3d90fd5b9650505050506020833d602011610f96575b81610f4a60209383612b21565b8101031261076e576020610c508a610c08858f9773ffffffffffffffffffffffffffffffffffffffff610c01610b55848e610f858f96612c52565b9d9750979950505050509350610bd2565b3d9150610f3d565b50604051903d90823e3d90fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152fd5b50828814610adf565b50878614610ad9565b8780fd5b8680fd5b8480fd5b8280fd5b503461076e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611063612a7d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090815460ff8160401c16159167ffffffffffffffff821680159081611217575b600114908161120d575b159081611204575b506111da57818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff95161786556111a5575b506111086135ba565b6111106135ba565b6111186135ba565b61112133612ff5565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000845416178355611151575080f35b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784555f6110ff565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f6110b6565b303b1591506110ae565b8491506110a4565b503461076e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a2957611258612a7d565b73ffffffffffffffffffffffffffffffffffffffff9280846024818354169460405195869384927fb4340e6a0000000000000000000000000000000000000000000000000000000084521660048301525afa918215610f9e5781926112f5575b506040519280840190808552835180925280604086019401925b8281106112df5785850386f35b83518716855293810193928101926001016112d2565b61130a9192503d8084833e6105808183612b21565b905f6112b8565b503461076e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611349612a7d565b73ffffffffffffffffffffffffffffffffffffffff80611367612aa0565b169083604051937f0723c9990000000000000000000000000000000000000000000000000000000085528281166004860152818560248183885af1948515610a00578295611516575b50604051947f67e4ac2c0000000000000000000000000000000000000000000000000000000086528286600481885afa95861561150b5783966114ef575b50825b86518110156114eb5780611406859284612d44565b51878352602090600182526040842088611420858d612d44565b51165f52825261143560405f20918254612f30565b9055806114b288611446858d612d44565b51166114528588612d44565b516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a166004820152306024820152604481019190915295869283919082906064820190565b03925af192831561058f576001936114cd575b5050016113f1565b816114e392903d106104c7576104b98183612b21565b505f806114c5565b8380f35b6115049196503d8085833e6105808183612b21565b945f6113ee565b6040513d85823e3d90fd5b61152b9195503d8084833e6105af8183612b21565b935f6113b0565b503461076e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57604051604081019080821067ffffffffffffffff8311176115f4576040918252600581527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602083017f352e302e3000000000000000000000000000000000000000000000000000000081528451958694602086525180928160208801528787015e85828601015201168101030190f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b503461076e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611659612a7d565b6024359067ffffffffffffffff91828116809103610a0b577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054938260ff8660401c1691821561176a575b50506111da577fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000837fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000007fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29773ffffffffffffffffffffffffffffffffffffffff602098167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f55161717169055604051908152a180f35b861610159050825f6116a5565b503461076e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57602073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b503461076e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611820612a7d565b604061182a612aa0565b9273ffffffffffffffffffffffffffffffffffffffff809316815260016020522091165f52602052602060405f2054604051908152f35b503461076e5761188b9061187436612b9c565b939190809591611885821515612eb3565b84613153565b91825115611d17576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905260209573ffffffffffffffffffffffffffffffffffffffff9591878160648188888c165af180156105be57611cfa575b509195835b8551851015611cf157866119158688612d44565b511697604051977f67e4ac2c00000000000000000000000000000000000000000000000000000000895282896004818d5afa98891561150b578399611cd5575b5061196b81611964898b612d44565b5116612d85565b988399845b8251811015611cc657836119848285612d44565b5116848616141580611cb3575b61199d57600101611970565b90508299989793949a506119b091612d44565b5116915b878316918215611c5557848b604051918280927fb2b55d7000000000000000000000000000000000000000000000000000000000825287600483015260249485915afa908115610e8b579083918d91611c24575b5010611ba1578851907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211611b765750611abb8b9c87928d9b9c9d508a145f14611b7057885b6040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8088166004830152808a1660248301526044820187905290911660648201529d8e9283919082906084820190565b03925af19a8b156104ce57889b611b38575b509060019392918a611adf898c612d44565b5116895284918287528b60408b2091165f528652611b0260405f20918254612f30565b905589611b0f888b612d44565b51168852845260408720905f52835260405f20611b2d8a8254612f3d565b905597930193611901565b939291909a508484813d8311611b69575b611b538183612b21565b8101031261055c57600193519a90919293611acd565b503d611b49565b30611a52565b8b7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b856027608492604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f496e73756666696369656e74206c697175696469747920696e20706f6f6c206660448201527f6f722073776170000000000000000000000000000000000000000000000000006064820152fd5b809250888092503d8311611c4e575b611c3d8183612b21565b8101031261055c578290515f611a08565b503d611c33565b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601960248201527f4e6f2076616c6964206e65787420746f6b656e20666f756e64000000000000006044820152fd5b50611cbe8183612d44565b511515611991565b505050969594909791976119b4565b611cea9199503d8085833e6105808183612b21565b975f611955565b50604051838152f35b611d1090883d8a116104c7576104b98183612b21565b505f6118fc565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f20726f75746520666f756e640000000000000000000000000000000000006044820152fd5b503461076e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5773ffffffffffffffffffffffffffffffffffffffff611dc2612a7d565b611dca6130b6565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f5580f35b503461076e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611e2c6130b6565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461076e57611ec236612b9c565b611ed182939495921515612eb3565b81546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528681166024830152602097909290919088908290604490829087165afa9081156105be579083918691612158575b506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890529116918381169189816064818a875af18015610676578893928b928b9261213b575b506040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529181166024830152604482019990995297861660648901528760848189875af196871561058f579089959493929187986120f9575b5091879893916120c29895938289526001885260408920905f52875261204460405f20918254612f30565b905586526001855260408620921691825f52845260405f20612067848254612f3d565b9055846040518097819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1908115610ef557506120dc575b50604051908152f35b6120f290833d85116104c7576104b98183612b21565b505f6120d3565b8681979296949950999492993d8311612134575b6121178183612b21565b8101031261055c576120c296899551979891939894909294612019565b503d61210d565b61215190843d86116104c7576104b98183612b21565b505f611fa0565b809250898092503d8311612189575b6121718183612b21565b81010312611023576121838391612c52565b5f611f44565b503d612167565b503461055c576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5773ffffffffffffffffffffffffffffffffffffffff6121de612a7d565b16906040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201528181602481865afa9081156122e6575f9161237b575b506040517f18160ddd0000000000000000000000000000000000000000000000000000000081528281600481875afa9283156122e6575f9361234b575b50506127109081810291818304149015171561231e5781156122f15761228a91606491041015612e4e565b803b1561055c575f80916004604051809481937ff47b45e80000000000000000000000000000000000000000000000000000000083525af180156122e6576122d0575080f35b905067ffffffffffffffff81116115f457604052005b6040513d5f823e3d90fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9080929350813d8311612374575b6123638183612b21565b8101031261055c5751905f8061225f565b503d612359565b90508181813d83116123a1575b6123928183612b21565b8101031261055c57515f612222565b503d612388565b3461055c575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361243d5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c57612499612a7d565b602490813567ffffffffffffffff811161055c573660238201121561055c5780600401356124c681612b62565b926124d46040519485612b21565b818452602091828501933687838301011161055c57815f928886930187378601015273ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115612745575b5061243d576125466130b6565b8116936040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa5f9181612716575b506125b4578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036126e85750843b156126b95750817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511561268557505f61267a9481925190845af4903d1561267c573d61265e81612b62565b9061266c6040519283612b21565b81525f81943d92013e613613565b005b60609250613613565b93505050503461269157005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d831161273e575b61272e8183612b21565b8101031261055c5751908861257f565b503d612724565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141587612539565b3461055c5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c576127aa612a7d565b6127b2612aa0565b5f546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301528381166024830152602094919285908490604490829085165afa9081156122e65785935f926128c8575b506040517f4aa0665200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015294909216602485015260448035908501528391829081606481015b0392165afa9081156122e6575f9161289b5750604051908152f35b90508181813d83116128c1575b6128b28183612b21565b8101031261055c5751826120d3565b503d6128a8565b8481959293503d83116128fe575b6128e08183612b21565b8101031261055c57612880936128f68694612c52565b919094612821565b503d6128d6565b3461055c575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b3461055c5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5761298c612a7d565b612994612aa0565b9073ffffffffffffffffffffffffffffffffffffffff8091165f52600160205260405f2091165f52602052602060405f2054604051908152f35b3461055c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c57610b05612a10612a0b612a7d565b612d85565b60405191829182612ae6565b3461055c575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5760209067ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b60209060206040818301928281528551809452019301915f5b828110612b0d575050505090565b835185529381019392810192600101612aff565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176115f457604052565b67ffffffffffffffff81116115f457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc608091011261055c5773ffffffffffffffffffffffffffffffffffffffff90600435828116810361055c5791602435818116810361055c579160443591606435908116810361055c5790565b9181601f8401121561055c5782359167ffffffffffffffff831161055c576020808501948460051b01011161055c57565b67ffffffffffffffff81116115f45760051b60200190565b519073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b602090818184031261055c5780519067ffffffffffffffff821161055c57019180601f8401121561055c578251612ca981612c3a565b93612cb76040519586612b21565b818552838086019260051b82010192831161055c578301905b828210612cde575050505090565b838091612cea84612c52565b815201910190612cd0565b90612cff82612c3a565b612d0c6040519182612b21565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612d3a8294612c3a565b0190602036910137565b8051821015612d585760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9073ffffffffffffffffffffffffffffffffffffffff809216604092604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481865afa9182156122e6575f92612e32575b50612de98251612cf5565b925f5b8351811015612e2957600190825f526020828152885f209085612e0f8489612d44565b51165f5252875f2054612e228288612d44565b5201612dec565b50929450505050565b612e479192503d805f833e6105808183612b21565b905f612dde565b15612e5557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b15612eba57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b9081602091031261055c5751801515810361055c5790565b9190820180921161231e57565b9190820391821161231e57565b602090818184031261055c5780519067ffffffffffffffff821161055c57019180601f8401121561055c578251612f8081612c3a565b93612f8e6040519586612b21565b818552838086019260051b82010192831161055c578301905b828210612fb5575050505090565b81518152908301908301612fa7565b9190811015612d585760051b0190565b3573ffffffffffffffffffffffffffffffffffffffff8116810361055c5790565b73ffffffffffffffffffffffffffffffffffffffff809116908115613086577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300541633036130f657565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461231e5760010190565b73ffffffffffffffffffffffffffffffffffffffff60045f82815416604051928380927fd88ff1f40000000000000000000000000000000000000000000000000000000082525afa9081156122e6575f916133e0575b508051936131b685612cf5565b915f936131c287612c3a565b926131d06040519485612b21565b8784527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06131fd89612c3a565b0136602086013761320d88612cf5565b965f600191895115612d5857841660208a01525b81811061325a5750505050505050505050506040516020810181811067ffffffffffffffff8211176115f4576040525f81525f36813790565b8361326e61326783613126565b928b612d44565b51168484168114613399575f5b8b8110613289575050613221565b6132938189612d44565b51156132a2575b60010161327b565b856132ad8289612d44565b5116604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481845afa9081156122e6578f85935f9361337d575b50836132fb81856133fa565b928361336b575b505050613311575b505061329a565b9061331b9161350d565b86613326838a612d44565b51166133318c613126565b9b61333c908c612d44565b52868c61334887613126565b9661335291612d44565b911690526133608189612d44565b60019052815f61330a565b6133759350613447565b8f835f613302565b6133929193503d805f833e6105808183612b21565b915f6132ef565b5050505094505050935091506133ae82612cf5565b925f5b8381106133bf575050505090565b80836133cd60019385612d44565b51166133d98288612d44565b52016133b1565b6133f491503d805f833e6105808183612b21565b5f6131a9565b905f5b82518110156134405773ffffffffffffffffffffffffffffffffffffffff806134268386612d44565b511690831614613438576001016133fd565b505050600190565b5050505f90565b6004929173ffffffffffffffffffffffffffffffffffffffff809216915f61346e84612d85565b93604051968780927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa9485156122e6575f956134f1575b505f5b85518110156134e757816134c08288612d44565b5116828416146134d2576001016134ac565b929150506134e1929350612d44565b51101590565b5050505050505f90565b6135069195503d805f833e6105808183612b21565b935f6134a9565b905f5b825181101561355c5773ffffffffffffffffffffffffffffffffffffffff806135398386612d44565b51168184160361354c5750600101613510565b926135579250612d44565b511690565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f546f6b656e206e6f7420666f756e6420696e20706f6f6c0000000000000000006044820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c16156135e957565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90613652575080511561362857805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b815115806136aa575b613663575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561365b56fea2646970667358221220623ed6678501a6aed735ec557d4bf3e4f2fbd7fe940f1f38395c9c0fc10d3ad564736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x36E9 SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x23ED ADD MSTORE PUSH2 0x250E ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x2A1C JUMPI POP DUP1 PUSH4 0x3E99C1E4 EQ PUSH2 0x29CE JUMPI DUP1 PUSH4 0x4056C37F EQ PUSH2 0x2955 JUMPI DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x2905 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2773 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2467 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x23A8 JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x2190 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1EB3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DF5 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x1D75 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1861 JUMPI DUP1 PUSH4 0x8628991E EQ PUSH2 0x17E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1777 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x1621 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1532 JUMPI DUP1 PUSH4 0xAD414263 EQ PUSH2 0x1311 JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0x121F JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x102B JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0xA2D JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x771 JUMPI PUSH4 0xF31ABCC4 EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x156 PUSH2 0x2AA0 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 DUP4 ISZERO PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 SWAP4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP7 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI SWAP1 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x6DF JUMPI JUMPDEST POP LT PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD SWAP5 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 DUP8 MSTORE CALLER PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x24 SWAP7 DUP9 DUP2 DUP10 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x676 JUMPI SWAP1 DUP10 SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0x643 JUMPI JUMPDEST POP SWAP3 PUSH2 0x22F DUP3 PUSH2 0x28C SWAP6 LT ISZERO PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI DUP6 SWAP2 PUSH2 0x626 JUMPI JUMPDEST POP ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP2 DUP5 AND PUSH1 0x4 DUP5 ADD MSTORE DUP5 DUP4 DUP8 DUP2 DUP4 DUP6 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x5BE JUMPI DUP6 SWAP4 PUSH2 0x59A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x58F JUMPI DUP7 SWAP3 PUSH2 0x56B JUMPI JUMPDEST POP DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI DUP4 PUSH2 0x340 DUP3 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP10 DUP12 DUP11 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI DUP9 SWAP2 PUSH2 0x536 JUMPI JUMPDEST POP PUSH2 0x36F DUP3 DUP8 PUSH2 0x2D44 JUMP JUMPDEST MLOAD GT PUSH2 0x4D9 JUMPI PUSH2 0x37F DUP2 DUP7 PUSH2 0x2D44 JUMP JUMPDEST MLOAD DUP3 DUP9 MSTORE PUSH1 0x1 DUP11 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP6 PUSH2 0x396 DUP5 DUP8 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP11 MSTORE PUSH2 0x3AB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x424 DUP10 DUP6 PUSH2 0x3BC DUP5 DUP8 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x3C8 DUP5 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD SWAP1 DUP10 DUP12 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI DUP9 SWAP2 PUSH2 0x4A1 JUMPI JUMPDEST POP ISZERO PUSH2 0x444 JUMPI PUSH1 0x1 ADD PUSH2 0x32C JUMP JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x15 DUP11 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4C1 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x4C7 JUMPI JUMPDEST PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH0 PUSH2 0x436 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x16 DUP11 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x560 JUMPI JUMPDEST PUSH2 0x54D DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD PUSH0 PUSH2 0x364 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x543 JUMP JUMPDEST DUP7 DUP1 RETURN JUMPDEST PUSH2 0x588 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2C73 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5B7 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x5AF DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0xF DUP8 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x63D SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST PUSH0 PUSH2 0x2A0 JUMP JUMPDEST DUP4 DUP2 SWAP5 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x66F JUMPI JUMPDEST PUSH2 0x65A DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI SWAP1 MLOAD DUP9 SWAP2 SWAP1 PUSH2 0x22F PUSH2 0x21E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x709 JUMPI JUMPDEST PUSH2 0x6F8 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP8 SWAP1 MLOAD PUSH0 PUSH2 0x1CD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x7B9 PUSH2 0x7AC PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x30B6 JUMP JUMPDEST PUSH2 0x2FF5 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x80C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x816 PUSH2 0x2AA0 JUMP JUMPDEST PUSH2 0x81E PUSH2 0x2AC3 JUMP JUMPDEST SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 PUSH1 0x40 MLOAD PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI DUP6 SWAP2 PUSH2 0xA0F JUMPI JUMPDEST POP DUP5 SWAP6 SWAP5 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x94D JUMPI SWAP6 DUP7 DUP4 PUSH2 0x891 DUP4 SWAP9 SWAP10 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x89E DUP3 DUP8 DUP12 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD DUP8 DUP5 MSTORE PUSH2 0x911 PUSH1 0x20 SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x8C6 DUP3 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x1 SWAP4 PUSH2 0x92F JUMPI JUMPDEST POP POP ADD SWAP6 SWAP5 SWAP6 PUSH2 0x879 JUMP JUMPDEST DUP2 PUSH2 0x945 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x924 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP6 PUSH32 0xDE836EBD00000000000000000000000000000000000000000000000000000000 DUP8 MSTORE AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP7 ADD MSTORE DUP1 PUSH1 0x44 DUP7 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA0B JUMPI PUSH1 0x20 SWAP4 PUSH1 0x64 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH2 0x9D8 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9F9 JUMPI JUMPDEST PUSH2 0x9EE DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0xA23 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST PUSH0 PUSH2 0x874 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1027 JUMPI PUSH2 0xA7E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1023 JUMPI PUSH2 0xA97 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x101F JUMPI PUSH2 0xAB2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x101B JUMPI PUSH2 0xACD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 DUP6 DUP2 EQ DUP1 PUSH2 0x1012 JUMPI JUMPDEST DUP1 PUSH2 0x1009 JUMPI JUMPDEST ISZERO PUSH2 0xFAB JUMPI PUSH2 0xAED DUP2 PUSH2 0x2CF5 JUMP JUMPDEST SWAP8 DUP10 JUMPDEST DUP3 DUP2 LT PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xB05 DUP13 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0xB23 PUSH2 0xB1B PUSH2 0xBBB SWAP4 DUP6 DUP12 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x2EB3 JUMP JUMPDEST DUP12 PUSH1 0x20 DUP11 DUP13 PUSH2 0xB61 PUSH2 0xB55 DUP7 PUSH2 0xB5A PUSH2 0xB55 DUP3 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 SLOAD AND SWAP8 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0x2FD4 JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP5 DUP6 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xF9E JUMPI DUP5 DUP7 DUP14 DUP13 SWAP4 DUP6 SWAP8 PUSH2 0xF2B JUMPI JUMPDEST POP DUP6 PUSH2 0xC50 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC01 PUSH2 0xB55 DUP5 PUSH1 0x20 SWAP10 SWAP8 PUSH2 0xC08 SWAP8 PUSH2 0x2FC4 JUMP JUMPDEST AND SWAP4 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF01 JUMPI JUMPDEST POP PUSH2 0xC6B DUP2 DUP6 DUP13 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0xC74 SWAP1 PUSH2 0x2FD4 JUMP JUMPDEST SWAP2 DUP13 PUSH2 0xC81 DUP4 DUP13 DUP10 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0xC8A SWAP1 PUSH2 0x2FD4 JUMP JUMPDEST PUSH2 0xC95 DUP5 DUP8 DUP14 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xCA2 DUP6 DUP12 DUP14 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0xCAB SWAP1 PUSH2 0x2FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP8 DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 AND PUSH1 0x64 DUP6 ADD MSTORE DUP4 DUP1 PUSH1 0x84 DUP2 ADD SUB DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP4 GAS SWAP5 PUSH1 0x20 SWAP6 CALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0xEF5 JUMPI DUP9 DUP13 DUP10 DUP16 SWAP5 DUP11 DUP16 SWAP7 DUP16 SWAP8 DUP13 SWAP1 DUP9 SWAP11 PUSH2 0xE96 JUMPI JUMPDEST PUSH2 0xE52 SWAP13 POP DUP12 PUSH2 0xDF9 SWAP8 PUSH2 0xB55 SWAP8 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP16 SWAP15 SWAP14 SWAP13 SWAP9 SWAP10 DUP6 SWAP11 DUP3 SWAP10 DUP4 PUSH2 0xDA7 PUSH2 0xB55 DUP11 PUSH2 0xD8F DUP2 PUSH2 0xDF2 SWAP16 PUSH2 0xB55 SWAP16 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD SWAP6 DUP5 DUP9 AND DUP11 MSTORE PUSH1 0x40 PUSH1 0x1 SWAP11 PUSH1 0x20 DUP13 SWAP1 MSTORE KECCAK256 SWAP6 PUSH2 0x2FC4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xDBC PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE AND DUP13 MSTORE DUP15 MSTORE PUSH1 0x40 DUP12 KECCAK256 DUP7 PUSH2 0xDD6 PUSH2 0xB55 DUP7 DUP7 DUP7 PUSH2 0x2FC4 JUMP JUMPDEST AND PUSH0 MSTORE DUP15 MSTORE DUP13 PUSH2 0xDEB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2FC4 JUMP JUMPDEST AND SWAP6 PUSH2 0x2FC4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xE8B JUMPI PUSH1 0x1 SWAP3 PUSH2 0xE6C JUMPI JUMPDEST POP ADD PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xE84 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEED JUMPI JUMPDEST DUP2 PUSH2 0xEBA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP13 DUP9 DUP2 DUP8 DUP15 DUP7 DUP16 DUP16 SWAP10 DUP3 DUP16 SWAP3 DUP16 DUP15 SWAP2 DUP4 SWAP5 SWAP2 DUP5 SWAP3 MLOAD SWAP14 SWAP8 POP SWAP8 SWAP5 POP SWAP8 SWAP5 SWAP9 POP POP SWAP1 POP DUP12 SWAP9 SWAP8 SWAP9 PUSH2 0xD46 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xF19 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP7 POP POP POP POP POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF96 JUMPI JUMPDEST DUP2 PUSH2 0xF4A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x76E JUMPI PUSH1 0x20 PUSH2 0xC50 DUP11 PUSH2 0xC08 DUP6 DUP16 SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC01 PUSH2 0xB55 DUP5 DUP15 PUSH2 0xF85 DUP16 SWAP7 PUSH2 0x2C52 JUMP JUMPDEST SWAP14 SWAP8 POP SWAP8 SWAP10 POP POP POP POP POP SWAP4 POP PUSH2 0xBD2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF3D JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 DUP9 EQ PUSH2 0xADF JUMP JUMPDEST POP DUP8 DUP7 EQ PUSH2 0xAD9 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1063 PUSH2 0x2A7D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1217 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x120D JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1204 JUMPI JUMPDEST POP PUSH2 0x11DA JUMPI DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x11A5 JUMPI JUMPDEST POP PUSH2 0x1108 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1110 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1118 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1121 CALLER PUSH2 0x2FF5 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 SLOAD AND OR DUP4 SSTORE PUSH2 0x1151 JUMPI POP DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x10B6 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x10AE JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0x10A4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xA29 JUMPI PUSH2 0x1258 PUSH2 0x2A7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP1 DUP5 PUSH1 0x24 DUP2 DUP4 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xF9E JUMPI DUP2 SWAP3 PUSH2 0x12F5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 PUSH1 0x40 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x12DF JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x130A SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x12B8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1349 PUSH2 0x2A7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x1367 PUSH2 0x2AA0 JUMP JUMPDEST AND SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x723C99900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP3 DUP2 AND PUSH1 0x4 DUP7 ADD MSTORE DUP2 DUP6 PUSH1 0x24 DUP2 DUP4 DUP9 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0xA00 JUMPI DUP3 SWAP6 PUSH2 0x1516 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP3 DUP7 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x150B JUMPI DUP4 SWAP7 PUSH2 0x14EF JUMPI JUMPDEST POP DUP3 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x14EB JUMPI DUP1 PUSH2 0x1406 DUP6 SWAP3 DUP5 PUSH2 0x2D44 JUMP JUMPDEST MLOAD DUP8 DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP9 PUSH2 0x1420 DUP6 DUP14 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 MSTORE PUSH2 0x1435 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH2 0x14B2 DUP9 PUSH2 0x1446 DUP6 DUP14 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x1452 DUP6 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x58F JUMPI PUSH1 0x1 SWAP4 PUSH2 0x14CD JUMPI JUMPDEST POP POP ADD PUSH2 0x13F1 JUMP JUMPDEST DUP2 PUSH2 0x14E3 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x14C5 JUMP JUMPDEST DUP4 DUP1 RETURN JUMPDEST PUSH2 0x1504 SWAP2 SWAP7 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x152B SWAP2 SWAP6 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x5AF DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x13B0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 SWAP2 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 DUP4 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP9 ADD MSTORE DUP8 DUP8 ADD MCOPY DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1659 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA0B JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD SWAP4 DUP3 PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x176A JUMPI JUMPDEST POP POP PUSH2 0x11DA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP9 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE AND OR OR AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP7 AND LT ISZERO SWAP1 POP DUP3 PUSH0 PUSH2 0x16A5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1820 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x40 PUSH2 0x182A PUSH2 0x2AA0 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x188B SWAP1 PUSH2 0x1874 CALLDATASIZE PUSH2 0x2B9C JUMP JUMPDEST SWAP4 SWAP2 SWAP1 DUP1 SWAP6 SWAP2 PUSH2 0x1885 DUP3 ISZERO ISZERO PUSH2 0x2EB3 JUMP JUMPDEST DUP5 PUSH2 0x3153 JUMP JUMPDEST SWAP2 DUP3 MLOAD ISZERO PUSH2 0x1D17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x20 SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 SWAP2 DUP8 DUP2 PUSH1 0x64 DUP2 DUP9 DUP9 DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH2 0x1CFA JUMPI JUMPDEST POP SWAP2 SWAP6 DUP4 JUMPDEST DUP6 MLOAD DUP6 LT ISZERO PUSH2 0x1CF1 JUMPI DUP7 PUSH2 0x1915 DUP7 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP8 PUSH1 0x40 MLOAD SWAP8 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE DUP3 DUP10 PUSH1 0x4 DUP2 DUP14 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x150B JUMPI DUP4 SWAP10 PUSH2 0x1CD5 JUMPI JUMPDEST POP PUSH2 0x196B DUP2 PUSH2 0x1964 DUP10 DUP12 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x2D85 JUMP JUMPDEST SWAP9 DUP4 SWAP10 DUP5 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1CC6 JUMPI DUP4 PUSH2 0x1984 DUP3 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP5 DUP7 AND EQ ISZERO DUP1 PUSH2 0x1CB3 JUMPI JUMPDEST PUSH2 0x199D JUMPI PUSH1 0x1 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP3 SWAP10 SWAP9 SWAP8 SWAP4 SWAP5 SWAP11 POP PUSH2 0x19B0 SWAP2 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP2 JUMPDEST DUP8 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0x1C55 JUMPI DUP5 DUP12 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH32 0xB2B55D7000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP5 DUP6 SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE8B JUMPI SWAP1 DUP4 SWAP2 DUP14 SWAP2 PUSH2 0x1C24 JUMPI JUMPDEST POP LT PUSH2 0x1BA1 JUMPI DUP9 MLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1B76 JUMPI POP PUSH2 0x1ABB DUP12 SWAP13 DUP8 SWAP3 DUP14 SWAP12 SWAP13 SWAP14 POP DUP11 EQ PUSH0 EQ PUSH2 0x1B70 JUMPI DUP9 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP11 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP14 DUP15 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x84 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP11 DUP12 ISZERO PUSH2 0x4CE JUMPI DUP9 SWAP12 PUSH2 0x1B38 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 DUP11 PUSH2 0x1ADF DUP10 DUP13 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP10 MSTORE DUP5 SWAP2 DUP3 DUP8 MSTORE DUP12 PUSH1 0x40 DUP12 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP7 MSTORE PUSH2 0x1B02 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE DUP10 PUSH2 0x1B0F DUP9 DUP12 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP9 MSTORE DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 PUSH0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1B2D DUP11 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE SWAP8 SWAP4 ADD SWAP4 PUSH2 0x1901 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP11 POP DUP5 DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1B69 JUMPI JUMPDEST PUSH2 0x1B53 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI PUSH1 0x1 SWAP4 MLOAD SWAP11 SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x1ACD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1B49 JUMP JUMPDEST ADDRESS PUSH2 0x1A52 JUMP JUMPDEST DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP6 PUSH1 0x27 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920696E20706F6F6C2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F72207377617000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1C4E JUMPI JUMPDEST PUSH2 0x1C3D DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x1A08 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C6964206E65787420746F6B656E20666F756E6400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH2 0x1CBE DUP2 DUP4 PUSH2 0x2D44 JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH2 0x1991 JUMP JUMPDEST POP POP POP SWAP7 SWAP6 SWAP5 SWAP1 SWAP8 SWAP2 SWAP8 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x1CEA SWAP2 SWAP10 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP8 PUSH0 PUSH2 0x1955 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1D10 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726F75746520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1DC2 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x1DCA PUSH2 0x30B6 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1E2C PUSH2 0x30B6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x1EC2 CALLDATASIZE PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x1ED1 DUP3 SWAP4 SWAP5 SWAP6 SWAP3 ISZERO ISZERO PUSH2 0x2EB3 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI SWAP1 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x2158 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 AND SWAP2 DUP4 DUP2 AND SWAP2 DUP10 DUP2 PUSH1 0x64 DUP2 DUP11 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x676 JUMPI DUP9 SWAP4 SWAP3 DUP12 SWAP3 DUP12 SWAP3 PUSH2 0x213B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP10 SWAP1 SWAP10 MSTORE SWAP8 DUP7 AND PUSH1 0x64 DUP10 ADD MSTORE DUP8 PUSH1 0x84 DUP2 DUP10 DUP8 GAS CALL SWAP7 DUP8 ISZERO PUSH2 0x58F JUMPI SWAP1 DUP10 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP9 PUSH2 0x20F9 JUMPI JUMPDEST POP SWAP2 DUP8 SWAP9 SWAP4 SWAP2 PUSH2 0x20C2 SWAP9 SWAP6 SWAP4 DUP3 DUP10 MSTORE PUSH1 0x1 DUP9 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH0 MSTORE DUP8 MSTORE PUSH2 0x2044 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x2067 DUP5 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xEF5 JUMPI POP PUSH2 0x20DC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x20F2 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0x20D3 JUMP JUMPDEST DUP7 DUP2 SWAP8 SWAP3 SWAP7 SWAP5 SWAP10 POP SWAP10 SWAP5 SWAP3 SWAP10 RETURNDATASIZE DUP4 GT PUSH2 0x2134 JUMPI JUMPDEST PUSH2 0x2117 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI PUSH2 0x20C2 SWAP7 DUP10 SWAP6 MLOAD SWAP8 SWAP9 SWAP2 SWAP4 SWAP9 SWAP5 SWAP1 SWAP3 SWAP5 PUSH2 0x2019 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x210D JUMP JUMPDEST PUSH2 0x2151 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0x1FA0 JUMP JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x2189 JUMPI JUMPDEST PUSH2 0x2171 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1023 JUMPI PUSH2 0x2183 DUP4 SWAP2 PUSH2 0x2C52 JUMP JUMPDEST PUSH0 PUSH2 0x1F44 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2167 JUMP JUMPDEST POP CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x21DE PUSH2 0x2A7D JUMP JUMPDEST AND SWAP1 PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP2 PUSH2 0x237B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP4 PUSH2 0x234B JUMPI JUMPDEST POP POP PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x231E JUMPI DUP2 ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x228A SWAP2 PUSH1 0x64 SWAP2 DIV LT ISZERO PUSH2 0x2E4E JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x55C JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xF47B45E800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22D0 JUMPI POP DUP1 RETURN JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2374 JUMPI JUMPDEST PUSH2 0x2363 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD SWAP1 PUSH0 DUP1 PUSH2 0x225F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23A1 JUMPI JUMPDEST PUSH2 0x2392 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD PUSH0 PUSH2 0x2222 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2388 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x243D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0x2499 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x55C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x24C6 DUP2 PUSH2 0x2B62 JUMP JUMPDEST SWAP3 PUSH2 0x24D4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2B21 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP6 ADD SWAP4 CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0x55C JUMPI DUP2 PUSH0 SWAP3 DUP9 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP7 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0x2745 JUMPI JUMPDEST POP PUSH2 0x243D JUMPI PUSH2 0x2546 PUSH2 0x30B6 JUMP JUMPDEST DUP2 AND SWAP4 PUSH1 0x40 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x2716 JUMPI JUMPDEST POP PUSH2 0x25B4 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 SWAP1 DUP8 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x26E8 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x26B9 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x2685 JUMPI POP PUSH0 PUSH2 0x267A SWAP5 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x267C JUMPI RETURNDATASIZE PUSH2 0x265E DUP2 PUSH2 0x2B62 JUMP JUMPDEST SWAP1 PUSH2 0x266C PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3613 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x3613 JUMP JUMPDEST SWAP4 POP POP POP POP CALLVALUE PUSH2 0x2691 JUMPI STOP JUMPDEST DUP1 PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x273E JUMPI JUMPDEST PUSH2 0x272E DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD SWAP1 DUP9 PUSH2 0x257F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2724 JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP8 PUSH2 0x2539 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0x27AA PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x27B2 PUSH2 0x2AA0 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP3 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI DUP6 SWAP4 PUSH0 SWAP3 PUSH2 0x28C8 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4AA0665200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD SWAP1 DUP6 ADD MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP2 PUSH2 0x289B JUMPI POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x28C1 JUMPI JUMPDEST PUSH2 0x28B2 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD DUP3 PUSH2 0x20D3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28A8 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x28FE JUMPI JUMPDEST PUSH2 0x28E0 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI PUSH2 0x2880 SWAP4 PUSH2 0x28F6 DUP7 SWAP5 PUSH2 0x2C52 JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x2821 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28D6 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0x298C PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x2994 PUSH2 0x2AA0 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0xB05 PUSH2 0x2A10 PUSH2 0x2A0B PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x2D85 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2B0D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AFF JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x80 SWAP2 ADD SLT PUSH2 0x55C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x55C JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x55C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55C JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP3 MLOAD PUSH2 0x2CA9 DUP2 PUSH2 0x2C3A JUMP JUMPDEST SWAP4 PUSH2 0x2CB7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2B21 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x55C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2CDE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2CEA DUP5 PUSH2 0x2C52 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2CD0 JUMP JUMPDEST SWAP1 PUSH2 0x2CFF DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH2 0x2D0C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2B21 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2D3A DUP3 SWAP5 PUSH2 0x2C3A JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH1 0x40 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP3 PUSH2 0x2E32 JUMPI JUMPDEST POP PUSH2 0x2DE9 DUP3 MLOAD PUSH2 0x2CF5 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2E29 JUMPI PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE DUP9 PUSH0 KECCAK256 SWAP1 DUP6 PUSH2 0x2E0F DUP5 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP8 PUSH0 KECCAK256 SLOAD PUSH2 0x2E22 DUP3 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MSTORE ADD PUSH2 0x2DEC JUMP JUMPDEST POP SWAP3 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH2 0x2E47 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2DDE JUMP JUMPDEST ISZERO PUSH2 0x2E55 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2EBA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x55C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x55C JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x231E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x231E JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x55C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55C JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP3 MLOAD PUSH2 0x2F80 DUP2 PUSH2 0x2C3A JUMP JUMPDEST SWAP4 PUSH2 0x2F8E PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2B21 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x55C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2FB5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2FA7 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3086 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x30F6 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x231E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH0 DUP3 DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xD88FF1F400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP2 PUSH2 0x33E0 JUMPI JUMPDEST POP DUP1 MLOAD SWAP4 PUSH2 0x31B6 DUP6 PUSH2 0x2CF5 JUMP JUMPDEST SWAP2 PUSH0 SWAP4 PUSH2 0x31C2 DUP8 PUSH2 0x2C3A JUMP JUMPDEST SWAP3 PUSH2 0x31D0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2B21 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x31FD DUP10 PUSH2 0x2C3A JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH2 0x320D DUP9 PUSH2 0x2CF5 JUMP JUMPDEST SWAP7 PUSH0 PUSH1 0x1 SWAP2 DUP10 MLOAD ISZERO PUSH2 0x2D58 JUMPI DUP5 AND PUSH1 0x20 DUP11 ADD MSTORE JUMPDEST DUP2 DUP2 LT PUSH2 0x325A JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x326E PUSH2 0x3267 DUP4 PUSH2 0x3126 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP5 DUP5 AND DUP2 EQ PUSH2 0x3399 JUMPI PUSH0 JUMPDEST DUP12 DUP2 LT PUSH2 0x3289 JUMPI POP POP PUSH2 0x3221 JUMP JUMPDEST PUSH2 0x3293 DUP2 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x32A2 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x327B JUMP JUMPDEST DUP6 PUSH2 0x32AD DUP3 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI DUP16 DUP6 SWAP4 PUSH0 SWAP4 PUSH2 0x337D JUMPI JUMPDEST POP DUP4 PUSH2 0x32FB DUP2 DUP6 PUSH2 0x33FA JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x336B JUMPI JUMPDEST POP POP POP PUSH2 0x3311 JUMPI JUMPDEST POP POP PUSH2 0x329A JUMP JUMPDEST SWAP1 PUSH2 0x331B SWAP2 PUSH2 0x350D JUMP JUMPDEST DUP7 PUSH2 0x3326 DUP4 DUP11 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x3331 DUP13 PUSH2 0x3126 JUMP JUMPDEST SWAP12 PUSH2 0x333C SWAP1 DUP13 PUSH2 0x2D44 JUMP JUMPDEST MSTORE DUP7 DUP13 PUSH2 0x3348 DUP8 PUSH2 0x3126 JUMP JUMPDEST SWAP7 PUSH2 0x3352 SWAP2 PUSH2 0x2D44 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x3360 DUP2 DUP10 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x1 SWAP1 MSTORE DUP2 PUSH0 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x3375 SWAP4 POP PUSH2 0x3447 JUMP JUMPDEST DUP16 DUP4 PUSH0 PUSH2 0x3302 JUMP JUMPDEST PUSH2 0x3392 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x32EF JUMP JUMPDEST POP POP POP POP SWAP5 POP POP POP SWAP4 POP SWAP2 POP PUSH2 0x33AE DUP3 PUSH2 0x2CF5 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x33BF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x33CD PUSH1 0x1 SWAP4 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x33D9 DUP3 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MSTORE ADD PUSH2 0x33B1 JUMP JUMPDEST PUSH2 0x33F4 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST PUSH0 PUSH2 0x31A9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3440 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x3426 DUP4 DUP7 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP1 DUP4 AND EQ PUSH2 0x3438 JUMPI PUSH1 0x1 ADD PUSH2 0x33FD JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 PUSH0 PUSH2 0x346E DUP5 PUSH2 0x2D85 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP6 PUSH2 0x34F1 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x34E7 JUMPI DUP2 PUSH2 0x34C0 DUP3 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP3 DUP5 AND EQ PUSH2 0x34D2 JUMPI PUSH1 0x1 ADD PUSH2 0x34AC JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH2 0x34E1 SWAP3 SWAP4 POP PUSH2 0x2D44 JUMP JUMPDEST MLOAD LT ISZERO SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3506 SWAP2 SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x34A9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x355C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x3539 DUP4 DUP7 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP2 DUP5 AND SUB PUSH2 0x354C JUMPI POP PUSH1 0x1 ADD PUSH2 0x3510 JUMP JUMPDEST SWAP3 PUSH2 0x3557 SWAP3 POP PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E6420696E20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x35E9 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x3652 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x3628 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x36AA JUMPI JUMPDEST PUSH2 0x3663 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x365B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x3ED667 DUP6 ADD 0xA6 0xAE 0xD7 CALLDATALOAD 0xEC SSTORE PUSH30 0x4BF3E4F2FBD7FE940F1F38395C9C0FC10D3AD564736F6C63430008190033 ","sourceMap":"2066:13936:17:-:0;;;;;;;1171:4:2;1163:13;;2066:13936:17;;;;;;1163:13:2;2066:13936:17;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10947,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_21602":{"entryPoint":10877,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_21604":{"entryPoint":10912,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":11346,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_address":{"entryPoint":11164,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_array_address_dyn_calldata":{"entryPoint":11273,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":11379,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":12106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":12056,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":10982,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":11509,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":11322,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":11106,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":12228,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":12080,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":12093,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":11041,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":13754,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":12470,"id":122,"parameterSlots":0,"returnSlots":0},"fun_containsToken":{"entryPoint":13306,"id":5355,"parameterSlots":2,"returnSlots":1},"fun_findOptimalRoute":{"entryPoint":12627,"id":5320,"parameterSlots":3,"returnSlots":1},"fun_getOtherTokenInPool":{"entryPoint":13581,"id":5456,"parameterSlots":2,"returnSlots":1},"fun_getReserves":{"entryPoint":11653,"id":5880,"parameterSlots":1,"returnSlots":1},"fun_hasSufficientLiquidity":{"entryPoint":13383,"id":5417,"parameterSlots":3,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":12277,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":13843,"id":1967,"parameterSlots":3,"returnSlots":1},"increment_uint256":{"entryPoint":12582,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":11588,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":12244,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":11854,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_335f":{"entryPoint":11955,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":9197},{"length":32,"start":9486}]},"linkReferences":{},"object":"6080806040526004361015610012575f80fd5b5f905f3560e01c9081630d8e6e2c14612a1c575080633e99c1e4146129ce5780634056c37f146129555780634219dc40146129055780634aa06652146127735780634f1ef2861461246757806352d1902d146123a85780635568081a146121905780636e81221c14611eb3578063715018a614611df557806372591be514611d755780637442eca6146118615780638628991e146117e85780638da5cb5b146117775780638f2248bc14611621578063ad3cb1cc14611532578063ad41426314611311578063ae3cce1c1461121f578063c4d66de81461102b578063e74e9b0614610a2d578063ec0cd2eb146107bc578063f2fde38b146107715763f31abcc41461011b575f80fd5b3461076e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5760043590610156612aa0565b61015e612ac3565b918315610710576040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523360048201523060248201526020939073ffffffffffffffffffffffffffffffffffffffff848116918681604481865afa9081156105be5790889186916106df575b501061068157604051947f70a08231000000000000000000000000000000000000000000000000000000009788875233600488015260249688818981885afa90811561067657908992918891610643575b509261022f8261028c951015612e4e565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015273ffffffffffffffffffffffffffffffffffffffff9091166024820152604481019190915291829081906064820190565b038188875af19081156105be578591610626575b50156105c957604051917f89afcb4400000000000000000000000000000000000000000000000000000000835281841660048401528483878183855af19283156105be57859361059a575b50604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082528582600481845afa91821561058f57869261056b575b50855b825181101561056757836103408285612d44565b5116898b8a6040518094819382523060048301525afa9081156104ce578891610536575b5061036f8287612d44565b51116104d95761037f8186612d44565b5182885260018a5260408820856103968487612d44565b51165f528a526103ab60405f20918254612f3d565b905561042489856103bc8487612d44565b51166103c88489612d44565b5190898b6040518096819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af19081156104ce5788916104a1575b50156104445760010161032c565b60648960158a604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f4173736574207472616e73666572206661696c656400000000000000000000006044820152fd5b6104c191508a3d8c116104c7575b6104b98183612b21565b810190612f18565b5f610436565b503d6104af565b6040513d8a823e3d90fd5b60648960168a604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f496e73756666696369656e74204c6971756964697479000000000000000000006044820152fd5b90508981813d8311610560575b61054d8183612b21565b8101031261055c57515f610364565b5f80fd5b503d610543565b8680f35b6105889192503d8088833e6105808183612b21565b810190612c73565b905f610329565b6040513d88823e3d90fd5b6105b79193503d8087833e6105af8183612b21565b810190612f4a565b915f6102eb565b6040513d87823e3d90fd5b606486600f87604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f5472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b61063d9150873d89116104c7576104b98183612b21565b5f6102a0565b83819492503d831161066f575b61065a8183612b21565b8101031261055c57905188919061022f61021e565b503d610650565b6040513d89823e3d90fd5b606486604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601660248201527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006044820152fd5b809250888092503d8311610709575b6106f88183612b21565b8101031261055c578790515f6101cd565b503d6106ee565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152fd5b80fd5b503461076e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e576107b96107ac612a7d565b6107b46130b6565b612ff5565b80f35b503461076e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5760043567ffffffffffffffff8111610a295761080c903690600401612c09565b9082610816612aa0565b61081e612ac3565b9373ffffffffffffffffffffffffffffffffffffffff809216916040517f67e4ac2c0000000000000000000000000000000000000000000000000000000081528481600481875afa9081156105be578591610a0f575b508495945b815181101561094d5795868361089183989985612d44565b511661089e82878b612fc4565b3587845261091160209283926001845260408720825f52845260405f206108c6828254612f30565b90556040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481019190915295869283919082906064820190565b03925af19283156104ce5760019361092f575b505001959495610879565b8161094592903d106104c7576104b98183612b21565b505f80610924565b5050604051957fde836ebd000000000000000000000000000000000000000000000000000000008752166004860152604060248601528060448601527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610a0b576020936064868095819460051b80918484013781010301925af18015610a00576109d8575080f35b602090813d83116109f9575b6109ee8183612b21565b8101031261055c5780f35b503d6109e4565b6040513d84823e3d90fd5b8380fd5b610a2391503d8087833e6105808183612b21565b5f610874565b5080fd5b503461076e5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5767ffffffffffffffff60043581811161102757610a7e903690600401612c09565b9160243581811161102357610a97903690600401612c09565b91909360443582811161101f57610ab2903690600401612c09565b95909260643590811161101b57610acd903690600401612c09565b91909285811480611012575b80611009575b15610fab57610aed81612cf5565b97895b828110610b095760405180610b058c82612ae6565b0390f35b80610b23610b1b610bbb93858b612fc4565b351515612eb3565b8b60208a8c610b61610b5586610b5a610b55828d73ffffffffffffffffffffffffffffffffffffffff8b541697612fc4565b612fd4565b948c612fc4565b6040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152921660248301529094859190829081906044820190565b03915afa928315610f9e5784868d8c938597610f2b575b5085610c509373ffffffffffffffffffffffffffffffffffffffff610c01610b558460209997610c0897612fc4565b1693612fc4565b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201529035604482015293849283919082906064820190565b03925af18015610f2057610f01575b50610c6b81858c612fc4565b610c7490612fd4565b918c610c81838c89612fc4565b610c8a90612fd4565b610c9584878d612fc4565b3590610ca2858b8d612fc4565b610cab90612fd4565b6040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff97881660048201529187166024830152604482019290925294166064850152838060848101038173ffffffffffffffffffffffffffffffffffffffff8516935a94602095f1908d8215610ef557888c898f948a8f968f978c90889a610e96575b610e529c508b610df997610b55978b73ffffffffffffffffffffffffffffffffffffffff60209f9e9d9c9899859a829983610da7610b558a610d8f81610df29f610b559f612fc4565b35958488168a52604060019a60208c90522095612fc4565b165f52602052610dbc60405f20918254612f30565b9055168c528e5260408b2086610dd6610b55868686612fc4565b165f528e528c610deb60405f20918254612f3d565b9055612fc4565b1695612fc4565b906040518097819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1918215610e8b57600192610e6c575b5001610af0565b610e849060203d6020116104c7576104b98183612b21565b505f610e65565b6040513d8e823e3d90fd5b50505050955050505050506020833d602011610eed575b81610eba60209383612b21565b8101031261055c578c8881878e868f8f99828f928f8e918394918492519d9750979450979498505090508b989798610d46565b3d9150610ead565b604051903d90823e3d90fd5b610f199060203d6020116104c7576104b98183612b21565b505f610c5f565b6040513d8f823e3d90fd5b9650505050506020833d602011610f96575b81610f4a60209383612b21565b8101031261076e576020610c508a610c08858f9773ffffffffffffffffffffffffffffffffffffffff610c01610b55848e610f858f96612c52565b9d9750979950505050509350610bd2565b3d9150610f3d565b50604051903d90823e3d90fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152fd5b50828814610adf565b50878614610ad9565b8780fd5b8680fd5b8480fd5b8280fd5b503461076e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611063612a7d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090815460ff8160401c16159167ffffffffffffffff821680159081611217575b600114908161120d575b159081611204575b506111da57818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff95161786556111a5575b506111086135ba565b6111106135ba565b6111186135ba565b61112133612ff5565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000845416178355611151575080f35b7fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff81541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b7fffffffffffffffffffffffffffffffffffffffffffffff00000000000000000016680100000000000000011784555f6110ff565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f6110b6565b303b1591506110ae565b8491506110a4565b503461076e576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a2957611258612a7d565b73ffffffffffffffffffffffffffffffffffffffff9280846024818354169460405195869384927fb4340e6a0000000000000000000000000000000000000000000000000000000084521660048301525afa918215610f9e5781926112f5575b506040519280840190808552835180925280604086019401925b8281106112df5785850386f35b83518716855293810193928101926001016112d2565b61130a9192503d8084833e6105808183612b21565b905f6112b8565b503461076e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611349612a7d565b73ffffffffffffffffffffffffffffffffffffffff80611367612aa0565b169083604051937f0723c9990000000000000000000000000000000000000000000000000000000085528281166004860152818560248183885af1948515610a00578295611516575b50604051947f67e4ac2c0000000000000000000000000000000000000000000000000000000086528286600481885afa95861561150b5783966114ef575b50825b86518110156114eb5780611406859284612d44565b51878352602090600182526040842088611420858d612d44565b51165f52825261143560405f20918254612f30565b9055806114b288611446858d612d44565b51166114528588612d44565b516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a166004820152306024820152604481019190915295869283919082906064820190565b03925af192831561058f576001936114cd575b5050016113f1565b816114e392903d106104c7576104b98183612b21565b505f806114c5565b8380f35b6115049196503d8085833e6105808183612b21565b945f6113ee565b6040513d85823e3d90fd5b61152b9195503d8084833e6105af8183612b21565b935f6113b0565b503461076e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57604051604081019080821067ffffffffffffffff8311176115f4576040918252600581527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602083017f352e302e3000000000000000000000000000000000000000000000000000000081528451958694602086525180928160208801528787015e85828601015201168101030190f35b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b503461076e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611659612a7d565b6024359067ffffffffffffffff91828116809103610a0b577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054938260ff8660401c1691821561176a575b50506111da577fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff68010000000000000000837fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000007fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29773ffffffffffffffffffffffffffffffffffffffff602098167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f55161717169055604051908152a180f35b861610159050825f6116a5565b503461076e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57602073ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005416604051908152f35b503461076e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611820612a7d565b604061182a612aa0565b9273ffffffffffffffffffffffffffffffffffffffff809316815260016020522091165f52602052602060405f2054604051908152f35b503461076e5761188b9061187436612b9c565b939190809591611885821515612eb3565b84613153565b91825115611d17576040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810186905260209573ffffffffffffffffffffffffffffffffffffffff9591878160648188888c165af180156105be57611cfa575b509195835b8551851015611cf157866119158688612d44565b511697604051977f67e4ac2c00000000000000000000000000000000000000000000000000000000895282896004818d5afa98891561150b578399611cd5575b5061196b81611964898b612d44565b5116612d85565b988399845b8251811015611cc657836119848285612d44565b5116848616141580611cb3575b61199d57600101611970565b90508299989793949a506119b091612d44565b5116915b878316918215611c5557848b604051918280927fb2b55d7000000000000000000000000000000000000000000000000000000000825287600483015260249485915afa908115610e8b579083918d91611c24575b5010611ba1578851907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8201918211611b765750611abb8b9c87928d9b9c9d508a145f14611b7057885b6040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8088166004830152808a1660248301526044820187905290911660648201529d8e9283919082906084820190565b03925af19a8b156104ce57889b611b38575b509060019392918a611adf898c612d44565b5116895284918287528b60408b2091165f528652611b0260405f20918254612f30565b905589611b0f888b612d44565b51168852845260408720905f52835260405f20611b2d8a8254612f3d565b905597930193611901565b939291909a508484813d8311611b69575b611b538183612b21565b8101031261055c57600193519a90919293611acd565b503d611b49565b30611a52565b8b7f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b856027608492604051927f08c379a000000000000000000000000000000000000000000000000000000000845260048401528201527f496e73756666696369656e74206c697175696469747920696e20706f6f6c206660448201527f6f722073776170000000000000000000000000000000000000000000000000006064820152fd5b809250888092503d8311611c4e575b611c3d8183612b21565b8101031261055c578290515f611a08565b503d611c33565b606485604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601960248201527f4e6f2076616c6964206e65787420746f6b656e20666f756e64000000000000006044820152fd5b50611cbe8183612d44565b511515611991565b505050969594909791976119b4565b611cea9199503d8085833e6105808183612b21565b975f611955565b50604051838152f35b611d1090883d8a116104c7576104b98183612b21565b505f6118fc565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f20726f75746520666f756e640000000000000000000000000000000000006044820152fd5b503461076e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e5773ffffffffffffffffffffffffffffffffffffffff611dc2612a7d565b611dca6130b6565b167fffffffffffffffffffffffff00000000000000000000000000000000000000005f5416175f5580f35b503461076e57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261076e57611e2c6130b6565b5f73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008054907fffffffffffffffffffffffff000000000000000000000000000000000000000082169055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461076e57611ec236612b9c565b611ed182939495921515612eb3565b81546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528681166024830152602097909290919088908290604490829087165afa9081156105be579083918691612158575b506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018890529116918381169189816064818a875af18015610676578893928b928b9261213b575b506040517f6e81221c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201529181166024830152604482019990995297861660648901528760848189875af196871561058f579089959493929187986120f9575b5091879893916120c29895938289526001885260408920905f52875261204460405f20918254612f30565b905586526001855260408620921691825f52845260405f20612067848254612f3d565b9055846040518097819582947fa9059cbb000000000000000000000000000000000000000000000000000000008452600484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af1908115610ef557506120dc575b50604051908152f35b6120f290833d85116104c7576104b98183612b21565b505f6120d3565b8681979296949950999492993d8311612134575b6121178183612b21565b8101031261055c576120c296899551979891939894909294612019565b503d61210d565b61215190843d86116104c7576104b98183612b21565b505f611fa0565b809250898092503d8311612189575b6121718183612b21565b81010312611023576121838391612c52565b5f611f44565b503d612167565b503461055c576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5773ffffffffffffffffffffffffffffffffffffffff6121de612a7d565b16906040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201528181602481865afa9081156122e6575f9161237b575b506040517f18160ddd0000000000000000000000000000000000000000000000000000000081528281600481875afa9283156122e6575f9361234b575b50506127109081810291818304149015171561231e5781156122f15761228a91606491041015612e4e565b803b1561055c575f80916004604051809481937ff47b45e80000000000000000000000000000000000000000000000000000000083525af180156122e6576122d0575080f35b905067ffffffffffffffff81116115f457604052005b6040513d5f823e3d90fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b9080929350813d8311612374575b6123638183612b21565b8101031261055c5751905f8061225f565b503d612359565b90508181813d83116123a1575b6123928183612b21565b8101031261055c57515f612222565b503d612388565b3461055c575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361243d5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60046040517fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c57612499612a7d565b602490813567ffffffffffffffff811161055c573660238201121561055c5780600401356124c681612b62565b926124d46040519485612b21565b818452602091828501933687838301011161055c57815f928886930187378601015273ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803014908115612745575b5061243d576125466130b6565b8116936040517f52d1902d0000000000000000000000000000000000000000000000000000000081528381600481895afa5f9181612716575b506125b4578686604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc918281036126e85750843b156126b95750817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a281511561268557505f61267a9481925190845af4903d1561267c573d61265e81612b62565b9061266c6040519283612b21565b81525f81943d92013e613613565b005b60609250613613565b93505050503461269157005b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b82604051907f4c9c8ce30000000000000000000000000000000000000000000000000000000082526004820152fd5b604051907faa1d49a40000000000000000000000000000000000000000000000000000000082526004820152fd5b9091508481813d831161273e575b61272e8183612b21565b8101031261055c5751908861257f565b503d612724565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141587612539565b3461055c5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c576127aa612a7d565b6127b2612aa0565b5f546040517f2d5e94a700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301528381166024830152602094919285908490604490829085165afa9081156122e65785935f926128c8575b506040517f4aa0665200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff938416600482015294909216602485015260448035908501528391829081606481015b0392165afa9081156122e6575f9161289b5750604051908152f35b90508181813d83116128c1575b6128b28183612b21565b8101031261055c5751826120d3565b503d6128a8565b8481959293503d83116128fe575b6128e08183612b21565b8101031261055c57612880936128f68694612c52565b919094612821565b503d6128d6565b3461055c575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b3461055c5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5761298c612a7d565b612994612aa0565b9073ffffffffffffffffffffffffffffffffffffffff8091165f52600160205260405f2091165f52602052602060405f2054604051908152f35b3461055c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c57610b05612a10612a0b612a7d565b612d85565b60405191829182612ae6565b3461055c575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261055c5760209067ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054168152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b60209060206040818301928281528551809452019301915f5b828110612b0d575050505090565b835185529381019392810192600101612aff565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176115f457604052565b67ffffffffffffffff81116115f457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc608091011261055c5773ffffffffffffffffffffffffffffffffffffffff90600435828116810361055c5791602435818116810361055c579160443591606435908116810361055c5790565b9181601f8401121561055c5782359167ffffffffffffffff831161055c576020808501948460051b01011161055c57565b67ffffffffffffffff81116115f45760051b60200190565b519073ffffffffffffffffffffffffffffffffffffffff8216820361055c57565b602090818184031261055c5780519067ffffffffffffffff821161055c57019180601f8401121561055c578251612ca981612c3a565b93612cb76040519586612b21565b818552838086019260051b82010192831161055c578301905b828210612cde575050505090565b838091612cea84612c52565b815201910190612cd0565b90612cff82612c3a565b612d0c6040519182612b21565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0612d3a8294612c3a565b0190602036910137565b8051821015612d585760209160051b010190565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b9073ffffffffffffffffffffffffffffffffffffffff809216604092604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481865afa9182156122e6575f92612e32575b50612de98251612cf5565b925f5b8351811015612e2957600190825f526020828152885f209085612e0f8489612d44565b51165f5252875f2054612e228288612d44565b5201612dec565b50929450505050565b612e479192503d805f833e6105808183612b21565b905f612dde565b15612e5557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e63650000000000000000000000006044820152fd5b15612eba57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b9081602091031261055c5751801515810361055c5790565b9190820180921161231e57565b9190820391821161231e57565b602090818184031261055c5780519067ffffffffffffffff821161055c57019180601f8401121561055c578251612f8081612c3a565b93612f8e6040519586612b21565b818552838086019260051b82010192831161055c578301905b828210612fb5575050505090565b81518152908301908301612fa7565b9190811015612d585760051b0190565b3573ffffffffffffffffffffffffffffffffffffffff8116810361055c5790565b73ffffffffffffffffffffffffffffffffffffffff809116908115613086577f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300805490837fffffffffffffffffffffffff00000000000000000000000000000000000000008316179055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b60246040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081525f6004820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300541633036130f657565b60246040517f118cdaa7000000000000000000000000000000000000000000000000000000008152336004820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461231e5760010190565b73ffffffffffffffffffffffffffffffffffffffff60045f82815416604051928380927fd88ff1f40000000000000000000000000000000000000000000000000000000082525afa9081156122e6575f916133e0575b508051936131b685612cf5565b915f936131c287612c3a565b926131d06040519485612b21565b8784527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe06131fd89612c3a565b0136602086013761320d88612cf5565b965f600191895115612d5857841660208a01525b81811061325a5750505050505050505050506040516020810181811067ffffffffffffffff8211176115f4576040525f81525f36813790565b8361326e61326783613126565b928b612d44565b51168484168114613399575f5b8b8110613289575050613221565b6132938189612d44565b51156132a2575b60010161327b565b856132ad8289612d44565b5116604051907f67e4ac2c0000000000000000000000000000000000000000000000000000000082525f82600481845afa9081156122e6578f85935f9361337d575b50836132fb81856133fa565b928361336b575b505050613311575b505061329a565b9061331b9161350d565b86613326838a612d44565b51166133318c613126565b9b61333c908c612d44565b52868c61334887613126565b9661335291612d44565b911690526133608189612d44565b60019052815f61330a565b6133759350613447565b8f835f613302565b6133929193503d805f833e6105808183612b21565b915f6132ef565b5050505094505050935091506133ae82612cf5565b925f5b8381106133bf575050505090565b80836133cd60019385612d44565b51166133d98288612d44565b52016133b1565b6133f491503d805f833e6105808183612b21565b5f6131a9565b905f5b82518110156134405773ffffffffffffffffffffffffffffffffffffffff806134268386612d44565b511690831614613438576001016133fd565b505050600190565b5050505f90565b6004929173ffffffffffffffffffffffffffffffffffffffff809216915f61346e84612d85565b93604051968780927f67e4ac2c0000000000000000000000000000000000000000000000000000000082525afa9485156122e6575f956134f1575b505f5b85518110156134e757816134c08288612d44565b5116828416146134d2576001016134ac565b929150506134e1929350612d44565b51101590565b5050505050505f90565b6135069195503d805f833e6105808183612b21565b935f6134a9565b905f5b825181101561355c5773ffffffffffffffffffffffffffffffffffffffff806135398386612d44565b51168184160361354c5750600101613510565b926135579250612d44565b511690565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f546f6b656e206e6f7420666f756e6420696e20706f6f6c0000000000000000006044820152fd5b60ff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460401c16156135e957565b60046040517fd7e6bcf8000000000000000000000000000000000000000000000000000000008152fd5b90613652575080511561362857805190602001fd5b60046040517f1425ea42000000000000000000000000000000000000000000000000000000008152fd5b815115806136aa575b613663575090565b60249073ffffffffffffffffffffffffffffffffffffffff604051917f9996b315000000000000000000000000000000000000000000000000000000008352166004820152fd5b50803b1561365b56fea2646970667358221220623ed6678501a6aed735ec557d4bf3e4f2fbd7fe940f1f38395c9c0fc10d3ad564736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP1 PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x2A1C JUMPI POP DUP1 PUSH4 0x3E99C1E4 EQ PUSH2 0x29CE JUMPI DUP1 PUSH4 0x4056C37F EQ PUSH2 0x2955 JUMPI DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x2905 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x2773 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2467 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x23A8 JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x2190 JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x1EB3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DF5 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x1D75 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1861 JUMPI DUP1 PUSH4 0x8628991E EQ PUSH2 0x17E8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1777 JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x1621 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1532 JUMPI DUP1 PUSH4 0xAD414263 EQ PUSH2 0x1311 JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0x121F JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x102B JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0xA2D JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x7BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x771 JUMPI PUSH4 0xF31ABCC4 EQ PUSH2 0x11B JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH2 0x156 PUSH2 0x2AA0 JUMP JUMPDEST PUSH2 0x15E PUSH2 0x2AC3 JUMP JUMPDEST SWAP2 DUP4 ISZERO PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 SWAP4 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 DUP7 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI SWAP1 DUP9 SWAP2 DUP7 SWAP2 PUSH2 0x6DF JUMPI JUMPDEST POP LT PUSH2 0x681 JUMPI PUSH1 0x40 MLOAD SWAP5 PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 DUP8 MSTORE CALLER PUSH1 0x4 DUP9 ADD MSTORE PUSH1 0x24 SWAP7 DUP9 DUP2 DUP10 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x676 JUMPI SWAP1 DUP10 SWAP3 SWAP2 DUP9 SWAP2 PUSH2 0x643 JUMPI JUMPDEST POP SWAP3 PUSH2 0x22F DUP3 PUSH2 0x28C SWAP6 LT ISZERO PUSH2 0x2E4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 DUP8 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI DUP6 SWAP2 PUSH2 0x626 JUMPI JUMPDEST POP ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH32 0x89AFCB4400000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP2 DUP5 AND PUSH1 0x4 DUP5 ADD MSTORE DUP5 DUP4 DUP8 DUP2 DUP4 DUP6 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x5BE JUMPI DUP6 SWAP4 PUSH2 0x59A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP6 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x58F JUMPI DUP7 SWAP3 PUSH2 0x56B JUMPI JUMPDEST POP DUP6 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x567 JUMPI DUP4 PUSH2 0x340 DUP3 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP10 DUP12 DUP11 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI DUP9 SWAP2 PUSH2 0x536 JUMPI JUMPDEST POP PUSH2 0x36F DUP3 DUP8 PUSH2 0x2D44 JUMP JUMPDEST MLOAD GT PUSH2 0x4D9 JUMPI PUSH2 0x37F DUP2 DUP7 PUSH2 0x2D44 JUMP JUMPDEST MLOAD DUP3 DUP9 MSTORE PUSH1 0x1 DUP11 MSTORE PUSH1 0x40 DUP9 KECCAK256 DUP6 PUSH2 0x396 DUP5 DUP8 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP11 MSTORE PUSH2 0x3AB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x424 DUP10 DUP6 PUSH2 0x3BC DUP5 DUP8 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x3C8 DUP5 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD SWAP1 DUP10 DUP12 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x4CE JUMPI DUP9 SWAP2 PUSH2 0x4A1 JUMPI JUMPDEST POP ISZERO PUSH2 0x444 JUMPI PUSH1 0x1 ADD PUSH2 0x32C JUMP JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x15 DUP11 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x4173736574207472616E73666572206661696C65640000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x4C1 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x4C7 JUMPI JUMPDEST PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F18 JUMP JUMPDEST PUSH0 PUSH2 0x436 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP10 PUSH1 0x16 DUP11 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204C697175696469747900000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x560 JUMPI JUMPDEST PUSH2 0x54D DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD PUSH0 PUSH2 0x364 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x543 JUMP JUMPDEST DUP7 DUP1 RETURN JUMPDEST PUSH2 0x588 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP9 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2C73 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x329 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP9 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x5B7 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x5AF DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F4A JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0xF DUP8 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x63D SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST PUSH0 PUSH2 0x2A0 JUMP JUMPDEST DUP4 DUP2 SWAP5 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x66F JUMPI JUMPDEST PUSH2 0x65A DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI SWAP1 MLOAD DUP9 SWAP2 SWAP1 PUSH2 0x22F PUSH2 0x21E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x709 JUMPI JUMPDEST PUSH2 0x6F8 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP8 SWAP1 MLOAD PUSH0 PUSH2 0x1CD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x7B9 PUSH2 0x7AC PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x30B6 JUMP JUMPDEST PUSH2 0x2FF5 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x80C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP1 DUP3 PUSH2 0x816 PUSH2 0x2AA0 JUMP JUMPDEST PUSH2 0x81E PUSH2 0x2AC3 JUMP JUMPDEST SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 PUSH1 0x40 MLOAD PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI DUP6 SWAP2 PUSH2 0xA0F JUMPI JUMPDEST POP DUP5 SWAP6 SWAP5 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x94D JUMPI SWAP6 DUP7 DUP4 PUSH2 0x891 DUP4 SWAP9 SWAP10 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x89E DUP3 DUP8 DUP12 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD DUP8 DUP5 MSTORE PUSH2 0x911 PUSH1 0x20 SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP3 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x8C6 DUP3 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x4CE JUMPI PUSH1 0x1 SWAP4 PUSH2 0x92F JUMPI JUMPDEST POP POP ADD SWAP6 SWAP5 SWAP6 PUSH2 0x879 JUMP JUMPDEST DUP2 PUSH2 0x945 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x924 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP6 PUSH32 0xDE836EBD00000000000000000000000000000000000000000000000000000000 DUP8 MSTORE AND PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP7 ADD MSTORE DUP1 PUSH1 0x44 DUP7 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xA0B JUMPI PUSH1 0x20 SWAP4 PUSH1 0x64 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH2 0x9D8 JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9F9 JUMPI JUMPDEST PUSH2 0x9EE DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP1 RETURN JUMPDEST POP RETURNDATASIZE PUSH2 0x9E4 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0xA23 SWAP2 POP RETURNDATASIZE DUP1 DUP8 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST PUSH0 PUSH2 0x874 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x80 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1027 JUMPI PUSH2 0xA7E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x1023 JUMPI PUSH2 0xA97 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP2 SWAP1 SWAP4 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x101F JUMPI PUSH2 0xAB2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP6 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x101B JUMPI PUSH2 0xACD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2C09 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 DUP6 DUP2 EQ DUP1 PUSH2 0x1012 JUMPI JUMPDEST DUP1 PUSH2 0x1009 JUMPI JUMPDEST ISZERO PUSH2 0xFAB JUMPI PUSH2 0xAED DUP2 PUSH2 0x2CF5 JUMP JUMPDEST SWAP8 DUP10 JUMPDEST DUP3 DUP2 LT PUSH2 0xB09 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0xB05 DUP13 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0xB23 PUSH2 0xB1B PUSH2 0xBBB SWAP4 DUP6 DUP12 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x2EB3 JUMP JUMPDEST DUP12 PUSH1 0x20 DUP11 DUP13 PUSH2 0xB61 PUSH2 0xB55 DUP7 PUSH2 0xB5A PUSH2 0xB55 DUP3 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP12 SLOAD AND SWAP8 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0x2FD4 JUMP JUMPDEST SWAP5 DUP13 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP5 DUP6 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xF9E JUMPI DUP5 DUP7 DUP14 DUP13 SWAP4 DUP6 SWAP8 PUSH2 0xF2B JUMPI JUMPDEST POP DUP6 PUSH2 0xC50 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC01 PUSH2 0xB55 DUP5 PUSH1 0x20 SWAP10 SWAP8 PUSH2 0xC08 SWAP8 PUSH2 0x2FC4 JUMP JUMPDEST AND SWAP4 PUSH2 0x2FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xF20 JUMPI PUSH2 0xF01 JUMPI JUMPDEST POP PUSH2 0xC6B DUP2 DUP6 DUP13 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0xC74 SWAP1 PUSH2 0x2FD4 JUMP JUMPDEST SWAP2 DUP13 PUSH2 0xC81 DUP4 DUP13 DUP10 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0xC8A SWAP1 PUSH2 0x2FD4 JUMP JUMPDEST PUSH2 0xC95 DUP5 DUP8 DUP14 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0xCA2 DUP6 DUP12 DUP14 PUSH2 0x2FC4 JUMP JUMPDEST PUSH2 0xCAB SWAP1 PUSH2 0x2FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP8 DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP8 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 AND PUSH1 0x64 DUP6 ADD MSTORE DUP4 DUP1 PUSH1 0x84 DUP2 ADD SUB DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP4 GAS SWAP5 PUSH1 0x20 SWAP6 CALL SWAP1 DUP14 DUP3 ISZERO PUSH2 0xEF5 JUMPI DUP9 DUP13 DUP10 DUP16 SWAP5 DUP11 DUP16 SWAP7 DUP16 SWAP8 DUP13 SWAP1 DUP9 SWAP11 PUSH2 0xE96 JUMPI JUMPDEST PUSH2 0xE52 SWAP13 POP DUP12 PUSH2 0xDF9 SWAP8 PUSH2 0xB55 SWAP8 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP16 SWAP15 SWAP14 SWAP13 SWAP9 SWAP10 DUP6 SWAP11 DUP3 SWAP10 DUP4 PUSH2 0xDA7 PUSH2 0xB55 DUP11 PUSH2 0xD8F DUP2 PUSH2 0xDF2 SWAP16 PUSH2 0xB55 SWAP16 PUSH2 0x2FC4 JUMP JUMPDEST CALLDATALOAD SWAP6 DUP5 DUP9 AND DUP11 MSTORE PUSH1 0x40 PUSH1 0x1 SWAP11 PUSH1 0x20 DUP13 SWAP1 MSTORE KECCAK256 SWAP6 PUSH2 0x2FC4 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xDBC PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE AND DUP13 MSTORE DUP15 MSTORE PUSH1 0x40 DUP12 KECCAK256 DUP7 PUSH2 0xDD6 PUSH2 0xB55 DUP7 DUP7 DUP7 PUSH2 0x2FC4 JUMP JUMPDEST AND PUSH0 MSTORE DUP15 MSTORE DUP13 PUSH2 0xDEB PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x2FC4 JUMP JUMPDEST AND SWAP6 PUSH2 0x2FC4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0xE8B JUMPI PUSH1 0x1 SWAP3 PUSH2 0xE6C JUMPI JUMPDEST POP ADD PUSH2 0xAF0 JUMP JUMPDEST PUSH2 0xE84 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0xE65 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP15 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xEED JUMPI JUMPDEST DUP2 PUSH2 0xEBA PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP13 DUP9 DUP2 DUP8 DUP15 DUP7 DUP16 DUP16 SWAP10 DUP3 DUP16 SWAP3 DUP16 DUP15 SWAP2 DUP4 SWAP5 SWAP2 DUP5 SWAP3 MLOAD SWAP14 SWAP8 POP SWAP8 SWAP5 POP SWAP8 SWAP5 SWAP9 POP POP SWAP1 POP DUP12 SWAP9 SWAP8 SWAP9 PUSH2 0xD46 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0xF19 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP16 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP7 POP POP POP POP POP PUSH1 0x20 DUP4 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xF96 JUMPI JUMPDEST DUP2 PUSH2 0xF4A PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x76E JUMPI PUSH1 0x20 PUSH2 0xC50 DUP11 PUSH2 0xC08 DUP6 DUP16 SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xC01 PUSH2 0xB55 DUP5 DUP15 PUSH2 0xF85 DUP16 SWAP7 PUSH2 0x2C52 JUMP JUMPDEST SWAP14 SWAP8 POP SWAP8 SWAP10 POP POP POP POP POP SWAP4 POP PUSH2 0xBD2 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xF3D JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP3 DUP9 EQ PUSH2 0xADF JUMP JUMPDEST POP DUP8 DUP7 EQ PUSH2 0xAD9 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1063 PUSH2 0x2A7D JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 DUP2 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x1217 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x120D JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x1204 JUMPI JUMPDEST POP PUSH2 0x11DA JUMPI DUP2 DUP4 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 AND OR DUP7 SSTORE PUSH2 0x11A5 JUMPI JUMPDEST POP PUSH2 0x1108 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1110 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1118 PUSH2 0x35BA JUMP JUMPDEST PUSH2 0x1121 CALLER PUSH2 0x2FF5 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP5 SLOAD AND OR DUP4 SSTORE PUSH2 0x1151 JUMPI POP DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 AND PUSH9 0x10000000000000001 OR DUP5 SSTORE PUSH0 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP ISZERO PUSH0 PUSH2 0x10B6 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x10AE JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0x10A4 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0xA29 JUMPI PUSH2 0x1258 PUSH2 0x2A7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP1 DUP5 PUSH1 0x24 DUP2 DUP4 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH32 0xB4340E6A00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE AND PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xF9E JUMPI DUP2 SWAP3 PUSH2 0x12F5 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP3 DUP1 DUP5 ADD SWAP1 DUP1 DUP6 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE DUP1 PUSH1 0x40 DUP7 ADD SWAP5 ADD SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0x12DF JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x12D2 JUMP JUMPDEST PUSH2 0x130A SWAP2 SWAP3 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x12B8 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1349 PUSH2 0x2A7D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x1367 PUSH2 0x2AA0 JUMP JUMPDEST AND SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP4 PUSH32 0x723C99900000000000000000000000000000000000000000000000000000000 DUP6 MSTORE DUP3 DUP2 AND PUSH1 0x4 DUP7 ADD MSTORE DUP2 DUP6 PUSH1 0x24 DUP2 DUP4 DUP9 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0xA00 JUMPI DUP3 SWAP6 PUSH2 0x1516 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP5 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE DUP3 DUP7 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x150B JUMPI DUP4 SWAP7 PUSH2 0x14EF JUMPI JUMPDEST POP DUP3 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x14EB JUMPI DUP1 PUSH2 0x1406 DUP6 SWAP3 DUP5 PUSH2 0x2D44 JUMP JUMPDEST MLOAD DUP8 DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP9 PUSH2 0x1420 DUP6 DUP14 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP3 MSTORE PUSH2 0x1435 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH2 0x14B2 DUP9 PUSH2 0x1446 DUP6 DUP14 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x1452 DUP6 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP11 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x58F JUMPI PUSH1 0x1 SWAP4 PUSH2 0x14CD JUMPI JUMPDEST POP POP ADD PUSH2 0x13F1 JUMP JUMPDEST DUP2 PUSH2 0x14E3 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 DUP1 PUSH2 0x14C5 JUMP JUMPDEST DUP4 DUP1 RETURN JUMPDEST PUSH2 0x1504 SWAP2 SWAP7 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x13EE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x152B SWAP2 SWAP6 POP RETURNDATASIZE DUP1 DUP5 DUP4 RETURNDATACOPY PUSH2 0x5AF DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x13B0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 SWAP2 DUP3 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 DUP4 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP5 MLOAD SWAP6 DUP7 SWAP5 PUSH1 0x20 DUP7 MSTORE MLOAD DUP1 SWAP3 DUP2 PUSH1 0x20 DUP9 ADD MSTORE DUP8 DUP8 ADD MCOPY DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1659 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0xA0B JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD SWAP4 DUP3 PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x176A JUMPI JUMPDEST POP POP PUSH2 0x11DA JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFF PUSH9 0x10000000000000000 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000 PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP9 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE AND OR OR AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST DUP7 AND LT ISZERO SWAP1 POP DUP3 PUSH0 PUSH2 0x16A5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1820 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x40 PUSH2 0x182A PUSH2 0x2AA0 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x188B SWAP1 PUSH2 0x1874 CALLDATASIZE PUSH2 0x2B9C JUMP JUMPDEST SWAP4 SWAP2 SWAP1 DUP1 SWAP6 SWAP2 PUSH2 0x1885 DUP3 ISZERO ISZERO PUSH2 0x2EB3 JUMP JUMPDEST DUP5 PUSH2 0x3153 JUMP JUMPDEST SWAP2 DUP3 MLOAD ISZERO PUSH2 0x1D17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x20 SWAP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 SWAP2 DUP8 DUP2 PUSH1 0x64 DUP2 DUP9 DUP9 DUP13 AND GAS CALL DUP1 ISZERO PUSH2 0x5BE JUMPI PUSH2 0x1CFA JUMPI JUMPDEST POP SWAP2 SWAP6 DUP4 JUMPDEST DUP6 MLOAD DUP6 LT ISZERO PUSH2 0x1CF1 JUMPI DUP7 PUSH2 0x1915 DUP7 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP8 PUSH1 0x40 MLOAD SWAP8 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE DUP3 DUP10 PUSH1 0x4 DUP2 DUP14 GAS STATICCALL SWAP9 DUP10 ISZERO PUSH2 0x150B JUMPI DUP4 SWAP10 PUSH2 0x1CD5 JUMPI JUMPDEST POP PUSH2 0x196B DUP2 PUSH2 0x1964 DUP10 DUP12 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x2D85 JUMP JUMPDEST SWAP9 DUP4 SWAP10 DUP5 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1CC6 JUMPI DUP4 PUSH2 0x1984 DUP3 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP5 DUP7 AND EQ ISZERO DUP1 PUSH2 0x1CB3 JUMPI JUMPDEST PUSH2 0x199D JUMPI PUSH1 0x1 ADD PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP DUP3 SWAP10 SWAP9 SWAP8 SWAP4 SWAP5 SWAP11 POP PUSH2 0x19B0 SWAP2 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP2 JUMPDEST DUP8 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0x1C55 JUMPI DUP5 DUP12 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH32 0xB2B55D7000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP8 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 SWAP5 DUP6 SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xE8B JUMPI SWAP1 DUP4 SWAP2 DUP14 SWAP2 PUSH2 0x1C24 JUMPI JUMPDEST POP LT PUSH2 0x1BA1 JUMPI DUP9 MLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1B76 JUMPI POP PUSH2 0x1ABB DUP12 SWAP13 DUP8 SWAP3 DUP14 SWAP12 SWAP13 SWAP14 POP DUP11 EQ PUSH0 EQ PUSH2 0x1B70 JUMPI DUP9 JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP11 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP14 DUP15 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x84 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP11 DUP12 ISZERO PUSH2 0x4CE JUMPI DUP9 SWAP12 PUSH2 0x1B38 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 DUP11 PUSH2 0x1ADF DUP10 DUP13 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP10 MSTORE DUP5 SWAP2 DUP3 DUP8 MSTORE DUP12 PUSH1 0x40 DUP12 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP7 MSTORE PUSH2 0x1B02 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE DUP10 PUSH2 0x1B0F DUP9 DUP12 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP9 MSTORE DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP1 PUSH0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1B2D DUP11 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE SWAP8 SWAP4 ADD SWAP4 PUSH2 0x1901 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP11 POP DUP5 DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1B69 JUMPI JUMPDEST PUSH2 0x1B53 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI PUSH1 0x1 SWAP4 MLOAD SWAP11 SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x1ACD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1B49 JUMP JUMPDEST ADDRESS PUSH2 0x1A52 JUMP JUMPDEST DUP12 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP6 PUSH1 0x27 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920696E20706F6F6C2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F72207377617000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x1C4E JUMPI JUMPDEST PUSH2 0x1C3D DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI DUP3 SWAP1 MLOAD PUSH0 PUSH2 0x1A08 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x64 DUP6 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C6964206E65787420746F6B656E20666F756E6400000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH2 0x1CBE DUP2 DUP4 PUSH2 0x2D44 JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH2 0x1991 JUMP JUMPDEST POP POP POP SWAP7 SWAP6 SWAP5 SWAP1 SWAP8 SWAP2 SWAP8 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0x1CEA SWAP2 SWAP10 POP RETURNDATASIZE DUP1 DUP6 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP8 PUSH0 PUSH2 0x1955 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1D10 SWAP1 DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20726F75746520666F756E64000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1DC2 PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x1DCA PUSH2 0x30B6 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH0 SLOAD AND OR PUSH0 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x76E JUMPI PUSH2 0x1E2C PUSH2 0x30B6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x76E JUMPI PUSH2 0x1EC2 CALLDATASIZE PUSH2 0x2B9C JUMP JUMPDEST PUSH2 0x1ED1 DUP3 SWAP4 SWAP5 SWAP6 SWAP3 ISZERO ISZERO PUSH2 0x2EB3 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP8 SWAP1 SWAP3 SWAP1 SWAP2 SWAP1 DUP9 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x5BE JUMPI SWAP1 DUP4 SWAP2 DUP7 SWAP2 PUSH2 0x2158 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE SWAP2 AND SWAP2 DUP4 DUP2 AND SWAP2 DUP10 DUP2 PUSH1 0x64 DUP2 DUP11 DUP8 GAS CALL DUP1 ISZERO PUSH2 0x676 JUMPI DUP9 SWAP4 SWAP3 DUP12 SWAP3 DUP12 SWAP3 PUSH2 0x213B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x6E81221C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP10 SWAP1 SWAP10 MSTORE SWAP8 DUP7 AND PUSH1 0x64 DUP10 ADD MSTORE DUP8 PUSH1 0x84 DUP2 DUP10 DUP8 GAS CALL SWAP7 DUP8 ISZERO PUSH2 0x58F JUMPI SWAP1 DUP10 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 DUP8 SWAP9 PUSH2 0x20F9 JUMPI JUMPDEST POP SWAP2 DUP8 SWAP9 SWAP4 SWAP2 PUSH2 0x20C2 SWAP9 SWAP6 SWAP4 DUP3 DUP10 MSTORE PUSH1 0x1 DUP9 MSTORE PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH0 MSTORE DUP8 MSTORE PUSH2 0x2044 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2F30 JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 DUP7 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x2067 DUP5 DUP3 SLOAD PUSH2 0x2F3D JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP3 ADD SWAP6 AND DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xEF5 JUMPI POP PUSH2 0x20DC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x20F2 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0x20D3 JUMP JUMPDEST DUP7 DUP2 SWAP8 SWAP3 SWAP7 SWAP5 SWAP10 POP SWAP10 SWAP5 SWAP3 SWAP10 RETURNDATASIZE DUP4 GT PUSH2 0x2134 JUMPI JUMPDEST PUSH2 0x2117 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI PUSH2 0x20C2 SWAP7 DUP10 SWAP6 MLOAD SWAP8 SWAP9 SWAP2 SWAP4 SWAP9 SWAP5 SWAP1 SWAP3 SWAP5 PUSH2 0x2019 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x210D JUMP JUMPDEST PUSH2 0x2151 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x4C7 JUMPI PUSH2 0x4B9 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST POP PUSH0 PUSH2 0x1FA0 JUMP JUMPDEST DUP1 SWAP3 POP DUP10 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x2189 JUMPI JUMPDEST PUSH2 0x2171 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1023 JUMPI PUSH2 0x2183 DUP4 SWAP2 PUSH2 0x2C52 JUMP JUMPDEST PUSH0 PUSH2 0x1F44 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2167 JUMP JUMPDEST POP CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x20 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x21DE PUSH2 0x2A7D JUMP JUMPDEST AND SWAP1 PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP2 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP2 PUSH2 0x237B JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP2 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP4 PUSH2 0x234B JUMPI JUMPDEST POP POP PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x231E JUMPI DUP2 ISZERO PUSH2 0x22F1 JUMPI PUSH2 0x228A SWAP2 PUSH1 0x64 SWAP2 DIV LT ISZERO PUSH2 0x2E4E JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x55C JUMPI PUSH0 DUP1 SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH32 0xF47B45E800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE GAS CALL DUP1 ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22D0 JUMPI POP DUP1 RETURN JUMPDEST SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 DUP1 SWAP3 SWAP4 POP DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x2374 JUMPI JUMPDEST PUSH2 0x2363 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD SWAP1 PUSH0 DUP1 PUSH2 0x225F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2359 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x23A1 JUMPI JUMPDEST PUSH2 0x2392 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD PUSH0 PUSH2 0x2222 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2388 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x243D JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0x2499 PUSH2 0x2A7D JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x55C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x24C6 DUP2 PUSH2 0x2B62 JUMP JUMPDEST SWAP3 PUSH2 0x24D4 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2B21 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP6 ADD SWAP4 CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0x55C JUMPI DUP2 PUSH0 SWAP3 DUP9 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP7 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x0 AND DUP1 ADDRESS EQ SWAP1 DUP2 ISZERO PUSH2 0x2745 JUMPI JUMPDEST POP PUSH2 0x243D JUMPI PUSH2 0x2546 PUSH2 0x30B6 JUMP JUMPDEST DUP2 AND SWAP4 PUSH1 0x40 MLOAD PUSH32 0x52D1902D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x2716 JUMPI JUMPDEST POP PUSH2 0x25B4 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 SWAP1 DUP8 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x26E8 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x26B9 JUMPI POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x2685 JUMPI POP PUSH0 PUSH2 0x267A SWAP5 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x267C JUMPI RETURNDATASIZE PUSH2 0x265E DUP2 PUSH2 0x2B62 JUMP JUMPDEST SWAP1 PUSH2 0x266C PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x3613 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x3613 JUMP JUMPDEST SWAP4 POP POP POP POP CALLVALUE PUSH2 0x2691 JUMPI STOP JUMPDEST DUP1 PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 SWAP3 MSTORE REVERT JUMPDEST DUP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x273E JUMPI JUMPDEST PUSH2 0x272E DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD SWAP1 DUP9 PUSH2 0x257F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2724 JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP8 PUSH2 0x2539 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0x27AA PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x27B2 PUSH2 0x2AA0 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2D5E94A700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP3 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI DUP6 SWAP4 PUSH0 SWAP3 PUSH2 0x28C8 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4AA0665200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD SWAP1 DUP6 ADD MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP2 PUSH2 0x289B JUMPI POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x28C1 JUMPI JUMPDEST PUSH2 0x28B2 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI MLOAD DUP3 PUSH2 0x20D3 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28A8 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x28FE JUMPI JUMPDEST PUSH2 0x28E0 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x55C JUMPI PUSH2 0x2880 SWAP4 PUSH2 0x28F6 DUP7 SWAP5 PUSH2 0x2C52 JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x2821 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x28D6 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH0 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0x298C PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x2994 PUSH2 0x2AA0 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH2 0xB05 PUSH2 0x2A10 PUSH2 0x2A0B PUSH2 0x2A7D JUMP JUMPDEST PUSH2 0x2D85 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2AE6 JUMP JUMPDEST CALLVALUE PUSH2 0x55C JUMPI PUSH0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x55C JUMPI PUSH1 0x20 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2B0D JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2AFF JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x80 SWAP2 ADD SLT PUSH2 0x55C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x55C JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x15F4 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x55C JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x55C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55C JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP3 MLOAD PUSH2 0x2CA9 DUP2 PUSH2 0x2C3A JUMP JUMPDEST SWAP4 PUSH2 0x2CB7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2B21 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x55C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2CDE JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2CEA DUP5 PUSH2 0x2C52 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x2CD0 JUMP JUMPDEST SWAP1 PUSH2 0x2CFF DUP3 PUSH2 0x2C3A JUMP JUMPDEST PUSH2 0x2D0C PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2B21 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x2D3A DUP3 SWAP5 PUSH2 0x2C3A JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND PUSH1 0x40 SWAP3 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP3 PUSH2 0x2E32 JUMPI JUMPDEST POP PUSH2 0x2DE9 DUP3 MLOAD PUSH2 0x2CF5 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2E29 JUMPI PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE DUP9 PUSH0 KECCAK256 SWAP1 DUP6 PUSH2 0x2E0F DUP5 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP8 PUSH0 KECCAK256 SLOAD PUSH2 0x2E22 DUP3 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MSTORE ADD PUSH2 0x2DEC JUMP JUMPDEST POP SWAP3 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH2 0x2E47 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x2DDE JUMP JUMPDEST ISZERO PUSH2 0x2E55 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST ISZERO PUSH2 0x2EBA JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x55C JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x55C JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x231E JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x231E JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x55C JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x55C JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x55C JUMPI DUP3 MLOAD PUSH2 0x2F80 DUP2 PUSH2 0x2C3A JUMP JUMPDEST SWAP4 PUSH2 0x2F8E PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2B21 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x55C JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2FB5 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2FA7 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2D58 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x55C JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3086 JUMPI PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD SWAP1 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP4 AND OR SWAP1 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD AND CALLER SUB PUSH2 0x30F6 JUMPI JUMP JUMPDEST PUSH1 0x24 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x231E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH0 DUP3 DUP2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0xD88FF1F400000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP2 PUSH2 0x33E0 JUMPI JUMPDEST POP DUP1 MLOAD SWAP4 PUSH2 0x31B6 DUP6 PUSH2 0x2CF5 JUMP JUMPDEST SWAP2 PUSH0 SWAP4 PUSH2 0x31C2 DUP8 PUSH2 0x2C3A JUMP JUMPDEST SWAP3 PUSH2 0x31D0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2B21 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x31FD DUP10 PUSH2 0x2C3A JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH2 0x320D DUP9 PUSH2 0x2CF5 JUMP JUMPDEST SWAP7 PUSH0 PUSH1 0x1 SWAP2 DUP10 MLOAD ISZERO PUSH2 0x2D58 JUMPI DUP5 AND PUSH1 0x20 DUP11 ADD MSTORE JUMPDEST DUP2 DUP2 LT PUSH2 0x325A JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x15F4 JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x326E PUSH2 0x3267 DUP4 PUSH2 0x3126 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP5 DUP5 AND DUP2 EQ PUSH2 0x3399 JUMPI PUSH0 JUMPDEST DUP12 DUP2 LT PUSH2 0x3289 JUMPI POP POP PUSH2 0x3221 JUMP JUMPDEST PUSH2 0x3293 DUP2 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x32A2 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x327B JUMP JUMPDEST DUP6 PUSH2 0x32AD DUP3 DUP10 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH0 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x22E6 JUMPI DUP16 DUP6 SWAP4 PUSH0 SWAP4 PUSH2 0x337D JUMPI JUMPDEST POP DUP4 PUSH2 0x32FB DUP2 DUP6 PUSH2 0x33FA JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x336B JUMPI JUMPDEST POP POP POP PUSH2 0x3311 JUMPI JUMPDEST POP POP PUSH2 0x329A JUMP JUMPDEST SWAP1 PUSH2 0x331B SWAP2 PUSH2 0x350D JUMP JUMPDEST DUP7 PUSH2 0x3326 DUP4 DUP11 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x3331 DUP13 PUSH2 0x3126 JUMP JUMPDEST SWAP12 PUSH2 0x333C SWAP1 DUP13 PUSH2 0x2D44 JUMP JUMPDEST MSTORE DUP7 DUP13 PUSH2 0x3348 DUP8 PUSH2 0x3126 JUMP JUMPDEST SWAP7 PUSH2 0x3352 SWAP2 PUSH2 0x2D44 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x3360 DUP2 DUP10 PUSH2 0x2D44 JUMP JUMPDEST PUSH1 0x1 SWAP1 MSTORE DUP2 PUSH0 PUSH2 0x330A JUMP JUMPDEST PUSH2 0x3375 SWAP4 POP PUSH2 0x3447 JUMP JUMPDEST DUP16 DUP4 PUSH0 PUSH2 0x3302 JUMP JUMPDEST PUSH2 0x3392 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x32EF JUMP JUMPDEST POP POP POP POP SWAP5 POP POP POP SWAP4 POP SWAP2 POP PUSH2 0x33AE DUP3 PUSH2 0x2CF5 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x33BF JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x33CD PUSH1 0x1 SWAP4 DUP6 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND PUSH2 0x33D9 DUP3 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MSTORE ADD PUSH2 0x33B1 JUMP JUMPDEST PUSH2 0x33F4 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST PUSH0 PUSH2 0x31A9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x3440 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x3426 DUP4 DUP7 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP1 DUP4 AND EQ PUSH2 0x3438 JUMPI PUSH1 0x1 ADD PUSH2 0x33FD JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP2 PUSH0 PUSH2 0x346E DUP5 PUSH2 0x2D85 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH32 0x67E4AC2C00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x22E6 JUMPI PUSH0 SWAP6 PUSH2 0x34F1 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x34E7 JUMPI DUP2 PUSH2 0x34C0 DUP3 DUP9 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP3 DUP5 AND EQ PUSH2 0x34D2 JUMPI PUSH1 0x1 ADD PUSH2 0x34AC JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH2 0x34E1 SWAP3 SWAP4 POP PUSH2 0x2D44 JUMP JUMPDEST MLOAD LT ISZERO SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x3506 SWAP2 SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x580 DUP2 DUP4 PUSH2 0x2B21 JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x34A9 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x355C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x3539 DUP4 DUP7 PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND DUP2 DUP5 AND SUB PUSH2 0x354C JUMPI POP PUSH1 0x1 ADD PUSH2 0x3510 JUMP JUMPDEST SWAP3 PUSH2 0x3557 SWAP3 POP PUSH2 0x2D44 JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E6420696E20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x35E9 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH2 0x3652 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x3628 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x36AA JUMPI JUMPDEST PUSH2 0x3663 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP4 MSTORE AND PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x365B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0x3ED667 DUP6 ADD 0xA6 0xAE 0xD7 CALLDATALOAD 0xEC SSTORE PUSH30 0x4BF3E4F2FBD7FE940F1F38395C9C0FC10D3AD564736F6C63430008190033 ","sourceMap":"2066:13936:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3925:47;2066:13936;3925:47;;;2066:13936;;;;;;;;;;7040:65;2066:13936;7040:65;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;12228:9;;;2066:13936;;;;;12383:46;;12403:10;2066:13936;12383:46;;2066:13936;12423:4;2066:13936;;;;;;;;;;;;;;;;;12383:46;;;;;;;;;;;;;;2066:13936;12448:18;;2066:13936;;;;;;12550:31;;;;12403:10;2066:13936;12550:31;;2066:13936;;12550:31;;;;;;;;;;;;;;;;;;;;;2066:13936;12600:16;;12592:49;12600:16;12669:54;12600:16;;;12592:49;:::i;:::-;2066:13936;;;12669:54;;12403:10;2066:13936;12669:54;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;12669:54;;;;;;;;;;;;;;;;2066:13936;;;;;;;12812:41;2066:13936;12812:41;;2066:13936;;;;12812:41;;2066:13936;12812:41;;;;;;;;;;;;;;;;;2066:13936;;;;12890:38;2066:13936;12890:38;;;;2066:13936;12890:38;;;;;;;;;;;;;2066:13936;12946:13;;12980:3;2066:13936;;12961:17;;;;;13015:9;;;;;:::i;:::-;2066:13936;;;;;;;13008:42;;;;;;12423:4;2066:13936;13008:42;;2066:13936;13008:42;;;;;;;;;;;12980:3;13054:13;;;;;:::i;:::-;2066:13936;-1:-1:-1;2066:13936:17;;13150:13;;;;:::i;:::-;2066:13936;;;;;;;;;;13136:9;;;;;:::i;:::-;2066:13936;;;;;;13109:54;2066:13936;;;;;;13109:54;:::i;:::-;2066:13936;;13206:51;13213:9;;;;;;:::i;:::-;2066:13936;;13243:13;;;;:::i;:::-;2066:13936;;;;;;13206:51;;;;;;2066:13936;13206:51;;2066:13936;13206:51;;2066:13936;;;;;;;;;;;;;;;;;13206:51;;;;;;;;;;;;;;12980:3;2066:13936;;;;;;12946:13;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;13206:51;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13008:42;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;13008:42;;;2066:13936;;;;13008:42;;;;;12961:17;;2066:13936;;12890:38;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;2066:13936;;;;;;;;;12812:41;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12669:54;;;;;;;;;;;;;;:::i;:::-;;;;12550:31;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;;;;;12592:49;12550:31;;;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12383:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;;;12383:46;;;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2357:1:0;2066:13936:17;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;2066:13936:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;11571:16;;;;2066:13936;11571:16;;;;;;;;;;;;;2066:13936;11605:13;;;;11639:3;2066:13936;;11620:17;;;;;11675:9;;;;;;;;;:::i;:::-;2066:13936;;11716:10;;;;;:::i;:::-;2066:13936;;;;11799:61;2066:13936;;;;;;;;;;;;;;;;;;11741:43;2066:13936;;;11741:43;:::i;:::-;2066:13936;;;;;11799:61;;11826:10;2066:13936;11799:61;;2066:13936;11846:4;2066:13936;;;;;;;;;;;;;;;;11799:61;2066:13936;;;;;;;11799:61;;;;;;;;;;2066:13936;11799:61;;;11639:3;;;2066:13936;11605:13;;;;;11799:61;;;;;;-1:-1:-1;11799:61:17;;;;;;:::i;:::-;;;;;;11620:17;;;2066:13936;;11884:28;2066:13936;11884:28;;2066:13936;;11884:28;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11884:28;;;;;;;;;;;2066:13936;;;11884:28;2066:13936;11884:28;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;;11884:28;;;;;;2066:13936;;;;;;;;;;;;;11571:16;;;;;;;;;;;;;:::i;:::-;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;5168:36;;;;;;:90;;;2066:13936;5168:145;;;2066:13936;;;;5412:32;;;:::i;:::-;5462:13;;5477:21;;;;;;2066:13936;;;;;;;:::i;:::-;;;;5500:3;5528:10;5520:59;5528:10;5616:55;5528:10;;;;:::i;:::-;2066:13936;5528:14;;5520:59;:::i;:::-;2066:13936;;;;5659:11;;2066:13936;5644:13;;2066:13936;;;;;;5644:13;;:::i;:::-;;:::i;:::-;5659:11;;;:::i;:::-;2066:13936;;;5616:55;;2066:13936;;;;;5616:55;;2066:13936;;;;;;;;;;;-1:-1:-1;2066:13936:17;;;;;;;;;5616:55;;;;;;;;;;;;;;;;;;;5500:3;5755:13;;5748:73;5755:13;2066:13936;5755:13;;;2066:13936;5755:13;;5810:10;5755:13;;:::i;:::-;2066:13936;5810:10;;:::i;:::-;2066:13936;;;5748:73;;5783:10;2066:13936;5748:73;;2066:13936;5803:4;2066:13936;;;;;;;;;;;;;;;5748:73;2066:13936;;;;;;;5748:73;;;;;;;;;;;5500:3;5866:13;;;;;;:::i;:::-;;;;:::i;:::-;5881:11;;;;;;;:::i;:::-;;;;:::i;:::-;5894:10;;;;;:::i;:::-;2066:13936;5906:12;;;;;;:::i;:::-;;;;:::i;:::-;2066:13936;;;5856:63;;2066:13936;;;;;5856:63;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;5856:63;2066:13936;;;;5856:63;;;2066:13936;5856:63;;;;;;;;;;;;;;;;;;;;;;;;5500:3;6071:53;5979:10;;;6100:12;5979:10;6100:12;5979:10;;2066:13936;;5979:10;;;;;;;;;;;5961:13;;5979:10;;;6078:11;5979:10;6078:11;5979:10;;:::i;:::-;2066:13936;;;;;;;;;;;;;;;5961:13;;:::i;:::-;2066:13936;;;;;5934:55;2066:13936;;;;;;5934:55;:::i;:::-;2066:13936;;;;;;;;;;6031:11;;;;;;;:::i;:::-;2066:13936;;;;;;6004:52;2066:13936;;;;;;6004:52;:::i;:::-;2066:13936;;6078:11;:::i;:::-;2066:13936;6100:12;;:::i;:::-;2066:13936;;;6071:53;;;;;;2066:13936;6071:53;;2066:13936;6071:53;;2066:13936;;;;;;;;;;;;;;;;;6071:53;;;;;;;;;;2066:13936;6071:53;;;5500:3;;2066:13936;5462:13;;6071:53;;;2066:13936;6071:53;2066:13936;6071:53;;;;;;;:::i;:::-;;;;;;2066:13936;;;;;;;;;5856:63;;;;;;;;;;;;2066:13936;5856:63;;2066:13936;5856:63;;;;;;2066:13936;5856:63;;;:::i;:::-;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;5856:63;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5856:63:17;;;2066:13936;;;;;;;;;;5748:73;;;2066:13936;5748:73;2066:13936;5748:73;;;;;;;:::i;:::-;;;;;;2066:13936;;;;;;;;;5616:55;;;;;;;2066:13936;5616:55;;2066:13936;5616:55;;;;;;2066:13936;5616:55;;;:::i;:::-;;;2066:13936;;;;;5748:73;2066:13936;5810:10;2066:13936;;;;5755:13;;2066:13936;;;;;;:::i;:::-;5616:55;;;;;;;;;;;;;;;;;-1:-1:-1;5616:55:17;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5168:145;5279:34;;;;5168:145;;:90;5225:33;;;;5168:90;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8837:64:1;2066:13936:17;;;;;;;;4301:16:1;2066:13936:17;;;;4726:16:1;;:34;;;;2066:13936:17;4805:1:1;4790:16;:50;;;;2066:13936:17;4855:13:1;:30;;;;2066:13936:17;4851:91:1;;;2066:13936:17;;4805:1:1;2066:13936:17;;;;;;;4979:67:1;;2066:13936:17;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2639:10:17;6961:1:1;:::i;:::-;2066:13936:17;;;;;;;;5066:101:1;;2066:13936:17;;;5066:101:1;2066:13936:17;;;;;;5142:14:1;2066:13936:17;;;4805:1:1;2066:13936:17;;5142:14:1;2066:13936:17;;4979:67:1;2066:13936:17;;;;;;4979:67:1;;;4851:91;2066:13936:17;;;4908:23:1;;;;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;2066:13936:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14871:34;;;;;2066:13936;14871:34;;2066:13936;;14871:34;;2066:13936;14871:34;;;;;;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14871:34;;;;;;;;;;;;;;:::i;:::-;;;;;2066:13936;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;6351:31;2066:13936;6351:31;;2066:13936;;;;6351:31;;2066:13936;6351:31;;2066:13936;6351:31;;;;;;;;;;;;;;2066:13936;;;;6419:16;2066:13936;6419:16;;;;2066:13936;6419:16;;;;;;;;;;;;;2066:13936;6451:13;;6485:3;2066:13936;;6466:17;;;;;6546:10;;;;;;:::i;:::-;2066:13936;;;;;;;;;;;;6532:9;;;;;:::i;:::-;2066:13936;;;;;;6505:51;2066:13936;;;;;;6505:51;:::i;:::-;2066:13936;;6578:9;6571:67;6578:9;;;;;:::i;:::-;2066:13936;;6627:10;;;;:::i;:::-;2066:13936;;;;6571:67;;2066:13936;;;;6571:67;;2066:13936;6620:4;2066:13936;;;;;;;;;;;;;;;;6571:67;2066:13936;;;;;;;6571:67;;;;;;;;;;2066:13936;6571:67;;;6485:3;;;2066:13936;6451:13;;6571:67;;;;;;-1:-1:-1;6571:67:17;;;;;;:::i;:::-;;;;;;6466:17;;2066:13936;;6419:16;;;;;;;;;;;;;;:::i;:::-;;;;;;2066:13936;;;;;;;;;6351:31;;;;;;;;;;;;;;:::i;:::-;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8837:64:1;2066:13936:17;;;;;;;;;6431:44:1;;;;;2066:13936:17;6427:105:1;;;;2066:13936:17;;;;6656:20:1;2066:13936:17;;;;;;;;;;;;;;;;;;;;;;;6656:20:1;2066:13936:17;;6431:44:1;2066:13936:17;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;2066:13936:17;;;;;;;;;;;;;;1280:65:0;2066:13936:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;15965:13;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;6928:45;2066:13936;;;;:::i;:::-;6843:10;;;;;;6835:55;6843:10;;;6835:55;:::i;:::-;6928:45;;:::i;:::-;2066:13936;;;6992:16;2066:13936;;;;;7040:65;;7071:10;2066:13936;7040:65;;2066:13936;7091:4;2066:13936;;;;;;;;;;7040:65;;2066:13936;;;7040:65;2066:13936;;;;;;;7040:65;;;;;;;;2066:13936;7118:32;7161;7209:13;;7242:3;2066:13936;;7224:16;;;;;7297:8;;;;;:::i;:::-;2066:13936;;;;;7351:16;2066:13936;7351:16;;;;2066:13936;7351:16;;;;;;;;;;;;;7242:3;7422:8;7410:21;7422:8;;;;;:::i;:::-;2066:13936;;7410:21;:::i;:::-;7448:17;;7485:13;;7523:3;2066:13936;;7500:21;;;;;7551:13;;;;;:::i;:::-;2066:13936;;;;;7551:29;;:48;;;7523:3;7547:150;;8084:1;2066:13936;7485:13;;7547:150;7636:13;;;;;;;;;;;;;:::i;:::-;2066:13936;;7672:5;7480:232;2066:13936;;;7736:23;;;2066:13936;;;;;;7812:31;;;;2066:13936;7812:31;;;2066:13936;7812:31;;2066:13936;;7812:31;;;;;;;;;;;;;;;;;7480:232;7812:50;;2066:13936;;;;;;;;;;;;;8064:48;7943:184;8064:48;;;;;;;;:21;;;:48;:21;;;:48;;2066:13936;;;7943:184;;2066:13936;;;;;7943:184;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;7943:184;2066:13936;;;;;;;7943:184;;;;;;;;;;;;;;8064:48;8158:8;;8084:1;8158:8;;;;;;;;:::i;:::-;2066:13936;;;;8084:1;2066:13936;;;;;;;;;;;;;;8144:56;2066:13936;;;;;;8144:56;:::i;:::-;2066:13936;;8229:8;;;;;:::i;:::-;2066:13936;;;;;;;;;;;;;;;;;8215:47;2066:13936;;;8215:47;:::i;:::-;2066:13936;;8318:27;7242:3;2066:13936;7209:13;;;7943:184;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;8084:1;2066:13936;;7943:184;;;;;;;;;;;;8064:48;7091:4;8064:48;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7812:31;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;;;7812:31;;;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;7551:48;7584:11;;;;;:::i;:::-;2066:13936;7584:15;;7551:48;;7500:21;;;;;;;;;;;;;7351:16;;;;;;;;;;;;;;:::i;:::-;;;;;7224;-1:-1:-1;2066:13936:17;;;;;;7040:65;;;;;;;;;;;;;:::i;:::-;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;2066:13936:17;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;2066:13936:17;;1280:65:0;2066:13936:17;;;;;;;;;3975:40:0;;;;2066:13936:17;;;;;;;;;;:::i;:::-;3835:55;3843:10;;;;;;;3835:55;:::i;:::-;2066:13936;;;;;3925:47;;2066:13936;;;;;3925:47;;2066:13936;;;;;;;;3925:47;;2066:13936;;;;;3925:47;;2066:13936;;;;;;;;3925:47;;;;;;;;;;;;;;2066:13936;-1:-1:-1;2066:13936:17;;;4043:65;;4074:10;2066:13936;4043:65;;2066:13936;4094:4;2066:13936;;;;;;;;;;;;;;;;;4094:4;2066:13936;;;4043:65;2066:13936;4043:65;;;;;;;;;;;;;;;2066:13936;-1:-1:-1;2066:13936:17;;;4138:47;;2066:13936;;;;;4138:47;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;4138:47;;;;;;;;;;;;;;;;;;;;2066:13936;;;;;;;4314:42;2066:13936;;;;;;4198:13;2066:13936;;;;;;;;;;4198:47;2066:13936;;;;;;4198:47;:::i;:::-;2066:13936;;;;4198:13;2066:13936;;;;;;;;;;;;;;;;4256:45;2066:13936;;;4256:45;:::i;:::-;2066:13936;;;;;4314:42;;;;;;2066:13936;4314:42;;2066:13936;4314:42;;2066:13936;;;;;;;;;;;;;;;;;4314:42;;;;;;;;;;;;;2066:13936;;;;;;;;4314:42;;;;;;;;;;;;;:::i;:::-;;;;;4138:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;4314:42;2066:13936;;;;4138:47;;;;;;;;;;;;;;;;4043:65;;;;;;;;;;;;;:::i;:::-;;;;;3925:47;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;;;;:::i;:::-;3925:47;;;;;;;;2066:13936;;;;;;;;;;;;;;;;:::i;:::-;;;;;;14316:41;;14346:10;2066:13936;14316:41;;2066:13936;14316:41;;2066:13936;14316:41;;;;;;;;;2066:13936;14316:41;;;2066:13936;;;;;14390:33;;;;2066:13936;14390:33;;;;;;;;;2066:13936;14390:33;;;2066:13936;14453:5;;;2066:13936;;;;;;;;;;;;;;;;;;;14434:71;2066:13936;14477:3;2066:13936;;14442:38;;14434:71;:::i;:::-;14516:31;;;;;2066:13936;;;;;;14516:31;;;;2066:13936;14516:31;;;;;;;;;;2066:13936;;;14516:31;2066:13936;;;;;;;;;;14516:31;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14390:33;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;14390:33;;;;;;;;;;14316:41;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;14316:41;;;;;;;;2066:13936;;;;;;;;;;;;5111:6:2;2066:13936:17;5102:4:2;5094:23;5090:145;;2066:13936:17;;;1327:66:6;2066:13936:17;;;5090:145:2;2066:13936:17;;;5195:29:2;;;;2066:13936:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:6:2;;2066:13936:17;4679:4:2;;4671:23;:120;;;;;2066:13936:17;4654:251:2;;;2303:62:0;;:::i;:::-;2066:13936:17;;;;;;6151:52:2;;;;2066:13936:17;6151:52:2;;;;2066:13936:17;;6151:52:2;;;2066:13936:17;-1:-1:-1;6147:437:2;;2066:13936:17;;;;6513:60:2;;;;2066:13936:17;6513:60:2;;2066:13936:17;6513:60:2;6147:437;1327:66:6;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;2066:13936:17;;;;;;;;;;;2922:27:6;;2066:13936:17;2922:27:6;;2066:13936:17;;2964:15:6;:11;;4255:25:11;2066:13936:17;4297:55:11;4255:25;;;;;;;;;2066:13936:17;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;:::-;2066:13936:17;;;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;6644:70;;2066:13936:17;6644:70:6;6684:19;;2066:13936:17;6684:19:6;;;2259:119;2066:13936:17;;;2320:47:6;;;;2066:13936:17;2320:47:6;;2066:13936:17;2320:47:6;6241:120:2;2066:13936:17;;6312:34:2;;;;2066:13936:17;6312:34:2;;2066:13936:17;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936:17;;;;;6151:52:2;;;;;;;;;4671:120;2066:13936:17;;;1327:66:6;2066:13936:17;;4749:42:2;;4671:120;;;2066:13936:17;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;13828:47;;2066:13936;;;;;13828:47;;2066:13936;;;;;;;;;;;;;;;;;;;;;;13828:47;;;;;;;;;2066:13936;13828:47;;;2066:13936;-1:-1:-1;2066:13936:17;;;13951:45;;2066:13936;;;;;13951:45;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;13951:45;;2066:13936;;13951:45;;;;;;;2066:13936;13951:45;;;2066:13936;;;;;;;13951:45;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;;13951:45;;;;;;;;13828:47;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:13936;;;;13951:45;2066:13936;;;;;:::i;:::-;13828:47;;;;;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;2206:68;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8837:64:1;2066:13936:17;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;15484:368;;2066:13936;;;;;;;;15595:31;2066:13936;15595:31;;;;;;;;;;;;;;;;;;15484:368;2066:13936;15665:28;2066:13936;;15665:28;:::i;:::-;15709:13;15595:31;15743:3;2066:13936;;15724:17;;;;;2066:13936;;;15595:31;2066:13936;;;;;;15595:31;2066:13936;15797:9;;;;;;:::i;:::-;2066:13936;;15595:31;2066:13936;;;15595:31;2066:13936;;15763:44;;;;:::i;:::-;2066:13936;;15709:13;;15724:17;-1:-1:-1;15724:17:17;;-1:-1:-1;;;;15484:368:17:o;15595:31::-;;;;;;;;;;;;;;:::i;:::-;;;;;2066:13936;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;3405:215:0:-;2066:13936:17;;;;3489:22:0;;;3485:91;;1280:65;2066:13936:17;;;;;;;;;;;3975:40:0;-1:-1:-1;3975:40:0;;3405:215::o;3485:91::-;2066:13936:17;;;3534:31:0;;;3509:1;3534:31;;;2066:13936:17;3534:31:0;2658:162;2066:13936:17;1280:65:0;2066:13936:17;;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;2066:13936:17;;;2763:40:0;;;966:10:3;2763:40:0;;;2066:13936:17;2763:40:0;2066:13936:17;;;;;;;;;:::o;8407:1783::-;2066:13936;8600:25;:11;2066:13936;;;;;;8600:25;;;;2066:13936;8600:25;;;;;;;;;:11;:25;;;8407:1783;2066:13936;;;8708:24;;;;:::i;:::-;8743:22;8600:11;2066:13936;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;8859:24;;;:::i;:::-;8894:21;8600:11;2066:13936;;;;;;;;;;;;;9010:21;;;;;;2066:13936;;;;;;;;;;;;;;;;;;;;;;;;;;;8600:11;2066:13936;;8600:11;2066:13936;;;8407:1783;:::o;9003:1105::-;9077:11;9071:18;9077:11;;;:::i;:::-;9071:18;;;:::i;:::-;2066:13936;;;;;9108:23;;9104:277;;8600:11;9417:13;;;;;;9003:1105;;;;9432:3;9461:10;;;;:::i;:::-;2066:13936;;9456:626;;9432:3;2066:13936;;9402:13;;9456:626;9531:11;;;;;:::i;:::-;2066:13936;;;;9596:16;2066:13936;9596:16;;8600:11;9596:16;8600:25;9596:16;;;;;;;;;;;;8600:11;9596:16;;;9456:626;9667:40;;;;;;:::i;:::-;:95;;;;9456:626;9637:426;;;;;9456:626;;;;;9637:426;9833:46;;;;:::i;:::-;9927:11;;;;;:::i;:::-;2066:13936;;9911:12;;;:::i;:::-;9906:32;;;;;:::i;:::-;2066:13936;9971:11;;;;;:::i;:::-;9965:30;;;;:::i;:::-;2066:13936;;;;10022:17;;;;:::i;:::-;2066:13936;;;9637:426;;;;9667:95;9711:51;;;;:::i;:::-;9667:95;;;;;9596:16;;;;;;;8600:11;9596:16;;;;;;:::i;:::-;;;;;9104:277;9181:25;;;;;;;;;;;;;;;:::i;:::-;9230:13;8600:11;9245:14;;;;;;9349:16;;;;;:::o;9261:3::-;9304:7;;;2066:13936;9304:7;;;:::i;:::-;2066:13936;;9289:22;;;;:::i;:::-;2066:13936;;9230:13;;8600:25;;;;;;:11;:25;;;;;;:::i;:::-;;;;10198:274;;10319:1;10341:3;2066:13936;;10322:17;;;;;2066:13936;10365:9;;;;;:::i;:::-;2066:13936;;;;;10365:18;10361:70;;2066:13936;;10307:13;;10361:70;10404:11;;;2066:13936;10404:11;:::o;10322:17::-;;;;10319:1;10198:274;:::o;10480:429::-;10695:16;10480:429;;2066:13936;;;;10632:26;10695:16;10632:26;;;:::i;:::-;2066:13936;;;10695:16;;;;2066:13936;10695:16;;;;;;;;;;;;;10480:429;10727:13;10695:16;10761:3;2066:13936;;10742:17;;;;;10785:9;;;;;:::i;:::-;2066:13936;;;;;10785:18;10781:87;;2066:13936;;10727:13;;10781:87;10831:11;;;;;;;;;:::i;:::-;2066:13936;10831:21;;10824:28;:::o;10742:17::-;;;;;;;10695:16;10480:429;:::o;10695:16::-;;;;;;;;;;;;;;:::i;:::-;;;;;10917:309;;11047:1;11069:3;2066:13936;;11050:17;;;;;2066:13936;11093:9;;;;;:::i;:::-;2066:13936;;;;;11093:18;11089:75;;11069:3;2066:13936;;11035:13;;11089:75;11139:9;;;;;:::i;:::-;2066:13936;;11132:16;:::o;11050:17::-;2066:13936;;;11185:33;;;2066:13936;11185:33;;;2066:13936;;;;;;;;;;;11185:33;7084:141:1;2066:13936:17;8837:64:1;2066:13936:17;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;7191:17;2066:13936:17;;7191:17:1;;;;4625:582:11;;4797:8;;-1:-1:-1;2066:13936:17;;5874:21:11;:17;;6046:142;;;;;;5870:383;6225:17;2066:13936:17;;6225:17:11;;;;4793:408;2066:13936:17;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;2066:13936:17;;;;;5121:24:11;;;;2066:13936:17;5121:24:11;;;2066:13936:17;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"2811400","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"684","addLiquidity(uint256[],address,address)":"infinite","batchSwap(address[],address[],uint256[],address[])":"infinite","changePoolFactory(address)":"26788","getAmountOut(address,address,uint256)":"infinite","getAssetReserves(address,address)":"2783","getPoolsContainingToken(address)":"infinite","getReserves(address)":"infinite","getVersion()":"2256","initialize(address)":"infinite","owner()":"2553","performRebalanceIfNeeded(address)":"infinite","poolFactory()":"2329","poolsReserves(address,address)":"2562","proxiableUUID()":"infinite","rebalanceWeights(address,address)":"infinite","reinitialize(address,uint64)":"50138","removeLiquidity(uint256,address,address)":"infinite","renounceOwnership()":"28224","smartSwap(address,address,uint256,address)":"infinite","swap(address,address,uint256,address)":"infinite","transferOwnership(address)":"28607","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_containsToken(address[] memory,address)":"infinite","_findOptimalRoute(address,address,uint256)":"infinite","_getOtherTokenInPool(address[] memory,address)":"infinite","_hasSufficientLiquidity(contract IBaluniV1Pool,address,uint256)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","changePoolFactory(address)":"72591be5","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserves(address,address)":"8628991e","getPoolsContainingToken(address)":"ae3cce1c","getReserves(address)":"3e99c1e4","getVersion()":"0d8e6e2c","initialize(address)":"c4d66de8","owner()":"8da5cb5b","performRebalanceIfNeeded(address)":"5568081a","poolFactory()":"4219dc40","poolsReserves(address,address)":"4056c37f","proxiableUUID()":"52d1902d","rebalanceWeights(address,address)":"ad414263","reinitialize(address,uint64)":"8f2248bc","removeLiquidity(uint256,address,address)":"f31abcc4","renounceOwnership()":"715018a6","smartSwap(address,address,uint256,address)":"7442eca6","swap(address,address,uint256,address)":"6e81221c","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"changePoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFactory\",\"outputs\":[{\"internalType\":\"contract IBaluniV1PoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolsReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"smartSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"changePoolFactory(address)\":{\"details\":\"Changes the address of the pool factory contract. Can only be called by the contract owner.\",\"params\":{\"_poolFactory\":\"The new address of the pool factory contract.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"reinitialize(address,uint64)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the BaluniV1Pool.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"BaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolPeriphery.sol\":\"BaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1PoolFactory.sol';\\r\\nimport './interfaces/IBaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\n/**\\r\\n * @title BaluniV1PoolPeriphery\\r\\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\\r\\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\\r\\n */\\r\\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\\r\\n    IBaluniV1PoolFactory public poolFactory;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public poolsReserves; // Mapping of token address to pool addresses (for quick lookup\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function initialize(address _poolFactory) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init(msg.sender);\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n     * @param newImplementation The address of the new implementation contract.\\r\\n     * @notice This function can only be called by the contract owner.\\r\\n     */\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n\\r\\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n        uint256 toSend = pool.swap(fromToken, toToken, amount, receiver);\\r\\n\\r\\n        poolsReserves[poolAddress][fromToken] += amount;\\r\\n        poolsReserves[poolAddress][toToken] -= toSend;\\r\\n\\r\\n        IERC20(toToken).transfer(receiver, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory) {\\r\\n        require(\\r\\n            fromTokens.length == toTokens.length &&\\r\\n                toTokens.length == amounts.length &&\\r\\n                amounts.length == receivers.length,\\r\\n            'Input arrays length mismatch'\\r\\n        );\\r\\n\\r\\n        uint256[] memory amountsOut = new uint256[](fromTokens.length);\\r\\n\\r\\n        for (uint256 i = 0; i < fromTokens.length; i++) {\\r\\n            require(amounts[i] > 0, 'Amount must be greater than zero');\\r\\n            address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\\r\\n            IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n            IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\\r\\n            uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\\r\\n            poolsReserves[poolAddress][fromTokens[i]] += amounts[i];\\r\\n            poolsReserves[poolAddress][toTokens[i]] -= amountOut;\\r\\n            IERC20(toTokens[i]).transfer(receivers[i], amountOut);\\r\\n        }\\r\\n\\r\\n        return amountsOut;\\r\\n    }\\r\\n\\r\\n    function rebalanceWeights(address receiver, address poolAddress) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        uint256[] memory amounts = pool.rebalanceWeights(receiver);\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            poolsReserves[poolAddress][assets[i]] += amounts[i];\\r\\n            IERC20(assets[i]).transferFrom(receiver, address(this), amounts[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function smartSwap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256) {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        address[] memory pools = _findOptimalRoute(fromToken, toToken, amount);\\r\\n        require(pools.length > 0, 'No route found');\\r\\n\\r\\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n        uint256 amountRemaining = amount;\\r\\n        address currentToken = fromToken;\\r\\n        for (uint256 i = 0; i < pools.length; i++) {\\r\\n            IBaluniV1Pool pool = IBaluniV1Pool(pools[i]);\\r\\n            address[] memory poolTokens = pool.getAssets();\\r\\n            uint256[] memory reserves = getReserves(pools[i]);\\r\\n\\r\\n            address nextToken;\\r\\n            for (uint256 j = 0; j < poolTokens.length; j++) {\\r\\n                if (poolTokens[j] != currentToken && reserves[j] > 0) {\\r\\n                    nextToken = poolTokens[j];\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            require(nextToken != address(0), 'No valid next token found');\\r\\n            require(pool.getAssetReserve(nextToken) >= amountRemaining, 'Insufficient liquidity in pool for swap');\\r\\n\\r\\n            uint256 amountOut = pool.swap(\\r\\n                currentToken,\\r\\n                nextToken,\\r\\n                amountRemaining,\\r\\n                i == pools.length - 1 ? receiver : address(this)\\r\\n            );\\r\\n\\r\\n            poolsReserves[pools[i]][currentToken] += amountRemaining;\\r\\n            poolsReserves[pools[i]][nextToken] -= amountOut;\\r\\n\\r\\n            currentToken = nextToken;\\r\\n            amountRemaining = amountOut;\\r\\n        }\\r\\n\\r\\n        return amountRemaining;\\r\\n    }\\r\\n\\r\\n    function _findOptimalRoute(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) internal view returns (address[] memory) {\\r\\n        address[] memory allPools = poolFactory.getAllPools();\\r\\n        uint256 poolCount = allPools.length;\\r\\n\\r\\n        address[] memory path = new address[](poolCount);\\r\\n        uint256 pathLength = 0;\\r\\n        bool[] memory visited = new bool[](poolCount);\\r\\n\\r\\n        address[] memory queue = new address[](poolCount);\\r\\n        uint256 queueHead = 0;\\r\\n        uint256 queueTail = 0;\\r\\n\\r\\n        queue[queueTail++] = fromToken;\\r\\n\\r\\n        while (queueHead < queueTail) {\\r\\n            address currentToken = queue[queueHead++];\\r\\n            if (currentToken == toToken) {\\r\\n                address[] memory finalPath = new address[](pathLength);\\r\\n                for (uint256 i = 0; i < pathLength; i++) {\\r\\n                    finalPath[i] = path[i];\\r\\n                }\\r\\n                return finalPath;\\r\\n            }\\r\\n\\r\\n            for (uint256 i = 0; i < poolCount; i++) {\\r\\n                if (!visited[i]) {\\r\\n                    IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\\r\\n                    address[] memory poolTokens = pool.getAssets();\\r\\n\\r\\n                    if (\\r\\n                        _containsToken(poolTokens, currentToken) && _hasSufficientLiquidity(pool, currentToken, amount)\\r\\n                    ) {\\r\\n                        address nextToken = _getOtherTokenInPool(poolTokens, currentToken);\\r\\n                        path[pathLength++] = allPools[i];\\r\\n                        queue[queueTail++] = nextToken;\\r\\n                        visited[i] = true;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        address[] memory addr = new address[](0);\\r\\n        return addr;\\r\\n    }\\r\\n\\r\\n    function _containsToken(address[] memory tokens, address token) internal pure returns (bool) {\\r\\n        for (uint256 i = 0; i < tokens.length; i++) {\\r\\n            if (tokens[i] == token) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _hasSufficientLiquidity(IBaluniV1Pool pool, address token, uint256 amount) internal view returns (bool) {\\r\\n        uint256[] memory reserves = getReserves(address(pool));\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            if (assets[i] == token) {\\r\\n                return reserves[i] >= amount;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _getOtherTokenInPool(address[] memory tokens, address token) internal pure returns (address) {\\r\\n        for (uint256 i = 0; i < tokens.length; i++) {\\r\\n            if (tokens[i] != token) {\\r\\n                return tokens[i];\\r\\n            }\\r\\n        }\\r\\n        revert('Token not found in pool');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     */\\r\\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        address[] memory assets = pool.getAssets();\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            address asset = assets[i];\\r\\n            uint256 amount = amounts[i];\\r\\n            poolsReserves[poolAddress][asset] += amount;\\r\\n            IERC20(asset).transferFrom(msg.sender, address(this), amount);\\r\\n        }\\r\\n\\r\\n        pool.mint(receiver, amounts);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the BaluniV1Pool.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\\r\\n        require(share > 0, 'Share must be greater than zero');\\r\\n        IERC20 poolToken = IERC20(poolAddress);\\r\\n\\r\\n        // Check allowance\\r\\n        uint256 allowance = poolToken.allowance(msg.sender, address(this));\\r\\n        require(allowance >= share, 'Insufficient allowance');\\r\\n\\r\\n        // Check balance\\r\\n        uint256 balance = poolToken.balanceOf(msg.sender);\\r\\n        require(balance >= share, 'Insufficient balance');\\r\\n\\r\\n        bool success = poolToken.transferFrom(msg.sender, poolAddress, share);\\r\\n        require(success, 'Transfer failed');\\r\\n\\r\\n        uint256[] memory amountsOut = IBaluniV1Pool(poolAddress).burn(receiver);\\r\\n        address[] memory assets = IBaluniV1Pool(poolAddress).getAssets();\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            require(IERC20(assets[i]).balanceOf(address(this)) >= amountsOut[i], 'Insufficient Liquidity');\\r\\n            poolsReserves[poolAddress][assets[i]] -= amountsOut[i];\\r\\n            bool assetTransferSuccess = IERC20(assets[i]).transfer(receiver, amountsOut[i]);\\r\\n            require(assetTransferSuccess, 'Asset transfer failed');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\\r\\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        return pool.getAmountOut(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        uint256 balance = IERC20(poolAddress).balanceOf(msg.sender);\\r\\n        uint256 totalSupply = IERC20(poolAddress).totalSupply();\\r\\n        require((balance * 10000) / totalSupply >= 100, 'Insufficient balance');\\r\\n        pool.performRebalanceIfNeeded();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory) {\\r\\n        return poolFactory.getPoolsByAsset(token);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64) {\\r\\n        return _getInitializedVersion();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the pool factory contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _poolFactory The new address of the pool factory contract.\\r\\n     */\\r\\n    function changePoolFactory(address _poolFactory) external onlyOwner {\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    function getReserves(address pool) public view returns (uint256[] memory) {\\r\\n        address[] memory assets = IBaluniV1Pool(pool).getAssets();\\r\\n        uint256[] memory reserves = new uint256[](assets.length);\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            reserves[i] = poolsReserves[pool][assets[i]];\\r\\n        }\\r\\n        return reserves;\\r\\n    }\\r\\n\\r\\n    function getAssetReserves(address pool, address asset) external view returns (uint256) {\\r\\n        return poolsReserves[pool][asset];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1d927ed9e811dc1065e6f14b0a1ae3468beaa01698d162ea8e03959c54a2468d\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded() external;\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeRouter(address _newRouter) external;\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external;\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xd2bc17af1c051bb49cda7bd4c226b10494f181201c6a4ef5830ef3a17fb81b89\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool);\\r\\n\\r\\n    function getAllPools() external view returns (address[] memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x4f51278fac200941b584fe1eea589e22e4f6fb323d9bf2dfea3dcf6179b4b694\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4508,"contract":"contracts/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery","label":"poolFactory","offset":0,"slot":"0","type":"t_contract(IBaluniV1PoolFactory)6201"},{"astId":4514,"contract":"contracts/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery","label":"poolsReserves","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IBaluniV1PoolFactory)6201":{"encoding":"inplace","label":"contract IBaluniV1PoolFactory","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/I1inchSpotAgg.sol":{"I1inchSpotAgg":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"contract IERC20","name":"dstToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRate","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"srcToken","type":"address"},{"internalType":"bool","name":"useWrappers","type":"bool"}],"name":"getRateToEth","outputs":[{"internalType":"uint256","name":"weightedRate","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRate(address,address,bool)":"802431fb","getRateToEth(address,bool)":"7de4fd10"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"dstToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"srcToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useWrappers\",\"type\":\"bool\"}],\"name\":\"getRateToEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weightedRate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/I1inchSpotAgg.sol\":\"I1inchSpotAgg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Agent.sol":{"IBaluniV1Agent":{"abi":[{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"execute((address,uint256,bytes)[],address[])":"eedc3c50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Agent.sol\":\"IBaluniV1Agent\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Pool.sol":{"IBaluniV1Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"assetInfos","outputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"internalType":"struct IBaluniV1Pool.AssetInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"assets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRouter","type":"address"}],"name":"changeRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"toSend","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bool","name":"increase","type":"bool"}],"name":"updateReserves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"weights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","assets(uint256)":"cf35bdd0","burn(address)":"89afcb44","changeRebalancer(address)":"0918281b","changeRouter(address)":"340ac20f","computeTotalValuation()":"36bf6e39","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","performRebalanceIfNeeded()":"f47b45e8","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","router()":"f887ea40","swap(address,address,uint256,address)":"6e81221c","trigger()":"7fec8d38","unitPrice()":"e73faa2d","updateReserves(uint256[],bool)":"3dff5b7f","weights(uint256)":"b5f163ff"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaluniV1Pool.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRouter\",\"type\":\"address\"}],\"name\":\"changeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"increase\",\"type\":\"bool\"}],\"name\":\"updateReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Pool.sol\":\"IBaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded() external;\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeRouter(address _newRouter) external;\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external;\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xd2bc17af1c051bb49cda7bd4c226b10494f181201c6a4ef5830ef3a17fb81b89\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"IBaluniV1PoolFactory":{"abi":[{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAllPools()":"d88ff1f4","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","poolExist(address)":"89345efb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":\"IBaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool);\\r\\n\\r\\n    function getAllPools() external view returns (address[] memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x4f51278fac200941b584fe1eea589e22e4f6fb323d9bf2dfea3dcf6179b4b694\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolPeriphery.sol":{"IBaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAssetReserve(address,address)":"a3e113fb","getReserves(address)":"3e99c1e4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":\"IBaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolPeriphery {\\r\\n    function getReserves(address pool) external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0x07a47e40a96a436f7dab0a5bb58c27622fd7f9a7c98b5c3f3d223ce848cbdf28\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Rebalancer.sol":{"IBaluniV1Rebalancer":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_1InchSpotAgg","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baluniRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"checkRebalance","outputs":[{"components":[{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"uint256","name":"totalValue","type":"uint256"},{"internalType":"uint256","name":"finalUsdBalance","type":"uint256"},{"internalType":"uint256","name":"overweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"underweightVaultsLength","type":"uint256"},{"internalType":"uint256","name":"totalActiveWeight","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256[]","name":"overweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"overweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightVaults","type":"uint256[]"},{"internalType":"uint256[]","name":"underweightAmounts","type":"uint256[]"},{"internalType":"uint256[]","name":"balances","type":"uint256[]"}],"internalType":"struct IBaluniV1Rebalancer.RebalanceVars","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"convert","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"balances","type":"uint256[]"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_1InchSpotAgg()":"eb06b29d","baluniRouter()":"39b65140","checkRebalance(uint256[],address[],uint256[],uint256,address,address)":"997146f5","convert(address,address,uint256)":"248391ff","rebalance(uint256[],address[],uint256[],uint256,address,address,address)":"f0bf7714","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_1InchSpotAgg\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baluniRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"checkRebalance\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalUsdBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underweightVaultsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActiveWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"overweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightVaults\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"underweightAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"}],\"internalType\":\"struct IBaluniV1Rebalancer.RebalanceVars\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convert\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Rebalancer.sol\":\"IBaluniV1Rebalancer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Rebalancer.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport './IBaluniV1Router.sol';\\r\\n\\r\\ninterface IBaluniV1Rebalancer {\\r\\n  struct RebalanceVars {\\r\\n    uint256 length;\\r\\n    uint256 totalValue;\\r\\n    uint256 finalUsdBalance;\\r\\n    uint256 overweightVaultsLength;\\r\\n    uint256 underweightVaultsLength;\\r\\n    uint256 totalActiveWeight;\\r\\n    uint256 amountOut;\\r\\n    uint256[] overweightVaults;\\r\\n    uint256[] overweightAmounts;\\r\\n    uint256[] underweightVaults;\\r\\n    uint256[] underweightAmounts;\\r\\n    uint256[] balances;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function baluniRouter() external view returns (address);\\r\\n\\r\\n  function USDC() external view returns (address);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function _1InchSpotAgg() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function rebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function checkRebalance(\\r\\n    uint256[] memory balances,\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    uint256 limit,\\r\\n    address sender,\\r\\n    address baseAsset\\r\\n  ) external view returns (RebalanceVars memory);\\r\\n\\r\\n  function convert(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xe7e9c4fbe80061f09e49a3c9861c415d023383069ee1c59b39f85290791e8c3f\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Router.sol":{"IBaluniV1Router":{"abi":[{"inputs":[],"name":"USDC","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WNATIVE","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_BASE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_MAX_BPS_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"agentFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnERC20","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"}],"name":"burnUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"totalBaluni","type":"uint256"},{"internalType":"uint256","name":"totalERC20Balance","type":"uint256"},{"internalType":"uint256","name":"baluniAmount","type":"uint256"},{"internalType":"uint256","name":"tokenDecimals","type":"uint256"}],"name":"calculateTokenShare","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"weights","type":"uint256[]"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"address","name":"baseAsset","type":"address"}],"name":"callRebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_agentFactory","type":"address"}],"name":"changeAgentFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"changeBpsFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"changeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newTreasury","type":"address"}],"name":"changeTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct IBaluniV1Agent.Call[]","name":"calls","type":"tuple[]"},{"internalType":"address[]","name":"tokensReturn","type":"address[]"}],"name":"execute","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fetchMarketPrices","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getAgentAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getUSDCShareValue","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_marketOracle","type":"address"}],"name":"initializeMarketOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidateAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"marketOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"mintWithUSDC","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"oracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_usdc","type":"address"},{"internalType":"address","name":"_wnative","type":"address"},{"internalType":"address","name":"_1inchSpotAgg","type":"address"},{"internalType":"address","name":"_uniRouter","type":"address"},{"internalType":"address","name":"_uniFactory","type":"address"},{"internalType":"address","name":"_rebalancer","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"balAmountToMint","type":"uint256"}],"name":"requiredUSDCtoMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"name":"tokenValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalValuation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapFactory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniswapRouter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"USDC()":"89a30271","WNATIVE()":"b381cf40","_BPS_BASE()":"85377188","_BPS_FEE()":"b9f5e617","_MAX_BPS_FEE()":"34decfc9","agentFactory()":"7df107ea","burnERC20(uint256)":"1a168da2","burnUSDC(uint256)":"fe0a4dd1","calculateTokenShare(uint256,uint256,uint256,uint256)":"fe330a51","callRebalance(address[],uint256[],address,address,uint256,address)":"599f69f7","changeAgentFactory(address)":"0a38abab","changeBpsFee(uint256)":"06497cb9","changeMarketOracle(address)":"35aa0efa","changeRebalancer(address)":"0918281b","changeTreasury(address)":"b14f2a39","execute((address,uint256,bytes)[],address[])":"eedc3c50","fetchMarketPrices()":"8d483df1","getAgentAddress(address)":"27d54a92","getTokens()":"aa6ca808","getUSDCShareValue(uint256)":"71ddcfb8","getVersion()":"0d8e6e2c","initialize(address,address,address,address,address,address)":"cc2a9a5b","initializeMarketOracle(address)":"980d24f9","liquidate(address)":"2f865568","liquidateAll()":"3c2066a9","marketOracle()":"60961528","mintWithUSDC(uint256)":"0cfc7386","oracle()":"7dc0d1d0","rebalancer()":"01d22ccd","reinitialize(address,address,address,address,address,address,uint64)":"b0d60ba0","requiredUSDCtoMint(uint256)":"aa95d893","tokenValuation(uint256,address)":"2bdd955a","totalValuation()":"295b9300","treasury()":"61d027b3","uniswapFactory()":"8bdb2afa","uniswapRouter()":"735de9f7","unitPrice()":"e73faa2d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"USDC\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WNATIVE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_MAX_BPS_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"agentFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"burnUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBaluni\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalERC20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baluniAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenDecimals\",\"type\":\"uint256\"}],\"name\":\"calculateTokenShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"baseAsset\",\"type\":\"address\"}],\"name\":\"callRebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentFactory\",\"type\":\"address\"}],\"name\":\"changeAgentFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeBpsFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"changeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newTreasury\",\"type\":\"address\"}],\"name\":\"changeTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IBaluniV1Agent.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"tokensReturn\",\"type\":\"address[]\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAgentAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getUSDCShareValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketOracle\",\"type\":\"address\"}],\"name\":\"initializeMarketOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"mintWithUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_wnative\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_1inchSpotAgg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rebalancer\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balAmountToMint\",\"type\":\"uint256\"}],\"name\":\"requiredUSDCtoMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"tokenValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Router.sol\":\"IBaluniV1Router\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":80000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"contracts/interfaces/I1inchSpotAgg.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\ninterface I1inchSpotAgg {\\r\\n  function getRate(IERC20 srcToken, IERC20 dstToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n\\r\\n  function getRateToEth(IERC20 srcToken, bool useWrappers) external view returns (uint256 weightedRate);\\r\\n}\\r\\n\",\"keccak256\":\"0x29417a441b068263f01adb36906270f1b76431d3017d214f506824ee41ada1b3\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Agent.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1Agent {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  function execute(Call[] memory calls, address[] memory tokensReturn) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1bbf5ddbc4f525451e727d6997e6a20a6238d69232b58b3813760a16e7f60bbe\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Router.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol';\\r\\nimport './I1inchSpotAgg.sol';\\r\\nimport './IBaluniV1Agent.sol';\\r\\n\\r\\ninterface IBaluniV1Router {\\r\\n  struct Call {\\r\\n    address to;\\r\\n    uint256 value;\\r\\n    bytes data;\\r\\n  }\\r\\n\\r\\n  // Variables\\r\\n  function _MAX_BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_FEE() external view returns (uint256);\\r\\n\\r\\n  function _BPS_BASE() external view returns (uint256);\\r\\n\\r\\n  function getTokens() external view returns (address[] memory);\\r\\n\\r\\n  function USDC() external view returns (IERC20);\\r\\n\\r\\n  function WNATIVE() external view returns (address);\\r\\n\\r\\n  function oracle() external view returns (address);\\r\\n\\r\\n  function uniswapRouter() external view returns (address);\\r\\n\\r\\n  function uniswapFactory() external view returns (address);\\r\\n\\r\\n  function agentFactory() external view returns (address);\\r\\n\\r\\n  function marketOracle() external view returns (address);\\r\\n\\r\\n  function rebalancer() external view returns (address);\\r\\n\\r\\n  function treasury() external view returns (address);\\r\\n\\r\\n  // Functions\\r\\n  function initialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer\\r\\n  ) external;\\r\\n\\r\\n  function reinitialize(\\r\\n    address _usdc,\\r\\n    address _wnative,\\r\\n    address _1inchSpotAgg,\\r\\n    address _uniRouter,\\r\\n    address _uniFactory,\\r\\n    address _rebalancer,\\r\\n    uint64 version\\r\\n  ) external;\\r\\n\\r\\n  function initializeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeMarketOracle(address _marketOracle) external;\\r\\n\\r\\n  function changeBpsFee(uint256 _newFee) external;\\r\\n\\r\\n  function changeTreasury(address _newTreasury) external;\\r\\n\\r\\n  function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n  function changeAgentFactory(address _agentFactory) external;\\r\\n\\r\\n  function execute(IBaluniV1Agent.Call[] memory calls, address[] memory tokensReturn) external;\\r\\n\\r\\n  function liquidate(address token) external;\\r\\n\\r\\n  function liquidateAll() external;\\r\\n\\r\\n  function burnERC20(uint256 burnAmount) external;\\r\\n\\r\\n  function burnUSDC(uint256 burnAmount) external;\\r\\n\\r\\n  function getAgentAddress(address _user) external view returns (address);\\r\\n\\r\\n  function mintWithUSDC(uint256 balAmountToMint) external;\\r\\n\\r\\n  function callRebalance(\\r\\n    address[] calldata assets,\\r\\n    uint256[] calldata weights,\\r\\n    address sender,\\r\\n    address receiver,\\r\\n    uint256 limit,\\r\\n    address baseAsset\\r\\n  ) external;\\r\\n\\r\\n  function requiredUSDCtoMint(uint256 balAmountToMint) external view returns (uint256);\\r\\n\\r\\n  function calculateTokenShare(\\r\\n    uint256 totalBaluni,\\r\\n    uint256 totalERC20Balance,\\r\\n    uint256 baluniAmount,\\r\\n    uint256 tokenDecimals\\r\\n  ) external pure returns (uint256);\\r\\n\\r\\n  function tokenValuation(uint256 amount, address token) external view returns (uint256);\\r\\n\\r\\n  function totalValuation() external view returns (uint256);\\r\\n\\r\\n  function getUSDCShareValue(uint256 amount) external view returns (uint256);\\r\\n\\r\\n  function fetchMarketPrices() external view returns (uint256, uint256);\\r\\n\\r\\n  function getVersion() external view returns (uint64);\\r\\n\\r\\n  function unitPrice() external view returns (uint256);\\r\\n  \\r\\n}\\r\\n\",\"keccak256\":\"0x0795abf370daca8b74052ab6f425ab982bb4e0aecc4a72de19b3ff505d9e18a5\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}