{"id":"3654ffd5ad69a7b21db4a6e6b74adb45","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"},"contracts/BaluniV1PoolPeriphery.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n/**\r\n *  __                  __                      __\r\n * /  |                /  |                    /  |\r\n * $$ |____    ______  $$ | __    __  _______  $$/\r\n * $$      \\  /      \\ $$ |/  |  /  |/       \\ /  |\r\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\r\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\r\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\__$$ |$$ |  $$ |$$ |\r\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\r\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\r\n *\r\n *\r\n *                  ,-\"\"\"\"-.\r\n *                ,'      _ `.\r\n *               /       )_)  \\\r\n *              :              :\r\n *              \\              /\r\n *               \\            /\r\n *                `.        ,'\r\n *                  `.    ,'\r\n *                    `.,'\r\n *                     /\\`.   ,-._\r\n *                         `-'    \\__\r\n *                              .\r\n *               s                \\\r\n *                                \\\\\r\n *                                 \\\\\r\n *                                  >\\/7\r\n *                              _.-(6'  \\\r\n *                             (=___._/` \\\r\n *                                  )  \\ |\r\n *                                 /   / |\r\n *                                /    > /\r\n *                               j    < _\\\r\n *                           _.-' :      ``.\r\n *                           \\ r=._\\        `.\r\n */\r\nimport './interfaces/IBaluniV1PoolFactory.sol';\r\nimport './interfaces/IBaluniV1Pool.sol';\r\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\r\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\r\n\r\n/**\r\n * @title BaluniV1PoolPeriphery\r\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\r\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\r\n */\r\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\r\n    IBaluniV1PoolFactory public poolFactory;\r\n\r\n    mapping(address => mapping(address => uint256)) public poolsReserves; // Mapping of token address to pool addresses (for quick lookup\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     */\r\n    function initialize(address _poolFactory) public initializer {\r\n        __UUPSUpgradeable_init();\r\n        __Ownable_init(msg.sender);\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    /**\r\n     * @dev Initializes the contract by setting the pool factory address.\r\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\r\n     */\r\n    function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    /**\r\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\r\n     * @param newImplementation The address of the new implementation contract.\r\n     * @notice This function can only be called by the contract owner.\r\n     */\r\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\r\n\r\n    /**\r\n     * @dev Swaps tokens in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n        poolsReserves[poolAddress][fromToken] += amount;\r\n\r\n        uint256 toSend = pool.swap(fromToken, toToken, amount, receiver);\r\n        poolsReserves[poolAddress][toToken] -= toSend;\r\n\r\n        IERC20(toToken).transfer(receiver, toSend);\r\n\r\n        return toSend;\r\n    }\r\n\r\n    /**\r\n     * @dev Performs batch swaps between multiple token pairs.\r\n     * @param fromTokens An array of addresses representing the tokens to swap from.\r\n     * @param toTokens An array of addresses representing the tokens to swap to.\r\n     * @param amounts An array of amounts representing the amounts to swap.\r\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\r\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\r\n     */\r\n    function batchSwap(\r\n        address[] calldata fromTokens,\r\n        address[] calldata toTokens,\r\n        uint256[] calldata amounts,\r\n        address[] calldata receivers\r\n    ) external returns (uint256[] memory) {\r\n        require(\r\n            fromTokens.length == toTokens.length &&\r\n                toTokens.length == amounts.length &&\r\n                amounts.length == receivers.length,\r\n            'Input arrays length mismatch'\r\n        );\r\n\r\n        uint256[] memory amountsOut = new uint256[](fromTokens.length);\r\n\r\n        for (uint256 i = 0; i < fromTokens.length; i++) {\r\n            require(amounts[i] > 0, 'Amount must be greater than zero');\r\n            address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\r\n            IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n\r\n            require(IERC20(fromTokens[i]).balanceOf(msg.sender) >= amounts[i], 'Insufficient Balance');\r\n            IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\r\n            poolsReserves[poolAddress][fromTokens[i]] += amounts[i];\r\n\r\n            uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\r\n            poolsReserves[poolAddress][toTokens[i]] -= amountOut;\r\n\r\n            require(IERC20(toTokens[i]).balanceOf(address(this)) >= amountOut, 'Insufficient Liquidity');\r\n\r\n            IERC20(toTokens[i]).transfer(receivers[i], amountOut);\r\n        }\r\n\r\n        return amountsOut;\r\n    }\r\n\r\n    function rebalanceWeights(address poolAddress, address receiver) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        uint256[] memory amounts = pool.rebalanceWeights(receiver);\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            poolsReserves[poolAddress][assets[i]] += amounts[i];\r\n            IERC20(assets[i]).transferFrom(receiver, address(this), amounts[i]);\r\n        }\r\n    }\r\n\r\n    function smartSwap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256) {\r\n        require(amount > 0, 'Amount must be greater than zero');\r\n\r\n        address[] memory pools = _findOptimalRoute(fromToken, toToken, amount);\r\n        require(pools.length > 0, 'No route found');\r\n\r\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\r\n\r\n        uint256 amountRemaining = amount;\r\n        address currentToken = fromToken;\r\n        for (uint256 i = 0; i < pools.length; i++) {\r\n            IBaluniV1Pool pool = IBaluniV1Pool(pools[i]);\r\n            address[] memory poolTokens = pool.getAssets();\r\n            uint256[] memory reserves = getReserves(pools[i]);\r\n\r\n            address nextToken;\r\n            for (uint256 j = 0; j < poolTokens.length; j++) {\r\n                if (poolTokens[j] != currentToken && reserves[j] > 0) {\r\n                    nextToken = poolTokens[j];\r\n                    break;\r\n                }\r\n            }\r\n\r\n            require(nextToken != address(0), 'No valid next token found');\r\n            require(pool.getAssetReserve(nextToken) >= amountRemaining, 'Insufficient liquidity in pool for swap');\r\n\r\n            uint256 amountOut = pool.swap(\r\n                currentToken,\r\n                nextToken,\r\n                amountRemaining,\r\n                i == pools.length - 1 ? receiver : address(this)\r\n            );\r\n\r\n            poolsReserves[pools[i]][currentToken] += amountRemaining;\r\n            poolsReserves[pools[i]][nextToken] -= amountOut;\r\n\r\n            currentToken = nextToken;\r\n            amountRemaining = amountOut;\r\n        }\r\n\r\n        return amountRemaining;\r\n    }\r\n\r\n    function _findOptimalRoute(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount\r\n    ) internal view returns (address[] memory) {\r\n        address[] memory allPools = poolFactory.getAllPools();\r\n        uint256 poolCount = allPools.length;\r\n\r\n        address[] memory path = new address[](poolCount);\r\n        uint256 pathLength = 0;\r\n        bool[] memory visited = new bool[](poolCount);\r\n\r\n        address[] memory queue = new address[](poolCount);\r\n        uint256 queueHead = 0;\r\n        uint256 queueTail = 0;\r\n\r\n        queue[queueTail++] = fromToken;\r\n\r\n        while (queueHead < queueTail) {\r\n            address currentToken = queue[queueHead++];\r\n            if (currentToken == toToken) {\r\n                address[] memory finalPath = new address[](pathLength);\r\n                for (uint256 i = 0; i < pathLength; i++) {\r\n                    finalPath[i] = path[i];\r\n                }\r\n                return finalPath;\r\n            }\r\n\r\n            for (uint256 i = 0; i < poolCount; i++) {\r\n                if (!visited[i]) {\r\n                    IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\r\n                    address[] memory poolTokens = pool.getAssets();\r\n\r\n                    if (\r\n                        _containsToken(poolTokens, currentToken) && _hasSufficientLiquidity(pool, currentToken, amount)\r\n                    ) {\r\n                        address nextToken = _getOtherTokenInPool(poolTokens, currentToken);\r\n                        path[pathLength++] = allPools[i];\r\n                        queue[queueTail++] = nextToken;\r\n                        visited[i] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        address[] memory addr = new address[](0);\r\n        return addr;\r\n    }\r\n\r\n    function _containsToken(address[] memory tokens, address token) internal pure returns (bool) {\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            if (tokens[i] == token) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _hasSufficientLiquidity(IBaluniV1Pool pool, address token, uint256 amount) internal view returns (bool) {\r\n        uint256[] memory reserves = getReserves(address(pool));\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            if (assets[i] == token) {\r\n                return reserves[i] >= amount;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function _getOtherTokenInPool(address[] memory tokens, address token) internal pure returns (address) {\r\n        for (uint256 i = 0; i < tokens.length; i++) {\r\n            if (tokens[i] != token) {\r\n                return tokens[i];\r\n            }\r\n        }\r\n        revert('Token not found in pool');\r\n    }\r\n\r\n    /**\r\n     * @dev Adds liquidity to a BaluniV1Pool.\r\n     * @param amounts An array of amounts for each asset to add as liquidity.\r\n     */\r\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        address[] memory assets = pool.getAssets();\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            address asset = assets[i];\r\n            uint256 amount = amounts[i];\r\n            poolsReserves[poolAddress][asset] += amount;\r\n            IERC20(asset).transferFrom(msg.sender, address(this), amount);\r\n        }\r\n\r\n        pool.mint(receiver, amounts);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes liquidity from a BaluniV1Pool.\r\n     * @param share The amount of liquidity tokens to remove.\r\n     * @param poolAddress The address of the BaluniV1Pool.\r\n     */\r\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\r\n        require(share > 0, 'Share must be greater than zero');\r\n        IERC20 poolToken = IERC20(poolAddress);\r\n\r\n        // Check allowance\r\n        uint256 allowance = poolToken.allowance(msg.sender, address(this));\r\n        require(allowance >= share, 'Insufficient allowance');\r\n\r\n        // Check balance\r\n        uint256 balance = poolToken.balanceOf(msg.sender);\r\n        require(balance >= share, 'Insufficient balance');\r\n\r\n        bool success = poolToken.transferFrom(msg.sender, address(this), share);\r\n        require(success, 'TransferFrom failed');\r\n\r\n        bool success2 = poolToken.transfer(poolAddress, share);\r\n        require(success2, 'Transfer failed');\r\n\r\n        uint256[] memory amountsOut = IBaluniV1Pool(poolAddress).burn(receiver);\r\n\r\n        address[] memory assets = IBaluniV1Pool(poolAddress).getAssets();\r\n\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            require(IERC20(assets[i]).balanceOf(address(this)) >= amountsOut[i], 'Insufficient Liquidity');\r\n            poolsReserves[poolAddress][assets[i]] -= amountsOut[i];\r\n            bool assetTransferSuccess = IERC20(assets[i]).transfer(receiver, amountsOut[i]);\r\n            require(assetTransferSuccess, 'Asset transfer failed');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\r\n     * @param fromToken The address of the token to swap from.\r\n     * @param toToken The address of the token to swap to.\r\n     * @param amount The amount of tokens to swap.\r\n     * @return The amount of tokens received after the swap.\r\n     */\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\r\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        return pool.getAmountOut(fromToken, toToken, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Performs rebalance if needed for the given tokens.\r\n     * @param poolAddress The address of the token pool to rebalance.\r\n     */\r\n    function performRebalanceIfNeeded(address poolAddress) external {\r\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\r\n        uint256 balance = IERC20(poolAddress).balanceOf(msg.sender);\r\n        uint256 totalSupply = IERC20(poolAddress).totalSupply();\r\n        require((balance * 10000) / totalSupply >= 100, 'Insufficient balance');\r\n        (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove) = pool.performRebalanceIfNeeded();\r\n\r\n        // update Pool reserves\r\n        address[] memory assets = pool.getAssets();\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            poolsReserves[poolAddress][assets[i]] += amountsToAdd[i];\r\n            poolsReserves[poolAddress][assets[i]] -= amountsToRemove[i];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an array of pool addresses that contain the given token.\r\n     * @param token The address of the token to search for.\r\n     * @return An array of pool addresses.\r\n     */\r\n    function getPoolsContainingToken(address token) external view returns (address[] memory) {\r\n        return poolFactory.getPoolsByAsset(token);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the version of the contract.\r\n     * @return The version string.\r\n     */\r\n    function getVersion() external view returns (uint64) {\r\n        return _getInitializedVersion();\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the address of the pool factory contract.\r\n     * Can only be called by the contract owner.\r\n     * @param _poolFactory The new address of the pool factory contract.\r\n     */\r\n    function changePoolFactory(address _poolFactory) external onlyOwner {\r\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\r\n    }\r\n\r\n    function getReserves(address pool) public view returns (uint256[] memory) {\r\n        address[] memory assets = IBaluniV1Pool(pool).getAssets();\r\n        uint256[] memory reserves = new uint256[](assets.length);\r\n        for (uint256 i = 0; i < assets.length; i++) {\r\n            reserves[i] = poolsReserves[pool][assets[i]];\r\n        }\r\n        return reserves;\r\n    }\r\n\r\n    function getAssetReserve(address pool, address asset) external view returns (uint256) {\r\n        return poolsReserves[pool][asset];\r\n    }\r\n}\r\n"},"contracts/interfaces/IBaluniV1Pool.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\r\n\r\ninterface IBaluniV1Pool {\r\n    // Views\r\n    function rebalancer() external view returns (address);\r\n\r\n    function assets(uint256 index) external view returns (address);\r\n\r\n    function weights(uint256 index) external view returns (uint256);\r\n\r\n    function trigger() external view returns (uint256);\r\n\r\n    function ONE() external view returns (uint256);\r\n\r\n    function router() external view returns (address);\r\n\r\n    function SWAP_FEE_BPS() external view returns (uint256);\r\n\r\n    function getReserves() external view returns (uint256[] memory);\r\n\r\n    function getAssets() external view returns (address[] memory);\r\n\r\n    function getAssetReserve(address asset) external view returns (uint256);\r\n\r\n    function getWeights() external view returns (uint256[] memory);\r\n\r\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\r\n\r\n    function performRebalanceIfNeeded()\r\n        external\r\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\r\n\r\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\r\n\r\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\r\n\r\n    function liquidity() external view returns (uint256);\r\n\r\n    function unitPrice() external view returns (uint256);\r\n\r\n    function swap(\r\n        address fromToken,\r\n        address toToken,\r\n        uint256 amount,\r\n        address receiver\r\n    ) external returns (uint256 toSend);\r\n\r\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\r\n\r\n    function burn(address to) external returns (uint256[] memory);\r\n\r\n    function changeRebalancer(address _newRebalancer) external;\r\n\r\n    function changeRouter(address _newRouter) external;\r\n\r\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\r\n\r\n    function updateReserves(uint256[] memory amounts, bool increase) external;\r\n\r\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\r\n\r\n    struct AssetInfo {\r\n        address asset;\r\n        uint256 weight;\r\n    }\r\n\r\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\r\n\r\n    // Events\r\n    event RebalancePerformed(address indexed by, address[] assets);\r\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\r\n    event Burn(address indexed user, uint256 sharesBurned);\r\n    event Mint(address indexed to, uint256 sharesMinted);\r\n    event Swap(\r\n        address indexed user,\r\n        address indexed fromToken,\r\n        address indexed toToken,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n}\r\n"},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"content":"// SPDX-License-Identifier: GNU AGPLv3\r\npragma solidity 0.8.25;\r\n\r\ninterface IBaluniV1PoolFactory {\r\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\r\n\r\n    function getPoolsByAsset(address token) external view returns (address[] memory);\r\n\r\n    function poolExist(address _pool) external view returns (bool);\r\n\r\n    function getAllPools() external view returns (address[] memory);\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"cancun","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates","devdoc","userdoc"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":677,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":676,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,676,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"cancun","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1126],"IERC1822Proxiable":[686],"Initializable":[448],"UUPSUpgradeable":[630]},"id":631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:2"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":687,"src":"141:88:2","symbolAliases":[{"foreign":{"id":451,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"149:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":454,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":1127,"src":"230:84:2","symbolAliases":[{"foreign":{"id":453,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"238:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":456,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":631,"sourceUnit":449,"src":"315:50:2","symbolAliases":[{"foreign":{"id":455,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"323:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":458,"name":"Initializable","nameLocations":["1023:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"1023:13:2"},"id":459,"nodeType":"InheritanceSpecifier","src":"1023:13:2"},{"baseName":{"id":460,"name":"IERC1822Proxiable","nameLocations":["1038:17:2"],"nodeType":"IdentifierPath","referencedDeclaration":686,"src":"1038:17:2"},"id":461,"nodeType":"InheritanceSpecifier","src":"1038:17:2"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"367:618:2","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":630,"linearizedBaseContracts":[630,686,448],"name":"UUPSUpgradeable","nameLocation":"1004:15:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"1062:61:2","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":468,"mutability":"immutable","name":"__self","nameLocation":"1154:6:2","nodeType":"VariableDeclaration","scope":630,"src":"1128:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":469,"nodeType":"StructuredDocumentation","src":"1183:631:2","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":472,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:2","nodeType":"VariableDeclaration","scope":630,"src":"1819:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":470,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"1884:65:2","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":475,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:2","nodeType":"ErrorDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"1987:2:2"},"src":"1954:36:2"},{"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"1996:68:2","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":480,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:2","nodeType":"ErrorDefinition","parameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"slot","nameLocation":"2112:4:2","nodeType":"VariableDeclaration","scope":480,"src":"2104:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:2"},"src":"2069:49:2"},{"body":{"id":487,"nodeType":"Block","src":"2643:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2653:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"2653:13:2"},{"id":486,"nodeType":"PlaceholderStatement","src":"2676:1:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2124:493:2","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":488,"name":"onlyProxy","nameLocation":"2631:9:2","nodeType":"ModifierDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2640:2:2"},"src":"2622:62:2","virtual":false,"visibility":"internal"},{"body":{"id":495,"nodeType":"Block","src":"2914:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":491,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"2924:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2924:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2924:20:2"},{"id":494,"nodeType":"PlaceholderStatement","src":"2954:1:2"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"2690:195:2","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":496,"name":"notDelegated","nameLocation":"2899:12:2","nodeType":"ModifierDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[],"src":"2911:2:2"},"src":"2890:72:2","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"3028:7:2","statements":[]},"id":502,"implemented":true,"kind":"function","modifiers":[{"id":499,"kind":"modifierInvocation","modifierName":{"id":498,"name":"onlyInitializing","nameLocations":["3011:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3011:16:2"},"nodeType":"ModifierInvocation","src":"3011:16:2"}],"name":"__UUPSUpgradeable_init","nameLocation":"2977:22:2","nodeType":"FunctionDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"2999:2:2"},"returnParameters":{"id":500,"nodeType":"ParameterList","parameters":[],"src":"3028:0:2"},"scope":630,"src":"2968:67:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":507,"nodeType":"Block","src":"3111:7:2","statements":[]},"id":508,"implemented":true,"kind":"function","modifiers":[{"id":505,"kind":"modifierInvocation","modifierName":{"id":504,"name":"onlyInitializing","nameLocations":["3094:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"3094:16:2"},"nodeType":"ModifierInvocation","src":"3094:16:2"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3050:32:2","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3082:2:2"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[],"src":"3111:0:2"},"scope":630,"src":"3041:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[685],"body":{"id":519,"nodeType":"Block","src":"3783:56:2","statements":[{"expression":{"expression":{"id":516,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3800:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3813:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"3800:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":515,"id":518,"nodeType":"Return","src":"3793:39:2"}]},"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"3123:577:2","text":" @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":520,"implemented":true,"kind":"function","modifiers":[{"id":512,"kind":"modifierInvocation","modifierName":{"id":511,"name":"notDelegated","nameLocations":["3752:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":496,"src":"3752:12:2"},"nodeType":"ModifierInvocation","src":"3752:12:2"}],"name":"proxiableUUID","nameLocation":"3714:13:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"3727:2:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"3774:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3774:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3773:9:2"},"scope":630,"src":"3705:134:2","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":539,"nodeType":"Block","src":"4263:109:2","statements":[{"expression":{"arguments":[{"id":531,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4291:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":530,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4273:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4273:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":533,"nodeType":"ExpressionStatement","src":"4273:36:2"},{"expression":{"arguments":[{"id":535,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4341:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":536,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4360:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":534,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4319:21:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4319:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4319:46:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"3845:308:2","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":540,"implemented":true,"kind":"function","modifiers":[{"id":528,"kind":"modifierInvocation","modifierName":{"id":527,"name":"onlyProxy","nameLocations":["4253:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":488,"src":"4253:9:2"},"nodeType":"ModifierInvocation","src":"4253:9:2"}],"name":"upgradeToAndCall","nameLocation":"4167:16:2","nodeType":"FunctionDefinition","parameters":{"id":526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"newImplementation","nameLocation":"4192:17:2","nodeType":"VariableDeclaration","scope":540,"src":"4184:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":522,"name":"address","nodeType":"ElementaryTypeName","src":"4184:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":525,"mutability":"mutable","name":"data","nameLocation":"4224:4:2","nodeType":"VariableDeclaration","scope":540,"src":"4211:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":524,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4183:46:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"4263:0:2"},"scope":630,"src":"4158:214:2","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":561,"nodeType":"Block","src":"4644:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":546,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4679:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4671:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:2","typeDescriptions":{}}},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4671:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":548,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4688:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4671:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":550,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"4749:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4762:17:2","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":884,"src":"4749:30:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4749:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":553,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"4785:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4749:42:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4671:120:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":560,"nodeType":"IfStatement","src":"4654:251:2","trueBody":{"id":559,"nodeType":"Block","src":"4844:61:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":556,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"4865:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4865:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":558,"nodeType":"RevertStatement","src":"4858:36:2"}]}}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4378:216:2","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."},"id":562,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4608:11:2","nodeType":"FunctionDefinition","parameters":{"id":542,"nodeType":"ParameterList","parameters":[],"src":"4619:2:2"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"4644:0:2"},"scope":630,"src":"4599:312:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":577,"nodeType":"Block","src":"5080:161:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":568,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5102:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$630","typeString":"contract UUPSUpgradeable"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5094:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"5094:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":570,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5111:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5094:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":576,"nodeType":"IfStatement","src":"5090:145:2","trueBody":{"id":575,"nodeType":"Block","src":"5119:116:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5195:27:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5195:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"RevertStatement","src":"5188:36:2"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"4917:106:2","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":578,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5037:18:2","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"5055:2:2"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"5080:0:2"},"scope":630,"src":"5028:213:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":579,"nodeType":"StructuredDocumentation","src":"5247:372:2","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":584,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5633:17:2","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"newImplementation","nameLocation":"5659:17:2","nodeType":"VariableDeclaration","scope":584,"src":"5651:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:27:2"},"returnParameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"5694:0:2"},"scope":630,"src":"5624:71:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":628,"nodeType":"Block","src":"6137:453:2","statements":[{"clauses":[{"block":{"id":617,"nodeType":"Block","src":"6227:212:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":600,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6245:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":601,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6253:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6266:19:2","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":853,"src":"6253:32:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6245:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":609,"nodeType":"IfStatement","src":"6241:120:2","trueBody":{"id":608,"nodeType":"Block","src":"6287:74:2","statements":[{"errorCall":{"arguments":[{"id":605,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"6341:4:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":604,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"6312:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6312:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":607,"nodeType":"RevertStatement","src":"6305:41:2"}]}},{"expression":{"arguments":[{"id":613,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6404:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"6423:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":610,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6374:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6387:16:2","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":945,"src":"6374:29:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":616,"nodeType":"ExpressionStatement","src":"6374:54:2"}]},"errorName":"","id":618,"nodeType":"TryCatchClause","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"slot","nameLocation":"6221:4:2","nodeType":"VariableDeclaration","scope":618,"src":"6213:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":597,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6213:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6212:14:2"},"src":"6204:235:2"},{"block":{"id":625,"nodeType":"Block","src":"6446:138:2","statements":[{"errorCall":{"arguments":[{"id":622,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6555:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":619,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6513:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1126_$","typeString":"type(library ERC1967Utils)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6526:28:2","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":858,"src":"6513:41:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6513:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":624,"nodeType":"RevertStatement","src":"6506:67:2"}]},"errorName":"","id":626,"nodeType":"TryCatchClause","src":"6440:144:2"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":593,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"6169:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"6151:17:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$686_$","typeString":"type(contract IERC1822Proxiable)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$686","typeString":"contract IERC1822Proxiable"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6188:13:2","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":685,"src":"6151:50:2","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6151:52:2","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":627,"nodeType":"TryStatement","src":"6147:437:2"}]},"documentation":{"id":585,"nodeType":"StructuredDocumentation","src":"5701:346:2","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."},"id":629,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6061:21:2","nodeType":"FunctionDefinition","parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":587,"mutability":"mutable","name":"newImplementation","nameLocation":"6091:17:2","nodeType":"VariableDeclaration","scope":629,"src":"6083:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"6083:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"data","nameLocation":"6123:4:2","nodeType":"VariableDeclaration","scope":629,"src":"6110:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":588,"name":"bytes","nodeType":"ElementaryTypeName","src":"6110:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6082:46:2"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[],"src":"6137:0:2"},"scope":630,"src":"6052:538:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":631,"src":"986:5606:2","usedErrors":[211,214,475,480,858,871,1768,1771],"usedEvents":[219,837]}],"src":"115:6478:2"},"id":2},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[676],"Initializable":[448]},"id":677,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":634,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":677,"sourceUnit":449,"src":"126:63:3","symbolAliases":[{"foreign":{"id":633,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":636,"name":"Initializable","nameLocations":["728:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:3"},"id":637,"nodeType":"InheritanceSpecifier","src":"728:13:3"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"191:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":676,"linearizedBaseContracts":[676,448],"name":"ContextUpgradeable","nameLocation":"706:18:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":642,"nodeType":"Block","src":"800:7:3","statements":[]},"id":643,"implemented":true,"kind":"function","modifiers":[{"id":640,"kind":"modifierInvocation","modifierName":{"id":639,"name":"onlyInitializing","nameLocations":["783:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:3"},"nodeType":"ModifierInvocation","src":"783:16:3"}],"name":"__Context_init","nameLocation":"757:14:3","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"771:2:3"},"returnParameters":{"id":641,"nodeType":"ParameterList","parameters":[],"src":"800:0:3"},"scope":676,"src":"748:59:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":648,"nodeType":"Block","src":"875:7:3","statements":[]},"id":649,"implemented":true,"kind":"function","modifiers":[{"id":646,"kind":"modifierInvocation","modifierName":{"id":645,"name":"onlyInitializing","nameLocations":["858:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:3"},"nodeType":"ModifierInvocation","src":"858:16:3"}],"name":"__Context_init_unchained","nameLocation":"822:24:3","nodeType":"FunctionDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[],"src":"846:2:3"},"returnParameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"875:0:3"},"scope":676,"src":"813:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":657,"nodeType":"Block","src":"949:34:3","statements":[{"expression":{"expression":{"id":654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":653,"id":656,"nodeType":"Return","src":"959:17:3"}]},"id":658,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:3","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[],"src":"906:2:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"940:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":651,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:3"},"scope":676,"src":"887:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":666,"nodeType":"Block","src":"1056:32:3","statements":[{"expression":{"expression":{"id":663,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:3","memberName":"data","nodeType":"MemberAccess","src":"1073:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":662,"id":665,"nodeType":"Return","src":"1066:15:3"}]},"id":667,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:3","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[],"src":"1006:2:3"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"1040:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:3"},"scope":676,"src":"989:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"1166:25:3","statements":[{"expression":{"hexValue":"30","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":671,"id":673,"nodeType":"Return","src":"1176:8:3"}]},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:3","nodeType":"FunctionDefinition","parameters":{"id":668,"nodeType":"ParameterList","parameters":[],"src":"1123:2:3"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"1157:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:3"},"scope":676,"src":"1094:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":677,"src":"688:505:3","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[686]},"id":687,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":678,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"139:203:4","text":" @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":686,"linearizedBaseContracts":[686],"name":"IERC1822Proxiable","nameLocation":"353:17:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":680,"nodeType":"StructuredDocumentation","src":"377:438:4","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":685,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"829:13:4","nodeType":"FunctionDefinition","parameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"842:2:4"},"returnParameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"868:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"868:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"867:9:4"},"scope":686,"src":"820:57:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":687,"src":"343:536:4","usedErrors":[],"usedEvents":[]}],"src":"113:767:4"},"id":4},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[823],"IERC20Errors":[728],"IERC721Errors":[776]},"id":824,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":688,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":689,"nodeType":"StructuredDocumentation","src":"138:139:5","text":" @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"IERC20Errors","nameLocation":"288:12:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":690,"nodeType":"StructuredDocumentation","src":"307:309:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":698,"name":"ERC20InsufficientBalance","nameLocation":"627:24:5","nodeType":"ErrorDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"sender","nameLocation":"660:6:5","nodeType":"VariableDeclaration","scope":698,"src":"652:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"balance","nameLocation":"676:7:5","nodeType":"VariableDeclaration","scope":698,"src":"668:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"needed","nameLocation":"693:6:5","nodeType":"VariableDeclaration","scope":698,"src":"685:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"651:49:5"},"src":"621:80:5"},{"documentation":{"id":699,"nodeType":"StructuredDocumentation","src":"707:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":703,"name":"ERC20InvalidSender","nameLocation":"870:18:5","nodeType":"ErrorDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"sender","nameLocation":"897:6:5","nodeType":"VariableDeclaration","scope":703,"src":"889:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"889:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"888:16:5"},"src":"864:41:5"},{"documentation":{"id":704,"nodeType":"StructuredDocumentation","src":"911:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":708,"name":"ERC20InvalidReceiver","nameLocation":"1081:20:5","nodeType":"ErrorDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"receiver","nameLocation":"1110:8:5","nodeType":"VariableDeclaration","scope":708,"src":"1102:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"1102:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1101:18:5"},"src":"1075:45:5"},{"documentation":{"id":709,"nodeType":"StructuredDocumentation","src":"1126:345:5","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":717,"name":"ERC20InsufficientAllowance","nameLocation":"1482:26:5","nodeType":"ErrorDefinition","parameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"spender","nameLocation":"1517:7:5","nodeType":"VariableDeclaration","scope":717,"src":"1509:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":710,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"allowance","nameLocation":"1534:9:5","nodeType":"VariableDeclaration","scope":717,"src":"1526:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":712,"name":"uint256","nodeType":"ElementaryTypeName","src":"1526:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":715,"mutability":"mutable","name":"needed","nameLocation":"1553:6:5","nodeType":"VariableDeclaration","scope":717,"src":"1545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1508:52:5"},"src":"1476:85:5"},{"documentation":{"id":718,"nodeType":"StructuredDocumentation","src":"1567:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":722,"name":"ERC20InvalidApprover","nameLocation":"1752:20:5","nodeType":"ErrorDefinition","parameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"approver","nameLocation":"1781:8:5","nodeType":"VariableDeclaration","scope":722,"src":"1773:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":719,"name":"address","nodeType":"ElementaryTypeName","src":"1773:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1772:18:5"},"src":"1746:45:5"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"1797:195:5","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":727,"name":"ERC20InvalidSpender","nameLocation":"2003:19:5","nodeType":"ErrorDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"spender","nameLocation":"2031:7:5","nodeType":"VariableDeclaration","scope":727,"src":"2023:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"2023:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2022:17:5"},"src":"1997:43:5"}],"scope":824,"src":"278:1764:5","usedErrors":[698,703,708,717,722,727],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"2044:141:5","text":" @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."},"fullyImplemented":true,"id":776,"linearizedBaseContracts":[776],"name":"IERC721Errors","nameLocation":"2196:13:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2216:219:5","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":734,"name":"ERC721InvalidOwner","nameLocation":"2446:18:5","nodeType":"ErrorDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"owner","nameLocation":"2473:5:5","nodeType":"VariableDeclaration","scope":734,"src":"2465:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"2465:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2464:15:5"},"src":"2440:40:5"},{"documentation":{"id":735,"nodeType":"StructuredDocumentation","src":"2486:132:5","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":739,"name":"ERC721NonexistentToken","nameLocation":"2629:22:5","nodeType":"ErrorDefinition","parameters":{"id":738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":737,"mutability":"mutable","name":"tokenId","nameLocation":"2660:7:5","nodeType":"VariableDeclaration","scope":739,"src":"2652:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2652:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2651:17:5"},"src":"2623:46:5"},{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"2675:289:5","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":748,"name":"ERC721IncorrectOwner","nameLocation":"2975:20:5","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"3004:6:5","nodeType":"VariableDeclaration","scope":748,"src":"2996:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"2996:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"tokenId","nameLocation":"3020:7:5","nodeType":"VariableDeclaration","scope":748,"src":"3012:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"3012:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"owner","nameLocation":"3037:5:5","nodeType":"VariableDeclaration","scope":748,"src":"3029:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2995:48:5"},"src":"2969:75:5"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"3050:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":753,"name":"ERC721InvalidSender","nameLocation":"3213:19:5","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"3241:6:5","nodeType":"VariableDeclaration","scope":753,"src":"3233:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"3233:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3232:16:5"},"src":"3207:42:5"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"3255:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":758,"name":"ERC721InvalidReceiver","nameLocation":"3425:21:5","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"3455:8:5","nodeType":"VariableDeclaration","scope":758,"src":"3447:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"3447:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3446:18:5"},"src":"3419:46:5"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"3471:247:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":765,"name":"ERC721InsufficientApproval","nameLocation":"3729:26:5","nodeType":"ErrorDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"operator","nameLocation":"3764:8:5","nodeType":"VariableDeclaration","scope":765,"src":"3756:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"3756:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"tokenId","nameLocation":"3782:7:5","nodeType":"VariableDeclaration","scope":765,"src":"3774:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3755:35:5"},"src":"3723:68:5"},{"documentation":{"id":766,"nodeType":"StructuredDocumentation","src":"3797:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":770,"name":"ERC721InvalidApprover","nameLocation":"3982:21:5","nodeType":"ErrorDefinition","parameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"approver","nameLocation":"4012:8:5","nodeType":"VariableDeclaration","scope":770,"src":"4004:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"4004:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4003:18:5"},"src":"3976:46:5"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"4028:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":775,"name":"ERC721InvalidOperator","nameLocation":"4236:21:5","nodeType":"ErrorDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"operator","nameLocation":"4266:8:5","nodeType":"VariableDeclaration","scope":775,"src":"4258:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"4258:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4257:18:5"},"src":"4230:46:5"}],"scope":824,"src":"2186:2092:5","usedErrors":[734,739,748,753,758,765,770,775],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"4280:143:5","text":" @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."},"fullyImplemented":true,"id":823,"linearizedBaseContracts":[823],"name":"IERC1155Errors","nameLocation":"4434:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"4455:361:5","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":788,"name":"ERC1155InsufficientBalance","nameLocation":"4827:26:5","nodeType":"ErrorDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"sender","nameLocation":"4862:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4854:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"4854:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"balance","nameLocation":"4878:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4870:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"4870:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"needed","nameLocation":"4895:6:5","nodeType":"VariableDeclaration","scope":788,"src":"4887:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4887:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"tokenId","nameLocation":"4911:7:5","nodeType":"VariableDeclaration","scope":788,"src":"4903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"4903:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4853:66:5"},"src":"4821:99:5"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"4926:152:5","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":793,"name":"ERC1155InvalidSender","nameLocation":"5089:20:5","nodeType":"ErrorDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"sender","nameLocation":"5118:6:5","nodeType":"VariableDeclaration","scope":793,"src":"5110:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":790,"name":"address","nodeType":"ElementaryTypeName","src":"5110:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5109:16:5"},"src":"5083:43:5"},{"documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"5132:159:5","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":798,"name":"ERC1155InvalidReceiver","nameLocation":"5302:22:5","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":796,"mutability":"mutable","name":"receiver","nameLocation":"5333:8:5","nodeType":"VariableDeclaration","scope":798,"src":"5325:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"5325:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5324:18:5"},"src":"5296:47:5"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"5349:256:5","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":805,"name":"ERC1155MissingApprovalForAll","nameLocation":"5616:28:5","nodeType":"ErrorDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"operator","nameLocation":"5653:8:5","nodeType":"VariableDeclaration","scope":805,"src":"5645:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":803,"mutability":"mutable","name":"owner","nameLocation":"5671:5:5","nodeType":"VariableDeclaration","scope":805,"src":"5663:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"5663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5644:33:5"},"src":"5610:68:5"},{"documentation":{"id":806,"nodeType":"StructuredDocumentation","src":"5684:174:5","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":810,"name":"ERC1155InvalidApprover","nameLocation":"5869:22:5","nodeType":"ErrorDefinition","parameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"approver","nameLocation":"5900:8:5","nodeType":"VariableDeclaration","scope":810,"src":"5892:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":807,"name":"address","nodeType":"ElementaryTypeName","src":"5892:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5891:18:5"},"src":"5863:47:5"},{"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"5916:197:5","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":815,"name":"ERC1155InvalidOperator","nameLocation":"6124:22:5","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"mutability":"mutable","name":"operator","nameLocation":"6155:8:5","nodeType":"VariableDeclaration","scope":815,"src":"6147:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"6147:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6146:18:5"},"src":"6118:47:5"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6171:280:5","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":822,"name":"ERC1155InvalidArrayLength","nameLocation":"6462:25:5","nodeType":"ErrorDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"idsLength","nameLocation":"6496:9:5","nodeType":"VariableDeclaration","scope":822,"src":"6488:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"6488:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"valuesLength","nameLocation":"6515:12:5","nodeType":"VariableDeclaration","scope":822,"src":"6507:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6507:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6487:41:5"},"src":"6456:73:5"}],"scope":824,"src":"4424:2107:5","usedErrors":[788,793,798,805,810,815,822],"usedEvents":[]}],"src":"112:6420:5"},"id":5},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[2008],"ERC1967Utils":[1126],"IBeacon":[1136],"StorageSlot":[2148]},"id":1127,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":825,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:6"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":827,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":1137,"src":"140:46:6","symbolAliases":[{"foreign":{"id":826,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"148:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":829,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2009,"src":"187:48:6","symbolAliases":[{"foreign":{"id":828,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"195:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":831,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1127,"sourceUnit":2149,"src":"236:56:6","symbolAliases":[{"foreign":{"id":830,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"244:11:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"294:154:6","text":" @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."},"fullyImplemented":true,"id":1126,"linearizedBaseContracts":[1126],"name":"ERC1967Utils","nameLocation":"457:12:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"660:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":837,"name":"Upgraded","nameLocation":"739:8:6","nodeType":"EventDefinition","parameters":{"id":836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"764:14:6","nodeType":"VariableDeclaration","scope":837,"src":"748:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"748:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"747:32:6"},"src":"733:47:6"},{"anonymous":false,"documentation":{"id":838,"nodeType":"StructuredDocumentation","src":"786:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":844,"name":"AdminChanged","nameLocation":"864:12:6","nodeType":"EventDefinition","parameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"885:13:6","nodeType":"VariableDeclaration","scope":844,"src":"877:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"877:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":842,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"908:8:6","nodeType":"VariableDeclaration","scope":844,"src":"900:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"876:41:6"},"src":"858:60:6"},{"anonymous":false,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"924:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":849,"name":"BeaconUpgraded","nameLocation":"994:14:6","nodeType":"EventDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"1025:6:6","nodeType":"VariableDeclaration","scope":849,"src":"1009:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1008:24:6"},"src":"988:45:6"},{"constant":true,"documentation":{"id":850,"nodeType":"StructuredDocumentation","src":"1039:170:6","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":853,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"1305:19:6","nodeType":"VariableDeclaration","scope":1126,"src":"1279:114:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:66:6","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":854,"nodeType":"StructuredDocumentation","src":"1400:69:6","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":858,"name":"ERC1967InvalidImplementation","nameLocation":"1480:28:6","nodeType":"ErrorDefinition","parameters":{"id":857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":856,"mutability":"mutable","name":"implementation","nameLocation":"1517:14:6","nodeType":"VariableDeclaration","scope":858,"src":"1509:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"1509:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1508:24:6"},"src":"1474:59:6"},{"documentation":{"id":859,"nodeType":"StructuredDocumentation","src":"1539:60:6","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":863,"name":"ERC1967InvalidAdmin","nameLocation":"1610:19:6","nodeType":"ErrorDefinition","parameters":{"id":862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":861,"mutability":"mutable","name":"admin","nameLocation":"1638:5:6","nodeType":"VariableDeclaration","scope":863,"src":"1630:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"1630:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1629:15:6"},"src":"1604:41:6"},{"documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"1651:61:6","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":868,"name":"ERC1967InvalidBeacon","nameLocation":"1723:20:6","nodeType":"ErrorDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":866,"mutability":"mutable","name":"beacon","nameLocation":"1752:6:6","nodeType":"VariableDeclaration","scope":868,"src":"1744:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"1744:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1743:16:6"},"src":"1717:43:6"},{"documentation":{"id":869,"nodeType":"StructuredDocumentation","src":"1766:82:6","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":871,"name":"ERC1967NonPayable","nameLocation":"1859:17:6","nodeType":"ErrorDefinition","parameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"1876:2:6"},"src":"1853:26:6"},{"body":{"id":883,"nodeType":"Block","src":"2018:77:6","statements":[{"expression":{"expression":{"arguments":[{"id":879,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2062:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":877,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"2035:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2047:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"2035:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2035:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2083:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"2035:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":876,"id":882,"nodeType":"Return","src":"2028:60:6"}]},"documentation":{"id":872,"nodeType":"StructuredDocumentation","src":"1885:67:6","text":" @dev Returns the current implementation address."},"id":884,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1966:17:6","nodeType":"FunctionDefinition","parameters":{"id":873,"nodeType":"ParameterList","parameters":[],"src":"1983:2:6"},"returnParameters":{"id":876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2009:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2008:9:6"},"scope":1126,"src":"1957:138:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":910,"nodeType":"Block","src":"2249:218:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":890,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2263:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2281:4:6","memberName":"code","nodeType":"MemberAccess","src":"2263:22:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2286:6:6","memberName":"length","nodeType":"MemberAccess","src":"2263:29:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2296:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2263:34:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":900,"nodeType":"IfStatement","src":"2259:119:6","trueBody":{"id":899,"nodeType":"Block","src":"2299:79:6","statements":[{"errorCall":{"arguments":[{"id":896,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2349:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":895,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"2320:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":898,"nodeType":"RevertStatement","src":"2313:54:6"}]}},{"expression":{"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":904,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"2414:19:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":901,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"2387:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2399:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"2387:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:47:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2435:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"2387:53:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":907,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"2443:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2387:73:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":909,"nodeType":"ExpressionStatement","src":"2387:73:6"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"2101:80:6","text":" @dev Stores a new address in the EIP1967 implementation slot."},"id":911,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"2195:18:6","nodeType":"FunctionDefinition","parameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"newImplementation","nameLocation":"2222:17:6","nodeType":"VariableDeclaration","scope":911,"src":"2214:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2213:27:6"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[],"src":"2249:0:6"},"scope":1126,"src":"2186:281:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":944,"nodeType":"Block","src":"2860:254:6","statements":[{"expression":{"arguments":[{"id":920,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2889:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":919,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"2870:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2870:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"2870:37:6"},{"eventCall":{"arguments":[{"id":924,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"2931:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":923,"name":"Upgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"2922:8:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"EmitStatement","src":"2917:32:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":927,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"2964:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2964:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2964:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":942,"nodeType":"Block","src":"3065:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":939,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3079:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3079:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"3079:18:6"}]},"id":943,"nodeType":"IfStatement","src":"2960:148:6","trueBody":{"id":938,"nodeType":"Block","src":"2981:78:6","statements":[{"expression":{"arguments":[{"id":934,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"3024:17:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"3043:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":931,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2995:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3003:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"2995:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":937,"nodeType":"ExpressionStatement","src":"2995:53:6"}]}}]},"documentation":{"id":912,"nodeType":"StructuredDocumentation","src":"2473:301:6","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":945,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2788:16:6","nodeType":"FunctionDefinition","parameters":{"id":917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"newImplementation","nameLocation":"2813:17:6","nodeType":"VariableDeclaration","scope":945,"src":"2805:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":916,"mutability":"mutable","name":"data","nameLocation":"2845:4:6","nodeType":"VariableDeclaration","scope":945,"src":"2832:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":915,"name":"bytes","nodeType":"ElementaryTypeName","src":"2832:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2804:46:6"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[],"src":"2860:0:6"},"scope":1126,"src":"2779:335:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"3120:145:6","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":949,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"3361:10:6","nodeType":"VariableDeclaration","scope":1126,"src":"3335:105:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3335:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3374:66:6","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"3844:68:6","statements":[{"expression":{"expression":{"arguments":[{"id":957,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"3888:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":955,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"3861:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3873:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"3861:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3900:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"3861:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":954,"id":960,"nodeType":"Return","src":"3854:51:6"}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"3447:340:6","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3801:8:6","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[],"src":"3809:2:6"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":962,"src":"3835:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3835:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3834:9:6"},"scope":1126,"src":"3792:120:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":992,"nodeType":"Block","src":"4039:172:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4053:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:6","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4065:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4053:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"4049:91:6","trueBody":{"id":981,"nodeType":"Block","src":"4077:63:6","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4126:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4118:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:6","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4118:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":974,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"4098:19:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4098:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":980,"nodeType":"RevertStatement","src":"4091:38:6"}]}},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":986,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"4176:10:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":983,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4149:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4161:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"4149:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4149:38:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4188:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"4149:44:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"4196:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4149:55:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"4149:55:6"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"3918:71:6","text":" @dev Stores a new address in the EIP1967 admin slot."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"4003:9:6","nodeType":"FunctionDefinition","parameters":{"id":966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"newAdmin","nameLocation":"4021:8:6","nodeType":"VariableDeclaration","scope":993,"src":"4013:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4013:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4012:18:6"},"returnParameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"4039:0:6"},"scope":1126,"src":"3994:217:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1009,"nodeType":"Block","src":"4379:85:6","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"4407:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4407:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1002,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4419:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":999,"name":"AdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"4394:12:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4394:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1004,"nodeType":"EmitStatement","src":"4389:39:6"},{"expression":{"arguments":[{"id":1006,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"4448:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1005,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"4438:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4438:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"4438:19:6"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"4217:109:6","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"4340:11:6","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"newAdmin","nameLocation":"4360:8:6","nodeType":"VariableDeclaration","scope":1010,"src":"4352:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":995,"name":"address","nodeType":"ElementaryTypeName","src":"4352:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4351:18:6"},"returnParameters":{"id":998,"nodeType":"ParameterList","parameters":[],"src":"4379:0:6"},"scope":1126,"src":"4331:133:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"4470:201:6","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1014,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4767:11:6","nodeType":"VariableDeclaration","scope":1126,"src":"4741:106:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4741:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4781:66:6","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1026,"nodeType":"Block","src":"4963:69:6","statements":[{"expression":{"expression":{"arguments":[{"id":1022,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5007:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1020,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"4980:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4992:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"4980:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4980:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5020:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"4980:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1019,"id":1025,"nodeType":"Return","src":"4973:52:6"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"4854:51:6","text":" @dev Returns the current beacon."},"id":1027,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4919:9:6","nodeType":"FunctionDefinition","parameters":{"id":1016,"nodeType":"ParameterList","parameters":[],"src":"4928:2:6"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1027,"src":"4954:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4954:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4953:9:6"},"scope":1126,"src":"4910:122:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"5161:390:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1033,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5175:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5185:4:6","memberName":"code","nodeType":"MemberAccess","src":"5175:14:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5190:6:6","memberName":"length","nodeType":"MemberAccess","src":"5175:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5200:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5175:26:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1043,"nodeType":"IfStatement","src":"5171:95:6","trueBody":{"id":1042,"nodeType":"Block","src":"5203:63:6","statements":[{"errorCall":{"arguments":[{"id":1039,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5245:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1038,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"5224:20:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1041,"nodeType":"RevertStatement","src":"5217:38:6"}]}},{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1047,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"5303:11:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1044,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"5276:11:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2148_$","typeString":"type(library StorageSlot)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5288:14:6","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2070,"src":"5276:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2044_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5316:5:6","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2043,"src":"5276:45:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1050,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5324:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5276:57:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1052,"nodeType":"ExpressionStatement","src":"5276:57:6"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"beaconImplementation","nameLocation":"5352:20:6","nodeType":"VariableDeclaration","scope":1072,"src":"5344:28:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"5344:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1060,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1056,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"5383:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1055,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"5375:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5394:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"5375:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5375:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5344:66:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1061,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5424:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5445:4:6","memberName":"code","nodeType":"MemberAccess","src":"5424:25:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5450:6:6","memberName":"length","nodeType":"MemberAccess","src":"5424:32:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5460:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5424:37:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1071,"nodeType":"IfStatement","src":"5420:125:6","trueBody":{"id":1070,"nodeType":"Block","src":"5463:82:6","statements":[{"errorCall":{"arguments":[{"id":1067,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"5513:20:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1066,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"5484:28:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:50:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1069,"nodeType":"RevertStatement","src":"5477:57:6"}]}}]},"documentation":{"id":1028,"nodeType":"StructuredDocumentation","src":"5038:71:6","text":" @dev Stores a new beacon in the EIP1967 beacon slot."},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"5123:10:6","nodeType":"FunctionDefinition","parameters":{"id":1031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1030,"mutability":"mutable","name":"newBeacon","nameLocation":"5142:9:6","nodeType":"VariableDeclaration","scope":1073,"src":"5134:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"5134:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5133:19:6"},"returnParameters":{"id":1032,"nodeType":"ParameterList","parameters":[],"src":"5161:0:6"},"scope":1126,"src":"5114:437:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1110,"nodeType":"Block","src":"6155:254:6","statements":[{"expression":{"arguments":[{"id":1082,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6176:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1081,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6165:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6165:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1084,"nodeType":"ExpressionStatement","src":"6165:21:6"},{"eventCall":{"arguments":[{"id":1086,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6216:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1085,"name":"BeaconUpgraded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"6201:14:6","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"6196:30:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6241:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6246:6:6","memberName":"length","nodeType":"MemberAccess","src":"6241:11:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6255:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6241:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1108,"nodeType":"Block","src":"6360:43:6","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1105,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6374:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6374:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1107,"nodeType":"ExpressionStatement","src":"6374:18:6"}]},"id":1109,"nodeType":"IfStatement","src":"6237:166:6","trueBody":{"id":1104,"nodeType":"Block","src":"6258:96:6","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1097,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"6309:9:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1096,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"6301:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1136_$","typeString":"type(contract IBeacon)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1136","typeString":"contract IBeacon"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6320:14:6","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1135,"src":"6301:33:6","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6301:35:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"6338:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1093,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"6272:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2008_$","typeString":"type(library Address)"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6280:20:6","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1927,"src":"6272:28:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6272:71:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1103,"nodeType":"ExpressionStatement","src":"6272:71:6"}]}}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"5557:514:6","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"6085:22:6","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"newBeacon","nameLocation":"6116:9:6","nodeType":"VariableDeclaration","scope":1111,"src":"6108:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"6108:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"data","nameLocation":"6140:4:6","nodeType":"VariableDeclaration","scope":1111,"src":"6127:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"6127:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:38:6"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"6155:0:6"},"scope":1126,"src":"6076:333:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"6634:86:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6648:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6652:5:6","memberName":"value","nodeType":"MemberAccess","src":"6648:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6660:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6648:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1123,"nodeType":"IfStatement","src":"6644:70:6","trueBody":{"id":1122,"nodeType":"Block","src":"6663:51:6","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1119,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6684:17:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6684:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1121,"nodeType":"RevertStatement","src":"6677:26:6"}]}}]},"documentation":{"id":1112,"nodeType":"StructuredDocumentation","src":"6415:178:6","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6607:16:6","nodeType":"FunctionDefinition","parameters":{"id":1113,"nodeType":"ParameterList","parameters":[],"src":"6623:2:6"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[],"src":"6634:0:6"},"scope":1126,"src":"6598:122:6","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1127,"src":"449:6273:6","usedErrors":[858,863,868,871],"usedEvents":[837,844,849]}],"src":"114:6609:6"},"id":6},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1136]},"id":1137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1128,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1129,"nodeType":"StructuredDocumentation","src":"134:79:7","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1136,"linearizedBaseContracts":[1136],"name":"IBeacon","nameLocation":"224:7:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"238:168:7","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1135,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:7","nodeType":"FunctionDefinition","parameters":{"id":1131,"nodeType":"ParameterList","parameters":[],"src":"434:2:7"},"returnParameters":{"id":1134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1135,"src":"460:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:7"},"scope":1136,"src":"411:58:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1137,"src":"214:257:7","usedErrors":[],"usedEvents":[]}],"src":"108:364:7"},"id":7},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1730,"src":"131:36:8","symbolAliases":[{"foreign":{"id":1139,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"139:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":1756,"src":"168:63:8","symbolAliases":[{"foreign":{"id":1141,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"176:14:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1144,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":2039,"src":"232:48:8","symbolAliases":[{"foreign":{"id":1143,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"240:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1146,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1652,"sourceUnit":824,"src":"281:65:8","symbolAliases":[{"foreign":{"id":1145,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"289:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1148,"name":"Context","nameLocations":["1428:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":2038,"src":"1428:7:8"},"id":1149,"nodeType":"InheritanceSpecifier","src":"1428:7:8"},{"baseName":{"id":1150,"name":"IERC20","nameLocations":["1437:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"1437:6:8"},"id":1151,"nodeType":"InheritanceSpecifier","src":"1437:6:8"},{"baseName":{"id":1152,"name":"IERC20Metadata","nameLocations":["1445:14:8"],"nodeType":"IdentifierPath","referencedDeclaration":1755,"src":"1445:14:8"},"id":1153,"nodeType":"InheritanceSpecifier","src":"1445:14:8"},{"baseName":{"id":1154,"name":"IERC20Errors","nameLocations":["1461:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"1461:12:8"},"id":1155,"nodeType":"InheritanceSpecifier","src":"1461:12:8"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1147,"nodeType":"StructuredDocumentation","src":"348:1052:8","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651,728,1755,1729,2038],"name":"ERC20","nameLocation":"1419:5:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1159,"mutability":"mutable","name":"_balances","nameLocation":"1524:9:8","nodeType":"VariableDeclaration","scope":1651,"src":"1480:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1158,"keyName":"account","keyNameLocation":"1496:7:8","keyType":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"1488:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1480:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1507:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1165,"mutability":"mutable","name":"_allowances","nameLocation":"1612:11:8","nodeType":"VariableDeclaration","scope":1651,"src":"1540:83:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1164,"keyName":"account","keyNameLocation":"1556:7:8","keyType":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1540:63:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1163,"keyName":"spender","keyNameLocation":"1583:7:8","keyType":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1567:35:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1594:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1167,"mutability":"mutable","name":"_totalSupply","nameLocation":"1646:12:8","nodeType":"VariableDeclaration","scope":1651,"src":"1630:28:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"1630:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1169,"mutability":"mutable","name":"_name","nameLocation":"1680:5:8","nodeType":"VariableDeclaration","scope":1651,"src":"1665:20:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1168,"name":"string","nodeType":"ElementaryTypeName","src":"1665:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1171,"mutability":"mutable","name":"_symbol","nameLocation":"1706:7:8","nodeType":"VariableDeclaration","scope":1651,"src":"1691:22:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1170,"name":"string","nodeType":"ElementaryTypeName","src":"1691:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1187,"nodeType":"Block","src":"1952:57:8","statements":[{"expression":{"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1962:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1180,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"1970:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1962:13:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1182,"nodeType":"ExpressionStatement","src":"1962:13:8"},{"expression":{"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1183,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"1985:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1184,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"1995:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1985:17:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1186,"nodeType":"ExpressionStatement","src":"1985:17:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"1720:171:8","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":1188,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"name_","nameLocation":"1922:5:8","nodeType":"VariableDeclaration","scope":1188,"src":"1908:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1173,"name":"string","nodeType":"ElementaryTypeName","src":"1908:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"symbol_","nameLocation":"1943:7:8","nodeType":"VariableDeclaration","scope":1188,"src":"1929:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1907:44:8"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[],"src":"1952:0:8"},"scope":1651,"src":"1896:113:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1742],"body":{"id":1196,"nodeType":"Block","src":"2134:29:8","statements":[{"expression":{"id":1194,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2151:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1193,"id":1195,"nodeType":"Return","src":"2144:12:8"}]},"documentation":{"id":1189,"nodeType":"StructuredDocumentation","src":"2015:54:8","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2083:4:8","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[],"src":"2087:2:8"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2119:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1191,"name":"string","nodeType":"ElementaryTypeName","src":"2119:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2118:15:8"},"scope":1651,"src":"2074:89:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1748],"body":{"id":1205,"nodeType":"Block","src":"2338:31:8","statements":[{"expression":{"id":1203,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2355:7:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1202,"id":1204,"nodeType":"Return","src":"2348:14:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2169:102:8","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2285:6:8","nodeType":"FunctionDefinition","parameters":{"id":1199,"nodeType":"ParameterList","parameters":[],"src":"2291:2:8"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1206,"src":"2323:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1200,"name":"string","nodeType":"ElementaryTypeName","src":"2323:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2322:15:8"},"scope":1651,"src":"2276:93:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1754],"body":{"id":1214,"nodeType":"Block","src":"3058:26:8","statements":[{"expression":{"hexValue":"3138","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3075:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1211,"id":1213,"nodeType":"Return","src":"3068:9:8"}]},"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"2375:622:8","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1215,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3011:8:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"3019:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1215,"src":"3051:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1209,"name":"uint8","nodeType":"ElementaryTypeName","src":"3051:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3050:7:8"},"scope":1651,"src":"3002:82:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1678],"body":{"id":1223,"nodeType":"Block","src":"3205:36:8","statements":[{"expression":{"id":1221,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"3222:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1220,"id":1222,"nodeType":"Return","src":"3215:19:8"}]},"documentation":{"id":1216,"nodeType":"StructuredDocumentation","src":"3090:49:8","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":1224,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3153:11:8","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"3164:2:8"},"returnParameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1224,"src":"3196:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3196:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3195:9:8"},"scope":1651,"src":"3144:97:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1686],"body":{"id":1236,"nodeType":"Block","src":"3373:42:8","statements":[{"expression":{"baseExpression":{"id":1232,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"3390:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1234,"indexExpression":{"id":1233,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"3400:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1231,"id":1235,"nodeType":"Return","src":"3383:25:8"}]},"documentation":{"id":1225,"nodeType":"StructuredDocumentation","src":"3247:47:8","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3308:9:8","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"account","nameLocation":"3326:7:8","nodeType":"VariableDeclaration","scope":1237,"src":"3318:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"3318:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3317:17:8"},"returnParameters":{"id":1231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"3364:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3364:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3363:9:8"},"scope":1651,"src":"3299:116:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1696],"body":{"id":1260,"nodeType":"Block","src":"3685:103:8","statements":[{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"owner","nameLocation":"3703:5:8","nodeType":"VariableDeclaration","scope":1260,"src":"3695:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1247,"name":"address","nodeType":"ElementaryTypeName","src":"3695:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1251,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1249,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3711:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3695:28:8"},{"expression":{"arguments":[{"id":1253,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"3743:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3750:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"3754:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"3733:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"3733:27:8"},{"expression":{"hexValue":"74727565","id":1258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3777:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1246,"id":1259,"nodeType":"Return","src":"3770:11:8"}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"3421:184:8","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3619:8:8","nodeType":"FunctionDefinition","parameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"to","nameLocation":"3636:2:8","nodeType":"VariableDeclaration","scope":1261,"src":"3628:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"3628:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"value","nameLocation":"3648:5:8","nodeType":"VariableDeclaration","scope":1261,"src":"3640:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3627:27:8"},"returnParameters":{"id":1246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1261,"src":"3679:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1244,"name":"bool","nodeType":"ElementaryTypeName","src":"3679:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3678:6:8"},"scope":1651,"src":"3610:178:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1706],"body":{"id":1277,"nodeType":"Block","src":"3935:51:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1271,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"3952:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1273,"indexExpression":{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3964:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1275,"indexExpression":{"id":1274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"3971:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3952:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1270,"id":1276,"nodeType":"Return","src":"3945:34:8"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"3794:47:8","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3855:9:8","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"3873:5:8","nodeType":"VariableDeclaration","scope":1278,"src":"3865:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"3888:7:8","nodeType":"VariableDeclaration","scope":1278,"src":"3880:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"3880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3864:32:8"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1278,"src":"3926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3925:9:8"},"scope":1651,"src":"3846:140:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1716],"body":{"id":1301,"nodeType":"Block","src":"4372:107:8","statements":[{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"4390:5:8","nodeType":"VariableDeclaration","scope":1301,"src":"4382:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1292,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1290,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"4398:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4382:28:8"},{"expression":{"arguments":[{"id":1294,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"4429:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1295,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4436:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"4445:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1293,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1542,"src":"4420:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1298,"nodeType":"ExpressionStatement","src":"4420:31:8"},{"expression":{"hexValue":"74727565","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4468:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1287,"id":1300,"nodeType":"Return","src":"4461:11:8"}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"3992:296:8","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1302,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4302:7:8","nodeType":"FunctionDefinition","parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"spender","nameLocation":"4318:7:8","nodeType":"VariableDeclaration","scope":1302,"src":"4310:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1280,"name":"address","nodeType":"ElementaryTypeName","src":"4310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1283,"mutability":"mutable","name":"value","nameLocation":"4335:5:8","nodeType":"VariableDeclaration","scope":1302,"src":"4327:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"4327:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4309:32:8"},"returnParameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1302,"src":"4366:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1285,"name":"bool","nodeType":"ElementaryTypeName","src":"4366:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:6:8"},"scope":1651,"src":"4293:186:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1728],"body":{"id":1333,"nodeType":"Block","src":"5132:151:8","statements":[{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"spender","nameLocation":"5150:7:8","nodeType":"VariableDeclaration","scope":1333,"src":"5142:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"5142:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1318,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1316,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"5160:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5142:30:8"},{"expression":{"arguments":[{"id":1320,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5198:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1321,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"5204:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5213:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"5182:15:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5182:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"5182:37:8"},{"expression":{"arguments":[{"id":1326,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"5239:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1327,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1307,"src":"5245:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5249:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1325,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"5229:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5229:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"5229:26:8"},{"expression":{"hexValue":"74727565","id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5272:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1313,"id":1332,"nodeType":"Return","src":"5265:11:8"}]},"documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"4485:549:8","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1334,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5048:12:8","nodeType":"FunctionDefinition","parameters":{"id":1310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1305,"mutability":"mutable","name":"from","nameLocation":"5069:4:8","nodeType":"VariableDeclaration","scope":1334,"src":"5061:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"to","nameLocation":"5083:2:8","nodeType":"VariableDeclaration","scope":1334,"src":"5075:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1306,"name":"address","nodeType":"ElementaryTypeName","src":"5075:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1309,"mutability":"mutable","name":"value","nameLocation":"5095:5:8","nodeType":"VariableDeclaration","scope":1334,"src":"5087:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1308,"name":"uint256","nodeType":"ElementaryTypeName","src":"5087:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:41:8"},"returnParameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1334,"src":"5126:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1311,"name":"bool","nodeType":"ElementaryTypeName","src":"5126:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5125:6:8"},"scope":1651,"src":"5039:244:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1380,"nodeType":"Block","src":"5725:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1344,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5739:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5747:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1345,"name":"address","nodeType":"ElementaryTypeName","src":"5747:7:8","typeDescriptions":{}}},"id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5747:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5739:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1358,"nodeType":"IfStatement","src":"5735:86:8","trueBody":{"id":1357,"nodeType":"Block","src":"5759:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5807:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5799:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5799:7:8","typeDescriptions":{}}},"id":1354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5799:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1350,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"5780:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"RevertStatement","src":"5773:37:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5834:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5848:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5840:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"5840:7:8","typeDescriptions":{}}},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5840:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5834:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"5830:86:8","trueBody":{"id":1372,"nodeType":"Block","src":"5852:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5902:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5894:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"5894:7:8","typeDescriptions":{}}},"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5894:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1365,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"5873:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5873:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1371,"nodeType":"RevertStatement","src":"5866:39:8"}]}},{"expression":{"arguments":[{"id":1375,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5933:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"5939:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"5943:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5925:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"5925:24:8"}]},"documentation":{"id":1335,"nodeType":"StructuredDocumentation","src":"5289:362:8","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1381,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5665:9:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"from","nameLocation":"5683:4:8","nodeType":"VariableDeclaration","scope":1381,"src":"5675:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"5675:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"to","nameLocation":"5697:2:8","nodeType":"VariableDeclaration","scope":1381,"src":"5689:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1338,"name":"address","nodeType":"ElementaryTypeName","src":"5689:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"value","nameLocation":"5709:5:8","nodeType":"VariableDeclaration","scope":1381,"src":"5701:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:41:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"5725:0:8"},"scope":1651,"src":"5656:300:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"6346:1032:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1391,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6360:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6368:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"6368:7:8","typeDescriptions":{}}},"id":1395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6360:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1428,"nodeType":"Block","src":"6534:362:8","statements":[{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"fromBalance","nameLocation":"6556:11:8","nodeType":"VariableDeclaration","scope":1428,"src":"6548:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"6548:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1407,"initialValue":{"baseExpression":{"id":1404,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6570:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1406,"indexExpression":{"id":1405,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6580:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6570:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6548:37:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1408,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6603:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6617:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6603:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1418,"nodeType":"IfStatement","src":"6599:115:8","trueBody":{"id":1417,"nodeType":"Block","src":"6624:90:8","statements":[{"errorCall":{"arguments":[{"id":1412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6674:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1413,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6680:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6693:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1411,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"6649:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6649:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1416,"nodeType":"RevertStatement","src":"6642:57:8"}]}},{"id":1427,"nodeType":"UncheckedBlock","src":"6727:159:8","statements":[{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1419,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6834:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1421,"indexExpression":{"id":1420,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"6844:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6834:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1422,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"6852:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6866:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6852:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6834:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"6834:37:8"}]}]},"id":1429,"nodeType":"IfStatement","src":"6356:540:8","trueBody":{"id":1401,"nodeType":"Block","src":"6380:148:8","statements":[{"expression":{"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1397,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"6496:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6512:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6496:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1400,"nodeType":"ExpressionStatement","src":"6496:21:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1430,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"6910:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6924:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6910:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1449,"nodeType":"Block","src":"7125:206:8","statements":[{"id":1448,"nodeType":"UncheckedBlock","src":"7139:182:8","statements":[{"expression":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1442,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"7284:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1444,"indexExpression":{"id":1443,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7294:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7284:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7301:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7284:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1447,"nodeType":"ExpressionStatement","src":"7284:22:8"}]}]},"id":1450,"nodeType":"IfStatement","src":"6906:425:8","trueBody":{"id":1441,"nodeType":"Block","src":"6928:191:8","statements":[{"id":1440,"nodeType":"UncheckedBlock","src":"6942:167:8","statements":[{"expression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1436,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1167,"src":"7073:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7089:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7073:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1439,"nodeType":"ExpressionStatement","src":"7073:21:8"}]}]}},{"eventCall":{"arguments":[{"id":1452,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"7355:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1453,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1386,"src":"7361:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7365:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1451,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"7346:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7346:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1456,"nodeType":"EmitStatement","src":"7341:30:8"}]},"documentation":{"id":1382,"nodeType":"StructuredDocumentation","src":"5962:304:8","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6280:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"from","nameLocation":"6296:4:8","nodeType":"VariableDeclaration","scope":1458,"src":"6288:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"6288:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1386,"mutability":"mutable","name":"to","nameLocation":"6310:2:8","nodeType":"VariableDeclaration","scope":1458,"src":"6302:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1385,"name":"address","nodeType":"ElementaryTypeName","src":"6302:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1388,"mutability":"mutable","name":"value","nameLocation":"6322:5:8","nodeType":"VariableDeclaration","scope":1458,"src":"6314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"6314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6287:41:8"},"returnParameters":{"id":1390,"nodeType":"ParameterList","parameters":[],"src":"6346:0:8"},"scope":1651,"src":"6271:1107:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1490,"nodeType":"Block","src":"7777:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1466,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7791:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7810:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7802:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:8","typeDescriptions":{}}},"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7802:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7791:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1480,"nodeType":"IfStatement","src":"7787:91:8","trueBody":{"id":1479,"nodeType":"Block","src":"7814:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7864:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"7856:7:8","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7856:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7835:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7835:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1478,"nodeType":"RevertStatement","src":"7828:39:8"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7903:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7895:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"7895:7:8","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7895:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1486,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"7907:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"7916:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"7887:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7887:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"7887:35:8"}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"7384:332:8","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1491,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7730:5:8","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"account","nameLocation":"7744:7:8","nodeType":"VariableDeclaration","scope":1491,"src":"7736:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1460,"name":"address","nodeType":"ElementaryTypeName","src":"7736:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"value","nameLocation":"7761:5:8","nodeType":"VariableDeclaration","scope":1491,"src":"7753:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"7753:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7735:32:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[],"src":"7777:0:8"},"scope":1651,"src":"7721:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"8303:150:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8317:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8336:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"8328:7:8","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8317:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1513,"nodeType":"IfStatement","src":"8313:89:8","trueBody":{"id":1512,"nodeType":"Block","src":"8340:62:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8388:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8380:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"8380:7:8","typeDescriptions":{}}},"id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8380:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1505,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"8361:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1511,"nodeType":"RevertStatement","src":"8354:37:8"}]}},{"expression":{"arguments":[{"id":1515,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"8419:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8436:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8428:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"8428:7:8","typeDescriptions":{}}},"id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8428:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"8440:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1514,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"8411:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8411:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"8411:35:8"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"7935:307:8","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"8256:5:8","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"account","nameLocation":"8270:7:8","nodeType":"VariableDeclaration","scope":1524,"src":"8262:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"8262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"8287:5:8","nodeType":"VariableDeclaration","scope":1524,"src":"8279:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8261:32:8"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[],"src":"8303:0:8"},"scope":1651,"src":"8247:206:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1541,"nodeType":"Block","src":"9063:54:8","statements":[{"expression":{"arguments":[{"id":1535,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"9082:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1536,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"9089:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"9098:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9105:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1534,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"9073:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9073:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1540,"nodeType":"ExpressionStatement","src":"9073:37:8"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"8459:525:8","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1542,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8998:8:8","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"owner","nameLocation":"9015:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9007:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"9007:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"spender","nameLocation":"9030:7:8","nodeType":"VariableDeclaration","scope":1542,"src":"9022:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1528,"name":"address","nodeType":"ElementaryTypeName","src":"9022:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"9047:5:8","nodeType":"VariableDeclaration","scope":1542,"src":"9039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9006:47:8"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"9063:0:8"},"scope":1651,"src":"8989:128:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1601,"nodeType":"Block","src":"10047:334:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1554,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10078:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10070:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"10070:7:8","typeDescriptions":{}}},"id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10070:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10061:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1568,"nodeType":"IfStatement","src":"10057:89:8","trueBody":{"id":1567,"nodeType":"Block","src":"10082:64:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10124:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"10124:7:8","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10124:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1560,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"10103:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10103:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1566,"nodeType":"RevertStatement","src":"10096:39:8"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1569,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10159:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10170:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"10170:7:8","typeDescriptions":{}}},"id":1573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10170:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10159:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1583,"nodeType":"IfStatement","src":"10155:90:8","trueBody":{"id":1582,"nodeType":"Block","src":"10182:63:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10231:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10223:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"10223:7:8","typeDescriptions":{}}},"id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1575,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10203:19:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10203:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1581,"nodeType":"RevertStatement","src":"10196:38:8"}]}},{"expression":{"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1584,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"10254:11:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1587,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10266:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10254:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1588,"indexExpression":{"id":1586,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10273:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10254:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10284:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10254:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1591,"nodeType":"ExpressionStatement","src":"10254:35:8"},{"condition":{"id":1592,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"10303:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1600,"nodeType":"IfStatement","src":"10299:76:8","trueBody":{"id":1599,"nodeType":"Block","src":"10314:61:8","statements":[{"eventCall":{"arguments":[{"id":1594,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"10342:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1595,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"10349:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1549,"src":"10358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1593,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"10333:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10333:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1598,"nodeType":"EmitStatement","src":"10328:36:8"}]}}]},"documentation":{"id":1543,"nodeType":"StructuredDocumentation","src":"9123:821:8","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1602,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9958:8:8","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"owner","nameLocation":"9975:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9967:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"9967:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"spender","nameLocation":"9990:7:8","nodeType":"VariableDeclaration","scope":1602,"src":"9982:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1549,"mutability":"mutable","name":"value","nameLocation":"10007:5:8","nodeType":"VariableDeclaration","scope":1602,"src":"9999:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1548,"name":"uint256","nodeType":"ElementaryTypeName","src":"9999:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"emitEvent","nameLocation":"10019:9:8","nodeType":"VariableDeclaration","scope":1602,"src":"10014:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1550,"name":"bool","nodeType":"ElementaryTypeName","src":"10014:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9966:63:8"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"10047:0:8"},"scope":1651,"src":"9949:432:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"10752:388:8","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"currentAllowance","nameLocation":"10770:16:8","nodeType":"VariableDeclaration","scope":1649,"src":"10762:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"10799:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1616,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10806:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"10789:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10789:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10762:52:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1619,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10828:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10853:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10853:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1620,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10848:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10848:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10862:3:8","memberName":"max","nodeType":"MemberAccess","src":"10848:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1648,"nodeType":"IfStatement","src":"10824:310:8","trueBody":{"id":1647,"nodeType":"Block","src":"10867:267:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10885:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10904:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10885:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1636,"nodeType":"IfStatement","src":"10881:130:8","trueBody":{"id":1635,"nodeType":"Block","src":"10911:100:8","statements":[{"errorCall":{"arguments":[{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"10963:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"10972:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10990:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1629,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"10936:26:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10936:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1634,"nodeType":"RevertStatement","src":"10929:67:8"}]}},{"id":1646,"nodeType":"UncheckedBlock","src":"11024:100:8","statements":[{"expression":{"arguments":[{"id":1638,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1605,"src":"11061:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"11068:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1640,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"11077:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"11096:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11077:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11103:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1637,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1542,1602],"referencedDeclaration":1602,"src":"11052:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11052:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1645,"nodeType":"ExpressionStatement","src":"11052:57:8"}]}]}}]},"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"10387:271:8","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10672:15:8","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"owner","nameLocation":"10696:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10688:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"10688:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"mutability":"mutable","name":"spender","nameLocation":"10711:7:8","nodeType":"VariableDeclaration","scope":1650,"src":"10703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"10703:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"value","nameLocation":"10728:5:8","nodeType":"VariableDeclaration","scope":1650,"src":"10720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10687:47:8"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"10752:0:8"},"scope":1651,"src":"10663:477:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1652,"src":"1401:9741:8","usedErrors":[698,703,708,717,722,727],"usedEvents":[1663,1672]}],"src":"105:11038:8"},"id":8},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1729]},"id":1730,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"132:70:9","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1729,"linearizedBaseContracts":[1729],"name":"IERC20","nameLocation":"213:6:9","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"226:158:9","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1663,"name":"Transfer","nameLocation":"395:8:9","nodeType":"EventDefinition","parameters":{"id":1662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"420:4:9","nodeType":"VariableDeclaration","scope":1663,"src":"404:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"442:2:9","nodeType":"VariableDeclaration","scope":1663,"src":"426:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"454:5:9","nodeType":"VariableDeclaration","scope":1663,"src":"446:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:57:9"},"src":"389:72:9"},{"anonymous":false,"documentation":{"id":1664,"nodeType":"StructuredDocumentation","src":"467:148:9","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1672,"name":"Approval","nameLocation":"626:8:9","nodeType":"EventDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1666,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"651:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"635:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1665,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1668,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"674:7:9","nodeType":"VariableDeclaration","scope":1672,"src":"658:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"658:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"691:5:9","nodeType":"VariableDeclaration","scope":1672,"src":"683:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1669,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"634:63:9"},"src":"620:78:9"},{"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"704:65:9","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1678,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:9","nodeType":"FunctionDefinition","parameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"794:2:9"},"returnParameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"820:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:9"},"scope":1729,"src":"774:55:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"835:71:9","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1686,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"920:9:9","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"account","nameLocation":"938:7:9","nodeType":"VariableDeclaration","scope":1686,"src":"930:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"930:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"929:17:9"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1686,"src":"970:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"969:9:9"},"scope":1729,"src":"911:68:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"985:213:9","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1696,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1212:8:9","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"1229:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1221:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"value","nameLocation":"1241:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1233:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"1233:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:27:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"1266:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1693,"name":"bool","nodeType":"ElementaryTypeName","src":"1266:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1265:6:9"},"scope":1729,"src":"1203:69:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1278:264:9","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1556:9:9","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"owner","nameLocation":"1574:5:9","nodeType":"VariableDeclaration","scope":1706,"src":"1566:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"1566:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"spender","nameLocation":"1589:7:9","nodeType":"VariableDeclaration","scope":1706,"src":"1581:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1565:32:9"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"1621:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1703,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1620:9:9"},"scope":1729,"src":"1547:83:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1636:667:9","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1716,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2317:7:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"spender","nameLocation":"2333:7:9","nodeType":"VariableDeclaration","scope":1716,"src":"2325:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1708,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"value","nameLocation":"2350:5:9","nodeType":"VariableDeclaration","scope":1716,"src":"2342:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:32:9"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"2375:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:9"},"scope":1729,"src":"2308:73:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"2387:297:9","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1728,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"from","nameLocation":"2719:4:9","nodeType":"VariableDeclaration","scope":1728,"src":"2711:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"to","nameLocation":"2733:2:9","nodeType":"VariableDeclaration","scope":1728,"src":"2725:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"2725:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"2745:5:9","nodeType":"VariableDeclaration","scope":1728,"src":"2737:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"2737:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:9"},"returnParameters":{"id":1727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1728,"src":"2770:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"2770:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2769:6:9"},"scope":1729,"src":"2689:87:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1730,"src":"203:2575:9","usedErrors":[],"usedEvents":[1663,1672]}],"src":"106:2673:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1729],"IERC20Metadata":[1755]},"id":1756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1731,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1756,"sourceUnit":1730,"src":"151:37:10","symbolAliases":[{"foreign":{"id":1732,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"159:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1735,"name":"IERC20","nameLocations":["305:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"305:6:10"},"id":1736,"nodeType":"InheritanceSpecifier","src":"305:6:10"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1734,"nodeType":"StructuredDocumentation","src":"190:86:10","text":" @dev Interface for the optional metadata functions from the ERC20 standard."},"fullyImplemented":false,"id":1755,"linearizedBaseContracts":[1755,1729],"name":"IERC20Metadata","nameLocation":"287:14:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1737,"nodeType":"StructuredDocumentation","src":"318:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:10","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[],"src":"390:2:10"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"416:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1739,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:10"},"scope":1755,"src":"377:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"437:56:10","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1748,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:10","nodeType":"FunctionDefinition","parameters":{"id":1744,"nodeType":"ParameterList","parameters":[],"src":"513:2:10"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1748,"src":"539:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1745,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:10"},"scope":1755,"src":"498:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"560:65:10","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1754,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:10","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"647:2:10"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1754,"src":"673:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1751,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:10"},"scope":1755,"src":"630:50:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1756,"src":"277:405:10","usedErrors":[],"usedEvents":[1663,1672]}],"src":"125:558:10"},"id":10},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2008]},"id":2009,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"127:67:11","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2008,"linearizedBaseContracts":[2008],"name":"Address","nameLocation":"203:7:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"217:94:11","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cd786059","id":1763,"name":"AddressInsufficientBalance","nameLocation":"322:26:11","nodeType":"ErrorDefinition","parameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"account","nameLocation":"357:7:11","nodeType":"VariableDeclaration","scope":1763,"src":"349:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1760,"name":"address","nodeType":"ElementaryTypeName","src":"349:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"348:17:11"},"src":"316:50:11"},{"documentation":{"id":1764,"nodeType":"StructuredDocumentation","src":"372:75:11","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1768,"name":"AddressEmptyCode","nameLocation":"458:16:11","nodeType":"ErrorDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"target","nameLocation":"483:6:11","nodeType":"VariableDeclaration","scope":1768,"src":"475:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"475:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"474:16:11"},"src":"452:39:11"},{"documentation":{"id":1769,"nodeType":"StructuredDocumentation","src":"497:89:11","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"1425ea42","id":1771,"name":"FailedInnerCall","nameLocation":"597:15:11","nodeType":"ErrorDefinition","parameters":{"id":1770,"nodeType":"ParameterList","parameters":[],"src":"612:2:11"},"src":"591:24:11"},{"body":{"id":1811,"nodeType":"Block","src":"1602:260:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1624:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1616:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:11","typeDescriptions":{}}},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1630:7:11","memberName":"balance","nodeType":"MemberAccess","src":"1616:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1784,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1640:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1616:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1794,"nodeType":"IfStatement","src":"1612:109:11","trueBody":{"id":1793,"nodeType":"Block","src":"1648:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1789,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1704:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1696:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1787,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","typeDescriptions":{}}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1786,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"1669:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1669:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1792,"nodeType":"RevertStatement","src":"1662:48:11"}]}},{"assignments":[1796,null],"declarations":[{"constant":false,"id":1796,"mutability":"mutable","name":"success","nameLocation":"1737:7:11","nodeType":"VariableDeclaration","scope":1811,"src":"1732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1795,"name":"bool","nodeType":"ElementaryTypeName","src":"1732:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1803,"initialValue":{"arguments":[{"hexValue":"","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1780:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1797,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"1750:9:11","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1760:4:11","memberName":"call","nodeType":"MemberAccess","src":"1750:14:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1772:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1750:29:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1750:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1731:52:11"},{"condition":{"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1797:8:11","subExpression":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"nodeType":"IfStatement","src":"1793:63:11","trueBody":{"id":1809,"nodeType":"Block","src":"1807:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1806,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"1828:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1808,"nodeType":"RevertStatement","src":"1821:24:11"}]}}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"621:905:11","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1812,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1540:9:11","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"recipient","nameLocation":"1566:9:11","nodeType":"VariableDeclaration","scope":1812,"src":"1550:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1773,"name":"address","nodeType":"ElementaryTypeName","src":"1550:15:11","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"amount","nameLocation":"1585:6:11","nodeType":"VariableDeclaration","scope":1812,"src":"1577:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1577:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:43:11"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"1602:0:11"},"scope":2008,"src":"1531:331:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"2794:62:11","statements":[{"expression":{"arguments":[{"id":1823,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2833:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1824,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"2841:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2847:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1822,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2811:21:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2811:38:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1821,"id":1827,"nodeType":"Return","src":"2804:45:11"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"1868:832:11","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2714:12:11","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"target","nameLocation":"2735:6:11","nodeType":"VariableDeclaration","scope":1829,"src":"2727:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1817,"mutability":"mutable","name":"data","nameLocation":"2756:4:11","nodeType":"VariableDeclaration","scope":1829,"src":"2743:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1816,"name":"bytes","nodeType":"ElementaryTypeName","src":"2743:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2726:35:11"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"2780:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1819,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2779:14:11"},"scope":2008,"src":"2705:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1874,"nodeType":"Block","src":"3293:279:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1843,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3315:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3307:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3307:7:11","typeDescriptions":{}}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:7:11","memberName":"balance","nodeType":"MemberAccess","src":"3307:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3331:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3307:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1856,"nodeType":"IfStatement","src":"3303:108:11","trueBody":{"id":1855,"nodeType":"Block","src":"3338:73:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3394:4:11","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2008","typeString":"library Address"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3386:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"3386:7:11","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1848,"name":"AddressInsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"3359:26:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1854,"nodeType":"RevertStatement","src":"3352:48:11"}]}},{"assignments":[1858,1860],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"success","nameLocation":"3426:7:11","nodeType":"VariableDeclaration","scope":1874,"src":"3421:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1857,"name":"bool","nodeType":"ElementaryTypeName","src":"3421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"returndata","nameLocation":"3448:10:11","nodeType":"VariableDeclaration","scope":1874,"src":"3435:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1867,"initialValue":{"arguments":[{"id":1865,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"3488:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1861,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3462:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:4:11","memberName":"call","nodeType":"MemberAccess","src":"3462:11:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"3481:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3462:25:11","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3462:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3420:73:11"},{"expression":{"arguments":[{"id":1869,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"3537:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1870,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3545:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1871,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3554:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1868,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3510:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3510:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1840,"id":1873,"nodeType":"Return","src":"3503:62:11"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"2862:313:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1875,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"3189:21:11","nodeType":"FunctionDefinition","parameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"target","nameLocation":"3219:6:11","nodeType":"VariableDeclaration","scope":1875,"src":"3211:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1831,"name":"address","nodeType":"ElementaryTypeName","src":"3211:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"data","nameLocation":"3240:4:11","nodeType":"VariableDeclaration","scope":1875,"src":"3227:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1833,"name":"bytes","nodeType":"ElementaryTypeName","src":"3227:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"value","nameLocation":"3254:5:11","nodeType":"VariableDeclaration","scope":1875,"src":"3246:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3246:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3210:50:11"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1875,"src":"3279:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1838,"name":"bytes","nodeType":"ElementaryTypeName","src":"3279:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3278:14:11"},"scope":2008,"src":"3180:392:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1900,"nodeType":"Block","src":"3811:154:11","statements":[{"assignments":[1886,1888],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"success","nameLocation":"3827:7:11","nodeType":"VariableDeclaration","scope":1900,"src":"3822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1885,"name":"bool","nodeType":"ElementaryTypeName","src":"3822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1888,"mutability":"mutable","name":"returndata","nameLocation":"3849:10:11","nodeType":"VariableDeclaration","scope":1900,"src":"3836:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1887,"name":"bytes","nodeType":"ElementaryTypeName","src":"3836:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1893,"initialValue":{"arguments":[{"id":1891,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3881:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3863:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:10:11","memberName":"staticcall","nodeType":"MemberAccess","src":"3863:17:11","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3863:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3821:65:11"},{"expression":{"arguments":[{"id":1895,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"3930:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"3938:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1897,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"3947:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1894,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"3903:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1884,"id":1899,"nodeType":"Return","src":"3896:62:11"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"3578:128:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3720:18:11","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"target","nameLocation":"3747:6:11","nodeType":"VariableDeclaration","scope":1901,"src":"3739:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1877,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"3768:4:11","nodeType":"VariableDeclaration","scope":1901,"src":"3755:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"3755:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3738:35:11"},"returnParameters":{"id":1884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1901,"src":"3797:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1882,"name":"bytes","nodeType":"ElementaryTypeName","src":"3797:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3796:14:11"},"scope":2008,"src":"3711:254:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"4203:156:11","statements":[{"assignments":[1912,1914],"declarations":[{"constant":false,"id":1912,"mutability":"mutable","name":"success","nameLocation":"4219:7:11","nodeType":"VariableDeclaration","scope":1926,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1911,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1914,"mutability":"mutable","name":"returndata","nameLocation":"4241:10:11","nodeType":"VariableDeclaration","scope":1926,"src":"4228:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1913,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1919,"initialValue":{"arguments":[{"id":1917,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"4275:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1915,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4255:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:12:11","memberName":"delegatecall","nodeType":"MemberAccess","src":"4255:19:11","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4255:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4213:67:11"},{"expression":{"arguments":[{"id":1921,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4324:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1922,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1923,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"4341:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1920,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"4297:26:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1910,"id":1925,"nodeType":"Return","src":"4290:62:11"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"3971:130:11","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"4115:20:11","nodeType":"FunctionDefinition","parameters":{"id":1907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"target","nameLocation":"4144:6:11","nodeType":"VariableDeclaration","scope":1927,"src":"4136:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1903,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1906,"mutability":"mutable","name":"data","nameLocation":"4165:4:11","nodeType":"VariableDeclaration","scope":1927,"src":"4152:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1905,"name":"bytes","nodeType":"ElementaryTypeName","src":"4152:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4135:35:11"},"returnParameters":{"id":1910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"4189:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1908,"name":"bytes","nodeType":"ElementaryTypeName","src":"4189:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4188:14:11"},"scope":2008,"src":"4106:253:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1966,"nodeType":"Block","src":"4783:424:11","statements":[{"condition":{"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4797:8:11","subExpression":{"id":1939,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"4798:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1964,"nodeType":"Block","src":"4857:344:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1946,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5045:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5056:6:11","memberName":"length","nodeType":"MemberAccess","src":"5045:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5066:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5045:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1950,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5071:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5078:4:11","memberName":"code","nodeType":"MemberAccess","src":"5071:11:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5083:6:11","memberName":"length","nodeType":"MemberAccess","src":"5071:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5093:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5071:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5045:49:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1961,"nodeType":"IfStatement","src":"5041:119:11","trueBody":{"id":1960,"nodeType":"Block","src":"5096:64:11","statements":[{"errorCall":{"arguments":[{"id":1957,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"5138:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1956,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1768,"src":"5121:16:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"RevertStatement","src":"5114:31:11"}]}},{"expression":{"id":1962,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"5180:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1938,"id":1963,"nodeType":"Return","src":"5173:17:11"}]},"id":1965,"nodeType":"IfStatement","src":"4793:408:11","trueBody":{"id":1945,"nodeType":"Block","src":"4807:44:11","statements":[{"expression":{"arguments":[{"id":1942,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4829:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1941,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"4821:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4821:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1944,"nodeType":"ExpressionStatement","src":"4821:19:11"}]}}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"4365:255:11","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."},"id":1967,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4634:26:11","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"target","nameLocation":"4678:6:11","nodeType":"VariableDeclaration","scope":1967,"src":"4670:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"success","nameLocation":"4699:7:11","nodeType":"VariableDeclaration","scope":1967,"src":"4694:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1931,"name":"bool","nodeType":"ElementaryTypeName","src":"4694:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"returndata","nameLocation":"4729:10:11","nodeType":"VariableDeclaration","scope":1967,"src":"4716:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1933,"name":"bytes","nodeType":"ElementaryTypeName","src":"4716:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4660:85:11"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1967,"src":"4769:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1936,"name":"bytes","nodeType":"ElementaryTypeName","src":"4769:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4768:14:11"},"scope":2008,"src":"4625:582:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1988,"nodeType":"Block","src":"5509:122:11","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5523:8:11","subExpression":{"id":1977,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"5524:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1986,"nodeType":"Block","src":"5583:42:11","statements":[{"expression":{"id":1984,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5604:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1976,"id":1985,"nodeType":"Return","src":"5597:17:11"}]},"id":1987,"nodeType":"IfStatement","src":"5519:106:11","trueBody":{"id":1983,"nodeType":"Block","src":"5533:44:11","statements":[{"expression":{"arguments":[{"id":1980,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5555:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1979,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"5547:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5547:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1982,"nodeType":"ExpressionStatement","src":"5547:19:11"}]}}]},"documentation":{"id":1968,"nodeType":"StructuredDocumentation","src":"5213:189:11","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."},"id":1989,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5416:16:11","nodeType":"FunctionDefinition","parameters":{"id":1973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"success","nameLocation":"5438:7:11","nodeType":"VariableDeclaration","scope":1989,"src":"5433:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1969,"name":"bool","nodeType":"ElementaryTypeName","src":"5433:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"returndata","nameLocation":"5460:10:11","nodeType":"VariableDeclaration","scope":1989,"src":"5447:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"5447:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5432:39:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1989,"src":"5495:12:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1974,"name":"bytes","nodeType":"ElementaryTypeName","src":"5495:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5494:14:11"},"scope":2008,"src":"5407:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2006,"nodeType":"Block","src":"5798:461:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1995,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"5874:10:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5885:6:11","memberName":"length","nodeType":"MemberAccess","src":"5874:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5894:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5874:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2004,"nodeType":"Block","src":"6204:49:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2001,"name":"FailedInnerCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"6225:15:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6225:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2003,"nodeType":"RevertStatement","src":"6218:24:11"}]},"id":2005,"nodeType":"IfStatement","src":"5870:383:11","trueBody":{"id":2000,"nodeType":"Block","src":"5897:301:11","statements":[{"AST":{"nativeSrc":"6055:133:11","nodeType":"YulBlock","src":"6055:133:11","statements":[{"nativeSrc":"6073:40:11","nodeType":"YulVariableDeclaration","src":"6073:40:11","value":{"arguments":[{"name":"returndata","nativeSrc":"6102:10:11","nodeType":"YulIdentifier","src":"6102:10:11"}],"functionName":{"name":"mload","nativeSrc":"6096:5:11","nodeType":"YulIdentifier","src":"6096:5:11"},"nativeSrc":"6096:17:11","nodeType":"YulFunctionCall","src":"6096:17:11"},"variables":[{"name":"returndata_size","nativeSrc":"6077:15:11","nodeType":"YulTypedName","src":"6077:15:11","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"6141:2:11","nodeType":"YulLiteral","src":"6141:2:11","type":"","value":"32"},{"name":"returndata","nativeSrc":"6145:10:11","nodeType":"YulIdentifier","src":"6145:10:11"}],"functionName":{"name":"add","nativeSrc":"6137:3:11","nodeType":"YulIdentifier","src":"6137:3:11"},"nativeSrc":"6137:19:11","nodeType":"YulFunctionCall","src":"6137:19:11"},{"name":"returndata_size","nativeSrc":"6158:15:11","nodeType":"YulIdentifier","src":"6158:15:11"}],"functionName":{"name":"revert","nativeSrc":"6130:6:11","nodeType":"YulIdentifier","src":"6130:6:11"},"nativeSrc":"6130:44:11","nodeType":"YulFunctionCall","src":"6130:44:11"},"nativeSrc":"6130:44:11","nodeType":"YulExpressionStatement","src":"6130:44:11"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6102:10:11","valueSize":1},{"declaration":1992,"isOffset":false,"isSlot":false,"src":"6145:10:11","valueSize":1}],"id":1999,"nodeType":"InlineAssembly","src":"6046:142:11"}]}}]},"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"5637:101:11","text":" @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."},"id":2007,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5752:7:11","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"returndata","nameLocation":"5773:10:11","nodeType":"VariableDeclaration","scope":2007,"src":"5760:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1991,"name":"bytes","nodeType":"ElementaryTypeName","src":"5760:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5759:25:11"},"returnParameters":{"id":1994,"nodeType":"ParameterList","parameters":[],"src":"5798:0:11"},"scope":2008,"src":"5743:516:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2009,"src":"195:6066:11","usedErrors":[1763,1768,1771],"usedEvents":[]}],"src":"101:6161:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2038]},"id":2039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2010,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"127:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2038,"linearizedBaseContracts":[2038],"name":"Context","nameLocation":"642:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2019,"nodeType":"Block","src":"718:34:12","statements":[{"expression":{"expression":{"id":2016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:12","memberName":"sender","nodeType":"MemberAccess","src":"735:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2015,"id":2018,"nodeType":"Return","src":"728:17:12"}]},"id":2020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:12","nodeType":"FunctionDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"675:2:12"},"returnParameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2020,"src":"709:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2013,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:12"},"scope":2038,"src":"656:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2028,"nodeType":"Block","src":"825:32:12","statements":[{"expression":{"expression":{"id":2025,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:12","memberName":"data","nodeType":"MemberAccess","src":"842:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2024,"id":2027,"nodeType":"Return","src":"835:15:12"}]},"id":2029,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:12","nodeType":"FunctionDefinition","parameters":{"id":2021,"nodeType":"ParameterList","parameters":[],"src":"775:2:12"},"returnParameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2029,"src":"809:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2022,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:12"},"scope":2038,"src":"758:99:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2036,"nodeType":"Block","src":"935:25:12","statements":[{"expression":{"hexValue":"30","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2033,"id":2035,"nodeType":"Return","src":"945:8:12"}]},"id":2037,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:12","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[],"src":"892:2:12"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2037,"src":"926:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:12"},"scope":2038,"src":"863:97:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2039,"src":"624:338:12","usedErrors":[],"usedEvents":[]}],"src":"101:862:12"},"id":12},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2148]},"id":2149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2041,"nodeType":"StructuredDocumentation","src":"219:1025:13","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"},"fullyImplemented":true,"id":2148,"linearizedBaseContracts":[2148],"name":"StorageSlot","nameLocation":"1253:11:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2044,"members":[{"constant":false,"id":2043,"mutability":"mutable","name":"value","nameLocation":"1308:5:13","nodeType":"VariableDeclaration","scope":2044,"src":"1300:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2042,"name":"address","nodeType":"ElementaryTypeName","src":"1300:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1278:11:13","nodeType":"StructDefinition","scope":2148,"src":"1271:49:13","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2047,"members":[{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"1360:5:13","nodeType":"VariableDeclaration","scope":2047,"src":"1355:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2045,"name":"bool","nodeType":"ElementaryTypeName","src":"1355:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1333:11:13","nodeType":"StructDefinition","scope":2148,"src":"1326:46:13","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2050,"members":[{"constant":false,"id":2049,"mutability":"mutable","name":"value","nameLocation":"1415:5:13","nodeType":"VariableDeclaration","scope":2050,"src":"1407:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2048,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1407:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1385:11:13","nodeType":"StructDefinition","scope":2148,"src":"1378:49:13","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2053,"members":[{"constant":false,"id":2052,"mutability":"mutable","name":"value","nameLocation":"1470:5:13","nodeType":"VariableDeclaration","scope":2053,"src":"1462:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1440:11:13","nodeType":"StructDefinition","scope":2148,"src":"1433:49:13","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2056,"members":[{"constant":false,"id":2055,"mutability":"mutable","name":"value","nameLocation":"1523:5:13","nodeType":"VariableDeclaration","scope":2056,"src":"1516:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2054,"name":"string","nodeType":"ElementaryTypeName","src":"1516:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1495:10:13","nodeType":"StructDefinition","scope":2148,"src":"1488:47:13","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2059,"members":[{"constant":false,"id":2058,"mutability":"mutable","name":"value","nameLocation":"1574:5:13","nodeType":"VariableDeclaration","scope":2059,"src":"1568:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2057,"name":"bytes","nodeType":"ElementaryTypeName","src":"1568:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1548:9:13","nodeType":"StructDefinition","scope":2148,"src":"1541:45:13","visibility":"public"},{"body":{"id":2069,"nodeType":"Block","src":"1768:106:13","statements":[{"AST":{"nativeSrc":"1830:38:13","nodeType":"YulBlock","src":"1830:38:13","statements":[{"nativeSrc":"1844:14:13","nodeType":"YulAssignment","src":"1844:14:13","value":{"name":"slot","nativeSrc":"1854:4:13","nodeType":"YulIdentifier","src":"1854:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"1844:6:13","nodeType":"YulIdentifier","src":"1844:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2066,"isOffset":false,"isSlot":true,"src":"1844:6:13","suffix":"slot","valueSize":1},{"declaration":2062,"isOffset":false,"isSlot":false,"src":"1854:4:13","valueSize":1}],"id":2068,"nodeType":"InlineAssembly","src":"1821:47:13"}]},"documentation":{"id":2060,"nodeType":"StructuredDocumentation","src":"1592:87:13","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1693:14:13","nodeType":"FunctionDefinition","parameters":{"id":2063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2062,"mutability":"mutable","name":"slot","nameLocation":"1716:4:13","nodeType":"VariableDeclaration","scope":2070,"src":"1708:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1708:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1707:14:13"},"returnParameters":{"id":2067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2066,"mutability":"mutable","name":"r","nameLocation":"1765:1:13","nodeType":"VariableDeclaration","scope":2070,"src":"1745:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2065,"nodeType":"UserDefinedTypeName","pathNode":{"id":2064,"name":"AddressSlot","nameLocations":["1745:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2044,"src":"1745:11:13"},"referencedDeclaration":2044,"src":"1745:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2044_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1744:23:13"},"scope":2148,"src":"1684:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2080,"nodeType":"Block","src":"2056:106:13","statements":[{"AST":{"nativeSrc":"2118:38:13","nodeType":"YulBlock","src":"2118:38:13","statements":[{"nativeSrc":"2132:14:13","nodeType":"YulAssignment","src":"2132:14:13","value":{"name":"slot","nativeSrc":"2142:4:13","nodeType":"YulIdentifier","src":"2142:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2132:6:13","nodeType":"YulIdentifier","src":"2132:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2077,"isOffset":false,"isSlot":true,"src":"2132:6:13","suffix":"slot","valueSize":1},{"declaration":2073,"isOffset":false,"isSlot":false,"src":"2142:4:13","valueSize":1}],"id":2079,"nodeType":"InlineAssembly","src":"2109:47:13"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"1880:87:13","text":" @dev Returns an `BooleanSlot` with member `value` located at `slot`."},"id":2081,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"1981:14:13","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"slot","nameLocation":"2004:4:13","nodeType":"VariableDeclaration","scope":2081,"src":"1996:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1996:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1995:14:13"},"returnParameters":{"id":2078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"r","nameLocation":"2053:1:13","nodeType":"VariableDeclaration","scope":2081,"src":"2033:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2047_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2076,"nodeType":"UserDefinedTypeName","pathNode":{"id":2075,"name":"BooleanSlot","nameLocations":["2033:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2047,"src":"2033:11:13"},"referencedDeclaration":2047,"src":"2033:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2047_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2032:23:13"},"scope":2148,"src":"1972:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"2344:106:13","statements":[{"AST":{"nativeSrc":"2406:38:13","nodeType":"YulBlock","src":"2406:38:13","statements":[{"nativeSrc":"2420:14:13","nodeType":"YulAssignment","src":"2420:14:13","value":{"name":"slot","nativeSrc":"2430:4:13","nodeType":"YulIdentifier","src":"2430:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2420:6:13","nodeType":"YulIdentifier","src":"2420:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2088,"isOffset":false,"isSlot":true,"src":"2420:6:13","suffix":"slot","valueSize":1},{"declaration":2084,"isOffset":false,"isSlot":false,"src":"2430:4:13","valueSize":1}],"id":2090,"nodeType":"InlineAssembly","src":"2397:47:13"}]},"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"2168:87:13","text":" @dev Returns an `Bytes32Slot` with member `value` located at `slot`."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2269:14:13","nodeType":"FunctionDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"slot","nameLocation":"2292:4:13","nodeType":"VariableDeclaration","scope":2092,"src":"2284:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2083,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2284:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2283:14:13"},"returnParameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"mutability":"mutable","name":"r","nameLocation":"2341:1:13","nodeType":"VariableDeclaration","scope":2092,"src":"2321:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2050_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2087,"nodeType":"UserDefinedTypeName","pathNode":{"id":2086,"name":"Bytes32Slot","nameLocations":["2321:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2050,"src":"2321:11:13"},"referencedDeclaration":2050,"src":"2321:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2050_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2320:23:13"},"scope":2148,"src":"2260:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2102,"nodeType":"Block","src":"2632:106:13","statements":[{"AST":{"nativeSrc":"2694:38:13","nodeType":"YulBlock","src":"2694:38:13","statements":[{"nativeSrc":"2708:14:13","nodeType":"YulAssignment","src":"2708:14:13","value":{"name":"slot","nativeSrc":"2718:4:13","nodeType":"YulIdentifier","src":"2718:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2708:6:13","nodeType":"YulIdentifier","src":"2708:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2099,"isOffset":false,"isSlot":true,"src":"2708:6:13","suffix":"slot","valueSize":1},{"declaration":2095,"isOffset":false,"isSlot":false,"src":"2718:4:13","valueSize":1}],"id":2101,"nodeType":"InlineAssembly","src":"2685:47:13"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"2456:87:13","text":" @dev Returns an `Uint256Slot` with member `value` located at `slot`."},"id":2103,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2557:14:13","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"slot","nameLocation":"2580:4:13","nodeType":"VariableDeclaration","scope":2103,"src":"2572:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2094,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2572:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2571:14:13"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2099,"mutability":"mutable","name":"r","nameLocation":"2629:1:13","nodeType":"VariableDeclaration","scope":2103,"src":"2609:21:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2053_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2098,"nodeType":"UserDefinedTypeName","pathNode":{"id":2097,"name":"Uint256Slot","nameLocations":["2609:11:13"],"nodeType":"IdentifierPath","referencedDeclaration":2053,"src":"2609:11:13"},"referencedDeclaration":2053,"src":"2609:11:13","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2053_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2608:23:13"},"scope":2148,"src":"2548:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2113,"nodeType":"Block","src":"2917:106:13","statements":[{"AST":{"nativeSrc":"2979:38:13","nodeType":"YulBlock","src":"2979:38:13","statements":[{"nativeSrc":"2993:14:13","nodeType":"YulAssignment","src":"2993:14:13","value":{"name":"slot","nativeSrc":"3003:4:13","nodeType":"YulIdentifier","src":"3003:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"2993:6:13","nodeType":"YulIdentifier","src":"2993:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2110,"isOffset":false,"isSlot":true,"src":"2993:6:13","suffix":"slot","valueSize":1},{"declaration":2106,"isOffset":false,"isSlot":false,"src":"3003:4:13","valueSize":1}],"id":2112,"nodeType":"InlineAssembly","src":"2970:47:13"}]},"documentation":{"id":2104,"nodeType":"StructuredDocumentation","src":"2744:86:13","text":" @dev Returns an `StringSlot` with member `value` located at `slot`."},"id":2114,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"2844:13:13","nodeType":"FunctionDefinition","parameters":{"id":2107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2106,"mutability":"mutable","name":"slot","nameLocation":"2866:4:13","nodeType":"VariableDeclaration","scope":2114,"src":"2858:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2857:14:13"},"returnParameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"r","nameLocation":"2914:1:13","nodeType":"VariableDeclaration","scope":2114,"src":"2895:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2109,"nodeType":"UserDefinedTypeName","pathNode":{"id":2108,"name":"StringSlot","nameLocations":["2895:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"2895:10:13"},"referencedDeclaration":2056,"src":"2895:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"2894:22:13"},"scope":2148,"src":"2835:188:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2124,"nodeType":"Block","src":"3225:112:13","statements":[{"AST":{"nativeSrc":"3287:44:13","nodeType":"YulBlock","src":"3287:44:13","statements":[{"nativeSrc":"3301:20:13","nodeType":"YulAssignment","src":"3301:20:13","value":{"name":"store.slot","nativeSrc":"3311:10:13","nodeType":"YulIdentifier","src":"3311:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3301:6:13","nodeType":"YulIdentifier","src":"3301:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2121,"isOffset":false,"isSlot":true,"src":"3301:6:13","suffix":"slot","valueSize":1},{"declaration":2117,"isOffset":false,"isSlot":true,"src":"3311:10:13","suffix":"slot","valueSize":1}],"id":2123,"nodeType":"InlineAssembly","src":"3278:53:13"}]},"documentation":{"id":2115,"nodeType":"StructuredDocumentation","src":"3029:101:13","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2125,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3144:13:13","nodeType":"FunctionDefinition","parameters":{"id":2118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2117,"mutability":"mutable","name":"store","nameLocation":"3173:5:13","nodeType":"VariableDeclaration","scope":2125,"src":"3158:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2116,"name":"string","nodeType":"ElementaryTypeName","src":"3158:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3157:22:13"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"r","nameLocation":"3222:1:13","nodeType":"VariableDeclaration","scope":2125,"src":"3203:20:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2120,"nodeType":"UserDefinedTypeName","pathNode":{"id":2119,"name":"StringSlot","nameLocations":["3203:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":2056,"src":"3203:10:13"},"referencedDeclaration":2056,"src":"3203:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2056_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3202:22:13"},"scope":2148,"src":"3135:202:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2135,"nodeType":"Block","src":"3513:106:13","statements":[{"AST":{"nativeSrc":"3575:38:13","nodeType":"YulBlock","src":"3575:38:13","statements":[{"nativeSrc":"3589:14:13","nodeType":"YulAssignment","src":"3589:14:13","value":{"name":"slot","nativeSrc":"3599:4:13","nodeType":"YulIdentifier","src":"3599:4:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3589:6:13","nodeType":"YulIdentifier","src":"3589:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2132,"isOffset":false,"isSlot":true,"src":"3589:6:13","suffix":"slot","valueSize":1},{"declaration":2128,"isOffset":false,"isSlot":false,"src":"3599:4:13","valueSize":1}],"id":2134,"nodeType":"InlineAssembly","src":"3566:47:13"}]},"documentation":{"id":2126,"nodeType":"StructuredDocumentation","src":"3343:85:13","text":" @dev Returns an `BytesSlot` with member `value` located at `slot`."},"id":2136,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3442:12:13","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"slot","nameLocation":"3463:4:13","nodeType":"VariableDeclaration","scope":2136,"src":"3455:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2127,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3455:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3454:14:13"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"r","nameLocation":"3510:1:13","nodeType":"VariableDeclaration","scope":2136,"src":"3492:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2131,"nodeType":"UserDefinedTypeName","pathNode":{"id":2130,"name":"BytesSlot","nameLocations":["3492:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"3492:9:13"},"referencedDeclaration":2059,"src":"3492:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3491:21:13"},"scope":2148,"src":"3433:186:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2146,"nodeType":"Block","src":"3816:112:13","statements":[{"AST":{"nativeSrc":"3878:44:13","nodeType":"YulBlock","src":"3878:44:13","statements":[{"nativeSrc":"3892:20:13","nodeType":"YulAssignment","src":"3892:20:13","value":{"name":"store.slot","nativeSrc":"3902:10:13","nodeType":"YulIdentifier","src":"3902:10:13"},"variableNames":[{"name":"r.slot","nativeSrc":"3892:6:13","nodeType":"YulIdentifier","src":"3892:6:13"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"cancun","externalReferences":[{"declaration":2143,"isOffset":false,"isSlot":true,"src":"3892:6:13","suffix":"slot","valueSize":1},{"declaration":2139,"isOffset":false,"isSlot":true,"src":"3902:10:13","suffix":"slot","valueSize":1}],"id":2145,"nodeType":"InlineAssembly","src":"3869:53:13"}]},"documentation":{"id":2137,"nodeType":"StructuredDocumentation","src":"3625:99:13","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2147,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3738:12:13","nodeType":"FunctionDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2139,"mutability":"mutable","name":"store","nameLocation":"3765:5:13","nodeType":"VariableDeclaration","scope":2147,"src":"3751:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2138,"name":"bytes","nodeType":"ElementaryTypeName","src":"3751:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3750:21:13"},"returnParameters":{"id":2144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2143,"mutability":"mutable","name":"r","nameLocation":"3813:1:13","nodeType":"VariableDeclaration","scope":2147,"src":"3795:19:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2142,"nodeType":"UserDefinedTypeName","pathNode":{"id":2141,"name":"BytesSlot","nameLocations":["3795:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":2059,"src":"3795:9:13"},"referencedDeclaration":2059,"src":"3795:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2059_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3794:21:13"},"scope":2148,"src":"3729:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2149,"src":"1245:2685:13","usedErrors":[],"usedEvents":[]}],"src":"193:3738:13"},"id":13},"contracts/BaluniV1PoolPeriphery.sol":{"ast":{"absolutePath":"contracts/BaluniV1PoolPeriphery.sol","exportedSymbols":{"BaluniV1PoolPeriphery":[3657],"Context":[2038],"ContextUpgradeable":[676],"ERC1967Utils":[1126],"ERC20":[1651],"IBaluniV1Pool":[3887],"IBaluniV1PoolFactory":[3920],"IERC1822Proxiable":[686],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755],"Initializable":[448],"OwnableUpgradeable":[194],"UUPSUpgradeable":[630]},"id":3658,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":2150,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:14"},{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","file":"./interfaces/IBaluniV1PoolFactory.sol","id":2151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3658,"sourceUnit":3921,"src":"1466:47:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","file":"./interfaces/IBaluniV1Pool.sol","id":2152,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3658,"sourceUnit":3888,"src":"1515:40:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":2153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3658,"sourceUnit":195,"src":"1557:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":2154,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3658,"sourceUnit":449,"src":"1634:75:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":2155,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3658,"sourceUnit":631,"src":"1711:77:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2157,"name":"Initializable","nameLocations":["2100:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"2100:13:14"},"id":2158,"nodeType":"InheritanceSpecifier","src":"2100:13:14"},{"baseName":{"id":2159,"name":"OwnableUpgradeable","nameLocations":["2115:18:14"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"2115:18:14"},"id":2160,"nodeType":"InheritanceSpecifier","src":"2115:18:14"},{"baseName":{"id":2161,"name":"UUPSUpgradeable","nameLocations":["2135:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":630,"src":"2135:15:14"},"id":2162,"nodeType":"InheritanceSpecifier","src":"2135:15:14"}],"canonicalName":"BaluniV1PoolPeriphery","contractDependencies":[],"contractKind":"contract","documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"1792:272:14","text":" @title BaluniV1PoolPeriphery\n @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\n It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap."},"fullyImplemented":true,"id":3657,"linearizedBaseContracts":[3657,630,686,194,676,448],"name":"BaluniV1PoolPeriphery","nameLocation":"2075:21:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"4219dc40","id":2165,"mutability":"mutable","name":"poolFactory","nameLocation":"2186:11:14","nodeType":"VariableDeclaration","scope":3657,"src":"2158:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"},"typeName":{"id":2164,"nodeType":"UserDefinedTypeName","pathNode":{"id":2163,"name":"IBaluniV1PoolFactory","nameLocations":["2158:20:14"],"nodeType":"IdentifierPath","referencedDeclaration":3920,"src":"2158:20:14"},"referencedDeclaration":3920,"src":"2158:20:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"visibility":"public"},{"constant":false,"functionSelector":"4056c37f","id":2171,"mutability":"mutable","name":"poolsReserves","nameLocation":"2261:13:14","nodeType":"VariableDeclaration","scope":3657,"src":"2206:68:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":2170,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"2214:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2206:47:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2169,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2167,"name":"address","nodeType":"ElementaryTypeName","src":"2233:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2225:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2244:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"body":{"id":2193,"nodeType":"Block","src":"2578:139:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2179,"name":"__UUPSUpgradeable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"2589:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2181,"nodeType":"ExpressionStatement","src":"2589:24:14"},{"expression":{"arguments":[{"expression":{"id":2183,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2639:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2643:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2639:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2182,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"2624:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2624:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"ExpressionStatement","src":"2624:26:14"},{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2187,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2661:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2189,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"2696:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2188,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"2675:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$3920_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"src":"2661:48:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":2192,"nodeType":"ExpressionStatement","src":"2661:48:14"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"2347:164:14","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"c4d66de8","id":2194,"implemented":true,"kind":"function","modifiers":[{"id":2177,"kind":"modifierInvocation","modifierName":{"id":2176,"name":"initializer","nameLocations":["2566:11:14"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2566:11:14"},"nodeType":"ModifierInvocation","src":"2566:11:14"}],"name":"initialize","nameLocation":"2526:10:14","nodeType":"FunctionDefinition","parameters":{"id":2175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"_poolFactory","nameLocation":"2545:12:14","nodeType":"VariableDeclaration","scope":2194,"src":"2537:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"2537:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2536:22:14"},"returnParameters":{"id":2178,"nodeType":"ParameterList","parameters":[],"src":"2578:0:14"},"scope":3657,"src":"2517:200:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2211,"nodeType":"Block","src":"2985:67:14","statements":[{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2205,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"2996:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2207,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"3031:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2206,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"3010:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$3920_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"src":"2996:48:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":2210,"nodeType":"ExpressionStatement","src":"2996:48:14"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"2725:164:14","text":" @dev Initializes the contract by setting the pool factory address.\n @param _poolFactory The address of the BaluniV1PoolFactory contract."},"functionSelector":"8f2248bc","id":2212,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2202,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2199,"src":"2976:7:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":2203,"kind":"modifierInvocation","modifierName":{"id":2201,"name":"reinitializer","nameLocations":["2962:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":349,"src":"2962:13:14"},"nodeType":"ModifierInvocation","src":"2962:22:14"}],"name":"reinitialize","nameLocation":"2904:12:14","nodeType":"FunctionDefinition","parameters":{"id":2200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"_poolFactory","nameLocation":"2925:12:14","nodeType":"VariableDeclaration","scope":2212,"src":"2917:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"2917:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2199,"mutability":"mutable","name":"version","nameLocation":"2946:7:14","nodeType":"VariableDeclaration","scope":2212,"src":"2939:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2198,"name":"uint64","nodeType":"ElementaryTypeName","src":"2939:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2916:38:14"},"returnParameters":{"id":2204,"nodeType":"ParameterList","parameters":[],"src":"2985:0:14"},"scope":3657,"src":"2895:157:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[584],"body":{"id":2221,"nodeType":"Block","src":"3402:2:14","statements":[]},"documentation":{"id":2213,"nodeType":"StructuredDocumentation","src":"3060:254:14","text":" @dev Internal function to authorize an upgrade to a new implementation contract.\n @param newImplementation The address of the new implementation contract.\n @notice This function can only be called by the contract owner."},"id":2222,"implemented":true,"kind":"function","modifiers":[{"id":2219,"kind":"modifierInvocation","modifierName":{"id":2218,"name":"onlyOwner","nameLocations":["3392:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3392:9:14"},"nodeType":"ModifierInvocation","src":"3392:9:14"}],"name":"_authorizeUpgrade","nameLocation":"3329:17:14","nodeType":"FunctionDefinition","overrides":{"id":2217,"nodeType":"OverrideSpecifier","overrides":[],"src":"3383:8:14"},"parameters":{"id":2216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2215,"mutability":"mutable","name":"newImplementation","nameLocation":"3355:17:14","nodeType":"VariableDeclaration","scope":2222,"src":"3347:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2214,"name":"address","nodeType":"ElementaryTypeName","src":"3347:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3346:27:14"},"returnParameters":{"id":2220,"nodeType":"ParameterList","parameters":[],"src":"3402:0:14"},"scope":3657,"src":"3320:84:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2307,"nodeType":"Block","src":"3824:564:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"3843:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3843:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3855:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3835:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3835:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2242,"nodeType":"ExpressionStatement","src":"3835:55:14"},{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"poolAddress","nameLocation":"3911:11:14","nodeType":"VariableDeclaration","scope":2307,"src":"3903:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"3903:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2250,"initialValue":{"arguments":[{"id":2247,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3953:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2248,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"3964:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2245,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3925:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":2246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3937:15:14","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"3925:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3925:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3903:69:14"},{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"pool","nameLocation":"3997:4:14","nodeType":"VariableDeclaration","scope":2307,"src":"3983:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2252,"nodeType":"UserDefinedTypeName","pathNode":{"id":2251,"name":"IBaluniV1Pool","nameLocations":["3983:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"3983:13:14"},"referencedDeclaration":3887,"src":"3983:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2257,"initialValue":{"arguments":[{"id":2255,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4018:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2254,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"4004:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4004:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"3983:47:14"},{"expression":{"arguments":[{"expression":{"id":2262,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4074:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4078:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4074:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2266,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4094:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4086:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"4086:7:14","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2268,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4101:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2259,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4050:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2258,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4043:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4061:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"4043:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4043:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2270,"nodeType":"ExpressionStatement","src":"4043:65:14"},{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2271,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4119:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2274,"indexExpression":{"id":2272,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4133:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4119:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2275,"indexExpression":{"id":2273,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4146:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4119:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2276,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4160:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4119:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2278,"nodeType":"ExpressionStatement","src":"4119:47:14"},{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"toSend","nameLocation":"4187:6:14","nodeType":"VariableDeclaration","scope":2307,"src":"4179:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"4179:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2288,"initialValue":{"arguments":[{"id":2283,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"4206:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2284,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4217:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2285,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2229,"src":"4226:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2286,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4234:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2281,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"4196:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:4:14","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"4196:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4196:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4179:64:14"},{"expression":{"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2289,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"4254:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2292,"indexExpression":{"id":2290,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"4268:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4254:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2293,"indexExpression":{"id":2291,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4281:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4254:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2294,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4293:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4254:45:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"nodeType":"ExpressionStatement","src":"4254:45:14"},{"expression":{"arguments":[{"id":2301,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2231,"src":"4337:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2302,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4347:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2298,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2227,"src":"4319:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2297,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"4312:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4312:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4328:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"4312:24:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4312:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2304,"nodeType":"ExpressionStatement","src":"4312:42:14"},{"expression":{"id":2305,"name":"toSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4374:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2235,"id":2306,"nodeType":"Return","src":"4367:13:14"}]},"documentation":{"id":2223,"nodeType":"StructuredDocumentation","src":"3412:295:14","text":" @dev Swaps tokens in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"6e81221c","id":2308,"implemented":true,"kind":"function","modifiers":[],"name":"swap","nameLocation":"3722:4:14","nodeType":"FunctionDefinition","parameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2225,"mutability":"mutable","name":"fromToken","nameLocation":"3735:9:14","nodeType":"VariableDeclaration","scope":2308,"src":"3727:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2224,"name":"address","nodeType":"ElementaryTypeName","src":"3727:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2227,"mutability":"mutable","name":"toToken","nameLocation":"3754:7:14","nodeType":"VariableDeclaration","scope":2308,"src":"3746:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2226,"name":"address","nodeType":"ElementaryTypeName","src":"3746:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2229,"mutability":"mutable","name":"amount","nameLocation":"3771:6:14","nodeType":"VariableDeclaration","scope":2308,"src":"3763:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2228,"name":"uint256","nodeType":"ElementaryTypeName","src":"3763:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2231,"mutability":"mutable","name":"receiver","nameLocation":"3787:8:14","nodeType":"VariableDeclaration","scope":2308,"src":"3779:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2230,"name":"address","nodeType":"ElementaryTypeName","src":"3779:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3726:70:14"},"returnParameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2308,"src":"3815:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2233,"name":"uint256","nodeType":"ElementaryTypeName","src":"3815:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3814:9:14"},"scope":3657,"src":"3713:675:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2506,"nodeType":"Block","src":"5133:1258:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2328,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5166:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5177:6:14","memberName":"length","nodeType":"MemberAccess","src":"5166:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2330,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5187:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5196:6:14","memberName":"length","nodeType":"MemberAccess","src":"5187:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5166:36:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2333,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5223:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5232:6:14","memberName":"length","nodeType":"MemberAccess","src":"5223:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2335,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5242:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5250:6:14","memberName":"length","nodeType":"MemberAccess","src":"5242:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5223:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5166:90:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2339,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5277:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5285:6:14","memberName":"length","nodeType":"MemberAccess","src":"5277:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2341,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"5295:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5305:6:14","memberName":"length","nodeType":"MemberAccess","src":"5295:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5277:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5166:145:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e70757420617272617973206c656e677468206d69736d61746368","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5326:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""},"value":"Input arrays length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786","typeString":"literal_string \"Input arrays length mismatch\""}],"id":2327,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5144:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5144:223:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2347,"nodeType":"ExpressionStatement","src":"5144:223:14"},{"assignments":[2352],"declarations":[{"constant":false,"id":2352,"mutability":"mutable","name":"amountsOut","nameLocation":"5397:10:14","nodeType":"VariableDeclaration","scope":2506,"src":"5380:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5380:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2351,"nodeType":"ArrayTypeName","src":"5380:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2359,"initialValue":{"arguments":[{"expression":{"id":2356,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5424:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5435:6:14","memberName":"length","nodeType":"MemberAccess","src":"5424:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5410:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5414:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ArrayTypeName","src":"5414:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5380:62:14"},{"body":{"id":2502,"nodeType":"Block","src":"5503:851:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2372,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5526:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2374,"indexExpression":{"id":2373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5534:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5526:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5539:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5526:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5542:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5518:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5518:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2379,"nodeType":"ExpressionStatement","src":"5518:59:14"},{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"poolAddress","nameLocation":"5600:11:14","nodeType":"VariableDeclaration","scope":2502,"src":"5592:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"5592:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2391,"initialValue":{"arguments":[{"baseExpression":{"id":2384,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5642:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2386,"indexExpression":{"id":2385,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5653:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5642:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2387,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"5657:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2389,"indexExpression":{"id":2388,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5666:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5657:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2382,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5614:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5626:15:14","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"5614:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5614:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5592:77:14"},{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"pool","nameLocation":"5698:4:14","nodeType":"VariableDeclaration","scope":2502,"src":"5684:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2393,"nodeType":"UserDefinedTypeName","pathNode":{"id":2392,"name":"IBaluniV1Pool","nameLocations":["5684:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"5684:13:14"},"referencedDeclaration":3887,"src":"5684:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2398,"initialValue":{"arguments":[{"id":2396,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5719:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2395,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"5705:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5705:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"5684:47:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":2406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5788:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5792:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5788:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":2401,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5763:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2403,"indexExpression":{"id":2402,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5774:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5763:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2400,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5756:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5756:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5778:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"5756:31:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5756:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":2409,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5803:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2411,"indexExpression":{"id":2410,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5811:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5803:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5756:57:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742042616c616e6365","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5815:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82","typeString":"literal_string \"Insufficient Balance\""},"value":"Insufficient Balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b80e76e4c9dd95c0a6a7ab97569124291f4757bb9e5ff42d1e95905b42144c82","typeString":"literal_string \"Insufficient Balance\""}],"id":2399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5748:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5748:90:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2415,"nodeType":"ExpressionStatement","src":"5748:90:14"},{"expression":{"arguments":[{"expression":{"id":2422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5888:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5892:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5888:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2426,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5908:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":2425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5900:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2424,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:14","typeDescriptions":{}}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5900:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2428,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5915:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2430,"indexExpression":{"id":2429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5923:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5915:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":2417,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5860:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2419,"indexExpression":{"id":2418,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5871:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5860:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2416,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"5853:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5853:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5875:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"5853:34:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5853:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2432,"nodeType":"ExpressionStatement","src":"5853:73:14"},{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2433,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"5941:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2438,"indexExpression":{"id":2434,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"5955:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5941:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2439,"indexExpression":{"baseExpression":{"id":2435,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5968:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2437,"indexExpression":{"id":2436,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5979:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5968:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5941:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2440,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"5986:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2442,"indexExpression":{"id":2441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5994:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5986:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5941:55:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2444,"nodeType":"ExpressionStatement","src":"5941:55:14"},{"assignments":[2446],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"amountOut","nameLocation":"6021:9:14","nodeType":"VariableDeclaration","scope":2502,"src":"6013:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6013:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2462,"initialValue":{"arguments":[{"baseExpression":{"id":2449,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"6043:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2451,"indexExpression":{"id":2450,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6043:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2452,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6058:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2454,"indexExpression":{"id":2453,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6067:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6058:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2455,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"6071:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2457,"indexExpression":{"id":2456,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6079:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6071:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2458,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"6083:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2460,"indexExpression":{"id":2459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6093:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6083:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2447,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"6033:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6038:4:14","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"6033:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6033:63:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6013:83:14"},{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2463,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"6111:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2468,"indexExpression":{"id":2464,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"6125:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6111:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2469,"indexExpression":{"baseExpression":{"id":2465,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6138:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2467,"indexExpression":{"id":2466,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6147:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6138:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6111:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2470,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6154:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6111:52:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"6111:52:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2482,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6226:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6218:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2480,"name":"address","nodeType":"ElementaryTypeName","src":"6218:7:14","typeDescriptions":{}}},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6218:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":2475,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6195:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2477,"indexExpression":{"id":2476,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6204:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6195:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2474,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6188:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6208:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"6188:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6188:44:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2485,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6236:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6188:57:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6247:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":2473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6180:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6180:92:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2489,"nodeType":"ExpressionStatement","src":"6180:92:14"},{"expression":{"arguments":[{"baseExpression":{"id":2496,"name":"receivers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"6318:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2498,"indexExpression":{"id":2497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6328:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6318:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2499,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6332:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":2491,"name":"toTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"6296:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2493,"indexExpression":{"id":2492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2490,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6289:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6309:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"6289:28:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6289:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2501,"nodeType":"ExpressionStatement","src":"6289:53:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5475:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2365,"name":"fromTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2312,"src":"5479:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5490:6:14","memberName":"length","nodeType":"MemberAccess","src":"5479:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5475:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2503,"initializationExpression":{"assignments":[2361],"declarations":[{"constant":false,"id":2361,"mutability":"mutable","name":"i","nameLocation":"5468:1:14","nodeType":"VariableDeclaration","scope":2503,"src":"5460:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2360,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2363,"initialValue":{"hexValue":"30","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5472:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5460:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5498:3:14","subExpression":{"id":2368,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2361,"src":"5498:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2370,"nodeType":"ExpressionStatement","src":"5498:3:14"},"nodeType":"ForStatement","src":"5455:899:14"},{"expression":{"id":2504,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"6373:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2326,"id":2505,"nodeType":"Return","src":"6366:17:14"}]},"documentation":{"id":2309,"nodeType":"StructuredDocumentation","src":"4396:515:14","text":" @dev Performs batch swaps between multiple token pairs.\n @param fromTokens An array of addresses representing the tokens to swap from.\n @param toTokens An array of addresses representing the tokens to swap to.\n @param amounts An array of amounts representing the amounts to swap.\n @param receivers An array of addresses representing the receivers of the swapped tokens.\n @return An array of amounts representing the amounts of tokens received after the swaps."},"functionSelector":"e74e9b06","id":2507,"implemented":true,"kind":"function","modifiers":[],"name":"batchSwap","nameLocation":"4926:9:14","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2312,"mutability":"mutable","name":"fromTokens","nameLocation":"4965:10:14","nodeType":"VariableDeclaration","scope":2507,"src":"4946:29:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2310,"name":"address","nodeType":"ElementaryTypeName","src":"4946:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2311,"nodeType":"ArrayTypeName","src":"4946:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"toTokens","nameLocation":"5005:8:14","nodeType":"VariableDeclaration","scope":2507,"src":"4986:27:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2313,"name":"address","nodeType":"ElementaryTypeName","src":"4986:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2314,"nodeType":"ArrayTypeName","src":"4986:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2318,"mutability":"mutable","name":"amounts","nameLocation":"5043:7:14","nodeType":"VariableDeclaration","scope":2507,"src":"5024:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2316,"name":"uint256","nodeType":"ElementaryTypeName","src":"5024:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2317,"nodeType":"ArrayTypeName","src":"5024:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"receivers","nameLocation":"5080:9:14","nodeType":"VariableDeclaration","scope":2507,"src":"5061:28:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2319,"name":"address","nodeType":"ElementaryTypeName","src":"5061:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2320,"nodeType":"ArrayTypeName","src":"5061:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4935:161:14"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2507,"src":"5115:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2323,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ArrayTypeName","src":"5115:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5114:18:14"},"scope":3657,"src":"4917:1474:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2581,"nodeType":"Block","src":"6473:402:14","statements":[{"assignments":[2516],"declarations":[{"constant":false,"id":2516,"mutability":"mutable","name":"pool","nameLocation":"6498:4:14","nodeType":"VariableDeclaration","scope":2581,"src":"6484:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2515,"nodeType":"UserDefinedTypeName","pathNode":{"id":2514,"name":"IBaluniV1Pool","nameLocations":["6484:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"6484:13:14"},"referencedDeclaration":3887,"src":"6484:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2520,"initialValue":{"arguments":[{"id":2518,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"6519:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2517,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"6505:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6505:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"6484:47:14"},{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"amounts","nameLocation":"6559:7:14","nodeType":"VariableDeclaration","scope":2581,"src":"6542:24:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"6542:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2524,"nodeType":"ArrayTypeName","src":"6542:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[{"id":2528,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6591:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2526,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"6569:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6574:16:14","memberName":"rebalanceWeights","nodeType":"MemberAccess","referencedDeclaration":3835,"src":"6569:21:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) external returns (uint256[] memory)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6569:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6542:58:14"},{"assignments":[2535],"declarations":[{"constant":false,"id":2535,"mutability":"mutable","name":"assets","nameLocation":"6628:6:14","nodeType":"VariableDeclaration","scope":2581,"src":"6611:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2533,"name":"address","nodeType":"ElementaryTypeName","src":"6611:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2534,"nodeType":"ArrayTypeName","src":"6611:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2539,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2536,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"6637:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6642:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"6637:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6637:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"6611:42:14"},{"body":{"id":2579,"nodeType":"Block","src":"6708:160:14","statements":[{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2551,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"6723:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2556,"indexExpression":{"id":2552,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"6737:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6723:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2557,"indexExpression":{"baseExpression":{"id":2553,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"6750:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2555,"indexExpression":{"id":2554,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6750:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6723:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2558,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6764:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2560,"indexExpression":{"id":2559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6772:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6764:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6723:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"6723:51:14"},{"expression":{"arguments":[{"id":2569,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"6820:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2572,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6838:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":2571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6830:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2570,"name":"address","nodeType":"ElementaryTypeName","src":"6830:7:14","typeDescriptions":{}}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6830:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":2574,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"6845:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2576,"indexExpression":{"id":2575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6853:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6845:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":2564,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"6796:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2566,"indexExpression":{"id":2565,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6803:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6796:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2563,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"6789:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6789:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6807:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"6789:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6789:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2578,"nodeType":"ExpressionStatement","src":"6789:67:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6684:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2545,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2535,"src":"6688:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6695:6:14","memberName":"length","nodeType":"MemberAccess","src":"6688:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6684:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2580,"initializationExpression":{"assignments":[2541],"declarations":[{"constant":false,"id":2541,"mutability":"mutable","name":"i","nameLocation":"6677:1:14","nodeType":"VariableDeclaration","scope":2580,"src":"6669:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2540,"name":"uint256","nodeType":"ElementaryTypeName","src":"6669:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2543,"initialValue":{"hexValue":"30","id":2542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6669:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6703:3:14","subExpression":{"id":2548,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2541,"src":"6703:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2550,"nodeType":"ExpressionStatement","src":"6703:3:14"},"nodeType":"ForStatement","src":"6664:204:14"}]},"functionSelector":"ad414263","id":2582,"implemented":true,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"6408:16:14","nodeType":"FunctionDefinition","parameters":{"id":2512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"poolAddress","nameLocation":"6433:11:14","nodeType":"VariableDeclaration","scope":2582,"src":"6425:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2508,"name":"address","nodeType":"ElementaryTypeName","src":"6425:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2511,"mutability":"mutable","name":"receiver","nameLocation":"6454:8:14","nodeType":"VariableDeclaration","scope":2582,"src":"6446:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"6446:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6424:39:14"},"returnParameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"6473:0:14"},"scope":3657,"src":"6399:476:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2791,"nodeType":"Block","src":"7042:1575:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2596,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"7061:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7070:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7061:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7073:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":2595,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7053:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7053:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2601,"nodeType":"ExpressionStatement","src":"7053:55:14"},{"assignments":[2606],"declarations":[{"constant":false,"id":2606,"mutability":"mutable","name":"pools","nameLocation":"7138:5:14","nodeType":"VariableDeclaration","scope":2791,"src":"7121:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2604,"name":"address","nodeType":"ElementaryTypeName","src":"7121:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2605,"nodeType":"ArrayTypeName","src":"7121:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2612,"initialValue":{"arguments":[{"id":2608,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"7164:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2609,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"7175:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2610,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"7184:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"_findOptimalRoute","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"7146:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address,address,uint256) view returns (address[] memory)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7146:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7121:70:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2614,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"7210:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7216:6:14","memberName":"length","nodeType":"MemberAccess","src":"7210:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7225:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7210:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20726f75746520666f756e64","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7228:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ee7b828cb0281855c8b3bbf7bd552c39ac5e8c76d8779863b91d21e559bad900","typeString":"literal_string \"No route found\""},"value":"No route found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ee7b828cb0281855c8b3bbf7bd552c39ac5e8c76d8779863b91d21e559bad900","typeString":"literal_string \"No route found\""}],"id":2613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7202:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7202:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2620,"nodeType":"ExpressionStatement","src":"7202:43:14"},{"expression":{"arguments":[{"expression":{"id":2625,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7289:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7293:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7289:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2629,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7309:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":2628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7301:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2627,"name":"address","nodeType":"ElementaryTypeName","src":"7301:7:14","typeDescriptions":{}}},"id":2630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7301:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2631,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"7316:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2622,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"7265:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2621,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7258:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":2623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7258:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7276:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"7258:30:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7258:65:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2633,"nodeType":"ExpressionStatement","src":"7258:65:14"},{"assignments":[2635],"declarations":[{"constant":false,"id":2635,"mutability":"mutable","name":"amountRemaining","nameLocation":"7344:15:14","nodeType":"VariableDeclaration","scope":2791,"src":"7336:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2634,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2637,"initialValue":{"id":2636,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2588,"src":"7362:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7336:32:14"},{"assignments":[2639],"declarations":[{"constant":false,"id":2639,"mutability":"mutable","name":"currentToken","nameLocation":"7387:12:14","nodeType":"VariableDeclaration","scope":2791,"src":"7379:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2638,"name":"address","nodeType":"ElementaryTypeName","src":"7379:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2641,"initialValue":{"id":2640,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2584,"src":"7402:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7379:32:14"},{"body":{"id":2787,"nodeType":"Block","src":"7465:1110:14","statements":[{"assignments":[2655],"declarations":[{"constant":false,"id":2655,"mutability":"mutable","name":"pool","nameLocation":"7494:4:14","nodeType":"VariableDeclaration","scope":2787,"src":"7480:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2654,"nodeType":"UserDefinedTypeName","pathNode":{"id":2653,"name":"IBaluniV1Pool","nameLocations":["7480:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"7480:13:14"},"referencedDeclaration":3887,"src":"7480:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2661,"initialValue":{"arguments":[{"baseExpression":{"id":2657,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"7515:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2659,"indexExpression":{"id":2658,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7521:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7515:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2656,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"7501:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7501:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"7480:44:14"},{"assignments":[2666],"declarations":[{"constant":false,"id":2666,"mutability":"mutable","name":"poolTokens","nameLocation":"7556:10:14","nodeType":"VariableDeclaration","scope":2787,"src":"7539:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2664,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2665,"nodeType":"ArrayTypeName","src":"7539:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2670,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2667,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"7569:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7574:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"7569:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7569:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7539:46:14"},{"assignments":[2675],"declarations":[{"constant":false,"id":2675,"mutability":"mutable","name":"reserves","nameLocation":"7617:8:14","nodeType":"VariableDeclaration","scope":2787,"src":"7600:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"7600:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2674,"nodeType":"ArrayTypeName","src":"7600:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2681,"initialValue":{"arguments":[{"baseExpression":{"id":2677,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"7640:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2679,"indexExpression":{"id":2678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7646:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7640:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2676,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"7628:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view returns (uint256[] memory)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7628:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7600:49:14"},{"assignments":[2683],"declarations":[{"constant":false,"id":2683,"mutability":"mutable","name":"nextToken","nameLocation":"7674:9:14","nodeType":"VariableDeclaration","scope":2787,"src":"7666:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2682,"name":"address","nodeType":"ElementaryTypeName","src":"7666:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2684,"nodeType":"VariableDeclarationStatement","src":"7666:17:14"},{"body":{"id":2716,"nodeType":"Block","src":"7746:184:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2696,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"7769:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2698,"indexExpression":{"id":2697,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"7780:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7769:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2699,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"7786:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7769:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2701,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"7802:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2703,"indexExpression":{"id":2702,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"7811:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7802:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7802:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7769:48:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2715,"nodeType":"IfStatement","src":"7765:150:14","trueBody":{"id":2714,"nodeType":"Block","src":"7819:96:14","statements":[{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2707,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"7842:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2708,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"7854:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2710,"indexExpression":{"id":2709,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"7865:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7854:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7842:25:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2712,"nodeType":"ExpressionStatement","src":"7842:25:14"},{"id":2713,"nodeType":"Break","src":"7890:5:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2689,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"7718:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2690,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"7722:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7733:6:14","memberName":"length","nodeType":"MemberAccess","src":"7722:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7718:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2717,"initializationExpression":{"assignments":[2686],"declarations":[{"constant":false,"id":2686,"mutability":"mutable","name":"j","nameLocation":"7711:1:14","nodeType":"VariableDeclaration","scope":2717,"src":"7703:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"7703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2688,"initialValue":{"hexValue":"30","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7715:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7703:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7741:3:14","subExpression":{"id":2693,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"7741:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2695,"nodeType":"ExpressionStatement","src":"7741:3:14"},"nodeType":"ForStatement","src":"7698:232:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2719,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"7954:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7975:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7967:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2720,"name":"address","nodeType":"ElementaryTypeName","src":"7967:7:14","typeDescriptions":{}}},"id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7967:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7954:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2076616c6964206e65787420746f6b656e20666f756e64","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7979:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecec49bae7da7d66a50331e2bf4afac20670ba1e1de72e63ed33afdc33ab1c0d","typeString":"literal_string \"No valid next token found\""},"value":"No valid next token found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecec49bae7da7d66a50331e2bf4afac20670ba1e1de72e63ed33afdc33ab1c0d","typeString":"literal_string \"No valid next token found\""}],"id":2718,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7946:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7946:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2727,"nodeType":"ExpressionStatement","src":"7946:61:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2731,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8051:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2729,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"8030:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8035:15:14","memberName":"getAssetReserve","nodeType":"MemberAccess","referencedDeclaration":3718,"src":"8030:20:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8030:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2733,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8065:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8030:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74206c697175696469747920696e20706f6f6c20666f722073776170","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8082:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cd5218ddce9f9d1325aa32ed059b5884f2ed71b9548aabcb4725b422ee8090a6","typeString":"literal_string \"Insufficient liquidity in pool for swap\""},"value":"Insufficient liquidity in pool for swap"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cd5218ddce9f9d1325aa32ed059b5884f2ed71b9548aabcb4725b422ee8090a6","typeString":"literal_string \"Insufficient liquidity in pool for swap\""}],"id":2728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8022:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8022:102:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2737,"nodeType":"ExpressionStatement","src":"8022:102:14"},{"assignments":[2739],"declarations":[{"constant":false,"id":2739,"mutability":"mutable","name":"amountOut","nameLocation":"8149:9:14","nodeType":"VariableDeclaration","scope":2787,"src":"8141:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"8141:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2758,"initialValue":{"arguments":[{"id":2742,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8189:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2743,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8220:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2744,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8248:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2745,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8282:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2746,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8287:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8293:6:14","memberName":"length","nodeType":"MemberAccess","src":"8287:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8302:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8287:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8282:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2754,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8325:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8317:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2752,"name":"address","nodeType":"ElementaryTypeName","src":"8317:7:14","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8317:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8282:48:14","trueExpression":{"id":2751,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"8306:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2740,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"8161:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8166:4:14","memberName":"swap","nodeType":"MemberAccess","referencedDeclaration":3783,"src":"8161:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address,uint256,address) external returns (uint256)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8161:184:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8141:204:14"},{"expression":{"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2759,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"8362:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2764,"indexExpression":{"baseExpression":{"id":2760,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8376:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2762,"indexExpression":{"id":2761,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8382:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8376:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8362:23:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2765,"indexExpression":{"id":2763,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8386:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8362:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2766,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8403:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8362:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2768,"nodeType":"ExpressionStatement","src":"8362:56:14"},{"expression":{"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2769,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"8433:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2774,"indexExpression":{"baseExpression":{"id":2770,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"8447:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2772,"indexExpression":{"id":2771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"8453:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8447:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8433:23:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2775,"indexExpression":{"id":2773,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8457:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8433:34:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2776,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"8471:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8433:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2778,"nodeType":"ExpressionStatement","src":"8433:47:14"},{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2779,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"8497:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2780,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"8512:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8497:24:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2782,"nodeType":"ExpressionStatement","src":"8497:24:14"},{"expression":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2783,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8536:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2784,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"8554:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:27:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2786,"nodeType":"ExpressionStatement","src":"8536:27:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7442:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2647,"name":"pools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"7446:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7452:6:14","memberName":"length","nodeType":"MemberAccess","src":"7446:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7442:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2788,"initializationExpression":{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"i","nameLocation":"7435:1:14","nodeType":"VariableDeclaration","scope":2788,"src":"7427:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"7427:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2645,"initialValue":{"hexValue":"30","id":2644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7439:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7427:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7460:3:14","subExpression":{"id":2650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"7460:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2652,"nodeType":"ExpressionStatement","src":"7460:3:14"},"nodeType":"ForStatement","src":"7422:1153:14"},{"expression":{"id":2789,"name":"amountRemaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"8594:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2594,"id":2790,"nodeType":"Return","src":"8587:22:14"}]},"functionSelector":"7442eca6","id":2792,"implemented":true,"kind":"function","modifiers":[],"name":"smartSwap","nameLocation":"6892:9:14","nodeType":"FunctionDefinition","parameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2584,"mutability":"mutable","name":"fromToken","nameLocation":"6920:9:14","nodeType":"VariableDeclaration","scope":2792,"src":"6912:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2583,"name":"address","nodeType":"ElementaryTypeName","src":"6912:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2586,"mutability":"mutable","name":"toToken","nameLocation":"6948:7:14","nodeType":"VariableDeclaration","scope":2792,"src":"6940:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2585,"name":"address","nodeType":"ElementaryTypeName","src":"6940:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"amount","nameLocation":"6974:6:14","nodeType":"VariableDeclaration","scope":2792,"src":"6966:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"6966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"receiver","nameLocation":"6999:8:14","nodeType":"VariableDeclaration","scope":2792,"src":"6991:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2589,"name":"address","nodeType":"ElementaryTypeName","src":"6991:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6901:113:14"},"returnParameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2792,"src":"7033:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"7033:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7032:9:14"},"scope":3657,"src":"6883:1734:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3010,"nodeType":"Block","src":"8779:1629:14","statements":[{"assignments":[2808],"declarations":[{"constant":false,"id":2808,"mutability":"mutable","name":"allPools","nameLocation":"8807:8:14","nodeType":"VariableDeclaration","scope":3010,"src":"8790:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2806,"name":"address","nodeType":"ElementaryTypeName","src":"8790:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2807,"nodeType":"ArrayTypeName","src":"8790:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2812,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2809,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"8818:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8830:11:14","memberName":"getAllPools","nodeType":"MemberAccess","referencedDeclaration":3919,"src":"8818:23:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8818:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8790:53:14"},{"assignments":[2814],"declarations":[{"constant":false,"id":2814,"mutability":"mutable","name":"poolCount","nameLocation":"8862:9:14","nodeType":"VariableDeclaration","scope":3010,"src":"8854:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2813,"name":"uint256","nodeType":"ElementaryTypeName","src":"8854:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2817,"initialValue":{"expression":{"id":2815,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"8874:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8883:6:14","memberName":"length","nodeType":"MemberAccess","src":"8874:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8854:35:14"},{"assignments":[2822],"declarations":[{"constant":false,"id":2822,"mutability":"mutable","name":"path","nameLocation":"8919:4:14","nodeType":"VariableDeclaration","scope":3010,"src":"8902:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"8902:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2821,"nodeType":"ArrayTypeName","src":"8902:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2828,"initialValue":{"arguments":[{"id":2826,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"8940:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8926:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"8930:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2824,"nodeType":"ArrayTypeName","src":"8930:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8926:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8902:48:14"},{"assignments":[2830],"declarations":[{"constant":false,"id":2830,"mutability":"mutable","name":"pathLength","nameLocation":"8969:10:14","nodeType":"VariableDeclaration","scope":3010,"src":"8961:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2829,"name":"uint256","nodeType":"ElementaryTypeName","src":"8961:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2832,"initialValue":{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8982:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8961:22:14"},{"assignments":[2837],"declarations":[{"constant":false,"id":2837,"mutability":"mutable","name":"visited","nameLocation":"9008:7:14","nodeType":"VariableDeclaration","scope":3010,"src":"8994:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":2835,"name":"bool","nodeType":"ElementaryTypeName","src":"8994:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2836,"nodeType":"ArrayTypeName","src":"8994:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":2843,"initialValue":{"arguments":[{"id":2841,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9029:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9018:10:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":2838,"name":"bool","nodeType":"ElementaryTypeName","src":"9022:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"ArrayTypeName","src":"9022:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9018:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8994:45:14"},{"assignments":[2848],"declarations":[{"constant":false,"id":2848,"mutability":"mutable","name":"queue","nameLocation":"9069:5:14","nodeType":"VariableDeclaration","scope":3010,"src":"9052:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2846,"name":"address","nodeType":"ElementaryTypeName","src":"9052:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2847,"nodeType":"ArrayTypeName","src":"9052:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2854,"initialValue":{"arguments":[{"id":2852,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9091:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9077:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2849,"name":"address","nodeType":"ElementaryTypeName","src":"9081:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2850,"nodeType":"ArrayTypeName","src":"9081:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9077:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9052:49:14"},{"assignments":[2856],"declarations":[{"constant":false,"id":2856,"mutability":"mutable","name":"queueHead","nameLocation":"9120:9:14","nodeType":"VariableDeclaration","scope":3010,"src":"9112:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"9112:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2858,"initialValue":{"hexValue":"30","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9132:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9112:21:14"},{"assignments":[2860],"declarations":[{"constant":false,"id":2860,"mutability":"mutable","name":"queueTail","nameLocation":"9152:9:14","nodeType":"VariableDeclaration","scope":3010,"src":"9144:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2859,"name":"uint256","nodeType":"ElementaryTypeName","src":"9144:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2862,"initialValue":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9164:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9144:21:14"},{"expression":{"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2863,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"9178:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2866,"indexExpression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9184:11:14","subExpression":{"id":2864,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"9184:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9178:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2867,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2794,"src":"9199:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9178:30:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2869,"nodeType":"ExpressionStatement","src":"9178:30:14"},{"body":{"id":2995,"nodeType":"Block","src":"9251:1075:14","statements":[{"assignments":[2874],"declarations":[{"constant":false,"id":2874,"mutability":"mutable","name":"currentToken","nameLocation":"9274:12:14","nodeType":"VariableDeclaration","scope":2995,"src":"9266:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2873,"name":"address","nodeType":"ElementaryTypeName","src":"9266:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2879,"initialValue":{"baseExpression":{"id":2875,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"9289:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2878,"indexExpression":{"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9295:11:14","subExpression":{"id":2876,"name":"queueHead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9295:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9289:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9266:41:14"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"9326:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2881,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"9342:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9326:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2917,"nodeType":"IfStatement","src":"9322:277:14","trueBody":{"id":2916,"nodeType":"Block","src":"9351:248:14","statements":[{"assignments":[2887],"declarations":[{"constant":false,"id":2887,"mutability":"mutable","name":"finalPath","nameLocation":"9387:9:14","nodeType":"VariableDeclaration","scope":2916,"src":"9370:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2885,"name":"address","nodeType":"ElementaryTypeName","src":"9370:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2886,"nodeType":"ArrayTypeName","src":"9370:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2893,"initialValue":{"arguments":[{"id":2891,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"9413:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9399:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":2888,"name":"address","nodeType":"ElementaryTypeName","src":"9403:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2889,"nodeType":"ArrayTypeName","src":"9403:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9399:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9370:54:14"},{"body":{"id":2912,"nodeType":"Block","src":"9484:65:14","statements":[{"expression":{"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2904,"name":"finalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"9507:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2906,"indexExpression":{"id":2905,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9517:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9507:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2907,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9522:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2909,"indexExpression":{"id":2908,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9527:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9522:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9507:22:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2911,"nodeType":"ExpressionStatement","src":"9507:22:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9463:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2899,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"9467:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9463:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2913,"initializationExpression":{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"i","nameLocation":"9456:1:14","nodeType":"VariableDeclaration","scope":2913,"src":"9448:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2894,"name":"uint256","nodeType":"ElementaryTypeName","src":"9448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2897,"initialValue":{"hexValue":"30","id":2896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9460:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9448:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9479:3:14","subExpression":{"id":2901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"9479:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2903,"nodeType":"ExpressionStatement","src":"9479:3:14"},"nodeType":"ForStatement","src":"9443:106:14"},{"expression":{"id":2914,"name":"finalPath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"9574:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2803,"id":2915,"nodeType":"Return","src":"9567:16:14"}]}},{"body":{"id":2993,"nodeType":"Block","src":"9655:660:14","statements":[{"condition":{"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9678:11:14","subExpression":{"baseExpression":{"id":2928,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"9679:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2930,"indexExpression":{"id":2929,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"9687:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9679:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2992,"nodeType":"IfStatement","src":"9674:626:14","trueBody":{"id":2991,"nodeType":"Block","src":"9691:609:14","statements":[{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"pool","nameLocation":"9728:4:14","nodeType":"VariableDeclaration","scope":2991,"src":"9714:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":2933,"nodeType":"UserDefinedTypeName","pathNode":{"id":2932,"name":"IBaluniV1Pool","nameLocations":["9714:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"9714:13:14"},"referencedDeclaration":3887,"src":"9714:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":2940,"initialValue":{"arguments":[{"baseExpression":{"id":2936,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"9749:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2938,"indexExpression":{"id":2937,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"9758:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9749:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2935,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"9735:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9735:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"9714:47:14"},{"assignments":[2945],"declarations":[{"constant":false,"id":2945,"mutability":"mutable","name":"poolTokens","nameLocation":"9801:10:14","nodeType":"VariableDeclaration","scope":2991,"src":"9784:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2943,"name":"address","nodeType":"ElementaryTypeName","src":"9784:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2944,"nodeType":"ArrayTypeName","src":"9784:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2949,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2946,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"9814:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9819:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"9814:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9814:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9784:46:14"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2951,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"9900:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2952,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"9912:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2950,"name":"_containsToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"9885:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (address[] memory,address) pure returns (bool)"}},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9885:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"arguments":[{"id":2955,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"9953:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},{"id":2956,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"9959:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2957,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"9973:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2954,"name":"_hasSufficientLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"9929:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_contract$_IBaluniV1Pool_$3887_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (contract IBaluniV1Pool,address,uint256) view returns (bool)"}},"id":2958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9885:95:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2990,"nodeType":"IfStatement","src":"9855:426:14","trueBody":{"id":2989,"nodeType":"Block","src":"10004:277:14","statements":[{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"nextToken","nameLocation":"10039:9:14","nodeType":"VariableDeclaration","scope":2989,"src":"10031:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2960,"name":"address","nodeType":"ElementaryTypeName","src":"10031:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2966,"initialValue":{"arguments":[{"id":2963,"name":"poolTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2945,"src":"10072:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":2964,"name":"currentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"10084:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2962,"name":"_getOtherTokenInPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"10051:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_address_$","typeString":"function (address[] memory,address) pure returns (address)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10031:66:14"},{"expression":{"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2967,"name":"path","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"10124:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2970,"indexExpression":{"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10129:12:14","subExpression":{"id":2968,"name":"pathLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"10129:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10124:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2971,"name":"allPools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"10145:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2973,"indexExpression":{"id":2972,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"10154:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10145:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10124:32:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2975,"nodeType":"ExpressionStatement","src":"10124:32:14"},{"expression":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2976,"name":"queue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2848,"src":"10183:5:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":2979,"indexExpression":{"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10189:11:14","subExpression":{"id":2977,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"10189:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10183:18:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2980,"name":"nextToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"10204:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10183:30:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2982,"nodeType":"ExpressionStatement","src":"10183:30:14"},{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2983,"name":"visited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"10240:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":2985,"indexExpression":{"id":2984,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"10248:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10240:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10240:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2988,"nodeType":"ExpressionStatement","src":"10240:17:14"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2922,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"9635:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2923,"name":"poolCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2814,"src":"9639:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9635:13:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2994,"initializationExpression":{"assignments":[2919],"declarations":[{"constant":false,"id":2919,"mutability":"mutable","name":"i","nameLocation":"9628:1:14","nodeType":"VariableDeclaration","scope":2994,"src":"9620:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2918,"name":"uint256","nodeType":"ElementaryTypeName","src":"9620:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"hexValue":"30","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9632:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9620:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9650:3:14","subExpression":{"id":2925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"9650:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2927,"nodeType":"ExpressionStatement","src":"9650:3:14"},"nodeType":"ForStatement","src":"9615:700:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"queueHead","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"9228:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2871,"name":"queueTail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"9240:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9228:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2996,"nodeType":"WhileStatement","src":"9221:1105:14"},{"assignments":[3001],"declarations":[{"constant":false,"id":3001,"mutability":"mutable","name":"addr","nameLocation":"10355:4:14","nodeType":"VariableDeclaration","scope":3010,"src":"10338:21:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2999,"name":"address","nodeType":"ElementaryTypeName","src":"10338:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3000,"nodeType":"ArrayTypeName","src":"10338:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3007,"initialValue":{"arguments":[{"hexValue":"30","id":3005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10376:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10362:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3002,"name":"address","nodeType":"ElementaryTypeName","src":"10366:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3003,"nodeType":"ArrayTypeName","src":"10366:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10362:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10338:40:14"},{"expression":{"id":3008,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"10396:4:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2803,"id":3009,"nodeType":"Return","src":"10389:11:14"}]},"id":3011,"implemented":true,"kind":"function","modifiers":[],"name":"_findOptimalRoute","nameLocation":"8634:17:14","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2794,"mutability":"mutable","name":"fromToken","nameLocation":"8670:9:14","nodeType":"VariableDeclaration","scope":3011,"src":"8662:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2793,"name":"address","nodeType":"ElementaryTypeName","src":"8662:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2796,"mutability":"mutable","name":"toToken","nameLocation":"8698:7:14","nodeType":"VariableDeclaration","scope":3011,"src":"8690:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2795,"name":"address","nodeType":"ElementaryTypeName","src":"8690:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"amount","nameLocation":"8724:6:14","nodeType":"VariableDeclaration","scope":3011,"src":"8716:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"8716:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8651:86:14"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3011,"src":"8761:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"8761:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2801,"nodeType":"ArrayTypeName","src":"8761:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8760:18:14"},"scope":3657,"src":"8625:1783:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3045,"nodeType":"Block","src":"10509:181:14","statements":[{"body":{"id":3041,"nodeType":"Block","src":"10564:96:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3032,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"10583:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3034,"indexExpression":{"id":3033,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10590:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10583:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3035,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"10596:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10583:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3040,"nodeType":"IfStatement","src":"10579:70:14","trueBody":{"id":3039,"nodeType":"Block","src":"10603:46:14","statements":[{"expression":{"hexValue":"74727565","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10629:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3020,"id":3038,"nodeType":"Return","src":"10622:11:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10540:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3026,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3014,"src":"10544:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10551:6:14","memberName":"length","nodeType":"MemberAccess","src":"10544:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3042,"initializationExpression":{"assignments":[3022],"declarations":[{"constant":false,"id":3022,"mutability":"mutable","name":"i","nameLocation":"10533:1:14","nodeType":"VariableDeclaration","scope":3042,"src":"10525:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3021,"name":"uint256","nodeType":"ElementaryTypeName","src":"10525:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3024,"initialValue":{"hexValue":"30","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10537:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10525:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10559:3:14","subExpression":{"id":3029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3022,"src":"10559:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3031,"nodeType":"ExpressionStatement","src":"10559:3:14"},"nodeType":"ForStatement","src":"10520:140:14"},{"expression":{"hexValue":"66616c7365","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10677:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3020,"id":3044,"nodeType":"Return","src":"10670:12:14"}]},"id":3046,"implemented":true,"kind":"function","modifiers":[],"name":"_containsToken","nameLocation":"10425:14:14","nodeType":"FunctionDefinition","parameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"tokens","nameLocation":"10457:6:14","nodeType":"VariableDeclaration","scope":3046,"src":"10440:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3012,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3013,"nodeType":"ArrayTypeName","src":"10440:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3016,"mutability":"mutable","name":"token","nameLocation":"10473:5:14","nodeType":"VariableDeclaration","scope":3046,"src":"10465:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3015,"name":"address","nodeType":"ElementaryTypeName","src":"10465:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10439:40:14"},"returnParameters":{"id":3020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3046,"src":"10503:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3018,"name":"bool","nodeType":"ElementaryTypeName","src":"10503:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10502:6:14"},"scope":3657,"src":"10416:274:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3107,"nodeType":"Block","src":"10811:316:14","statements":[{"assignments":[3062],"declarations":[{"constant":false,"id":3062,"mutability":"mutable","name":"reserves","nameLocation":"10839:8:14","nodeType":"VariableDeclaration","scope":3107,"src":"10822:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3060,"name":"uint256","nodeType":"ElementaryTypeName","src":"10822:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ArrayTypeName","src":"10822:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3069,"initialValue":{"arguments":[{"arguments":[{"id":3066,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"10870:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10862:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3064,"name":"address","nodeType":"ElementaryTypeName","src":"10862:7:14","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10862:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3063,"name":"getReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"10850:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) view returns (uint256[] memory)"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10850:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10822:54:14"},{"assignments":[3074],"declarations":[{"constant":false,"id":3074,"mutability":"mutable","name":"assets","nameLocation":"10904:6:14","nodeType":"VariableDeclaration","scope":3107,"src":"10887:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"10887:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3073,"nodeType":"ArrayTypeName","src":"10887:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3078,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3075,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"10913:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10918:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"10913:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10913:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10887:42:14"},{"body":{"id":3103,"nodeType":"Block","src":"10984:113:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3090,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"11003:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3092,"indexExpression":{"id":3091,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11010:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11003:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3093,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"11016:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11003:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3102,"nodeType":"IfStatement","src":"10999:87:14","trueBody":{"id":3101,"nodeType":"Block","src":"11023:63:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3095,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"11049:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3097,"indexExpression":{"id":3096,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"11058:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11049:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3098,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"11064:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11049:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3057,"id":3100,"nodeType":"Return","src":"11042:28:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"10960:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3084,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"10964:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10971:6:14","memberName":"length","nodeType":"MemberAccess","src":"10964:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10960:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3104,"initializationExpression":{"assignments":[3080],"declarations":[{"constant":false,"id":3080,"mutability":"mutable","name":"i","nameLocation":"10953:1:14","nodeType":"VariableDeclaration","scope":3104,"src":"10945:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"10945:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3082,"initialValue":{"hexValue":"30","id":3081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10957:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10945:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10979:3:14","subExpression":{"id":3087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"10979:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3089,"nodeType":"ExpressionStatement","src":"10979:3:14"},"nodeType":"ForStatement","src":"10940:157:14"},{"expression":{"hexValue":"66616c7365","id":3105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11114:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3057,"id":3106,"nodeType":"Return","src":"11107:12:14"}]},"id":3108,"implemented":true,"kind":"function","modifiers":[],"name":"_hasSufficientLiquidity","nameLocation":"10707:23:14","nodeType":"FunctionDefinition","parameters":{"id":3054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"pool","nameLocation":"10745:4:14","nodeType":"VariableDeclaration","scope":3108,"src":"10731:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3048,"nodeType":"UserDefinedTypeName","pathNode":{"id":3047,"name":"IBaluniV1Pool","nameLocations":["10731:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"10731:13:14"},"referencedDeclaration":3887,"src":"10731:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"token","nameLocation":"10759:5:14","nodeType":"VariableDeclaration","scope":3108,"src":"10751:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"10751:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"amount","nameLocation":"10774:6:14","nodeType":"VariableDeclaration","scope":3108,"src":"10766:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10730:51:14"},"returnParameters":{"id":3057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3108,"src":"10805:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3055,"name":"bool","nodeType":"ElementaryTypeName","src":"10805:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10804:6:14"},"scope":3657,"src":"10698:429:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3146,"nodeType":"Block","src":"11237:207:14","statements":[{"body":{"id":3140,"nodeType":"Block","src":"11292:101:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3129,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"11311:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3131,"indexExpression":{"id":3130,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"11318:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11311:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3132,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3113,"src":"11324:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11311:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3139,"nodeType":"IfStatement","src":"11307:75:14","trueBody":{"id":3138,"nodeType":"Block","src":"11331:51:14","statements":[{"expression":{"baseExpression":{"id":3134,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"11357:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3136,"indexExpression":{"id":3135,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"11364:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11357:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3117,"id":3137,"nodeType":"Return","src":"11350:16:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"11268:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3123,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3111,"src":"11272:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11279:6:14","memberName":"length","nodeType":"MemberAccess","src":"11272:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11268:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3141,"initializationExpression":{"assignments":[3119],"declarations":[{"constant":false,"id":3119,"mutability":"mutable","name":"i","nameLocation":"11261:1:14","nodeType":"VariableDeclaration","scope":3141,"src":"11253:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3118,"name":"uint256","nodeType":"ElementaryTypeName","src":"11253:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3121,"initialValue":{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11265:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11253:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11287:3:14","subExpression":{"id":3126,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3119,"src":"11287:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3128,"nodeType":"ExpressionStatement","src":"11287:3:14"},"nodeType":"ForStatement","src":"11248:145:14"},{"expression":{"arguments":[{"hexValue":"546f6b656e206e6f7420666f756e6420696e20706f6f6c","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11410:25:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e31199ef32a16af0ba9ac84d3033592bb18162b307e1b8bb697aa8f6e1f80823","typeString":"literal_string \"Token not found in pool\""},"value":"Token not found in pool"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e31199ef32a16af0ba9ac84d3033592bb18162b307e1b8bb697aa8f6e1f80823","typeString":"literal_string \"Token not found in pool\""}],"id":3142,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"11403:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11403:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"ExpressionStatement","src":"11403:33:14"}]},"id":3147,"implemented":true,"kind":"function","modifiers":[],"name":"_getOtherTokenInPool","nameLocation":"11144:20:14","nodeType":"FunctionDefinition","parameters":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"tokens","nameLocation":"11182:6:14","nodeType":"VariableDeclaration","scope":3147,"src":"11165:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3109,"name":"address","nodeType":"ElementaryTypeName","src":"11165:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3110,"nodeType":"ArrayTypeName","src":"11165:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"token","nameLocation":"11198:5:14","nodeType":"VariableDeclaration","scope":3147,"src":"11190:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3112,"name":"address","nodeType":"ElementaryTypeName","src":"11190:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11164:40:14"},"returnParameters":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3147,"src":"11228:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"11228:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11227:9:14"},"scope":3657,"src":"11135:309:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3227,"nodeType":"Block","src":"11694:444:14","statements":[{"assignments":[3160],"declarations":[{"constant":false,"id":3160,"mutability":"mutable","name":"pool","nameLocation":"11719:4:14","nodeType":"VariableDeclaration","scope":3227,"src":"11705:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3159,"nodeType":"UserDefinedTypeName","pathNode":{"id":3158,"name":"IBaluniV1Pool","nameLocations":["11705:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"11705:13:14"},"referencedDeclaration":3887,"src":"11705:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":3164,"initialValue":{"arguments":[{"id":3162,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11740:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3161,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"11726:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11726:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"11705:47:14"},{"assignments":[3169],"declarations":[{"constant":false,"id":3169,"mutability":"mutable","name":"assets","nameLocation":"11780:6:14","nodeType":"VariableDeclaration","scope":3227,"src":"11763:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3167,"name":"address","nodeType":"ElementaryTypeName","src":"11763:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3168,"nodeType":"ArrayTypeName","src":"11763:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3173,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3170,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"11789:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11794:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"11789:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11789:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"11763:42:14"},{"body":{"id":3218,"nodeType":"Block","src":"11862:228:14","statements":[{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"asset","nameLocation":"11885:5:14","nodeType":"VariableDeclaration","scope":3218,"src":"11877:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3185,"name":"address","nodeType":"ElementaryTypeName","src":"11877:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3190,"initialValue":{"baseExpression":{"id":3187,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"11893:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3189,"indexExpression":{"id":3188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"11900:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11893:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11877:25:14"},{"assignments":[3192],"declarations":[{"constant":false,"id":3192,"mutability":"mutable","name":"amount","nameLocation":"11925:6:14","nodeType":"VariableDeclaration","scope":3218,"src":"11917:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"11917:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3196,"initialValue":{"baseExpression":{"id":3193,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"11934:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":3195,"indexExpression":{"id":3194,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"11942:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11934:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11917:27:14"},{"expression":{"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3197,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"11959:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3200,"indexExpression":{"id":3198,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11973:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11959:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3201,"indexExpression":{"id":3199,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"11986:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11959:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3202,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"11996:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11959:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3204,"nodeType":"ExpressionStatement","src":"11959:43:14"},{"expression":{"arguments":[{"expression":{"id":3209,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12044:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12048:6:14","memberName":"sender","nodeType":"MemberAccess","src":"12044:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3213,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12064:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12056:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"12056:7:14","typeDescriptions":{}}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3215,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"12071:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3206,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"12024:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3205,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12017:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12017:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12031:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"12017:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12017:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"ExpressionStatement","src":"12017:61:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"11838:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3179,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"11842:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11849:6:14","memberName":"length","nodeType":"MemberAccess","src":"11842:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11838:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3219,"initializationExpression":{"assignments":[3175],"declarations":[{"constant":false,"id":3175,"mutability":"mutable","name":"i","nameLocation":"11831:1:14","nodeType":"VariableDeclaration","scope":3219,"src":"11823:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"11823:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3177,"initialValue":{"hexValue":"30","id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11835:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11823:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11857:3:14","subExpression":{"id":3182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"11857:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3184,"nodeType":"ExpressionStatement","src":"11857:3:14"},"nodeType":"ForStatement","src":"11818:272:14"},{"expression":{"arguments":[{"id":3223,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"12112:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3224,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"12122:7:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"expression":{"id":3220,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"12102:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12107:4:14","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":3793,"src":"12102:9:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,uint256[] memory) external returns (uint256)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12102:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3226,"nodeType":"ExpressionStatement","src":"12102:28:14"}]},"documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"11452:138:14","text":" @dev Adds liquidity to a BaluniV1Pool.\n @param amounts An array of amounts for each asset to add as liquidity."},"functionSelector":"ec0cd2eb","id":3228,"implemented":true,"kind":"function","modifiers":[],"name":"addLiquidity","nameLocation":"11605:12:14","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"amounts","nameLocation":"11637:7:14","nodeType":"VariableDeclaration","scope":3228,"src":"11618:26:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"11618:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ArrayTypeName","src":"11618:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"poolAddress","nameLocation":"11654:11:14","nodeType":"VariableDeclaration","scope":3228,"src":"11646:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"11646:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"receiver","nameLocation":"11675:8:14","nodeType":"VariableDeclaration","scope":3228,"src":"11667:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3154,"name":"address","nodeType":"ElementaryTypeName","src":"11667:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11617:67:14"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[],"src":"11694:0:14"},"scope":3657,"src":"11596:542:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3403,"nodeType":"Block","src":"12427:1258:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"12446:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12454:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12446:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368617265206d7573742062652067726561746572207468616e207a65726f","id":3242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12457:33:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""},"value":"Share must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3014e9c0b78a52f3b40736c72d79bc01b52cf504238a7193820baa573d1cea6f","typeString":"literal_string \"Share must be greater than zero\""}],"id":3238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12438:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12438:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3244,"nodeType":"ExpressionStatement","src":"12438:53:14"},{"assignments":[3247],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"poolToken","nameLocation":"12509:9:14","nodeType":"VariableDeclaration","scope":3403,"src":"12502:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"},"typeName":{"id":3246,"nodeType":"UserDefinedTypeName","pathNode":{"id":3245,"name":"IERC20","nameLocations":["12502:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":1729,"src":"12502:6:14"},"referencedDeclaration":1729,"src":"12502:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3251,"initialValue":{"arguments":[{"id":3249,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"12528:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3248,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"12521:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12521:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"12502:38:14"},{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"allowance","nameLocation":"12589:9:14","nodeType":"VariableDeclaration","scope":3403,"src":"12581:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"12581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3263,"initialValue":{"arguments":[{"expression":{"id":3256,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12621:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12625:6:14","memberName":"sender","nodeType":"MemberAccess","src":"12621:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3260,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12641:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":3259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12633:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3258,"name":"address","nodeType":"ElementaryTypeName","src":"12633:7:14","typeDescriptions":{}}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12633:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3254,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"12601:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12611:9:14","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"12601:19:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12601:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12581:66:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"12666:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3266,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"12679:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12666:18:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616c6c6f77616e6365","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12686:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""},"value":"Insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc","typeString":"literal_string \"Insufficient allowance\""}],"id":3264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12658:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12658:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3270,"nodeType":"ExpressionStatement","src":"12658:53:14"},{"assignments":[3272],"declarations":[{"constant":false,"id":3272,"mutability":"mutable","name":"balance","nameLocation":"12758:7:14","nodeType":"VariableDeclaration","scope":3403,"src":"12750:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3271,"name":"uint256","nodeType":"ElementaryTypeName","src":"12750:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3278,"initialValue":{"arguments":[{"expression":{"id":3275,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12788:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12792:6:14","memberName":"sender","nodeType":"MemberAccess","src":"12788:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3273,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"12768:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12778:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"12768:19:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12768:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12750:49:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3272,"src":"12818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3281,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"12829:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12818:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12836:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":3279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12810:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12810:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3285,"nodeType":"ExpressionStatement","src":"12810:49:14"},{"assignments":[3287],"declarations":[{"constant":false,"id":3287,"mutability":"mutable","name":"success","nameLocation":"12877:7:14","nodeType":"VariableDeclaration","scope":3403,"src":"12872:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3286,"name":"bool","nodeType":"ElementaryTypeName","src":"12872:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3298,"initialValue":{"arguments":[{"expression":{"id":3290,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12910:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12914:6:14","memberName":"sender","nodeType":"MemberAccess","src":"12910:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3294,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12930:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12922:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3292,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:14","typeDescriptions":{}}},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12922:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3296,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"12937:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3288,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"12887:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12897:12:14","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1728,"src":"12887:22:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12887:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12872:71:14"},{"expression":{"arguments":[{"id":3300,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"12962:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657246726f6d206661696c6564","id":3301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12971:21:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b849694166808863930753dfec3778e05f6445bcb888da510cb2c25feefe8ef0","typeString":"literal_string \"TransferFrom failed\""},"value":"TransferFrom failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b849694166808863930753dfec3778e05f6445bcb888da510cb2c25feefe8ef0","typeString":"literal_string \"TransferFrom failed\""}],"id":3299,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12954:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12954:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3303,"nodeType":"ExpressionStatement","src":"12954:39:14"},{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"success2","nameLocation":"13011:8:14","nodeType":"VariableDeclaration","scope":3403,"src":"13006:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3304,"name":"bool","nodeType":"ElementaryTypeName","src":"13006:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3311,"initialValue":{"arguments":[{"id":3308,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"13041:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3309,"name":"share","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"13054:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3306,"name":"poolToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"13022:9:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13032:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"13022:18:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13006:54:14"},{"expression":{"arguments":[{"id":3313,"name":"success2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"13079:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":3314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13089:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":3312,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13071:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13071:36:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3316,"nodeType":"ExpressionStatement","src":"13071:36:14"},{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"amountsOut","nameLocation":"13137:10:14","nodeType":"VariableDeclaration","scope":3403,"src":"13120:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"13120:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3320,"nodeType":"ArrayTypeName","src":"13120:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3328,"initialValue":{"arguments":[{"id":3326,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"13182:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3323,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"13164:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3322,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"13150:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13150:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13177:4:14","memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":3801,"src":"13150:31:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address) external returns (uint256[] memory)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13150:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13120:71:14"},{"assignments":[3333],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"assets","nameLocation":"13221:6:14","nodeType":"VariableDeclaration","scope":3403,"src":"13204:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3331,"name":"address","nodeType":"ElementaryTypeName","src":"13204:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3332,"nodeType":"ArrayTypeName","src":"13204:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3339,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3335,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"13244:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3334,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"13230:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13230:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13257:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"13230:36:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13230:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13204:64:14"},{"body":{"id":3401,"nodeType":"Block","src":"13325:353:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3360,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13384:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BaluniV1PoolPeriphery_$3657","typeString":"contract BaluniV1PoolPeriphery"}],"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13376:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"13376:7:14","typeDescriptions":{}}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13376:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"baseExpression":{"id":3353,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13355:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3355,"indexExpression":{"id":3354,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13362:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13355:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3352,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"13348:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13348:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13366:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"13348:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13348:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":3363,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"13394:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3365,"indexExpression":{"id":3364,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13405:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13394:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13348:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204c6971756964697479","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13409:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""},"value":"Insufficient Liquidity"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_85d32796faf4bbe37cfdb7e983d4048fee52ebcfc8d2f22a939ce47e85d98ae8","typeString":"literal_string \"Insufficient Liquidity\""}],"id":3351,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13340:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13340:94:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3369,"nodeType":"ExpressionStatement","src":"13340:94:14"},{"expression":{"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3370,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"13449:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3375,"indexExpression":{"id":3371,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"13463:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13449:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3376,"indexExpression":{"baseExpression":{"id":3372,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13476:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3374,"indexExpression":{"id":3373,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13483:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13476:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13449:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":3377,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"13490:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3379,"indexExpression":{"id":3378,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13501:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13490:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13449:54:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3381,"nodeType":"ExpressionStatement","src":"13449:54:14"},{"assignments":[3383],"declarations":[{"constant":false,"id":3383,"mutability":"mutable","name":"assetTransferSuccess","nameLocation":"13523:20:14","nodeType":"VariableDeclaration","scope":3401,"src":"13518:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3382,"name":"bool","nodeType":"ElementaryTypeName","src":"13518:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3395,"initialValue":{"arguments":[{"id":3390,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"13573:8:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3391,"name":"amountsOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"13583:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3393,"indexExpression":{"id":3392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13594:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13583:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"baseExpression":{"id":3385,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13553:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3387,"indexExpression":{"id":3386,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13560:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13553:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3384,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"13546:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13546:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13564:8:14","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"13546:26:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13546:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"13518:79:14"},{"expression":{"arguments":[{"id":3397,"name":"assetTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"13620:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4173736574207472616e73666572206661696c6564","id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13642:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""},"value":"Asset transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7c814c07c32441cfc9da2a21de4a11134ec9451c699d8fbc5bbba1c5f5bc0385","typeString":"literal_string \"Asset transfer failed\""}],"id":3396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13612:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13612:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3400,"nodeType":"ExpressionStatement","src":"13612:54:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3344,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13301:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3345,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"13305:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13312:6:14","memberName":"length","nodeType":"MemberAccess","src":"13305:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3402,"initializationExpression":{"assignments":[3341],"declarations":[{"constant":false,"id":3341,"mutability":"mutable","name":"i","nameLocation":"13294:1:14","nodeType":"VariableDeclaration","scope":3402,"src":"13286:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"13286:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3343,"initialValue":{"hexValue":"30","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13298:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13286:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13320:3:14","subExpression":{"id":3348,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3341,"src":"13320:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3350,"nodeType":"ExpressionStatement","src":"13320:3:14"},"nodeType":"ForStatement","src":"13281:397:14"}]},"documentation":{"id":3229,"nodeType":"StructuredDocumentation","src":"12146:187:14","text":" @dev Removes liquidity from a BaluniV1Pool.\n @param share The amount of liquidity tokens to remove.\n @param poolAddress The address of the BaluniV1Pool."},"functionSelector":"f31abcc4","id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"removeLiquidity","nameLocation":"12348:15:14","nodeType":"FunctionDefinition","parameters":{"id":3236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3231,"mutability":"mutable","name":"share","nameLocation":"12372:5:14","nodeType":"VariableDeclaration","scope":3404,"src":"12364:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"12364:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3233,"mutability":"mutable","name":"poolAddress","nameLocation":"12387:11:14","nodeType":"VariableDeclaration","scope":3404,"src":"12379:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3232,"name":"address","nodeType":"ElementaryTypeName","src":"12379:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3235,"mutability":"mutable","name":"receiver","nameLocation":"12408:8:14","nodeType":"VariableDeclaration","scope":3404,"src":"12400:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"12400:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12363:54:14"},"returnParameters":{"id":3237,"nodeType":"ParameterList","parameters":[],"src":"12427:0:14"},"scope":3657,"src":"12339:1346:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3438,"nodeType":"Block","src":"14135:209:14","statements":[{"assignments":[3417],"declarations":[{"constant":false,"id":3417,"mutability":"mutable","name":"poolAddress","nameLocation":"14154:11:14","nodeType":"VariableDeclaration","scope":3438,"src":"14146:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"14146:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3423,"initialValue":{"arguments":[{"id":3420,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"14196:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3421,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"14207:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3418,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"14168:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14180:15:14","memberName":"getPoolByAssets","nodeType":"MemberAccess","referencedDeclaration":3898,"src":"14168:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_address_$","typeString":"function (address,address) view external returns (address)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14168:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14146:69:14"},{"assignments":[3426],"declarations":[{"constant":false,"id":3426,"mutability":"mutable","name":"pool","nameLocation":"14240:4:14","nodeType":"VariableDeclaration","scope":3438,"src":"14226:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3425,"nodeType":"UserDefinedTypeName","pathNode":{"id":3424,"name":"IBaluniV1Pool","nameLocations":["14226:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"14226:13:14"},"referencedDeclaration":3887,"src":"14226:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":3430,"initialValue":{"arguments":[{"id":3428,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3417,"src":"14261:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3427,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"14247:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14247:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"14226:47:14"},{"expression":{"arguments":[{"id":3433,"name":"fromToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"14309:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3434,"name":"toToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"14320:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3435,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"14329:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3431,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"14291:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14296:12:14","memberName":"getAmountOut","nodeType":"MemberAccess","referencedDeclaration":3735,"src":"14291:17:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view external returns (uint256)"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14291:45:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3415,"id":3437,"nodeType":"Return","src":"14284:52:14"}]},"documentation":{"id":3405,"nodeType":"StructuredDocumentation","src":"13693:330:14","text":" @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\n @param fromToken The address of the token to swap from.\n @param toToken The address of the token to swap to.\n @param amount The amount of tokens to swap.\n @return The amount of tokens received after the swap."},"functionSelector":"4aa06652","id":3439,"implemented":true,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"14038:12:14","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"fromToken","nameLocation":"14059:9:14","nodeType":"VariableDeclaration","scope":3439,"src":"14051:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"14051:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"toToken","nameLocation":"14078:7:14","nodeType":"VariableDeclaration","scope":3439,"src":"14070:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3408,"name":"address","nodeType":"ElementaryTypeName","src":"14070:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"amount","nameLocation":"14095:6:14","nodeType":"VariableDeclaration","scope":3439,"src":"14087:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"14087:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14050:52:14"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3439,"src":"14126:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14125:9:14"},"scope":3657,"src":"14029:315:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3540,"nodeType":"Block","src":"14569:693:14","statements":[{"assignments":[3447],"declarations":[{"constant":false,"id":3447,"mutability":"mutable","name":"pool","nameLocation":"14594:4:14","nodeType":"VariableDeclaration","scope":3540,"src":"14580:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"},"typeName":{"id":3446,"nodeType":"UserDefinedTypeName","pathNode":{"id":3445,"name":"IBaluniV1Pool","nameLocations":["14580:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":3887,"src":"14580:13:14"},"referencedDeclaration":3887,"src":"14580:13:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"visibility":"internal"}],"id":3451,"initialValue":{"arguments":[{"id":3449,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"14615:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3448,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"14601:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14601:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"nodeType":"VariableDeclarationStatement","src":"14580:47:14"},{"assignments":[3453],"declarations":[{"constant":false,"id":3453,"mutability":"mutable","name":"balance","nameLocation":"14646:7:14","nodeType":"VariableDeclaration","scope":3540,"src":"14638:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"14638:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3461,"initialValue":{"arguments":[{"expression":{"id":3458,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14686:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14690:6:14","memberName":"sender","nodeType":"MemberAccess","src":"14686:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3455,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"14663:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3454,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"14656:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14656:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14676:9:14","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1686,"src":"14656:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14656:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14638:59:14"},{"assignments":[3463],"declarations":[{"constant":false,"id":3463,"mutability":"mutable","name":"totalSupply","nameLocation":"14716:11:14","nodeType":"VariableDeclaration","scope":3540,"src":"14708:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3462,"name":"uint256","nodeType":"ElementaryTypeName","src":"14708:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3469,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3465,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"14737:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3464,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"14730:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1729_$","typeString":"type(contract IERC20)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14730:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1729","typeString":"contract IERC20"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14750:11:14","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":1678,"src":"14730:31:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14730:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14708:55:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"14783:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130303030","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14793:5:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"14783:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14782:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3475,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"14802:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14782:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14817:3:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"14782:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14822:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":3470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14774:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14774:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3481,"nodeType":"ExpressionStatement","src":"14774:71:14"},{"assignments":[3486,3489],"declarations":[{"constant":false,"id":3486,"mutability":"mutable","name":"amountsToAdd","nameLocation":"14874:12:14","nodeType":"VariableDeclaration","scope":3540,"src":"14857:29:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3484,"name":"uint256","nodeType":"ElementaryTypeName","src":"14857:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3485,"nodeType":"ArrayTypeName","src":"14857:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3489,"mutability":"mutable","name":"amountsToRemove","nameLocation":"14905:15:14","nodeType":"VariableDeclaration","scope":3540,"src":"14888:32:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"14888:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3488,"nodeType":"ArrayTypeName","src":"14888:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3493,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3490,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"14924:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14929:24:14","memberName":"performRebalanceIfNeeded","nodeType":"MemberAccess","referencedDeclaration":3744,"src":"14924:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function () external returns (uint256[] memory,uint256[] memory)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14924:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"14856:99:14"},{"assignments":[3498],"declarations":[{"constant":false,"id":3498,"mutability":"mutable","name":"assets","nameLocation":"15018:6:14","nodeType":"VariableDeclaration","scope":3540,"src":"15001:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3496,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3497,"nodeType":"ArrayTypeName","src":"15001:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3502,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3499,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3447,"src":"15027:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15032:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"15027:14:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15027:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15001:42:14"},{"body":{"id":3538,"nodeType":"Block","src":"15098:157:14","statements":[{"expression":{"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3514,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"15113:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3519,"indexExpression":{"id":3515,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"15127:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15113:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3520,"indexExpression":{"baseExpression":{"id":3516,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"15140:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3518,"indexExpression":{"id":3517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"15147:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15140:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15113:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":3521,"name":"amountsToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"15154:12:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3523,"indexExpression":{"id":3522,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"15167:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15154:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15113:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3525,"nodeType":"ExpressionStatement","src":"15113:56:14"},{"expression":{"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3526,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"15184:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3531,"indexExpression":{"id":3527,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3442,"src":"15198:11:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15184:26:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3532,"indexExpression":{"baseExpression":{"id":3528,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"15211:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3530,"indexExpression":{"id":3529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"15218:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15211:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15184:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"baseExpression":{"id":3533,"name":"amountsToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"15225:15:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3535,"indexExpression":{"id":3534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"15241:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15225:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15184:59:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3537,"nodeType":"ExpressionStatement","src":"15184:59:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"15074:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3508,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"15078:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15085:6:14","memberName":"length","nodeType":"MemberAccess","src":"15078:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3539,"initializationExpression":{"assignments":[3504],"declarations":[{"constant":false,"id":3504,"mutability":"mutable","name":"i","nameLocation":"15067:1:14","nodeType":"VariableDeclaration","scope":3539,"src":"15059:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"15059:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3506,"initialValue":{"hexValue":"30","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15071:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"15059:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15093:3:14","subExpression":{"id":3511,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3504,"src":"15093:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3513,"nodeType":"ExpressionStatement","src":"15093:3:14"},"nodeType":"ForStatement","src":"15054:201:14"}]},"documentation":{"id":3440,"nodeType":"StructuredDocumentation","src":"14352:147:14","text":" @dev Performs rebalance if needed for the given tokens.\n @param poolAddress The address of the token pool to rebalance."},"functionSelector":"5568081a","id":3541,"implemented":true,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"14514:24:14","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3442,"mutability":"mutable","name":"poolAddress","nameLocation":"14547:11:14","nodeType":"VariableDeclaration","scope":3541,"src":"14539:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3441,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14538:21:14"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[],"src":"14569:0:14"},"scope":3657,"src":"14505:757:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3555,"nodeType":"Block","src":"15560:60:14","statements":[{"expression":{"arguments":[{"id":3552,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"15606:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3550,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"15578:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15590:15:14","memberName":"getPoolsByAsset","nodeType":"MemberAccess","referencedDeclaration":3906,"src":"15578:27:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address) view external returns (address[] memory)"}},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15578:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3549,"id":3554,"nodeType":"Return","src":"15571:41:14"}]},"documentation":{"id":3542,"nodeType":"StructuredDocumentation","src":"15270:195:14","text":" @dev Returns an array of pool addresses that contain the given token.\n @param token The address of the token to search for.\n @return An array of pool addresses."},"functionSelector":"ae3cce1c","id":3556,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolsContainingToken","nameLocation":"15480:23:14","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"token","nameLocation":"15512:5:14","nodeType":"VariableDeclaration","scope":3556,"src":"15504:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3543,"name":"address","nodeType":"ElementaryTypeName","src":"15504:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15503:15:14"},"returnParameters":{"id":3549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3556,"src":"15542:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"15542:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3547,"nodeType":"ArrayTypeName","src":"15542:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15541:18:14"},"scope":3657,"src":"15471:149:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3565,"nodeType":"Block","src":"15785:50:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3562,"name":"_getInitializedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"15803:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint64_$","typeString":"function () view returns (uint64)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15803:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3561,"id":3564,"nodeType":"Return","src":"15796:31:14"}]},"documentation":{"id":3557,"nodeType":"StructuredDocumentation","src":"15628:98:14","text":" @dev Returns the version of the contract.\n @return The version string."},"functionSelector":"0d8e6e2c","id":3566,"implemented":true,"kind":"function","modifiers":[],"name":"getVersion","nameLocation":"15741:10:14","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[],"src":"15751:2:14"},"returnParameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3566,"src":"15777:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3559,"name":"uint64","nodeType":"ElementaryTypeName","src":"15777:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"15776:8:14"},"scope":3657,"src":"15732:103:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3580,"nodeType":"Block","src":"16116:67:14","statements":[{"expression":{"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3574,"name":"poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"16127:11:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3576,"name":"_poolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"16162:12:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3575,"name":"IBaluniV1PoolFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"16141:20:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1PoolFactory_$3920_$","typeString":"type(contract IBaluniV1PoolFactory)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16141:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"src":"16127:48:14","typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1PoolFactory_$3920","typeString":"contract IBaluniV1PoolFactory"}},"id":3579,"nodeType":"ExpressionStatement","src":"16127:48:14"}]},"documentation":{"id":3567,"nodeType":"StructuredDocumentation","src":"15843:199:14","text":" @dev Changes the address of the pool factory contract.\n Can only be called by the contract owner.\n @param _poolFactory The new address of the pool factory contract."},"functionSelector":"72591be5","id":3581,"implemented":true,"kind":"function","modifiers":[{"id":3572,"kind":"modifierInvocation","modifierName":{"id":3571,"name":"onlyOwner","nameLocations":["16106:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"16106:9:14"},"nodeType":"ModifierInvocation","src":"16106:9:14"}],"name":"changePoolFactory","nameLocation":"16057:17:14","nodeType":"FunctionDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"_poolFactory","nameLocation":"16083:12:14","nodeType":"VariableDeclaration","scope":3581,"src":"16075:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3568,"name":"address","nodeType":"ElementaryTypeName","src":"16075:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16074:22:14"},"returnParameters":{"id":3573,"nodeType":"ParameterList","parameters":[],"src":"16116:0:14"},"scope":3657,"src":"16048:135:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3639,"nodeType":"Block","src":"16265:294:14","statements":[{"assignments":[3593],"declarations":[{"constant":false,"id":3593,"mutability":"mutable","name":"assets","nameLocation":"16293:6:14","nodeType":"VariableDeclaration","scope":3639,"src":"16276:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3591,"name":"address","nodeType":"ElementaryTypeName","src":"16276:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3592,"nodeType":"ArrayTypeName","src":"16276:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3599,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3595,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"16316:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3594,"name":"IBaluniV1Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"16302:13:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBaluniV1Pool_$3887_$","typeString":"type(contract IBaluniV1Pool)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16302:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBaluniV1Pool_$3887","typeString":"contract IBaluniV1Pool"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16322:9:14","memberName":"getAssets","nodeType":"MemberAccess","referencedDeclaration":3711,"src":"16302:29:14","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function () view external returns (address[] memory)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16302:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16276:57:14"},{"assignments":[3604],"declarations":[{"constant":false,"id":3604,"mutability":"mutable","name":"reserves","nameLocation":"16361:8:14","nodeType":"VariableDeclaration","scope":3639,"src":"16344:25:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3602,"name":"uint256","nodeType":"ElementaryTypeName","src":"16344:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3603,"nodeType":"ArrayTypeName","src":"16344:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3611,"initialValue":{"arguments":[{"expression":{"id":3608,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"16386:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16393:6:14","memberName":"length","nodeType":"MemberAccess","src":"16386:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16372:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"16376:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3606,"nodeType":"ArrayTypeName","src":"16376:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16372:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16344:56:14"},{"body":{"id":3635,"nodeType":"Block","src":"16455:71:14","statements":[{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3623,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"16470:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3625,"indexExpression":{"id":3624,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"16479:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16470:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":3626,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"16484:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3628,"indexExpression":{"id":3627,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"16498:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16484:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3632,"indexExpression":{"baseExpression":{"id":3629,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"16504:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3631,"indexExpression":{"id":3630,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"16511:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16504:9:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16484:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16470:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"16470:44:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3616,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"16431:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3617,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"16435:6:14","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16442:6:14","memberName":"length","nodeType":"MemberAccess","src":"16435:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16431:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3636,"initializationExpression":{"assignments":[3613],"declarations":[{"constant":false,"id":3613,"mutability":"mutable","name":"i","nameLocation":"16424:1:14","nodeType":"VariableDeclaration","scope":3636,"src":"16416:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3612,"name":"uint256","nodeType":"ElementaryTypeName","src":"16416:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3615,"initialValue":{"hexValue":"30","id":3614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16428:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16416:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16450:3:14","subExpression":{"id":3620,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"16450:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3622,"nodeType":"ExpressionStatement","src":"16450:3:14"},"nodeType":"ForStatement","src":"16411:115:14"},{"expression":{"id":3637,"name":"reserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"16543:8:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3588,"id":3638,"nodeType":"Return","src":"16536:15:14"}]},"functionSelector":"3e99c1e4","id":3640,"implemented":true,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"16200:11:14","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3583,"mutability":"mutable","name":"pool","nameLocation":"16220:4:14","nodeType":"VariableDeclaration","scope":3640,"src":"16212:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3582,"name":"address","nodeType":"ElementaryTypeName","src":"16212:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16211:14:14"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3640,"src":"16247:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"16247:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3586,"nodeType":"ArrayTypeName","src":"16247:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16246:18:14"},"scope":3657,"src":"16191:368:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3655,"nodeType":"Block","src":"16653:52:14","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":3649,"name":"poolsReserves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"16671:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":3651,"indexExpression":{"id":3650,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"16685:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16671:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3653,"indexExpression":{"id":3652,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3644,"src":"16691:5:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16671:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3648,"id":3654,"nodeType":"Return","src":"16664:33:14"}]},"functionSelector":"a3e113fb","id":3656,"implemented":true,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"16576:15:14","nodeType":"FunctionDefinition","parameters":{"id":3645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"pool","nameLocation":"16600:4:14","nodeType":"VariableDeclaration","scope":3656,"src":"16592:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3641,"name":"address","nodeType":"ElementaryTypeName","src":"16592:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3644,"mutability":"mutable","name":"asset","nameLocation":"16614:5:14","nodeType":"VariableDeclaration","scope":3656,"src":"16606:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3643,"name":"address","nodeType":"ElementaryTypeName","src":"16606:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16591:29:14"},"returnParameters":{"id":3648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3656,"src":"16644:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3646,"name":"uint256","nodeType":"ElementaryTypeName","src":"16644:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16643:9:14"},"scope":3657,"src":"16567:138:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3658,"src":"2066:14642:14","usedErrors":[30,35,211,214,475,480,858,871,1768,1771],"usedEvents":[41,219,837]}],"src":"40:16670:14"},"id":14},"contracts/interfaces/IBaluniV1Pool.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1Pool.sol","exportedSymbols":{"Context":[2038],"ERC20":[1651],"IBaluniV1Pool":[3887],"IERC20":[1729],"IERC20Errors":[728],"IERC20Metadata":[1755]},"id":3888,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3659,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":3660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3888,"sourceUnit":1652,"src":"65:55:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1Pool","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3887,"linearizedBaseContracts":[3887],"name":"IBaluniV1Pool","nameLocation":"134:13:15","nodeType":"ContractDefinition","nodes":[{"functionSelector":"01d22ccd","id":3665,"implemented":false,"kind":"function","modifiers":[],"name":"rebalancer","nameLocation":"178:10:15","nodeType":"FunctionDefinition","parameters":{"id":3661,"nodeType":"ParameterList","parameters":[],"src":"188:2:15"},"returnParameters":{"id":3664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3665,"src":"214:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3662,"name":"address","nodeType":"ElementaryTypeName","src":"214:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"213:9:15"},"scope":3887,"src":"169:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf35bdd0","id":3672,"implemented":false,"kind":"function","modifiers":[],"name":"assets","nameLocation":"240:6:15","nodeType":"FunctionDefinition","parameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"index","nameLocation":"255:5:15","nodeType":"VariableDeclaration","scope":3672,"src":"247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"246:15:15"},"returnParameters":{"id":3671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3670,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3672,"src":"285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3669,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"284:9:15"},"scope":3887,"src":"231:63:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b5f163ff","id":3679,"implemented":false,"kind":"function","modifiers":[],"name":"weights","nameLocation":"311:7:15","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"index","nameLocation":"327:5:15","nodeType":"VariableDeclaration","scope":3679,"src":"319:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"319:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"318:15:15"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3679,"src":"357:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"356:9:15"},"scope":3887,"src":"302:64:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7fec8d38","id":3684,"implemented":false,"kind":"function","modifiers":[],"name":"trigger","nameLocation":"383:7:15","nodeType":"FunctionDefinition","parameters":{"id":3680,"nodeType":"ParameterList","parameters":[],"src":"390:2:15"},"returnParameters":{"id":3683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3684,"src":"416:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3681,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"415:9:15"},"scope":3887,"src":"374:51:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c2ee3a08","id":3689,"implemented":false,"kind":"function","modifiers":[],"name":"ONE","nameLocation":"442:3:15","nodeType":"FunctionDefinition","parameters":{"id":3685,"nodeType":"ParameterList","parameters":[],"src":"445:2:15"},"returnParameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3689,"src":"471:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:15"},"scope":3887,"src":"433:47:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f887ea40","id":3694,"implemented":false,"kind":"function","modifiers":[],"name":"router","nameLocation":"497:6:15","nodeType":"FunctionDefinition","parameters":{"id":3690,"nodeType":"ParameterList","parameters":[],"src":"503:2:15"},"returnParameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3694,"src":"529:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3691,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"528:9:15"},"scope":3887,"src":"488:50:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67a6c440","id":3699,"implemented":false,"kind":"function","modifiers":[],"name":"SWAP_FEE_BPS","nameLocation":"555:12:15","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[],"src":"567:2:15"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3699,"src":"593:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"592:9:15"},"scope":3887,"src":"546:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0902f1ac","id":3705,"implemented":false,"kind":"function","modifiers":[],"name":"getReserves","nameLocation":"619:11:15","nodeType":"FunctionDefinition","parameters":{"id":3700,"nodeType":"ParameterList","parameters":[],"src":"630:2:15"},"returnParameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3705,"src":"656:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3702,"nodeType":"ArrayTypeName","src":"656:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"655:18:15"},"scope":3887,"src":"610:64:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"67e4ac2c","id":3711,"implemented":false,"kind":"function","modifiers":[],"name":"getAssets","nameLocation":"691:9:15","nodeType":"FunctionDefinition","parameters":{"id":3706,"nodeType":"ParameterList","parameters":[],"src":"700:2:15"},"returnParameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3711,"src":"726:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3707,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3708,"nodeType":"ArrayTypeName","src":"726:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"725:18:15"},"scope":3887,"src":"682:62:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b2b55d70","id":3718,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetReserve","nameLocation":"761:15:15","nodeType":"FunctionDefinition","parameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3713,"mutability":"mutable","name":"asset","nameLocation":"785:5:15","nodeType":"VariableDeclaration","scope":3718,"src":"777:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3712,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:15:15"},"returnParameters":{"id":3717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3718,"src":"815:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3715,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"814:9:15"},"scope":3887,"src":"752:72:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"22acb867","id":3724,"implemented":false,"kind":"function","modifiers":[],"name":"getWeights","nameLocation":"841:10:15","nodeType":"FunctionDefinition","parameters":{"id":3719,"nodeType":"ParameterList","parameters":[],"src":"851:2:15"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3724,"src":"877:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3720,"name":"uint256","nodeType":"ElementaryTypeName","src":"877:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3721,"nodeType":"ArrayTypeName","src":"877:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"876:18:15"},"scope":3887,"src":"832:63:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4aa06652","id":3735,"implemented":false,"kind":"function","modifiers":[],"name":"getAmountOut","nameLocation":"912:12:15","nodeType":"FunctionDefinition","parameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3726,"mutability":"mutable","name":"fromToken","nameLocation":"933:9:15","nodeType":"VariableDeclaration","scope":3735,"src":"925:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3725,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3728,"mutability":"mutable","name":"toToken","nameLocation":"952:7:15","nodeType":"VariableDeclaration","scope":3735,"src":"944:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3727,"name":"address","nodeType":"ElementaryTypeName","src":"944:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"amount","nameLocation":"969:6:15","nodeType":"VariableDeclaration","scope":3735,"src":"961:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:52:15"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3735,"src":"1000:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3732,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:9:15"},"scope":3887,"src":"903:106:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"f47b45e8","id":3744,"implemented":false,"kind":"function","modifiers":[],"name":"performRebalanceIfNeeded","nameLocation":"1026:24:15","nodeType":"FunctionDefinition","parameters":{"id":3736,"nodeType":"ParameterList","parameters":[],"src":"1050:2:15"},"returnParameters":{"id":3743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"amountsToAdd","nameLocation":"1106:12:15","nodeType":"VariableDeclaration","scope":3744,"src":"1089:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3737,"name":"uint256","nodeType":"ElementaryTypeName","src":"1089:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3738,"nodeType":"ArrayTypeName","src":"1089:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3742,"mutability":"mutable","name":"amountsToRemove","nameLocation":"1137:15:15","nodeType":"VariableDeclaration","scope":3744,"src":"1120:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ArrayTypeName","src":"1120:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1088:65:15"},"scope":3887,"src":"1017:137:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89ab3532","id":3753,"implemented":false,"kind":"function","modifiers":[],"name":"getDeviation","nameLocation":"1171:12:15","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[],"src":"1183:2:15"},"returnParameters":{"id":3752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3748,"mutability":"mutable","name":"directions","nameLocation":"1223:10:15","nodeType":"VariableDeclaration","scope":3753,"src":"1209:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":3746,"name":"bool","nodeType":"ElementaryTypeName","src":"1209:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3747,"nodeType":"ArrayTypeName","src":"1209:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":3751,"mutability":"mutable","name":"deviations","nameLocation":"1252:10:15","nodeType":"VariableDeclaration","scope":3753,"src":"1235:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3749,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3750,"nodeType":"ArrayTypeName","src":"1235:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1208:55:15"},"scope":3887,"src":"1162:102:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"cf8fa764","id":3760,"implemented":false,"kind":"function","modifiers":[],"name":"assetLiquidity","nameLocation":"1281:14:15","nodeType":"FunctionDefinition","parameters":{"id":3756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3755,"mutability":"mutable","name":"assetIndex","nameLocation":"1304:10:15","nodeType":"VariableDeclaration","scope":3760,"src":"1296:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3754,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1295:20:15"},"returnParameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3760,"src":"1339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1338:9:15"},"scope":3887,"src":"1272:76:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"1a686502","id":3765,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"1365:9:15","nodeType":"FunctionDefinition","parameters":{"id":3761,"nodeType":"ParameterList","parameters":[],"src":"1374:2:15"},"returnParameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3765,"src":"1400:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:9:15"},"scope":3887,"src":"1356:53:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e73faa2d","id":3770,"implemented":false,"kind":"function","modifiers":[],"name":"unitPrice","nameLocation":"1426:9:15","nodeType":"FunctionDefinition","parameters":{"id":3766,"nodeType":"ParameterList","parameters":[],"src":"1435:2:15"},"returnParameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3770,"src":"1461:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"1461:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1460:9:15"},"scope":3887,"src":"1417:53:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"6e81221c","id":3783,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"1487:4:15","nodeType":"FunctionDefinition","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"fromToken","nameLocation":"1510:9:15","nodeType":"VariableDeclaration","scope":3783,"src":"1502:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3771,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"toToken","nameLocation":"1538:7:15","nodeType":"VariableDeclaration","scope":3783,"src":"1530:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3773,"name":"address","nodeType":"ElementaryTypeName","src":"1530:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3776,"mutability":"mutable","name":"amount","nameLocation":"1564:6:15","nodeType":"VariableDeclaration","scope":3783,"src":"1556:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3775,"name":"uint256","nodeType":"ElementaryTypeName","src":"1556:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"receiver","nameLocation":"1589:8:15","nodeType":"VariableDeclaration","scope":3783,"src":"1581:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3777,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1491:113:15"},"returnParameters":{"id":3782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3781,"mutability":"mutable","name":"toSend","nameLocation":"1631:6:15","nodeType":"VariableDeclaration","scope":3783,"src":"1623:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:16:15"},"scope":3887,"src":"1478:161:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"de836ebd","id":3793,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1656:4:15","nodeType":"FunctionDefinition","parameters":{"id":3789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"to","nameLocation":"1669:2:15","nodeType":"VariableDeclaration","scope":3793,"src":"1661:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3784,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3788,"mutability":"mutable","name":"amounts","nameLocation":"1690:7:15","nodeType":"VariableDeclaration","scope":3793,"src":"1673:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3787,"nodeType":"ArrayTypeName","src":"1673:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1660:38:15"},"returnParameters":{"id":3792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3793,"src":"1717:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"1717:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1716:9:15"},"scope":3887,"src":"1647:79:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"89afcb44","id":3801,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"1743:4:15","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"to","nameLocation":"1756:2:15","nodeType":"VariableDeclaration","scope":3801,"src":"1748:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3794,"name":"address","nodeType":"ElementaryTypeName","src":"1748:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1747:12:15"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3801,"src":"1778:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1778:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3798,"nodeType":"ArrayTypeName","src":"1778:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1777:18:15"},"scope":3887,"src":"1734:62:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0918281b","id":3806,"implemented":false,"kind":"function","modifiers":[],"name":"changeRebalancer","nameLocation":"1813:16:15","nodeType":"FunctionDefinition","parameters":{"id":3804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3803,"mutability":"mutable","name":"_newRebalancer","nameLocation":"1838:14:15","nodeType":"VariableDeclaration","scope":3806,"src":"1830:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3802,"name":"address","nodeType":"ElementaryTypeName","src":"1830:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1829:24:15"},"returnParameters":{"id":3805,"nodeType":"ParameterList","parameters":[],"src":"1862:0:15"},"scope":3887,"src":"1804:59:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"340ac20f","id":3811,"implemented":false,"kind":"function","modifiers":[],"name":"changeRouter","nameLocation":"1880:12:15","nodeType":"FunctionDefinition","parameters":{"id":3809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3808,"mutability":"mutable","name":"_newRouter","nameLocation":"1901:10:15","nodeType":"VariableDeclaration","scope":3811,"src":"1893:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3807,"name":"address","nodeType":"ElementaryTypeName","src":"1893:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1892:20:15"},"returnParameters":{"id":3810,"nodeType":"ParameterList","parameters":[],"src":"1921:0:15"},"scope":3887,"src":"1871:51:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"36bf6e39","id":3819,"implemented":false,"kind":"function","modifiers":[],"name":"computeTotalValuation","nameLocation":"1939:21:15","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[],"src":"1960:2:15"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"totalVal","nameLocation":"1994:8:15","nodeType":"VariableDeclaration","scope":3819,"src":"1986:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"1986:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3817,"mutability":"mutable","name":"valuations","nameLocation":"2021:10:15","nodeType":"VariableDeclaration","scope":3819,"src":"2004:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3815,"name":"uint256","nodeType":"ElementaryTypeName","src":"2004:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3816,"nodeType":"ArrayTypeName","src":"2004:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1985:47:15"},"scope":3887,"src":"1930:103:15","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3dff5b7f","id":3827,"implemented":false,"kind":"function","modifiers":[],"name":"updateReserves","nameLocation":"2050:14:15","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"amounts","nameLocation":"2082:7:15","nodeType":"VariableDeclaration","scope":3827,"src":"2065:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"2065:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3821,"nodeType":"ArrayTypeName","src":"2065:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3824,"mutability":"mutable","name":"increase","nameLocation":"2096:8:15","nodeType":"VariableDeclaration","scope":3827,"src":"2091:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3823,"name":"bool","nodeType":"ElementaryTypeName","src":"2091:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2064:41:15"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[],"src":"2114:0:15"},"scope":3887,"src":"2041:74:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0723c999","id":3835,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceWeights","nameLocation":"2132:16:15","nodeType":"FunctionDefinition","parameters":{"id":3830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3829,"mutability":"mutable","name":"receiver","nameLocation":"2157:8:15","nodeType":"VariableDeclaration","scope":3835,"src":"2149:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3828,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2148:18:15"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3835,"src":"2185:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3832,"nodeType":"ArrayTypeName","src":"2185:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2184:18:15"},"scope":3887,"src":"2123:80:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"IBaluniV1Pool.AssetInfo","id":3840,"members":[{"constant":false,"id":3837,"mutability":"mutable","name":"asset","nameLocation":"2247:5:15","nodeType":"VariableDeclaration","scope":3840,"src":"2239:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3836,"name":"address","nodeType":"ElementaryTypeName","src":"2239:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3839,"mutability":"mutable","name":"weight","nameLocation":"2271:6:15","nodeType":"VariableDeclaration","scope":3840,"src":"2263:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3838,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AssetInfo","nameLocation":"2218:9:15","nodeType":"StructDefinition","scope":3887,"src":"2211:74:15","visibility":"public"},{"functionSelector":"d14ef46d","id":3848,"implemented":false,"kind":"function","modifiers":[],"name":"assetInfos","nameLocation":"2302:10:15","nodeType":"FunctionDefinition","parameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"_index","nameLocation":"2318:6:15","nodeType":"VariableDeclaration","scope":3848,"src":"2313:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint","nodeType":"ElementaryTypeName","src":"2313:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2312:13:15"},"returnParameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3848,"src":"2349:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$3840_memory_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"},"typeName":{"id":3845,"nodeType":"UserDefinedTypeName","pathNode":{"id":3844,"name":"AssetInfo","nameLocations":["2349:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":3840,"src":"2349:9:15"},"referencedDeclaration":3840,"src":"2349:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_AssetInfo_$3840_storage_ptr","typeString":"struct IBaluniV1Pool.AssetInfo"}},"visibility":"internal"}],"src":"2348:18:15"},"scope":3887,"src":"2293:74:15","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"eventSelector":"279b343370f587af7fb675ae7c8578e9c8abcc373236ad02c501a4771fe7a7b8","id":3855,"name":"RebalancePerformed","nameLocation":"2396:18:15","nodeType":"EventDefinition","parameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"indexed":true,"mutability":"mutable","name":"by","nameLocation":"2431:2:15","nodeType":"VariableDeclaration","scope":3855,"src":"2415:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3849,"name":"address","nodeType":"ElementaryTypeName","src":"2415:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3853,"indexed":false,"mutability":"mutable","name":"assets","nameLocation":"2445:6:15","nodeType":"VariableDeclaration","scope":3855,"src":"2435:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3851,"name":"address","nodeType":"ElementaryTypeName","src":"2435:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3852,"nodeType":"ArrayTypeName","src":"2435:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2414:38:15"},"src":"2390:63:15"},{"anonymous":false,"eventSelector":"a95ad530009c6f929555e70a66aadbeae7231e45756c5b028ca77fbaa376e73e","id":3862,"name":"WeightsRebalanced","nameLocation":"2465:17:15","nodeType":"EventDefinition","parameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2499:4:15","nodeType":"VariableDeclaration","scope":3862,"src":"2483:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3856,"name":"address","nodeType":"ElementaryTypeName","src":"2483:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3860,"indexed":false,"mutability":"mutable","name":"amountsAdded","nameLocation":"2515:12:15","nodeType":"VariableDeclaration","scope":3862,"src":"2505:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3859,"nodeType":"ArrayTypeName","src":"2505:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2482:46:15"},"src":"2459:70:15"},{"anonymous":false,"eventSelector":"cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5","id":3868,"name":"Burn","nameLocation":"2541:4:15","nodeType":"EventDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2562:4:15","nodeType":"VariableDeclaration","scope":3868,"src":"2546:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3863,"name":"address","nodeType":"ElementaryTypeName","src":"2546:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3866,"indexed":false,"mutability":"mutable","name":"sharesBurned","nameLocation":"2576:12:15","nodeType":"VariableDeclaration","scope":3868,"src":"2568:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2568:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2545:44:15"},"src":"2535:55:15"},{"anonymous":false,"eventSelector":"0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885","id":3874,"name":"Mint","nameLocation":"2602:4:15","nodeType":"EventDefinition","parameters":{"id":3873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2623:2:15","nodeType":"VariableDeclaration","scope":3874,"src":"2607:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3869,"name":"address","nodeType":"ElementaryTypeName","src":"2607:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3872,"indexed":false,"mutability":"mutable","name":"sharesMinted","nameLocation":"2635:12:15","nodeType":"VariableDeclaration","scope":3874,"src":"2627:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2627:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2606:42:15"},"src":"2596:53:15"},{"anonymous":false,"eventSelector":"cd3829a3813dc3cdd188fd3d01dcf3268c16be2fdd2dd21d0665418816e46062","id":3886,"name":"Swap","nameLocation":"2661:4:15","nodeType":"EventDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2692:4:15","nodeType":"VariableDeclaration","scope":3886,"src":"2676:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"2676:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3878,"indexed":true,"mutability":"mutable","name":"fromToken","nameLocation":"2723:9:15","nodeType":"VariableDeclaration","scope":3886,"src":"2707:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3877,"name":"address","nodeType":"ElementaryTypeName","src":"2707:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3880,"indexed":true,"mutability":"mutable","name":"toToken","nameLocation":"2759:7:15","nodeType":"VariableDeclaration","scope":3886,"src":"2743:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3879,"name":"address","nodeType":"ElementaryTypeName","src":"2743:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3882,"indexed":false,"mutability":"mutable","name":"amountIn","nameLocation":"2785:8:15","nodeType":"VariableDeclaration","scope":3886,"src":"2777:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2777:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3884,"indexed":false,"mutability":"mutable","name":"amountOut","nameLocation":"2812:9:15","nodeType":"VariableDeclaration","scope":3886,"src":"2804:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"2804:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:163:15"},"src":"2655:174:15"}],"scope":3888,"src":"124:2708:15","usedErrors":[],"usedEvents":[3855,3862,3868,3874,3886]}],"src":"40:2794:15"},"id":15},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/IBaluniV1PoolFactory.sol","exportedSymbols":{"IBaluniV1PoolFactory":[3920]},"id":3921,"license":"GNU AGPLv3","nodeType":"SourceUnit","nodes":[{"id":3889,"literals":["solidity","0.8",".25"],"nodeType":"PragmaDirective","src":"40:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"IBaluniV1PoolFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":3920,"linearizedBaseContracts":[3920],"name":"IBaluniV1PoolFactory","nameLocation":"77:20:16","nodeType":"ContractDefinition","nodes":[{"functionSelector":"2d5e94a7","id":3898,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolByAssets","nameLocation":"114:15:16","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3891,"mutability":"mutable","name":"asset1","nameLocation":"138:6:16","nodeType":"VariableDeclaration","scope":3898,"src":"130:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3890,"name":"address","nodeType":"ElementaryTypeName","src":"130:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3893,"mutability":"mutable","name":"asset2","nameLocation":"154:6:16","nodeType":"VariableDeclaration","scope":3898,"src":"146:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3892,"name":"address","nodeType":"ElementaryTypeName","src":"146:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"129:32:16"},"returnParameters":{"id":3897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"185:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3895,"name":"address","nodeType":"ElementaryTypeName","src":"185:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"184:9:16"},"scope":3920,"src":"105:89:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b4340e6a","id":3906,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolsByAsset","nameLocation":"211:15:16","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"token","nameLocation":"235:5:16","nodeType":"VariableDeclaration","scope":3906,"src":"227:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3899,"name":"address","nodeType":"ElementaryTypeName","src":"227:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"226:15:16"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3906,"src":"265:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3902,"name":"address","nodeType":"ElementaryTypeName","src":"265:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3903,"nodeType":"ArrayTypeName","src":"265:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"264:18:16"},"scope":3920,"src":"202:81:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"89345efb","id":3913,"implemented":false,"kind":"function","modifiers":[],"name":"poolExist","nameLocation":"300:9:16","nodeType":"FunctionDefinition","parameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"_pool","nameLocation":"318:5:16","nodeType":"VariableDeclaration","scope":3913,"src":"310:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3907,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"309:15:16"},"returnParameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3913,"src":"348:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3910,"name":"bool","nodeType":"ElementaryTypeName","src":"348:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"347:6:16"},"scope":3920,"src":"291:63:16","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d88ff1f4","id":3919,"implemented":false,"kind":"function","modifiers":[],"name":"getAllPools","nameLocation":"371:11:16","nodeType":"FunctionDefinition","parameters":{"id":3914,"nodeType":"ParameterList","parameters":[],"src":"382:2:16"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3919,"src":"408:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3915,"name":"address","nodeType":"ElementaryTypeName","src":"408:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3916,"nodeType":"ArrayTypeName","src":"408:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"407:18:16"},"scope":3920,"src":"362:64:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3921,"src":"67:362:16","usedErrors":[],"usedEvents":[]}],"src":"40:391:16"},"id":16}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() {     _disableInitializers(); } ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"stateVariables":{"UPGRADE_INTERFACE_VERSION":{"details":"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."},"__self":{"custom:oz-upgrades-unsafe-allow":"state-variable-immutable"}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","errors":{"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."}},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.","kind":"dev","methods":{"proxiableUUID()":{"details":"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"devdoc":{"details":"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"events":{"AdminChanged(address,address)":{"details":"Emitted when the admin account has changed."},"BeaconUpgraded(address)":{"details":"Emitted when the beacon is changed."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea264697066735822122099005689d8ee280502f7a9ed0831b2aacdc1ae64fd05b81ebd15e0f9d60fce7f64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 STOP JUMP DUP10 0xD8 0xEE 0x28 SDIV MUL 0xF7 0xA9 0xED ADDMOD BALANCE 0xB2 0xAA 0xCD 0xC1 0xAE PUSH5 0xFD05B81EBD ISZERO 0xE0 0xF9 0xD6 0xF 0xCE PUSH32 0x64736F6C63430008190033000000000000000000000000000000000000000000 ","sourceMap":"449:6273:6:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_checkNonPayable()":"infinite","_setAdmin(address)":"infinite","_setBeacon(address)":"infinite","_setImplementation(address)":"infinite","changeAdmin(address)":"infinite","getAdmin()":"infinite","getBeacon()":"infinite","getImplementation()":"infinite","upgradeBeaconToAndCall(address,bytes memory)":"infinite","upgradeToAndCall(address,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"This is the interface that {BeaconProxy} expects of its beacon.","kind":"dev","methods":{"implementation()":{"details":"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"implementation()":"5c60da1b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1159,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":1165,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1167,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":1171,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"AddressInsufficientBalance","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"AddressInsufficientBalance(address)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220e629626646d1d2bc1379505bf1e85b3b108993263cd5a4564554fb4f0d923bfe64736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 0x29 PUSH3 0x6646D1 0xD2 0xBC SGT PUSH26 0x505BF1E85B3B108993263CD5A4564554FB4F0D923BFE64736F6C PUSH4 0x43000819 STOP CALLER ","sourceMap":"195:6066:11:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"_revert(bytes memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760399081601c823930815050f35b5f80fdfe5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x39 SWAP1 DUP2 PUSH1 0x1C DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"5f80fdfea2646970667358221220369bb9cb24b5a45a41b5d61f09cfcbb3b81fd65fb733bfc24b7c89345473a26464736f6c63430008190033","opcodes":"PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE SWAP12 0xB9 0xCB 0x24 0xB5 LOG4 GAS COINBASE 0xB5 0xD6 0x1F MULMOD 0xCF 0xCB 0xB3 0xB8 0x1F 0xD6 PUSH0 0xB7 CALLER 0xBF 0xC2 0x4B PUSH29 0x89345473A26464736F6C63430008190033000000000000000000000000 ","sourceMap":"1245:2685:13:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11400","executionCost":"infinite","totalCost":"infinite"},"internal":{"getAddressSlot(bytes32)":"infinite","getBooleanSlot(bytes32)":"infinite","getBytes32Slot(bytes32)":"infinite","getBytesSlot(bytes storage pointer)":"infinite","getBytesSlot(bytes32)":"infinite","getStringSlot(bytes32)":"infinite","getStringSlot(string storage pointer)":"infinite","getUint256Slot(bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/BaluniV1PoolPeriphery.sol":{"BaluniV1PoolPeriphery":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedInnerCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"addLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"fromTokens","type":"address[]"},{"internalType":"address[]","name":"toTokens","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"address[]","name":"receivers","type":"address[]"}],"name":"batchSwap","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"changePoolFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"},{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsContainingToken","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"pool","type":"address"}],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVersion","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"}],"name":"performRebalanceIfNeeded","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"poolFactory","outputs":[{"internalType":"contract IBaluniV1PoolFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"poolsReserves","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_poolFactory","type":"address"},{"internalType":"uint64","name":"version","type":"uint64"}],"name":"reinitialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"share","type":"uint256"},{"internalType":"address","name":"poolAddress","type":"address"},{"internalType":"address","name":"receiver","type":"address"}],"name":"removeLiquidity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"smartSwap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"details":"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedInnerCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"addLiquidity(uint256[],address,address)":{"details":"Adds liquidity to a BaluniV1Pool.","params":{"amounts":"An array of amounts for each asset to add as liquidity."}},"batchSwap(address[],address[],uint256[],address[])":{"details":"Performs batch swaps between multiple token pairs.","params":{"amounts":"An array of amounts representing the amounts to swap.","fromTokens":"An array of addresses representing the tokens to swap from.","receivers":"An array of addresses representing the receivers of the swapped tokens.","toTokens":"An array of addresses representing the tokens to swap to."},"returns":{"_0":"An array of amounts representing the amounts of tokens received after the swaps."}},"changePoolFactory(address)":{"details":"Changes the address of the pool factory contract. Can only be called by the contract owner.","params":{"_poolFactory":"The new address of the pool factory contract."}},"getAmountOut(address,address,uint256)":{"details":"Gets the amount of tokens received after a swap in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"getPoolsContainingToken(address)":{"details":"Returns an array of pool addresses that contain the given token.","params":{"token":"The address of the token to search for."},"returns":{"_0":"An array of pool addresses."}},"getVersion()":{"details":"Returns the version of the contract.","returns":{"_0":"The version string."}},"initialize(address)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"owner()":{"details":"Returns the address of the current owner."},"performRebalanceIfNeeded(address)":{"details":"Performs rebalance if needed for the given tokens.","params":{"poolAddress":"The address of the token pool to rebalance."}},"proxiableUUID()":{"details":"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"reinitialize(address,uint64)":{"details":"Initializes the contract by setting the pool factory address.","params":{"_poolFactory":"The address of the BaluniV1PoolFactory contract."}},"removeLiquidity(uint256,address,address)":{"details":"Removes liquidity from a BaluniV1Pool.","params":{"poolAddress":"The address of the BaluniV1Pool.","share":"The amount of liquidity tokens to remove."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"swap(address,address,uint256,address)":{"details":"Swaps tokens in a BaluniV1Pool.","params":{"amount":"The amount of tokens to swap.","fromToken":"The address of the token to swap from.","toToken":"The address of the token to swap to."},"returns":{"_0":"The amount of tokens received after the swap."}},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"BaluniV1PoolPeriphery","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a0806040523460295730608052612ab2908161002e8239608051818181611c570152611d3b0152f35b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c9081630d8e6e2c1461208a575080633e99c1e41461205a5780634056c37f146111bd5780634219dc40146120335780634aa0665214611f0b5780634f1ef28614611cc157806352d1902d14611c455780635568081a146119db5780636e81221c1461179b578063715018a61461173457806372591be5146116f25780637442eca6146113115780638da5cb5b146112dd5780638f2248bc1461120a578063a3e113fb146111bd578063ad3cb1cc1461113c578063ad41426314610fad578063ae3cce1c14610efe578063c4d66de814610dbf578063e74e9b06146107fc578063ec0cd2eb14610634578063f2fde38b1461060b5763f31abcc414610119575f80fd5b34610427576060366003190112610427576004356101356120cf565b61013d6120e5565b82156105c657604051636eb1769f60e11b81523360048201523060248201526001600160a01b0393602093909181861691908581604481865afa80156103f45784915f91610595575b501061055757604051936370a0823160e01b9384865233600487015260249587818881885afa80156103f45782905f90610526575b6101c79250101561238e565b6040516323b872dd60e01b81523360048201523060248201526044810182905287816064815f895af19081156103f4575f91610509575b50156104cf5760405163a9059cbb60e01b8082526001600160a01b03949094166004820152602481019190915286816044815f885af19081156103f4575f916104b2575b501561047c5760405163226bf2d160e21b81528782166004820152905f82878183885af19182156103f4575f92610458575b506040516319f92b0b60e21b8152945f86600481885afa9586156103f4575f96610434575b505f5b86518110156104325787898b6102b2848b6122c2565b5116604051928380928782523060048301525afa80156103f4575f906103ff575b6102ea91506102e283876122c2565b5111156124fb565b6102f481856122c2565b51865f5260018a5260405f208b61030b848b6122c2565b51165f528a5261032060405f2091825461243f565b90555f8961036b8c610332858c6122c2565b511661033e85896122c2565b516040518a81526001600160a01b0389166004820152602481019190915293849283919082906044820190565b03925af19081156103f4575f916103c7575b501561038b5760010161029c565b60405162461bcd60e51b8152600481018a90526015818a015274105cdcd95d081d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b6103e791508a3d8c116103ed575b6103df8183612136565b810190612497565b5f61037d565b503d6103d5565b6040513d5f823e3d90fd5b508981813d831161042b575b6104158183612136565b81010312610427576102ea90516102d3565b5f80fd5b503d61040b565b005b6104519196503d805f833e6104498183612136565b81019061220f565b945f610299565b6104759192503d805f833e61046d8183612136565b8101906124af565b905f610274565b60405162461bcd60e51b815260048101879052600f818701526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6104c99150873d89116103ed576103df8183612136565b5f610242565b60405162461bcd60e51b81526004810188905260138188015272151c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152606490fd5b6105209150883d8a116103ed576103df8183612136565b5f6101fe565b50508781813d8311610550575b61053d8183612136565b8101031261042757816101c791516101bb565b503d610533565b60405162461bcd60e51b8152600481018690526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606490fd5b809250878092503d83116105bf575b6105ae8183612136565b81010312610427578390515f610186565b503d6105a4565b60405162461bcd60e51b815260206004820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152606490fd5b34610427576020366003190112610427576104326106276120b9565b61062f6125b1565b612540565b34610427576060366003190112610427576004356001600160401b038111610427576106649036906004016121b4565b9061066d6120cf565b906106766120e5565b6040516319f92b0b60e21b815290926001600160a01b03908116915f81600481865afa9081156103f4575f916107e2575b505f5b81518110156107605780836106c05f93856122c2565b51166106cd828a896124d7565b35868452610727602092839260018452604087208288528452604087206106f5828254612432565b90556040516323b872dd60e01b8152336004820152306024820152604481019190915295869283919082906064820190565b03925af19283156103f457600193610742575b5050016106aa565b8161075892903d106103ed576103df8183612136565b50888061073a565b50506040805163de836ebd60e01b815294909116600485015260248401526044830184905283906001600160fb1b03821161042757835f606482602096819660051b80918484013781010301925af180156103f4576107bb57005b602090813d83116107db575b6107d18183612136565b8101031261042757005b503d6107c7565b6107f691503d805f833e6104498183612136565b866106a7565b34610427576080366003190112610427576001600160401b036004358181116104275761082d9036906004016121b4565b602492919235828111610427576108489036906004016121b4565b9390604435848111610427576108629036906004016121b4565b9190946064359081116104275761087d9036906004016121b4565b91909287861480610db6575b80610dad575b15610d685761089d86612290565b965f5b8781106108b957604051806108b58b826120fb565b0390f35b8060208b896109066108fa856108ff8f826108fa916108e96108e18f9d8f9e61093a9f6124d7565b35151561244c565b5f546001600160a01b0316976124d7565b6124e7565b948b6124d7565b604051632d5e94a760e01b81526001600160a01b039384166004820152921660248301529093849190829081906044820190565b03915afa9182156103f4578989915f94610d19575b5060249161096a6108fa8560209460018060a01b03946124d7565b16604051928380926370a0823160e01b82523360048301525afa9081156103f4575f91610ce7575b5061099e8286866124d7565b3511610cab575f9160206109fc6001600160a01b036109c16108fa868f8f6124d7565b166109cd8589896124d7565b6040516323b872dd60e01b81523360048201523060248201529035604482015295869283919082906064820190565b03925af180156103f4578487610ae18f6108fa8f8f8f9a8f918e610a946108fa8e610aa1998f60209f8f849b8599610a8e94610a49888c610a9a9f9682976108fa99610c8d575b506124d7565b6001600160a01b039182165f908152600160205260409020903591610a726108fa8787876124d7565b165f52602052610a8760405f20918254612432565b90556124d7565b9c6124d7565b996124d7565b359a6124d7565b604051631ba0488760e21b81526001600160a01b039384166004820152938316602485015260448401979097529516606482015293849081906084820190565b03815f6001600160a01b0386165af19283156103f4575f93610c59575b506001600160a01b039081165f90815260016020526040902090610b266108fa848f8a6124d7565b165f5260205260405f20610b3b83825461243f565b9055602460208c610b576108fa8560018060a01b03938b6124d7565b16604051928380926370a0823160e01b82523060048301525afa9081156103f4575f91610c27575b5082610b92610bee9460209310156124fb565b8c610ba86108fa8560018060a01b03938b6124d7565b16610bb76108fa858b8d6124d7565b60405163a9059cbb60e01b81526001600160a01b0390911660048201526024810192909252909384919082905f9082906044820190565b03925af19182156103f457600192610c08575b50016108a0565b610c209060203d6020116103ed576103df8183612136565b508b610c01565b90506020813d602011610c51575b81610c4260209383612136565b81010312610427575182610b7f565b3d9150610c35565b9092506020813d602011610c85575b81610c7560209383612136565b810103126104275751918c610afe565b3d9150610c68565b610ca49060203d81116103ed576103df8183612136565b505f610a43565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606490fd5b90506020813d602011610d11575b81610d0260209383612136565b8101031261042757518c610992565b3d9150610cf5565b935050506020823d602011610d60575b81610d3660209383612136565b8101031261042757602460208961096a6108fa85610d548f986121fb565b9794505050509161094f565b3d9150610d29565b60405162461bcd60e51b815260206004820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152606490fd5b5082811461088f565b50808814610889565b3461042757602036600319011261042757610dd86120b9565b5f80516020612a5d8339815191529081549060ff8260401c1615916001600160401b03811680159081610ef6575b6001149081610eec575b159081610ee3575b50610ed15767ffffffffffffffff198116600117845582610eb2575b50610e3d6129ab565b610e456129ab565b610e4d6129ab565b610e5633612540565b60018060a01b03166bffffffffffffffffffffffff60a01b5f5416175f55610e7a57005b60ff60401b1981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff19166801000000000000000117835583610e34565b60405163f92ee8a960e01b8152600490fd5b90501585610e18565b303b159150610e10565b849150610e06565b346104275760208060031936011261042757610f186120b9565b5f8054604051635a1a073560e11b81526001600160a01b03938416600482015292939291908290602490829087165afa9081156103f4575f91610f93575b5060405191808301818452825180915281604085019301915f5b828110610f7d5785850386f35b8351871685529381019392810192600101610f70565b610fa791503d805f833e6104498183612136565b83610f56565b3461042757604036600319011261042757610fc66120b9565b610fce6120cf565b604051630723c99960e01b81526001600160a01b0382811660048301529290919083165f8360248183855af19283156103f4575f93611120575b506040516319f92b0b60e21b8152915f83600481855afa9283156103f4575f93611104575b505f5b835181101561043257806110455f92876122c2565b5184835260209060018252604084208961105f858a6122c2565b51168552825261107460408520918254612432565b9055806110cb89611085858a6122c2565b5116611091858b6122c2565b516040516323b872dd60e01b81526001600160a01b0389166004820152306024820152604481019190915295869283919082906064820190565b03925af19283156103f4576001936110e6575b505001611030565b816110fc92903d106103ed576103df8183612136565b5087806110de565b6111199193503d805f833e6104498183612136565b918561102d565b6111359193503d805f833e61046d8183612136565b9184611008565b34610427575f36600319011261042757604051604081018181106001600160401b038211176111a9576040526005815260406020820191640352e302e360dc1b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b634e487b7160e01b5f52604160045260245ffd5b34610427576040366003190112610427576111d66120b9565b6111de6120cf565b9060018060a01b038091165f52600160205260405f2091165f52602052602060405f2054604051908152f35b34610427576040366003190112610427576112236120b9565b602435906001600160401b0391828116809103610427575f80516020612a5d8339815191528054938260ff8660401c169182156112d0575b5050610ed1577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29360209360018060a01b03166bffffffffffffffffffffffff60a01b5f5416175f55680100000000000000008360ff60401b199268ffffffffffffffffff19161717169055604051908152a1005b861610159050828661125b565b34610427575f366003190112610427575f80516020612a3d833981519152546040516001600160a01b039091168152602090f35b346104275761133861132236612172565b939080939261133282151561244c565b836125f7565b918251156116bc576040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b0393602092909183816064815f898b165af180156103f45761169f575b5092945f925b8251841015611697578561139e85856122c2565b511696604051966319f92b0b60e21b88525f886004818c5afa9788156103f4575f9861167b575b506113db816113d488886122c2565b51166122ea565b975f985f5b825181101561166e57836113f482856122c2565b511684861614158061165b575b61140d576001016113e0565b90508299506114209198939497986122c2565b5116915b87831691821561161657604051630b2b55d760e41b815260048101849052602490888183818f5afa80156103f45783915f916115e5575b50106115925786515f1981019190821161157f57506114c45f9b89928b148d1461157957875b604051631ba0488760e21b81526001600160a01b038088166004830152808a1660248301526044820187905290911660648201529c8d9283919082906084820190565b03925af1998a156103f4575f9a611541575b50906001939291896114e88a896122c2565b51165f5284918289528a60405f2091165f52885261150b60405f20918254612432565b90558861151889886122c2565b51165f52865260405f20905f52855260405f2061153689825461243f565b90559694019261138a565b9392919099508684813d8311611572575b61155c8183612136565b81010312610427576001935199909192936114d6565b503d611552565b30611481565b634e487b7160e01b5f9081526011600452fd5b8760276084926040519262461bcd60e51b845260048401528201527f496e73756666696369656e74206c697175696469747920696e20706f6f6c206660448201526606f7220737761760cc1b6064820152fd5b8092508a8092503d831161160f575b6115fe8183612136565b81010312610427578290518d61145b565b503d6115f4565b60405162461bcd60e51b815260048101889052601960248201527f4e6f2076616c6964206e65787420746f6b656e20666f756e64000000000000006044820152606490fd5b5061166681836122c2565b511515611401565b5050509691949590611424565b6116909198503d805f833e6104498183612136565b96896113c5565b604051858152f35b6116b590843d86116103ed576103df8183612136565b5086611384565b60405162461bcd60e51b815260206004820152600e60248201526d139bc81c9bdd5d1948199bdd5b9960921b6044820152606490fd5b346104275760203660031901126104275761170b6120b9565b6117136125b1565b5f80546001600160a01b0319166001600160a01b0392909216919091179055005b34610427575f3660031901126104275761174c6125b1565b5f80516020612a3d83398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610427576117a936612172565b92906117b681151561244c565b5f54604051632d5e94a760e01b81526001600160a01b03848116600483015285811660248301526020969290919087908290604490829086165afa80156103f45782915f916119a3575b506040516323b872dd60e01b8152336004820152306024820152604481018690529116948281169088836064815f865af19182156103f45789938993611986575b50875f526001845260405f20905f52835260405f20611861878254612432565b9055604051631ba0488760e21b81526001600160a01b039182166004820152918116602483015260448201959095529383166064850152836084815f885af19384156103f45786935f95611949575b509184959161191495935f526001855260405f20921691825f52845260405f206118db84825461243f565b905560405163a9059cbb60e01b81526001600160a01b0390911660048201526024810192909252909283919082905f9082906044820190565b03925af180156103f45761192c575b50604051908152f35b61194290833d85116103ed576103df8183612136565b5082611923565b848195929496509692963d831161197f575b6119658183612136565b8101031261042757915191939192859290916119146118b0565b503d61195b565b61199c90853d87116103ed576103df8183612136565b508a611841565b809250888092503d83116119d4575b6119bc8183612136565b81010312610427576119ce82916121fb565b88611800565b503d6119b2565b3461042757602080600319360112610427576001600160a01b0390816119ff6120b9565b166040516370a0823160e01b81523360048201528281602481855afa9081156103f4575f91611c18575b506040516318160ddd60e01b8152908382600481865afa9182156103f4575f92611be9575b5061271090818102918183041490151715611bd5578115611bc157611a789160649104101561238e565b604051631e8f68bd60e31b8152925f8460048183865af19283156103f4575f945f94611b65575b506040516319f92b0b60e21b8152915f83600481875afa9283156103f4575f93611b49575b505f5b83518110156104325780611add600192896122c2565b51865f52829081865260405f2085611af5858a6122c2565b51165f528652611b0a60405f20918254612432565b9055611b1682896122c2565b5190875f52855260405f2084611b2c84896122c2565b51165f528552611b4160405f2091825461243f565b905501611ac7565b611b5e9193503d805f833e6104498183612136565b9186611ac4565b945092503d805f863e611b788186612136565b840193604081860312610427578051946001600160401b03958681116104275781611ba49184016123d1565b958583015190811161042757611bba92016123d1565b9285611a9f565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b9091508381813d8311611c11575b611c018183612136565b8101031261042757519085611a4e565b503d611bf7565b90508281813d8311611c3e575b611c2f8183612136565b81010312610427575184611a29565b503d611c25565b34610427575f366003190112610427577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611caf5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b604036600319011261042757611cd56120b9565b60249081356001600160401b0381116104275736602382011215610427578060040135611d0181612157565b92611d0f6040519485612136565b818452602091828501933687838301011161042757815f92888693018737860101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115611edd575b50611caf57611d746125b1565b8116936040516352d1902d60e01b81528381600481895afa5f9181611eae575b50611db157604051634c9c8ce360e01b8152600481018790528790fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611e995750843b15611e83575080546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2815115611e6857505f6104329481925190845af4903d15611e5f573d611e4381612157565b90611e516040519283612136565b81525f81943d92013e6129d9565b606092506129d9565b935050505034611e7457005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101849052fd5b60405190632a87526960e21b82526004820152fd5b9091508481813d8311611ed6575b611ec68183612136565b8101031261042757519088611d94565b503d611ebc565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141587611d67565b3461042757606036600319011261042757611f246120b9565b611f2c6120cf565b5f54604051632d5e94a760e01b81526001600160a01b0384811660048301528381166024830152602094919285908490604490829085165afa9081156103f45785935f92611ff6575b50604051632550332960e11b81526001600160a01b03938416600482015294909216602485015260448035908501528391829081606481015b0392165afa9081156103f4575f91611fc95750604051908152f35b90508181813d8311611fef575b611fe08183612136565b81010312610427575182611923565b503d611fd6565b8481959293503d831161202c575b61200e8183612136565b8101031261042757611fae9361202486946121fb565b919094611f75565b503d612004565b34610427575f366003190112610427575f546040516001600160a01b039091168152602090f35b34610427576020366003190112610427576108b561207e6120796120b9565b6122ea565b604051918291826120fb565b34610427575f366003190112610427576020906001600160401b035f80516020612a5d83398151915254168152f35b600435906001600160a01b038216820361042757565b602435906001600160a01b038216820361042757565b604435906001600160a01b038216820361042757565b60209060206040818301928281528551809452019301915f5b828110612122575050505090565b835185529381019392810192600101612114565b90601f801991011681019081106001600160401b038211176111a957604052565b6001600160401b0381116111a957601f01601f191660200190565b6080906003190112610427576001600160a01b039060043582811681036104275791602435818116810361042757916044359160643590811681036104275790565b9181601f84011215610427578235916001600160401b038311610427576020808501948460051b01011161042757565b6001600160401b0381116111a95760051b60200190565b51906001600160a01b038216820361042757565b6020908181840312610427578051906001600160401b03821161042757019180601f84011215610427578251612244816121e4565b936122526040519586612136565b818552838086019260051b820101928311610427578301905b828210612279575050505090565b838091612285846121fb565b81520191019061226b565b9061229a826121e4565b6122a76040519182612136565b82815280926122b8601f19916121e4565b0190602036910137565b80518210156122d65760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b604080516319f92b0b60e21b81529092916001600160a01b0390811691905f82600481865afa9182156103f4575f92612372575b506123298251612290565b925f5b835181101561236957600190825f526020828152885f20908561234f84896122c2565b51165f5252875f205461236282886122c2565b520161232c565b50929450505050565b6123879192503d805f833e6104498183612136565b905f61231e565b1561239557565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b9080601f83011215610427578151906020916123ec816121e4565b936123fa6040519586612136565b81855260208086019260051b82010192831161042757602001905b828210612423575050505090565b81518152908301908301612415565b91908201809211611bd557565b91908203918211611bd557565b1561245357565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b90816020910312610427575180151581036104275790565b906020828203126104275781516001600160401b038111610427576124d492016123d1565b90565b91908110156122d65760051b0190565b356001600160a01b03811681036104275790565b1561250257565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b6001600160a01b03908116908115612599575f80516020612a3d83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80516020612a3d833981519152546001600160a01b031633036125d157565b60405163118cdaa760e01b8152336004820152602490fd5b5f198114611bd55760010190565b5f8054604051633623fc7d60e21b81526001600160a01b039290918290600490829086165afa9081156103f4575f9161282a575b5080519361263885612290565b915f93612644876121e4565b926126526040519485612136565b878452601f19612661896121e4565b0136602086013761267188612290565b965f6001918951156122d657841660208a01525b8181106126bd575050505050505050505050604051602081018181106001600160401b038211176111a9576040525f81525f36813790565b836126d16126ca836125e9565b928b6122c2565b511684841681146127e3575f5b8b81106126ec575050612685565b6126f681896122c2565b5115612705575b6001016126de565b8561271082896122c2565b516040516319f92b0b60e21b815291165f82600481845afa9081156103f4578f85935f936127c7575b50836127458185612844565b92836127b5575b50505061275b575b50506126fd565b9061276591612924565b86612770838a6122c2565b511661277b8c6125e9565b9b612786908c6122c2565b52868c612792876125e9565b9661279c916122c2565b911690526127aa81896122c2565b60019052815f612754565b6127bf9350612884565b8f835f61274c565b6127dc9193503d805f833e6104498183612136565b915f612739565b5050505094505050935091506127f882612290565b925f5b838110612809575050505090565b8083612817600193856122c2565b511661282382886122c2565b52016127fb565b61283e91503d805f833e6104498183612136565b5f61262b565b905f5b825181101561287d576001600160a01b038061286383866122c2565b51169083161461287557600101612847565b505050600190565b5050505f90565b600492916001600160a01b03918216915f61289e846122ea565b93604051968780926319f92b0b60e21b82525afa9485156103f4575f95612908575b505f5b85518110156128fe57816128d782886122c2565b5116828416146128e9576001016128c3565b929150506128f89293506122c2565b51101590565b5050505050505f90565b61291d9195503d805f833e6104498183612136565b935f6128c0565b905f5b8251811015612966576001600160a01b038061294383866122c2565b5116818416036129565750600101612927565b9261296192506122c2565b511690565b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e206e6f7420666f756e6420696e20706f6f6c0000000000000000006044820152606490fd5b60ff5f80516020612a5d8339815191525460401c16156129c757565b604051631afcd79f60e31b8152600490fd5b90612a0057508051156129ee57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612a33575b612a11575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612a0956fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212205ffb73940f338b632d35d1da94b61bffdcb09d112065edee0430b845d97e1d5e64736f6c63430008190033","opcodes":"PUSH1 0xA0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x29 JUMPI ADDRESS PUSH1 0x80 MSTORE PUSH2 0x2AB2 SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1C57 ADD MSTORE PUSH2 0x1D3B ADD MSTORE RETURN JUMPDEST PUSH0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x208A JUMPI POP DUP1 PUSH4 0x3E99C1E4 EQ PUSH2 0x205A JUMPI DUP1 PUSH4 0x4056C37F EQ PUSH2 0x11BD JUMPI DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x2033 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x1F0B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1CC1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1C45 JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x19DB JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x179B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1734 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x16F2 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1311 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12DD JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x120A JUMPI DUP1 PUSH4 0xA3E113FB EQ PUSH2 0x11BD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x113C JUMPI DUP1 PUSH4 0xAD414263 EQ PUSH2 0xFAD JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0xEFE JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xDBF JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x60B JUMPI PUSH4 0xF31ABCC4 EQ PUSH2 0x119 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x135 PUSH2 0x20CF JUMP JUMPDEST PUSH2 0x13D PUSH2 0x20E5 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP2 DUP2 DUP7 AND SWAP2 SWAP1 DUP6 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP5 SWAP2 PUSH0 SWAP2 PUSH2 0x595 JUMPI JUMPDEST POP LT PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP4 DUP5 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 SWAP6 DUP8 DUP2 DUP9 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP3 SWAP1 PUSH0 SWAP1 PUSH2 0x526 JUMPI JUMPDEST PUSH2 0x1C7 SWAP3 POP LT ISZERO PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP8 DUP2 PUSH1 0x64 DUP2 PUSH0 DUP10 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x509 JUMPI JUMPDEST POP ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x4B2 JUMPI JUMPDEST POP ISZERO PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH4 0x226BF2D1 PUSH1 0xE2 SHL DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 DUP3 DUP8 DUP2 DUP4 DUP9 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP3 PUSH2 0x458 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP5 PUSH0 DUP7 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP7 PUSH2 0x434 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP8 DUP10 DUP12 PUSH2 0x2B2 DUP5 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 DUP8 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP1 PUSH2 0x3FF JUMPI JUMPDEST PUSH2 0x2EA SWAP2 POP PUSH2 0x2E2 DUP4 DUP8 PUSH2 0x22C2 JUMP JUMPDEST MLOAD GT ISZERO PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2F4 DUP2 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD DUP7 PUSH0 MSTORE PUSH1 0x1 DUP11 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP12 PUSH2 0x30B DUP5 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP11 MSTORE PUSH2 0x320 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE PUSH0 DUP10 PUSH2 0x36B DUP13 PUSH2 0x332 DUP6 DUP13 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x33E DUP6 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x3C7 JUMPI JUMPDEST POP ISZERO PUSH2 0x38B JUMPI PUSH1 0x1 ADD PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP11 ADD MSTORE PUSH21 0x105CDCD95D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3E7 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x3ED JUMPI JUMPDEST PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH0 PUSH2 0x37D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x42B JUMPI JUMPDEST PUSH2 0x415 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH2 0x2EA SWAP1 MLOAD PUSH2 0x2D3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x451 SWAP2 SWAP7 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x220F JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x299 JUMP JUMPDEST PUSH2 0x475 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x46D DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x24AF JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xF DUP2 DUP8 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4C9 SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP9 ADD MSTORE PUSH19 0x151C985B9CD9995C919C9BDB4819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x520 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH2 0x1FE JUMP JUMPDEST POP POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x550 JUMPI JUMPDEST PUSH2 0x53D DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI DUP2 PUSH2 0x1C7 SWAP2 MLOAD PUSH2 0x1BB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x5BF JUMPI JUMPDEST PUSH2 0x5AE DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI DUP4 SWAP1 MLOAD PUSH0 PUSH2 0x186 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x432 PUSH2 0x627 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x62F PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x2540 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x664 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP1 PUSH2 0x66D PUSH2 0x20CF JUMP JUMPDEST SWAP1 PUSH2 0x676 PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH0 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x7E2 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x760 JUMPI DUP1 DUP4 PUSH2 0x6C0 PUSH0 SWAP4 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x6CD DUP3 DUP11 DUP10 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD DUP7 DUP5 MSTORE PUSH2 0x727 PUSH1 0x20 SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP3 DUP9 MSTORE DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x6F5 DUP3 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x742 JUMPI JUMPDEST POP POP ADD PUSH2 0x6AA JUMP JUMPDEST DUP2 PUSH2 0x758 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP9 DUP1 PUSH2 0x73A JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0xDE836EBD PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP1 SWAP2 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP3 GT PUSH2 0x427 JUMPI DUP4 PUSH0 PUSH1 0x64 DUP3 PUSH1 0x20 SWAP7 DUP2 SWAP7 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x7BB JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x7DB JUMPI JUMPDEST PUSH2 0x7D1 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x7F6 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP7 PUSH2 0x6A7 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x82D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x24 SWAP3 SWAP2 SWAP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x848 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP4 SWAP1 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x862 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x87D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 DUP8 DUP7 EQ DUP1 PUSH2 0xDB6 JUMPI JUMPDEST DUP1 PUSH2 0xDAD JUMPI JUMPDEST ISZERO PUSH2 0xD68 JUMPI PUSH2 0x89D DUP7 PUSH2 0x2290 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x8B5 DUP12 DUP3 PUSH2 0x20FB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x20 DUP12 DUP10 PUSH2 0x906 PUSH2 0x8FA DUP6 PUSH2 0x8FF DUP16 DUP3 PUSH2 0x8FA SWAP2 PUSH2 0x8E9 PUSH2 0x8E1 DUP16 SWAP14 DUP16 SWAP15 PUSH2 0x93A SWAP16 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x244C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP8 PUSH2 0x24D7 JUMP JUMPDEST PUSH2 0x24E7 JUMP JUMPDEST SWAP5 DUP12 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D5E94A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP4 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI DUP10 DUP10 SWAP2 PUSH0 SWAP5 PUSH2 0xD19 JUMPI JUMPDEST POP PUSH1 0x24 SWAP2 PUSH2 0x96A PUSH2 0x8FA DUP6 PUSH1 0x20 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0xCE7 JUMPI JUMPDEST POP PUSH2 0x99E DUP3 DUP7 DUP7 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD GT PUSH2 0xCAB JUMPI PUSH0 SWAP2 PUSH1 0x20 PUSH2 0x9FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9C1 PUSH2 0x8FA DUP7 DUP16 DUP16 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH2 0x9CD DUP6 DUP10 DUP10 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP5 DUP8 PUSH2 0xAE1 DUP16 PUSH2 0x8FA DUP16 DUP16 DUP16 SWAP11 DUP16 SWAP2 DUP15 PUSH2 0xA94 PUSH2 0x8FA DUP15 PUSH2 0xAA1 SWAP10 DUP16 PUSH1 0x20 SWAP16 DUP16 DUP5 SWAP12 DUP6 SWAP10 PUSH2 0xA8E SWAP5 PUSH2 0xA49 DUP9 DUP13 PUSH2 0xA9A SWAP16 SWAP7 DUP3 SWAP8 PUSH2 0x8FA SWAP10 PUSH2 0xC8D JUMPI JUMPDEST POP PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 CALLDATALOAD SWAP2 PUSH2 0xA72 PUSH2 0x8FA DUP8 DUP8 DUP8 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xA87 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x24D7 JUMP JUMPDEST SWAP13 PUSH2 0x24D7 JUMP JUMPDEST SWAP10 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD SWAP11 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BA04887 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP4 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x84 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0xC59 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0xB26 PUSH2 0x8FA DUP5 DUP16 DUP11 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xB3B DUP4 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x24 PUSH1 0x20 DUP13 PUSH2 0xB57 PUSH2 0x8FA DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP12 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0xC27 JUMPI JUMPDEST POP DUP3 PUSH2 0xB92 PUSH2 0xBEE SWAP5 PUSH1 0x20 SWAP4 LT ISZERO PUSH2 0x24FB JUMP JUMPDEST DUP13 PUSH2 0xBA8 PUSH2 0x8FA DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP12 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH2 0xBB7 PUSH2 0x8FA DUP6 DUP12 DUP14 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 DUP5 SWAP2 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC08 JUMPI JUMPDEST POP ADD PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0xC20 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP12 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC51 JUMPI JUMPDEST DUP2 PUSH2 0xC42 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP3 PUSH2 0xB7F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC35 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC85 JUMPI JUMPDEST DUP2 PUSH2 0xC75 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD SWAP2 DUP13 PUSH2 0xAFE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xCA4 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP PUSH0 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD11 JUMPI JUMPDEST DUP2 PUSH2 0xD02 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP13 PUSH2 0x992 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCF5 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD60 JUMPI JUMPDEST DUP2 PUSH2 0xD36 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH1 0x24 PUSH1 0x20 DUP10 PUSH2 0x96A PUSH2 0x8FA DUP6 PUSH2 0xD54 DUP16 SWAP9 PUSH2 0x21FB JUMP JUMPDEST SWAP8 SWAP5 POP POP POP POP SWAP2 PUSH2 0x94F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 DUP2 EQ PUSH2 0x88F JUMP JUMPDEST POP DUP1 DUP9 EQ PUSH2 0x889 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0xDD8 PUSH2 0x20B9 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xEF6 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xEEC JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xEE3 JUMPI JUMPDEST POP PUSH2 0xED1 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP5 SSTORE DUP3 PUSH2 0xEB2 JUMPI JUMPDEST POP PUSH2 0xE3D PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xE56 CALLER PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH2 0xE7A JUMPI STOP JUMPDEST PUSH1 0xFF PUSH1 0x40 SHL NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP4 SSTORE DUP4 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0xE18 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0xE10 JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0xE06 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH2 0xF18 PUSH2 0x20B9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5A1A0735 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0xF93 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF7D JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xFA7 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP4 PUSH2 0xF56 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0xFC6 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xFCE PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x723C999 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP2 SWAP1 DUP4 AND PUSH0 DUP4 PUSH1 0x24 DUP2 DUP4 DUP6 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0x1120 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 PUSH0 DUP4 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0x1104 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP1 PUSH2 0x1045 PUSH0 SWAP3 DUP8 PUSH2 0x22C2 JUMP JUMPDEST MLOAD DUP5 DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP10 PUSH2 0x105F DUP6 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP6 MSTORE DUP3 MSTORE PUSH2 0x1074 PUSH1 0x40 DUP6 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH2 0x10CB DUP10 PUSH2 0x1085 DUP6 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x1091 DUP6 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x10E6 JUMPI JUMPDEST POP POP ADD PUSH2 0x1030 JUMP JUMPDEST DUP2 PUSH2 0x10FC SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x1119 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP6 PUSH2 0x102D JUMP JUMPDEST PUSH2 0x1135 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x46D DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP5 PUSH2 0x1008 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x11A9 JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD SWAP2 PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x11D6 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x11DE PUSH2 0x20CF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x1223 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x427 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP4 DUP3 PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x12D0 JUMPI JUMPDEST POP POP PUSH2 0xED1 JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH9 0x10000000000000000 DUP4 PUSH1 0xFF PUSH1 0x40 SHL NOT SWAP3 PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND OR OR AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP7 AND LT ISZERO SWAP1 POP DUP3 DUP7 PUSH2 0x125B JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH2 0x1338 PUSH2 0x1322 CALLDATASIZE PUSH2 0x2172 JUMP JUMPDEST SWAP4 SWAP1 DUP1 SWAP4 SWAP3 PUSH2 0x1332 DUP3 ISZERO ISZERO PUSH2 0x244C JUMP JUMPDEST DUP4 PUSH2 0x25F7 JUMP JUMPDEST SWAP2 DUP3 MLOAD ISZERO PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP3 SWAP1 SWAP2 DUP4 DUP2 PUSH1 0x64 DUP2 PUSH0 DUP10 DUP12 AND GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x169F JUMPI JUMPDEST POP SWAP3 SWAP5 PUSH0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x1697 JUMPI DUP6 PUSH2 0x139E DUP6 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP7 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP9 MSTORE PUSH0 DUP9 PUSH1 0x4 DUP2 DUP13 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP9 PUSH2 0x167B JUMPI JUMPDEST POP PUSH2 0x13DB DUP2 PUSH2 0x13D4 DUP9 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x22EA JUMP JUMPDEST SWAP8 PUSH0 SWAP9 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x166E JUMPI DUP4 PUSH2 0x13F4 DUP3 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP5 DUP7 AND EQ ISZERO DUP1 PUSH2 0x165B JUMPI JUMPDEST PUSH2 0x140D JUMPI PUSH1 0x1 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP DUP3 SWAP10 POP PUSH2 0x1420 SWAP2 SWAP9 SWAP4 SWAP5 SWAP8 SWAP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP2 JUMPDEST DUP8 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0x1616 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB2B55D7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP9 DUP2 DUP4 DUP2 DUP16 GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x15E5 JUMPI JUMPDEST POP LT PUSH2 0x1592 JUMPI DUP7 MLOAD PUSH0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x157F JUMPI POP PUSH2 0x14C4 PUSH0 SWAP12 DUP10 SWAP3 DUP12 EQ DUP14 EQ PUSH2 0x1579 JUMPI DUP8 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BA04887 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP11 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP13 DUP14 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x84 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP10 DUP11 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP11 PUSH2 0x1541 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 DUP10 PUSH2 0x14E8 DUP11 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP5 SWAP2 DUP3 DUP10 MSTORE DUP11 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP9 MSTORE PUSH2 0x150B PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE DUP9 PUSH2 0x1518 DUP10 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1536 DUP10 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE SWAP7 SWAP5 ADD SWAP3 PUSH2 0x138A JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP10 POP DUP7 DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1572 JUMPI JUMPDEST PUSH2 0x155C DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH1 0x1 SWAP4 MLOAD SWAP10 SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x14D6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1552 JUMP JUMPDEST ADDRESS PUSH2 0x1481 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP8 PUSH1 0x27 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920696E20706F6F6C2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6F72207377617 PUSH1 0xCC SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP11 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x160F JUMPI JUMPDEST PUSH2 0x15FE DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI DUP3 SWAP1 MLOAD DUP14 PUSH2 0x145B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C6964206E65787420746F6B656E20666F756E6400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1666 DUP2 DUP4 PUSH2 0x22C2 JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH2 0x1401 JUMP JUMPDEST POP POP POP SWAP7 SWAP2 SWAP5 SWAP6 SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x1690 SWAP2 SWAP9 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP7 DUP10 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x16B5 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP7 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81C9BDD5D1948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x170B PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x1713 PUSH2 0x25B1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x174C PUSH2 0x25B1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH2 0x17A9 CALLDATASIZE PUSH2 0x2172 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x17B6 DUP2 ISZERO ISZERO PUSH2 0x244C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2D5E94A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP3 SWAP2 PUSH0 SWAP2 PUSH2 0x19A3 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 AND SWAP5 DUP3 DUP2 AND SWAP1 DUP9 DUP4 PUSH1 0x64 DUP2 PUSH0 DUP7 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI DUP10 SWAP4 DUP10 SWAP4 PUSH2 0x1986 JUMPI JUMPDEST POP DUP8 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1861 DUP8 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x1BA04887 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP4 AND PUSH1 0x64 DUP6 ADD MSTORE DUP4 PUSH1 0x84 DUP2 PUSH0 DUP9 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x3F4 JUMPI DUP7 SWAP4 PUSH0 SWAP6 PUSH2 0x1949 JUMPI JUMPDEST POP SWAP2 DUP5 SWAP6 SWAP2 PUSH2 0x1914 SWAP6 SWAP4 PUSH0 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x18DB DUP5 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x192C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1942 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP3 PUSH2 0x1923 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP5 SWAP7 POP SWAP7 SWAP3 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x197F JUMPI JUMPDEST PUSH2 0x1965 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI SWAP2 MLOAD SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 PUSH2 0x1914 PUSH2 0x18B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x195B JUMP JUMPDEST PUSH2 0x199C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP11 PUSH2 0x1841 JUMP JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x19D4 JUMPI JUMPDEST PUSH2 0x19BC DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH2 0x19CE DUP3 SWAP2 PUSH2 0x21FB JUMP JUMPDEST DUP9 PUSH2 0x1800 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x19B2 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x19FF PUSH2 0x20B9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x1C18 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP3 PUSH2 0x1BE9 JUMPI JUMPDEST POP PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BD5 JUMPI DUP2 ISZERO PUSH2 0x1BC1 JUMPI PUSH2 0x1A78 SWAP2 PUSH1 0x64 SWAP2 DIV LT ISZERO PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E8F68BD PUSH1 0xE3 SHL DUP2 MSTORE SWAP3 PUSH0 DUP5 PUSH1 0x4 DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP5 PUSH0 SWAP5 PUSH2 0x1B65 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 PUSH0 DUP4 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0x1B49 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP1 PUSH2 0x1ADD PUSH1 0x1 SWAP3 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD DUP7 PUSH0 MSTORE DUP3 SWAP1 DUP2 DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH2 0x1AF5 DUP6 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH2 0x1B0A PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1B16 DUP3 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD SWAP1 DUP8 PUSH0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH2 0x1B2C DUP5 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP6 MSTORE PUSH2 0x1B41 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x1B5E SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x1AC4 JUMP JUMPDEST SWAP5 POP SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP7 RETURNDATACOPY PUSH2 0x1B78 DUP2 DUP7 PUSH2 0x2136 JUMP JUMPDEST DUP5 ADD SWAP4 PUSH1 0x40 DUP2 DUP7 SUB SLT PUSH2 0x427 JUMPI DUP1 MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP6 DUP7 DUP2 GT PUSH2 0x427 JUMPI DUP2 PUSH2 0x1BA4 SWAP2 DUP5 ADD PUSH2 0x23D1 JUMP JUMPDEST SWAP6 DUP6 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x1BBA SWAP3 ADD PUSH2 0x23D1 JUMP JUMPDEST SWAP3 DUP6 PUSH2 0x1A9F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C11 JUMPI JUMPDEST PUSH2 0x1C01 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD SWAP1 DUP6 PUSH2 0x1A4E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C3E JUMPI JUMPDEST PUSH2 0x1C2F DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP5 PUSH2 0x1A29 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C25 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1CAF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x1CD5 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x427 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1D01 DUP2 PUSH2 0x2157 JUMP JUMPDEST SWAP3 PUSH2 0x1D0F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2136 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP6 ADD SWAP4 CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0x427 JUMPI DUP2 PUSH0 SWAP3 DUP9 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP7 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1EDD JUMPI JUMPDEST POP PUSH2 0x1CAF JUMPI PUSH2 0x1D74 PUSH2 0x25B1 JUMP JUMPDEST DUP2 AND SWAP4 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1EAE JUMPI JUMPDEST POP PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE DUP8 SWAP1 REVERT JUMPDEST DUP6 SWAP1 DUP8 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x1E99 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x1E83 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x1E68 JUMPI POP PUSH0 PUSH2 0x432 SWAP5 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1E5F JUMPI RETURNDATASIZE PUSH2 0x1E43 DUP2 PUSH2 0x2157 JUMP JUMPDEST SWAP1 PUSH2 0x1E51 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x29D9 JUMP JUMPDEST SWAP4 POP POP POP POP CALLVALUE PUSH2 0x1E74 JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1ED6 JUMPI JUMPDEST PUSH2 0x1EC6 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x1D94 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EBC JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP8 PUSH2 0x1D67 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x1F24 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x1F2C PUSH2 0x20CF JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2D5E94A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP3 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI DUP6 SWAP4 PUSH0 SWAP3 PUSH2 0x1FF6 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x25503329 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD SWAP1 DUP6 ADD MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x1FC9 JUMPI POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1FEF JUMPI JUMPDEST PUSH2 0x1FE0 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP3 PUSH2 0x1923 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FD6 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x202C JUMPI JUMPDEST PUSH2 0x200E DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH2 0x1FAE SWAP4 PUSH2 0x2024 DUP7 SWAP5 PUSH2 0x21FB JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x1F75 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2004 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x8B5 PUSH2 0x207E PUSH2 0x2079 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x20FB JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2122 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2114 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x11A9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x427 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A9 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x427 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x427 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP3 MLOAD PUSH2 0x2244 DUP2 PUSH2 0x21E4 JUMP JUMPDEST SWAP4 PUSH2 0x2252 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2136 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x427 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2279 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2285 DUP5 PUSH2 0x21FB JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 PUSH2 0x229A DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x22A7 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2136 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x22B8 PUSH1 0x1F NOT SWAP2 PUSH2 0x21E4 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22D6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 PUSH0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP3 PUSH2 0x2372 JUMPI JUMPDEST POP PUSH2 0x2329 DUP3 MLOAD PUSH2 0x2290 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2369 JUMPI PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE DUP9 PUSH0 KECCAK256 SWAP1 DUP6 PUSH2 0x234F DUP5 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP8 PUSH0 KECCAK256 SLOAD PUSH2 0x2362 DUP3 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MSTORE ADD PUSH2 0x232C JUMP JUMPDEST POP SWAP3 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH2 0x2387 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x231E JUMP JUMPDEST ISZERO PUSH2 0x2395 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x23EC DUP2 PUSH2 0x21E4 JUMP JUMPDEST SWAP4 PUSH2 0x23FA PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2136 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x427 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2423 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2415 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BD5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1BD5 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2453 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x427 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x427 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x427 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x24D4 SWAP3 ADD PUSH2 0x23D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x22D6 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2502 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2599 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x25D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x1BD5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3623FC7D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x282A JUMPI JUMPDEST POP DUP1 MLOAD SWAP4 PUSH2 0x2638 DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP2 PUSH0 SWAP4 PUSH2 0x2644 DUP8 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 PUSH2 0x2652 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2136 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x2661 DUP10 PUSH2 0x21E4 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH2 0x2671 DUP9 PUSH2 0x2290 JUMP JUMPDEST SWAP7 PUSH0 PUSH1 0x1 SWAP2 DUP10 MLOAD ISZERO PUSH2 0x22D6 JUMPI DUP5 AND PUSH1 0x20 DUP11 ADD MSTORE JUMPDEST DUP2 DUP2 LT PUSH2 0x26BD JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x11A9 JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x26D1 PUSH2 0x26CA DUP4 PUSH2 0x25E9 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP5 DUP5 AND DUP2 EQ PUSH2 0x27E3 JUMPI PUSH0 JUMPDEST DUP12 DUP2 LT PUSH2 0x26EC JUMPI POP POP PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x26F6 DUP2 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x2705 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x26DE JUMP JUMPDEST DUP6 PUSH2 0x2710 DUP3 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 AND PUSH0 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI DUP16 DUP6 SWAP4 PUSH0 SWAP4 PUSH2 0x27C7 JUMPI JUMPDEST POP DUP4 PUSH2 0x2745 DUP2 DUP6 PUSH2 0x2844 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x27B5 JUMPI JUMPDEST POP POP POP PUSH2 0x275B JUMPI JUMPDEST POP POP PUSH2 0x26FD JUMP JUMPDEST SWAP1 PUSH2 0x2765 SWAP2 PUSH2 0x2924 JUMP JUMPDEST DUP7 PUSH2 0x2770 DUP4 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x277B DUP13 PUSH2 0x25E9 JUMP JUMPDEST SWAP12 PUSH2 0x2786 SWAP1 DUP13 PUSH2 0x22C2 JUMP JUMPDEST MSTORE DUP7 DUP13 PUSH2 0x2792 DUP8 PUSH2 0x25E9 JUMP JUMPDEST SWAP7 PUSH2 0x279C SWAP2 PUSH2 0x22C2 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x27AA DUP2 DUP10 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x1 SWAP1 MSTORE DUP2 PUSH0 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x27BF SWAP4 POP PUSH2 0x2884 JUMP JUMPDEST DUP16 DUP4 PUSH0 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x27DC SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x2739 JUMP JUMPDEST POP POP POP POP SWAP5 POP POP POP SWAP4 POP SWAP2 POP PUSH2 0x27F8 DUP3 PUSH2 0x2290 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2809 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x2817 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x2823 DUP3 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MSTORE ADD PUSH2 0x27FB JUMP JUMPDEST PUSH2 0x283E SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x287D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x2863 DUP4 DUP7 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP1 DUP4 AND EQ PUSH2 0x2875 JUMPI PUSH1 0x1 ADD PUSH2 0x2847 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH0 PUSH2 0x289E DUP5 PUSH2 0x22EA JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP6 PUSH2 0x2908 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x28FE JUMPI DUP2 PUSH2 0x28D7 DUP3 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP3 DUP5 AND EQ PUSH2 0x28E9 JUMPI PUSH1 0x1 ADD PUSH2 0x28C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH2 0x28F8 SWAP3 SWAP4 POP PUSH2 0x22C2 JUMP JUMPDEST MLOAD LT ISZERO SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x291D SWAP2 SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x28C0 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2966 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x2943 DUP4 DUP7 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP2 DUP5 AND SUB PUSH2 0x2956 JUMPI POP PUSH1 0x1 ADD PUSH2 0x2927 JUMP JUMPDEST SWAP3 PUSH2 0x2961 SWAP3 POP PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E6420696E20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x29C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2A00 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x29EE JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2A33 JUMPI JUMPDEST PUSH2 0x2A11 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2A09 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212205FFB73 SWAP5 0xF CALLER DUP12 PUSH4 0x2D35D1DA SWAP5 0xB6 SHL SELFDESTRUCT 0xDC 0xB0 SWAP14 GT KECCAK256 PUSH6 0xEDEE0430B845 0xD9 PUSH31 0x1D5E64736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"2066:14642:14:-:0;;;;;;;1171:4:2;1163:13;;2066:14642:14;;;;;;1163:13:2;2066:14642:14;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8421,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_23314":{"entryPoint":8377,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_23316":{"entryPoint":8399,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_fromMemory":{"entryPoint":8699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_addresst_addresst_uint256t_address":{"entryPoint":8562,"id":null,"parameterSlots":1,"returnSlots":4},"abi_decode_array_address_dyn_calldata":{"entryPoint":8628,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_array_address_dyn_fromMemory":{"entryPoint":8719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_fromMemory":{"entryPoint":9391,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_array_uint256_dyn_memory_ptr_fromMemory":{"entryPoint":9169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":9367,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_address_uint256_address":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":8443,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":8848,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":8676,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":8535,"id":null,"parameterSlots":1,"returnSlots":1},"calldata_array_index_access_uint256_dyn_calldata":{"entryPoint":9431,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":9266,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":9279,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8502,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":10667,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":9649,"id":122,"parameterSlots":0,"returnSlots":0},"fun_containsToken":{"entryPoint":10308,"id":3046,"parameterSlots":2,"returnSlots":1},"fun_findOptimalRoute":{"entryPoint":9719,"id":3011,"parameterSlots":3,"returnSlots":1},"fun_getOtherTokenInPool":{"entryPoint":10532,"id":3147,"parameterSlots":2,"returnSlots":1},"fun_getReserves":{"entryPoint":8938,"id":3640,"parameterSlots":1,"returnSlots":1},"fun_hasSufficientLiquidity":{"entryPoint":10372,"id":3108,"parameterSlots":3,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":9536,"id":null,"parameterSlots":1,"returnSlots":0},"fun_verifyCallResultFromTarget":{"entryPoint":10713,"id":1967,"parameterSlots":3,"returnSlots":1},"increment_uint256":{"entryPoint":9705,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":9447,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":9102,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_335f":{"entryPoint":9292,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_85d3":{"entryPoint":9467,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"468":[{"length":32,"start":7255},{"length":32,"start":7483}]},"linkReferences":{},"object":"6080806040526004361015610012575f80fd5b5f3560e01c9081630d8e6e2c1461208a575080633e99c1e41461205a5780634056c37f146111bd5780634219dc40146120335780634aa0665214611f0b5780634f1ef28614611cc157806352d1902d14611c455780635568081a146119db5780636e81221c1461179b578063715018a61461173457806372591be5146116f25780637442eca6146113115780638da5cb5b146112dd5780638f2248bc1461120a578063a3e113fb146111bd578063ad3cb1cc1461113c578063ad41426314610fad578063ae3cce1c14610efe578063c4d66de814610dbf578063e74e9b06146107fc578063ec0cd2eb14610634578063f2fde38b1461060b5763f31abcc414610119575f80fd5b34610427576060366003190112610427576004356101356120cf565b61013d6120e5565b82156105c657604051636eb1769f60e11b81523360048201523060248201526001600160a01b0393602093909181861691908581604481865afa80156103f45784915f91610595575b501061055757604051936370a0823160e01b9384865233600487015260249587818881885afa80156103f45782905f90610526575b6101c79250101561238e565b6040516323b872dd60e01b81523360048201523060248201526044810182905287816064815f895af19081156103f4575f91610509575b50156104cf5760405163a9059cbb60e01b8082526001600160a01b03949094166004820152602481019190915286816044815f885af19081156103f4575f916104b2575b501561047c5760405163226bf2d160e21b81528782166004820152905f82878183885af19182156103f4575f92610458575b506040516319f92b0b60e21b8152945f86600481885afa9586156103f4575f96610434575b505f5b86518110156104325787898b6102b2848b6122c2565b5116604051928380928782523060048301525afa80156103f4575f906103ff575b6102ea91506102e283876122c2565b5111156124fb565b6102f481856122c2565b51865f5260018a5260405f208b61030b848b6122c2565b51165f528a5261032060405f2091825461243f565b90555f8961036b8c610332858c6122c2565b511661033e85896122c2565b516040518a81526001600160a01b0389166004820152602481019190915293849283919082906044820190565b03925af19081156103f4575f916103c7575b501561038b5760010161029c565b60405162461bcd60e51b8152600481018a90526015818a015274105cdcd95d081d1c985b9cd9995c8819985a5b1959605a1b6044820152606490fd5b6103e791508a3d8c116103ed575b6103df8183612136565b810190612497565b5f61037d565b503d6103d5565b6040513d5f823e3d90fd5b508981813d831161042b575b6104158183612136565b81010312610427576102ea90516102d3565b5f80fd5b503d61040b565b005b6104519196503d805f833e6104498183612136565b81019061220f565b945f610299565b6104759192503d805f833e61046d8183612136565b8101906124af565b905f610274565b60405162461bcd60e51b815260048101879052600f818701526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b6104c99150873d89116103ed576103df8183612136565b5f610242565b60405162461bcd60e51b81526004810188905260138188015272151c985b9cd9995c919c9bdb4819985a5b1959606a1b6044820152606490fd5b6105209150883d8a116103ed576103df8183612136565b5f6101fe565b50508781813d8311610550575b61053d8183612136565b8101031261042757816101c791516101bb565b503d610533565b60405162461bcd60e51b8152600481018690526016602482015275496e73756666696369656e7420616c6c6f77616e636560501b6044820152606490fd5b809250878092503d83116105bf575b6105ae8183612136565b81010312610427578390515f610186565b503d6105a4565b60405162461bcd60e51b815260206004820152601f60248201527f5368617265206d7573742062652067726561746572207468616e207a65726f006044820152606490fd5b34610427576020366003190112610427576104326106276120b9565b61062f6125b1565b612540565b34610427576060366003190112610427576004356001600160401b038111610427576106649036906004016121b4565b9061066d6120cf565b906106766120e5565b6040516319f92b0b60e21b815290926001600160a01b03908116915f81600481865afa9081156103f4575f916107e2575b505f5b81518110156107605780836106c05f93856122c2565b51166106cd828a896124d7565b35868452610727602092839260018452604087208288528452604087206106f5828254612432565b90556040516323b872dd60e01b8152336004820152306024820152604481019190915295869283919082906064820190565b03925af19283156103f457600193610742575b5050016106aa565b8161075892903d106103ed576103df8183612136565b50888061073a565b50506040805163de836ebd60e01b815294909116600485015260248401526044830184905283906001600160fb1b03821161042757835f606482602096819660051b80918484013781010301925af180156103f4576107bb57005b602090813d83116107db575b6107d18183612136565b8101031261042757005b503d6107c7565b6107f691503d805f833e6104498183612136565b866106a7565b34610427576080366003190112610427576001600160401b036004358181116104275761082d9036906004016121b4565b602492919235828111610427576108489036906004016121b4565b9390604435848111610427576108629036906004016121b4565b9190946064359081116104275761087d9036906004016121b4565b91909287861480610db6575b80610dad575b15610d685761089d86612290565b965f5b8781106108b957604051806108b58b826120fb565b0390f35b8060208b896109066108fa856108ff8f826108fa916108e96108e18f9d8f9e61093a9f6124d7565b35151561244c565b5f546001600160a01b0316976124d7565b6124e7565b948b6124d7565b604051632d5e94a760e01b81526001600160a01b039384166004820152921660248301529093849190829081906044820190565b03915afa9182156103f4578989915f94610d19575b5060249161096a6108fa8560209460018060a01b03946124d7565b16604051928380926370a0823160e01b82523360048301525afa9081156103f4575f91610ce7575b5061099e8286866124d7565b3511610cab575f9160206109fc6001600160a01b036109c16108fa868f8f6124d7565b166109cd8589896124d7565b6040516323b872dd60e01b81523360048201523060248201529035604482015295869283919082906064820190565b03925af180156103f4578487610ae18f6108fa8f8f8f9a8f918e610a946108fa8e610aa1998f60209f8f849b8599610a8e94610a49888c610a9a9f9682976108fa99610c8d575b506124d7565b6001600160a01b039182165f908152600160205260409020903591610a726108fa8787876124d7565b165f52602052610a8760405f20918254612432565b90556124d7565b9c6124d7565b996124d7565b359a6124d7565b604051631ba0488760e21b81526001600160a01b039384166004820152938316602485015260448401979097529516606482015293849081906084820190565b03815f6001600160a01b0386165af19283156103f4575f93610c59575b506001600160a01b039081165f90815260016020526040902090610b266108fa848f8a6124d7565b165f5260205260405f20610b3b83825461243f565b9055602460208c610b576108fa8560018060a01b03938b6124d7565b16604051928380926370a0823160e01b82523060048301525afa9081156103f4575f91610c27575b5082610b92610bee9460209310156124fb565b8c610ba86108fa8560018060a01b03938b6124d7565b16610bb76108fa858b8d6124d7565b60405163a9059cbb60e01b81526001600160a01b0390911660048201526024810192909252909384919082905f9082906044820190565b03925af19182156103f457600192610c08575b50016108a0565b610c209060203d6020116103ed576103df8183612136565b508b610c01565b90506020813d602011610c51575b81610c4260209383612136565b81010312610427575182610b7f565b3d9150610c35565b9092506020813d602011610c85575b81610c7560209383612136565b810103126104275751918c610afe565b3d9150610c68565b610ca49060203d81116103ed576103df8183612136565b505f610a43565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742042616c616e636560601b6044820152606490fd5b90506020813d602011610d11575b81610d0260209383612136565b8101031261042757518c610992565b3d9150610cf5565b935050506020823d602011610d60575b81610d3660209383612136565b8101031261042757602460208961096a6108fa85610d548f986121fb565b9794505050509161094f565b3d9150610d29565b60405162461bcd60e51b815260206004820152601c60248201527f496e70757420617272617973206c656e677468206d69736d61746368000000006044820152606490fd5b5082811461088f565b50808814610889565b3461042757602036600319011261042757610dd86120b9565b5f80516020612a5d8339815191529081549060ff8260401c1615916001600160401b03811680159081610ef6575b6001149081610eec575b159081610ee3575b50610ed15767ffffffffffffffff198116600117845582610eb2575b50610e3d6129ab565b610e456129ab565b610e4d6129ab565b610e5633612540565b60018060a01b03166bffffffffffffffffffffffff60a01b5f5416175f55610e7a57005b60ff60401b1981541690557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff19166801000000000000000117835583610e34565b60405163f92ee8a960e01b8152600490fd5b90501585610e18565b303b159150610e10565b849150610e06565b346104275760208060031936011261042757610f186120b9565b5f8054604051635a1a073560e11b81526001600160a01b03938416600482015292939291908290602490829087165afa9081156103f4575f91610f93575b5060405191808301818452825180915281604085019301915f5b828110610f7d5785850386f35b8351871685529381019392810192600101610f70565b610fa791503d805f833e6104498183612136565b83610f56565b3461042757604036600319011261042757610fc66120b9565b610fce6120cf565b604051630723c99960e01b81526001600160a01b0382811660048301529290919083165f8360248183855af19283156103f4575f93611120575b506040516319f92b0b60e21b8152915f83600481855afa9283156103f4575f93611104575b505f5b835181101561043257806110455f92876122c2565b5184835260209060018252604084208961105f858a6122c2565b51168552825261107460408520918254612432565b9055806110cb89611085858a6122c2565b5116611091858b6122c2565b516040516323b872dd60e01b81526001600160a01b0389166004820152306024820152604481019190915295869283919082906064820190565b03925af19283156103f4576001936110e6575b505001611030565b816110fc92903d106103ed576103df8183612136565b5087806110de565b6111199193503d805f833e6104498183612136565b918561102d565b6111359193503d805f833e61046d8183612136565b9184611008565b34610427575f36600319011261042757604051604081018181106001600160401b038211176111a9576040526005815260406020820191640352e302e360dc1b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b634e487b7160e01b5f52604160045260245ffd5b34610427576040366003190112610427576111d66120b9565b6111de6120cf565b9060018060a01b038091165f52600160205260405f2091165f52602052602060405f2054604051908152f35b34610427576040366003190112610427576112236120b9565b602435906001600160401b0391828116809103610427575f80516020612a5d8339815191528054938260ff8660401c169182156112d0575b5050610ed1577fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29360209360018060a01b03166bffffffffffffffffffffffff60a01b5f5416175f55680100000000000000008360ff60401b199268ffffffffffffffffff19161717169055604051908152a1005b861610159050828661125b565b34610427575f366003190112610427575f80516020612a3d833981519152546040516001600160a01b039091168152602090f35b346104275761133861132236612172565b939080939261133282151561244c565b836125f7565b918251156116bc576040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b0393602092909183816064815f898b165af180156103f45761169f575b5092945f925b8251841015611697578561139e85856122c2565b511696604051966319f92b0b60e21b88525f886004818c5afa9788156103f4575f9861167b575b506113db816113d488886122c2565b51166122ea565b975f985f5b825181101561166e57836113f482856122c2565b511684861614158061165b575b61140d576001016113e0565b90508299506114209198939497986122c2565b5116915b87831691821561161657604051630b2b55d760e41b815260048101849052602490888183818f5afa80156103f45783915f916115e5575b50106115925786515f1981019190821161157f57506114c45f9b89928b148d1461157957875b604051631ba0488760e21b81526001600160a01b038088166004830152808a1660248301526044820187905290911660648201529c8d9283919082906084820190565b03925af1998a156103f4575f9a611541575b50906001939291896114e88a896122c2565b51165f5284918289528a60405f2091165f52885261150b60405f20918254612432565b90558861151889886122c2565b51165f52865260405f20905f52855260405f2061153689825461243f565b90559694019261138a565b9392919099508684813d8311611572575b61155c8183612136565b81010312610427576001935199909192936114d6565b503d611552565b30611481565b634e487b7160e01b5f9081526011600452fd5b8760276084926040519262461bcd60e51b845260048401528201527f496e73756666696369656e74206c697175696469747920696e20706f6f6c206660448201526606f7220737761760cc1b6064820152fd5b8092508a8092503d831161160f575b6115fe8183612136565b81010312610427578290518d61145b565b503d6115f4565b60405162461bcd60e51b815260048101889052601960248201527f4e6f2076616c6964206e65787420746f6b656e20666f756e64000000000000006044820152606490fd5b5061166681836122c2565b511515611401565b5050509691949590611424565b6116909198503d805f833e6104498183612136565b96896113c5565b604051858152f35b6116b590843d86116103ed576103df8183612136565b5086611384565b60405162461bcd60e51b815260206004820152600e60248201526d139bc81c9bdd5d1948199bdd5b9960921b6044820152606490fd5b346104275760203660031901126104275761170b6120b9565b6117136125b1565b5f80546001600160a01b0319166001600160a01b0392909216919091179055005b34610427575f3660031901126104275761174c6125b1565b5f80516020612a3d83398151915280546001600160a01b031981169091555f906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610427576117a936612172565b92906117b681151561244c565b5f54604051632d5e94a760e01b81526001600160a01b03848116600483015285811660248301526020969290919087908290604490829086165afa80156103f45782915f916119a3575b506040516323b872dd60e01b8152336004820152306024820152604481018690529116948281169088836064815f865af19182156103f45789938993611986575b50875f526001845260405f20905f52835260405f20611861878254612432565b9055604051631ba0488760e21b81526001600160a01b039182166004820152918116602483015260448201959095529383166064850152836084815f885af19384156103f45786935f95611949575b509184959161191495935f526001855260405f20921691825f52845260405f206118db84825461243f565b905560405163a9059cbb60e01b81526001600160a01b0390911660048201526024810192909252909283919082905f9082906044820190565b03925af180156103f45761192c575b50604051908152f35b61194290833d85116103ed576103df8183612136565b5082611923565b848195929496509692963d831161197f575b6119658183612136565b8101031261042757915191939192859290916119146118b0565b503d61195b565b61199c90853d87116103ed576103df8183612136565b508a611841565b809250888092503d83116119d4575b6119bc8183612136565b81010312610427576119ce82916121fb565b88611800565b503d6119b2565b3461042757602080600319360112610427576001600160a01b0390816119ff6120b9565b166040516370a0823160e01b81523360048201528281602481855afa9081156103f4575f91611c18575b506040516318160ddd60e01b8152908382600481865afa9182156103f4575f92611be9575b5061271090818102918183041490151715611bd5578115611bc157611a789160649104101561238e565b604051631e8f68bd60e31b8152925f8460048183865af19283156103f4575f945f94611b65575b506040516319f92b0b60e21b8152915f83600481875afa9283156103f4575f93611b49575b505f5b83518110156104325780611add600192896122c2565b51865f52829081865260405f2085611af5858a6122c2565b51165f528652611b0a60405f20918254612432565b9055611b1682896122c2565b5190875f52855260405f2084611b2c84896122c2565b51165f528552611b4160405f2091825461243f565b905501611ac7565b611b5e9193503d805f833e6104498183612136565b9186611ac4565b945092503d805f863e611b788186612136565b840193604081860312610427578051946001600160401b03958681116104275781611ba49184016123d1565b958583015190811161042757611bba92016123d1565b9285611a9f565b634e487b7160e01b5f52601260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b9091508381813d8311611c11575b611c018183612136565b8101031261042757519085611a4e565b503d611bf7565b90508281813d8311611c3e575b611c2f8183612136565b81010312610427575184611a29565b503d611c25565b34610427575f366003190112610427577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003611caf5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b60405163703e46dd60e11b8152600490fd5b604036600319011261042757611cd56120b9565b60249081356001600160401b0381116104275736602382011215610427578060040135611d0181612157565b92611d0f6040519485612136565b818452602091828501933687838301011161042757815f92888693018737860101526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116308114908115611edd575b50611caf57611d746125b1565b8116936040516352d1902d60e01b81528381600481895afa5f9181611eae575b50611db157604051634c9c8ce360e01b8152600481018790528790fd5b8590877f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91828103611e995750843b15611e83575080546001600160a01b03191682179055604051907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2815115611e6857505f6104329481925190845af4903d15611e5f573d611e4381612157565b90611e516040519283612136565b81525f81943d92013e6129d9565b606092506129d9565b935050505034611e7457005b63b398979f60e01b8152600490fd5b604051634c9c8ce360e01b815260048101849052fd5b60405190632a87526960e21b82526004820152fd5b9091508481813d8311611ed6575b611ec68183612136565b8101031261042757519088611d94565b503d611ebc565b9050817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416141587611d67565b3461042757606036600319011261042757611f246120b9565b611f2c6120cf565b5f54604051632d5e94a760e01b81526001600160a01b0384811660048301528381166024830152602094919285908490604490829085165afa9081156103f45785935f92611ff6575b50604051632550332960e11b81526001600160a01b03938416600482015294909216602485015260448035908501528391829081606481015b0392165afa9081156103f4575f91611fc95750604051908152f35b90508181813d8311611fef575b611fe08183612136565b81010312610427575182611923565b503d611fd6565b8481959293503d831161202c575b61200e8183612136565b8101031261042757611fae9361202486946121fb565b919094611f75565b503d612004565b34610427575f366003190112610427575f546040516001600160a01b039091168152602090f35b34610427576020366003190112610427576108b561207e6120796120b9565b6122ea565b604051918291826120fb565b34610427575f366003190112610427576020906001600160401b035f80516020612a5d83398151915254168152f35b600435906001600160a01b038216820361042757565b602435906001600160a01b038216820361042757565b604435906001600160a01b038216820361042757565b60209060206040818301928281528551809452019301915f5b828110612122575050505090565b835185529381019392810192600101612114565b90601f801991011681019081106001600160401b038211176111a957604052565b6001600160401b0381116111a957601f01601f191660200190565b6080906003190112610427576001600160a01b039060043582811681036104275791602435818116810361042757916044359160643590811681036104275790565b9181601f84011215610427578235916001600160401b038311610427576020808501948460051b01011161042757565b6001600160401b0381116111a95760051b60200190565b51906001600160a01b038216820361042757565b6020908181840312610427578051906001600160401b03821161042757019180601f84011215610427578251612244816121e4565b936122526040519586612136565b818552838086019260051b820101928311610427578301905b828210612279575050505090565b838091612285846121fb565b81520191019061226b565b9061229a826121e4565b6122a76040519182612136565b82815280926122b8601f19916121e4565b0190602036910137565b80518210156122d65760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b604080516319f92b0b60e21b81529092916001600160a01b0390811691905f82600481865afa9182156103f4575f92612372575b506123298251612290565b925f5b835181101561236957600190825f526020828152885f20908561234f84896122c2565b51165f5252875f205461236282886122c2565b520161232c565b50929450505050565b6123879192503d805f833e6104498183612136565b905f61231e565b1561239557565b60405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b9080601f83011215610427578151906020916123ec816121e4565b936123fa6040519586612136565b81855260208086019260051b82010192831161042757602001905b828210612423575050505090565b81518152908301908301612415565b91908201809211611bd557565b91908203918211611bd557565b1561245357565b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b90816020910312610427575180151581036104275790565b906020828203126104275781516001600160401b038111610427576124d492016123d1565b90565b91908110156122d65760051b0190565b356001600160a01b03811681036104275790565b1561250257565b60405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74204c697175696469747960501b6044820152606490fd5b6001600160a01b03908116908115612599575f80516020612a3d83398151915280546001600160a01b031981168417909155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3565b604051631e4fbdf760e01b81525f6004820152602490fd5b5f80516020612a3d833981519152546001600160a01b031633036125d157565b60405163118cdaa760e01b8152336004820152602490fd5b5f198114611bd55760010190565b5f8054604051633623fc7d60e21b81526001600160a01b039290918290600490829086165afa9081156103f4575f9161282a575b5080519361263885612290565b915f93612644876121e4565b926126526040519485612136565b878452601f19612661896121e4565b0136602086013761267188612290565b965f6001918951156122d657841660208a01525b8181106126bd575050505050505050505050604051602081018181106001600160401b038211176111a9576040525f81525f36813790565b836126d16126ca836125e9565b928b6122c2565b511684841681146127e3575f5b8b81106126ec575050612685565b6126f681896122c2565b5115612705575b6001016126de565b8561271082896122c2565b516040516319f92b0b60e21b815291165f82600481845afa9081156103f4578f85935f936127c7575b50836127458185612844565b92836127b5575b50505061275b575b50506126fd565b9061276591612924565b86612770838a6122c2565b511661277b8c6125e9565b9b612786908c6122c2565b52868c612792876125e9565b9661279c916122c2565b911690526127aa81896122c2565b60019052815f612754565b6127bf9350612884565b8f835f61274c565b6127dc9193503d805f833e6104498183612136565b915f612739565b5050505094505050935091506127f882612290565b925f5b838110612809575050505090565b8083612817600193856122c2565b511661282382886122c2565b52016127fb565b61283e91503d805f833e6104498183612136565b5f61262b565b905f5b825181101561287d576001600160a01b038061286383866122c2565b51169083161461287557600101612847565b505050600190565b5050505f90565b600492916001600160a01b03918216915f61289e846122ea565b93604051968780926319f92b0b60e21b82525afa9485156103f4575f95612908575b505f5b85518110156128fe57816128d782886122c2565b5116828416146128e9576001016128c3565b929150506128f89293506122c2565b51101590565b5050505050505f90565b61291d9195503d805f833e6104498183612136565b935f6128c0565b905f5b8251811015612966576001600160a01b038061294383866122c2565b5116818416036129565750600101612927565b9261296192506122c2565b511690565b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e206e6f7420666f756e6420696e20706f6f6c0000000000000000006044820152606490fd5b60ff5f80516020612a5d8339815191525460401c16156129c757565b604051631afcd79f60e31b8152600490fd5b90612a0057508051156129ee57805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580612a33575b612a11575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15612a0956fe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212205ffb73940f338b632d35d1da94b61bffdcb09d112065edee0430b845d97e1d5e64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xD8E6E2C EQ PUSH2 0x208A JUMPI POP DUP1 PUSH4 0x3E99C1E4 EQ PUSH2 0x205A JUMPI DUP1 PUSH4 0x4056C37F EQ PUSH2 0x11BD JUMPI DUP1 PUSH4 0x4219DC40 EQ PUSH2 0x2033 JUMPI DUP1 PUSH4 0x4AA06652 EQ PUSH2 0x1F0B JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1CC1 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1C45 JUMPI DUP1 PUSH4 0x5568081A EQ PUSH2 0x19DB JUMPI DUP1 PUSH4 0x6E81221C EQ PUSH2 0x179B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1734 JUMPI DUP1 PUSH4 0x72591BE5 EQ PUSH2 0x16F2 JUMPI DUP1 PUSH4 0x7442ECA6 EQ PUSH2 0x1311 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12DD JUMPI DUP1 PUSH4 0x8F2248BC EQ PUSH2 0x120A JUMPI DUP1 PUSH4 0xA3E113FB EQ PUSH2 0x11BD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x113C JUMPI DUP1 PUSH4 0xAD414263 EQ PUSH2 0xFAD JUMPI DUP1 PUSH4 0xAE3CCE1C EQ PUSH2 0xEFE JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xDBF JUMPI DUP1 PUSH4 0xE74E9B06 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xEC0CD2EB EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x60B JUMPI PUSH4 0xF31ABCC4 EQ PUSH2 0x119 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x135 PUSH2 0x20CF JUMP JUMPDEST PUSH2 0x13D PUSH2 0x20E5 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP2 DUP2 DUP7 AND SWAP2 SWAP1 DUP6 DUP2 PUSH1 0x44 DUP2 DUP7 GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP5 SWAP2 PUSH0 SWAP2 PUSH2 0x595 JUMPI JUMPDEST POP LT PUSH2 0x557 JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH4 0x70A08231 PUSH1 0xE0 SHL SWAP4 DUP5 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 SWAP6 DUP8 DUP2 DUP9 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP3 SWAP1 PUSH0 SWAP1 PUSH2 0x526 JUMPI JUMPDEST PUSH2 0x1C7 SWAP3 POP LT ISZERO PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE DUP8 DUP2 PUSH1 0x64 DUP2 PUSH0 DUP10 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x509 JUMPI JUMPDEST POP ISZERO PUSH2 0x4CF JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP7 DUP2 PUSH1 0x44 DUP2 PUSH0 DUP9 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x4B2 JUMPI JUMPDEST POP ISZERO PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH4 0x226BF2D1 PUSH1 0xE2 SHL DUP2 MSTORE DUP8 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH0 DUP3 DUP8 DUP2 DUP4 DUP9 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP3 PUSH2 0x458 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP5 PUSH0 DUP7 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP7 PUSH2 0x434 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP7 MLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP8 DUP10 DUP12 PUSH2 0x2B2 DUP5 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 DUP8 DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP1 PUSH2 0x3FF JUMPI JUMPDEST PUSH2 0x2EA SWAP2 POP PUSH2 0x2E2 DUP4 DUP8 PUSH2 0x22C2 JUMP JUMPDEST MLOAD GT ISZERO PUSH2 0x24FB JUMP JUMPDEST PUSH2 0x2F4 DUP2 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD DUP7 PUSH0 MSTORE PUSH1 0x1 DUP11 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP12 PUSH2 0x30B DUP5 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP11 MSTORE PUSH2 0x320 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE PUSH0 DUP10 PUSH2 0x36B DUP13 PUSH2 0x332 DUP6 DUP13 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x33E DUP6 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD DUP11 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x3C7 JUMPI JUMPDEST POP ISZERO PUSH2 0x38B JUMPI PUSH1 0x1 ADD PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP11 ADD MSTORE PUSH21 0x105CDCD95D081D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3E7 SWAP2 POP DUP11 RETURNDATASIZE DUP13 GT PUSH2 0x3ED JUMPI JUMPDEST PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2497 JUMP JUMPDEST PUSH0 PUSH2 0x37D JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP10 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x42B JUMPI JUMPDEST PUSH2 0x415 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH2 0x2EA SWAP1 MLOAD PUSH2 0x2D3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x40B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x451 SWAP2 SWAP7 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x220F JUMP JUMPDEST SWAP5 PUSH0 PUSH2 0x299 JUMP JUMPDEST PUSH2 0x475 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x46D DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x24AF JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x274 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0xF DUP2 DUP8 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x4C9 SWAP2 POP DUP8 RETURNDATASIZE DUP10 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH2 0x242 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x13 DUP2 DUP9 ADD MSTORE PUSH19 0x151C985B9CD9995C919C9BDB4819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x520 SWAP2 POP DUP9 RETURNDATASIZE DUP11 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH2 0x1FE JUMP JUMPDEST POP POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x550 JUMPI JUMPDEST PUSH2 0x53D DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI DUP2 PUSH2 0x1C7 SWAP2 MLOAD PUSH2 0x1BB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x533 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E7420616C6C6F77616E6365 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP8 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x5BF JUMPI JUMPDEST PUSH2 0x5AE DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI DUP4 SWAP1 MLOAD PUSH0 PUSH2 0x186 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368617265206D7573742062652067726561746572207468616E207A65726F00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x432 PUSH2 0x627 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x62F PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x2540 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x664 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP1 PUSH2 0x66D PUSH2 0x20CF JUMP JUMPDEST SWAP1 PUSH2 0x676 PUSH2 0x20E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 PUSH0 DUP2 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x7E2 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x760 JUMPI DUP1 DUP4 PUSH2 0x6C0 PUSH0 SWAP4 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x6CD DUP3 DUP11 DUP10 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD DUP7 DUP5 MSTORE PUSH2 0x727 PUSH1 0x20 SWAP3 DUP4 SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 DUP3 DUP9 MSTORE DUP5 MSTORE PUSH1 0x40 DUP8 KECCAK256 PUSH2 0x6F5 DUP3 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x742 JUMPI JUMPDEST POP POP ADD PUSH2 0x6AA JUMP JUMPDEST DUP2 PUSH2 0x758 SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP9 DUP1 PUSH2 0x73A JUMP JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH4 0xDE836EBD PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 SWAP1 SWAP2 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD DUP5 SWAP1 MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP3 GT PUSH2 0x427 JUMPI DUP4 PUSH0 PUSH1 0x64 DUP3 PUSH1 0x20 SWAP7 DUP2 SWAP7 PUSH1 0x5 SHL DUP1 SWAP2 DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD SUB ADD SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x7BB JUMPI STOP JUMPDEST PUSH1 0x20 SWAP1 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x7DB JUMPI JUMPDEST PUSH2 0x7D1 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x7F6 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP7 PUSH2 0x6A7 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x82D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST PUSH1 0x24 SWAP3 SWAP2 SWAP3 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x848 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP4 SWAP1 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x862 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x87D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x21B4 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 DUP8 DUP7 EQ DUP1 PUSH2 0xDB6 JUMPI JUMPDEST DUP1 PUSH2 0xDAD JUMPI JUMPDEST ISZERO PUSH2 0xD68 JUMPI PUSH2 0x89D DUP7 PUSH2 0x2290 JUMP JUMPDEST SWAP7 PUSH0 JUMPDEST DUP8 DUP2 LT PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x8B5 DUP12 DUP3 PUSH2 0x20FB JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x20 DUP12 DUP10 PUSH2 0x906 PUSH2 0x8FA DUP6 PUSH2 0x8FF DUP16 DUP3 PUSH2 0x8FA SWAP2 PUSH2 0x8E9 PUSH2 0x8E1 DUP16 SWAP14 DUP16 SWAP15 PUSH2 0x93A SWAP16 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD ISZERO ISZERO PUSH2 0x244C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP8 PUSH2 0x24D7 JUMP JUMPDEST PUSH2 0x24E7 JUMP JUMPDEST SWAP5 DUP12 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2D5E94A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP4 DUP5 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI DUP10 DUP10 SWAP2 PUSH0 SWAP5 PUSH2 0xD19 JUMPI JUMPDEST POP PUSH1 0x24 SWAP2 PUSH2 0x96A PUSH2 0x8FA DUP6 PUSH1 0x20 SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP5 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0xCE7 JUMPI JUMPDEST POP PUSH2 0x99E DUP3 DUP7 DUP7 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD GT PUSH2 0xCAB JUMPI PUSH0 SWAP2 PUSH1 0x20 PUSH2 0x9FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9C1 PUSH2 0x8FA DUP7 DUP16 DUP16 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH2 0x9CD DUP6 DUP10 DUP10 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP5 DUP8 PUSH2 0xAE1 DUP16 PUSH2 0x8FA DUP16 DUP16 DUP16 SWAP11 DUP16 SWAP2 DUP15 PUSH2 0xA94 PUSH2 0x8FA DUP15 PUSH2 0xAA1 SWAP10 DUP16 PUSH1 0x20 SWAP16 DUP16 DUP5 SWAP12 DUP6 SWAP10 PUSH2 0xA8E SWAP5 PUSH2 0xA49 DUP9 DUP13 PUSH2 0xA9A SWAP16 SWAP7 DUP3 SWAP8 PUSH2 0x8FA SWAP10 PUSH2 0xC8D JUMPI JUMPDEST POP PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 CALLDATALOAD SWAP2 PUSH2 0xA72 PUSH2 0x8FA DUP8 DUP8 DUP8 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH2 0xA87 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x24D7 JUMP JUMPDEST SWAP13 PUSH2 0x24D7 JUMP JUMPDEST SWAP10 PUSH2 0x24D7 JUMP JUMPDEST CALLDATALOAD SWAP11 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BA04887 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP4 DUP4 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP4 DUP5 SWAP1 DUP2 SWAP1 PUSH1 0x84 DUP3 ADD SWAP1 JUMP JUMPDEST SUB DUP2 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0xC59 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 PUSH2 0xB26 PUSH2 0x8FA DUP5 DUP16 DUP11 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0xB3B DUP4 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x24 PUSH1 0x20 DUP13 PUSH2 0xB57 PUSH2 0x8FA DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP12 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP3 MSTORE ADDRESS PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0xC27 JUMPI JUMPDEST POP DUP3 PUSH2 0xB92 PUSH2 0xBEE SWAP5 PUSH1 0x20 SWAP4 LT ISZERO PUSH2 0x24FB JUMP JUMPDEST DUP13 PUSH2 0xBA8 PUSH2 0x8FA DUP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP12 PUSH2 0x24D7 JUMP JUMPDEST AND PUSH2 0xBB7 PUSH2 0x8FA DUP6 DUP12 DUP14 PUSH2 0x24D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP4 DUP5 SWAP2 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x1 SWAP3 PUSH2 0xC08 JUMPI JUMPDEST POP ADD PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0xC20 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP12 PUSH2 0xC01 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC51 JUMPI JUMPDEST DUP2 PUSH2 0xC42 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP3 PUSH2 0xB7F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC35 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC85 JUMPI JUMPDEST DUP2 PUSH2 0xC75 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD SWAP2 DUP13 PUSH2 0xAFE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xCA4 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP PUSH0 PUSH2 0xA43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742042616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD11 JUMPI JUMPDEST DUP2 PUSH2 0xD02 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP13 PUSH2 0x992 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCF5 JUMP JUMPDEST SWAP4 POP POP POP PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD60 JUMPI JUMPDEST DUP2 PUSH2 0xD36 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH1 0x24 PUSH1 0x20 DUP10 PUSH2 0x96A PUSH2 0x8FA DUP6 PUSH2 0xD54 DUP16 SWAP9 PUSH2 0x21FB JUMP JUMPDEST SWAP8 SWAP5 POP POP POP POP SWAP2 PUSH2 0x94F JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD29 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP3 DUP2 EQ PUSH2 0x88F JUMP JUMPDEST POP DUP1 DUP9 EQ PUSH2 0x889 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0xDD8 PUSH2 0x20B9 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP2 SLOAD SWAP1 PUSH1 0xFF DUP3 PUSH1 0x40 SHR AND ISZERO SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0xEF6 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0xEEC JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xEE3 JUMPI JUMPDEST POP PUSH2 0xED1 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR DUP5 SSTORE DUP3 PUSH2 0xEB2 JUMPI JUMPDEST POP PUSH2 0xE3D PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x29AB JUMP JUMPDEST PUSH2 0xE56 CALLER PUSH2 0x2540 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH2 0xE7A JUMPI STOP JUMPDEST PUSH1 0xFF PUSH1 0x40 SHL NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR DUP4 SSTORE DUP4 PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 POP ISZERO DUP6 PUSH2 0xE18 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0xE10 JUMP JUMPDEST DUP5 SWAP2 POP PUSH2 0xE06 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH2 0xF18 PUSH2 0x20B9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5A1A0735 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 DUP8 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0xF93 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF7D JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST DUP4 MLOAD DUP8 AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xF70 JUMP JUMPDEST PUSH2 0xFA7 SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP4 PUSH2 0xF56 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0xFC6 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xFCE PUSH2 0x20CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x723C999 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP1 SWAP2 SWAP1 DUP4 AND PUSH0 DUP4 PUSH1 0x24 DUP2 DUP4 DUP6 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0x1120 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 PUSH0 DUP4 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0x1104 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP1 PUSH2 0x1045 PUSH0 SWAP3 DUP8 PUSH2 0x22C2 JUMP JUMPDEST MLOAD DUP5 DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP10 PUSH2 0x105F DUP6 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP6 MSTORE DUP3 MSTORE PUSH2 0x1074 PUSH1 0x40 DUP6 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE DUP1 PUSH2 0x10CB DUP10 PUSH2 0x1085 DUP6 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x1091 DUP6 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP6 DUP7 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x64 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x1 SWAP4 PUSH2 0x10E6 JUMPI JUMPDEST POP POP ADD PUSH2 0x1030 JUMP JUMPDEST DUP2 PUSH2 0x10FC SWAP3 SWAP1 RETURNDATASIZE LT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP8 DUP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x1119 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP6 PUSH2 0x102D JUMP JUMPDEST PUSH2 0x1135 SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x46D DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP5 PUSH2 0x1008 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x11A9 JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD SWAP2 PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP4 MSTORE DUP2 MLOAD SWAP3 DUP4 SWAP2 PUSH1 0x20 DUP4 MSTORE MLOAD DUP1 SWAP2 DUP2 PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x11D6 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x11DE PUSH2 0x20CF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND PUSH0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x1223 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 DUP3 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x427 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD SWAP4 DUP3 PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND SWAP2 DUP3 ISZERO PUSH2 0x12D0 JUMPI JUMPDEST POP POP PUSH2 0xED1 JUMPI PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH0 SLOAD AND OR PUSH0 SSTORE PUSH9 0x10000000000000000 DUP4 PUSH1 0xFF PUSH1 0x40 SHL NOT SWAP3 PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND OR OR AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST DUP7 AND LT ISZERO SWAP1 POP DUP3 DUP7 PUSH2 0x125B JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH2 0x1338 PUSH2 0x1322 CALLDATASIZE PUSH2 0x2172 JUMP JUMPDEST SWAP4 SWAP1 DUP1 SWAP4 SWAP3 PUSH2 0x1332 DUP3 ISZERO ISZERO PUSH2 0x244C JUMP JUMPDEST DUP4 PUSH2 0x25F7 JUMP JUMPDEST SWAP2 DUP3 MLOAD ISZERO PUSH2 0x16BC JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 PUSH1 0x20 SWAP3 SWAP1 SWAP2 DUP4 DUP2 PUSH1 0x64 DUP2 PUSH0 DUP10 DUP12 AND GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x169F JUMPI JUMPDEST POP SWAP3 SWAP5 PUSH0 SWAP3 JUMPDEST DUP3 MLOAD DUP5 LT ISZERO PUSH2 0x1697 JUMPI DUP6 PUSH2 0x139E DUP6 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP7 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP9 MSTORE PUSH0 DUP9 PUSH1 0x4 DUP2 DUP13 GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP9 PUSH2 0x167B JUMPI JUMPDEST POP PUSH2 0x13DB DUP2 PUSH2 0x13D4 DUP9 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x22EA JUMP JUMPDEST SWAP8 PUSH0 SWAP9 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x166E JUMPI DUP4 PUSH2 0x13F4 DUP3 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP5 DUP7 AND EQ ISZERO DUP1 PUSH2 0x165B JUMPI JUMPDEST PUSH2 0x140D JUMPI PUSH1 0x1 ADD PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP DUP3 SWAP10 POP PUSH2 0x1420 SWAP2 SWAP9 SWAP4 SWAP5 SWAP8 SWAP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP2 JUMPDEST DUP8 DUP4 AND SWAP2 DUP3 ISZERO PUSH2 0x1616 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB2B55D7 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 DUP9 DUP2 DUP4 DUP2 DUP16 GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP4 SWAP2 PUSH0 SWAP2 PUSH2 0x15E5 JUMPI JUMPDEST POP LT PUSH2 0x1592 JUMPI DUP7 MLOAD PUSH0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x157F JUMPI POP PUSH2 0x14C4 PUSH0 SWAP12 DUP10 SWAP3 DUP12 EQ DUP14 EQ PUSH2 0x1579 JUMPI DUP8 JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1BA04887 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP11 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND PUSH1 0x64 DUP3 ADD MSTORE SWAP13 DUP14 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x84 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP10 DUP11 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP11 PUSH2 0x1541 JUMPI JUMPDEST POP SWAP1 PUSH1 0x1 SWAP4 SWAP3 SWAP2 DUP10 PUSH2 0x14E8 DUP11 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP5 SWAP2 DUP3 DUP10 MSTORE DUP11 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 AND PUSH0 MSTORE DUP9 MSTORE PUSH2 0x150B PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE DUP9 PUSH2 0x1518 DUP10 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1536 DUP10 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE SWAP7 SWAP5 ADD SWAP3 PUSH2 0x138A JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP10 POP DUP7 DUP5 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1572 JUMPI JUMPDEST PUSH2 0x155C DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH1 0x1 SWAP4 MLOAD SWAP10 SWAP1 SWAP2 SWAP3 SWAP4 PUSH2 0x14D6 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1552 JUMP JUMPDEST ADDRESS PUSH2 0x1481 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP8 PUSH1 0x27 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74206C697175696469747920696E20706F6F6C2066 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x6F72207377617 PUSH1 0xCC SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 SWAP3 POP DUP11 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x160F JUMPI JUMPDEST PUSH2 0x15FE DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI DUP3 SWAP1 MLOAD DUP14 PUSH2 0x145B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F2076616C6964206E65787420746F6B656E20666F756E6400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH2 0x1666 DUP2 DUP4 PUSH2 0x22C2 JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH2 0x1401 JUMP JUMPDEST POP POP POP SWAP7 SWAP2 SWAP5 SWAP6 SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH2 0x1690 SWAP2 SWAP9 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP7 DUP10 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x16B5 SWAP1 DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP7 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81C9BDD5D1948199BDD5B99 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x170B PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x1713 PUSH2 0x25B1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x174C PUSH2 0x25B1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH2 0x17A9 CALLDATASIZE PUSH2 0x2172 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x17B6 DUP2 ISZERO ISZERO PUSH2 0x244C JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2D5E94A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP7 SWAP3 SWAP1 SWAP2 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL DUP1 ISZERO PUSH2 0x3F4 JUMPI DUP3 SWAP2 PUSH0 SWAP2 PUSH2 0x19A3 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 AND SWAP5 DUP3 DUP2 AND SWAP1 DUP9 DUP4 PUSH1 0x64 DUP2 PUSH0 DUP7 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI DUP10 SWAP4 DUP10 SWAP4 PUSH2 0x1986 JUMPI JUMPDEST POP DUP8 PUSH0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH0 MSTORE DUP4 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x1861 DUP8 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0x1BA04887 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP4 AND PUSH1 0x64 DUP6 ADD MSTORE DUP4 PUSH1 0x84 DUP2 PUSH0 DUP9 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x3F4 JUMPI DUP7 SWAP4 PUSH0 SWAP6 PUSH2 0x1949 JUMPI JUMPDEST POP SWAP2 DUP5 SWAP6 SWAP2 PUSH2 0x1914 SWAP6 SWAP4 PUSH0 MSTORE PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH2 0x18DB DUP5 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH0 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x3F4 JUMPI PUSH2 0x192C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1942 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP3 PUSH2 0x1923 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP5 SWAP7 POP SWAP7 SWAP3 SWAP7 RETURNDATASIZE DUP4 GT PUSH2 0x197F JUMPI JUMPDEST PUSH2 0x1965 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI SWAP2 MLOAD SWAP2 SWAP4 SWAP2 SWAP3 DUP6 SWAP3 SWAP1 SWAP2 PUSH2 0x1914 PUSH2 0x18B0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x195B JUMP JUMPDEST PUSH2 0x199C SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x3ED JUMPI PUSH2 0x3DF DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST POP DUP11 PUSH2 0x1841 JUMP JUMPDEST DUP1 SWAP3 POP DUP9 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x19D4 JUMPI JUMPDEST PUSH2 0x19BC DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH2 0x19CE DUP3 SWAP2 PUSH2 0x21FB JUMP JUMPDEST DUP9 PUSH2 0x1800 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x19B2 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x19FF PUSH2 0x20B9 JUMP JUMPDEST AND PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x1C18 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP4 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP3 PUSH2 0x1BE9 JUMPI JUMPDEST POP PUSH2 0x2710 SWAP1 DUP2 DUP2 MUL SWAP2 DUP2 DUP4 DIV EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1BD5 JUMPI DUP2 ISZERO PUSH2 0x1BC1 JUMPI PUSH2 0x1A78 SWAP2 PUSH1 0x64 SWAP2 DIV LT ISZERO PUSH2 0x238E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E8F68BD PUSH1 0xE3 SHL DUP2 MSTORE SWAP3 PUSH0 DUP5 PUSH1 0x4 DUP2 DUP4 DUP7 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP5 PUSH0 SWAP5 PUSH2 0x1B65 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 PUSH0 DUP4 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP4 PUSH2 0x1B49 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP1 PUSH2 0x1ADD PUSH1 0x1 SWAP3 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD DUP7 PUSH0 MSTORE DUP3 SWAP1 DUP2 DUP7 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP6 PUSH2 0x1AF5 DUP6 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP7 MSTORE PUSH2 0x1B0A PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x2432 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1B16 DUP3 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD SWAP1 DUP8 PUSH0 MSTORE DUP6 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP5 PUSH2 0x1B2C DUP5 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE DUP6 MSTORE PUSH2 0x1B41 PUSH1 0x40 PUSH0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x243F JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x1AC7 JUMP JUMPDEST PUSH2 0x1B5E SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 DUP7 PUSH2 0x1AC4 JUMP JUMPDEST SWAP5 POP SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP7 RETURNDATACOPY PUSH2 0x1B78 DUP2 DUP7 PUSH2 0x2136 JUMP JUMPDEST DUP5 ADD SWAP4 PUSH1 0x40 DUP2 DUP7 SUB SLT PUSH2 0x427 JUMPI DUP1 MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP6 DUP7 DUP2 GT PUSH2 0x427 JUMPI DUP2 PUSH2 0x1BA4 SWAP2 DUP5 ADD PUSH2 0x23D1 JUMP JUMPDEST SWAP6 DUP6 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x1BBA SWAP3 ADD PUSH2 0x23D1 JUMP JUMPDEST SWAP3 DUP6 PUSH2 0x1A9F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 SWAP2 POP DUP4 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C11 JUMPI JUMPDEST PUSH2 0x1C01 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD SWAP1 DUP6 PUSH2 0x1A4E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1C3E JUMPI JUMPDEST PUSH2 0x1C2F DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP5 PUSH2 0x1A29 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C25 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS SUB PUSH2 0x1CAF JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x1CD5 PUSH2 0x20B9 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x427 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1D01 DUP2 PUSH2 0x2157 JUMP JUMPDEST SWAP3 PUSH2 0x1D0F PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2136 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP6 ADD SWAP4 CALLDATASIZE DUP8 DUP4 DUP4 ADD ADD GT PUSH2 0x427 JUMPI DUP2 PUSH0 SWAP3 DUP9 DUP7 SWAP4 ADD DUP8 CALLDATACOPY DUP7 ADD ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND ADDRESS DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1EDD JUMPI JUMPDEST POP PUSH2 0x1CAF JUMPI PUSH2 0x1D74 PUSH2 0x25B1 JUMP JUMPDEST DUP2 AND SWAP4 PUSH1 0x40 MLOAD PUSH4 0x52D1902D PUSH1 0xE0 SHL DUP2 MSTORE DUP4 DUP2 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL PUSH0 SWAP2 DUP2 PUSH2 0x1EAE JUMPI JUMPDEST POP PUSH2 0x1DB1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE DUP8 SWAP1 REVERT JUMPDEST DUP6 SWAP1 DUP8 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP2 DUP3 DUP2 SUB PUSH2 0x1E99 JUMPI POP DUP5 EXTCODESIZE ISZERO PUSH2 0x1E83 JUMPI POP DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x1E68 JUMPI POP PUSH0 PUSH2 0x432 SWAP5 DUP2 SWAP3 MLOAD SWAP1 DUP5 GAS DELEGATECALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x1E5F JUMPI RETURNDATASIZE PUSH2 0x1E43 DUP2 PUSH2 0x2157 JUMP JUMPDEST SWAP1 PUSH2 0x1E51 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 MSTORE PUSH0 DUP2 SWAP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY PUSH2 0x29D9 JUMP JUMPDEST PUSH1 0x60 SWAP3 POP PUSH2 0x29D9 JUMP JUMPDEST SWAP4 POP POP POP POP CALLVALUE PUSH2 0x1E74 JUMPI STOP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1ED6 JUMPI JUMPDEST PUSH2 0x1EC6 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD SWAP1 DUP9 PUSH2 0x1D94 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1EBC JUMP JUMPDEST SWAP1 POP DUP2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND EQ ISZERO DUP8 PUSH2 0x1D67 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x1F24 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x1F2C PUSH2 0x20CF JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2D5E94A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP5 SWAP2 SWAP3 DUP6 SWAP1 DUP5 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP6 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI DUP6 SWAP4 PUSH0 SWAP3 PUSH2 0x1FF6 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x25503329 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP5 SWAP1 SWAP3 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP1 CALLDATALOAD SWAP1 DUP6 ADD MSTORE DUP4 SWAP2 DUP3 SWAP1 DUP2 PUSH1 0x64 DUP2 ADD JUMPDEST SUB SWAP3 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x1FC9 JUMPI POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1FEF JUMPI JUMPDEST PUSH2 0x1FE0 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI MLOAD DUP3 PUSH2 0x1923 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1FD6 JUMP JUMPDEST DUP5 DUP2 SWAP6 SWAP3 SWAP4 POP RETURNDATASIZE DUP4 GT PUSH2 0x202C JUMPI JUMPDEST PUSH2 0x200E DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x427 JUMPI PUSH2 0x1FAE SWAP4 PUSH2 0x2024 DUP7 SWAP5 PUSH2 0x21FB JUMP JUMPDEST SWAP2 SWAP1 SWAP5 PUSH2 0x1F75 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2004 JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH2 0x8B5 PUSH2 0x207E PUSH2 0x2079 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0x22EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x20FB JUMP JUMPDEST CALLVALUE PUSH2 0x427 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2122 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2114 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x11A9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A9 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x427 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A9 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x427 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 DUP2 DUP5 SUB SLT PUSH2 0x427 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x427 JUMPI ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP3 MLOAD PUSH2 0x2244 DUP2 PUSH2 0x21E4 JUMP JUMPDEST SWAP4 PUSH2 0x2252 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2136 JUMP JUMPDEST DUP2 DUP6 MSTORE DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x427 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2279 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 DUP1 SWAP2 PUSH2 0x2285 DUP5 PUSH2 0x21FB JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x226B JUMP JUMPDEST SWAP1 PUSH2 0x229A DUP3 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x22A7 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x2136 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x22B8 PUSH1 0x1F NOT SWAP2 PUSH2 0x21E4 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x22D6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 PUSH0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP3 PUSH2 0x2372 JUMPI JUMPDEST POP PUSH2 0x2329 DUP3 MLOAD PUSH2 0x2290 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2369 JUMPI PUSH1 0x1 SWAP1 DUP3 PUSH0 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE DUP9 PUSH0 KECCAK256 SWAP1 DUP6 PUSH2 0x234F DUP5 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH0 MSTORE MSTORE DUP8 PUSH0 KECCAK256 SLOAD PUSH2 0x2362 DUP3 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MSTORE ADD PUSH2 0x232C JUMP JUMPDEST POP SWAP3 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH2 0x2387 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP1 PUSH0 PUSH2 0x231E JUMP JUMPDEST ISZERO PUSH2 0x2395 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x427 JUMPI DUP2 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x23EC DUP2 PUSH2 0x21E4 JUMP JUMPDEST SWAP4 PUSH2 0x23FA PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2136 JUMP JUMPDEST DUP2 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x427 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2423 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x2415 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1BD5 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1BD5 JUMPI JUMP JUMPDEST ISZERO PUSH2 0x2453 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x427 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x427 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x427 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x427 JUMPI PUSH2 0x24D4 SWAP3 ADD PUSH2 0x23D1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x22D6 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x427 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2502 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74204C6971756964697479 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2599 JUMPI PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP5 OR SWAP1 SWAP2 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A3D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x25D1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x1BD5 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x3623FC7D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP2 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 DUP7 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP2 PUSH2 0x282A JUMPI JUMPDEST POP DUP1 MLOAD SWAP4 PUSH2 0x2638 DUP6 PUSH2 0x2290 JUMP JUMPDEST SWAP2 PUSH0 SWAP4 PUSH2 0x2644 DUP8 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 PUSH2 0x2652 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2136 JUMP JUMPDEST DUP8 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0x2661 DUP10 PUSH2 0x21E4 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH2 0x2671 DUP9 PUSH2 0x2290 JUMP JUMPDEST SWAP7 PUSH0 PUSH1 0x1 SWAP2 DUP10 MLOAD ISZERO PUSH2 0x22D6 JUMPI DUP5 AND PUSH1 0x20 DUP11 ADD MSTORE JUMPDEST DUP2 DUP2 LT PUSH2 0x26BD JUMPI POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x11A9 JUMPI PUSH1 0x40 MSTORE PUSH0 DUP2 MSTORE PUSH0 CALLDATASIZE DUP2 CALLDATACOPY SWAP1 JUMP JUMPDEST DUP4 PUSH2 0x26D1 PUSH2 0x26CA DUP4 PUSH2 0x25E9 JUMP JUMPDEST SWAP3 DUP12 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP5 DUP5 AND DUP2 EQ PUSH2 0x27E3 JUMPI PUSH0 JUMPDEST DUP12 DUP2 LT PUSH2 0x26EC JUMPI POP POP PUSH2 0x2685 JUMP JUMPDEST PUSH2 0x26F6 DUP2 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD ISZERO PUSH2 0x2705 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x26DE JUMP JUMPDEST DUP6 PUSH2 0x2710 DUP3 DUP10 PUSH2 0x22C2 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 AND PUSH0 DUP3 PUSH1 0x4 DUP2 DUP5 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI DUP16 DUP6 SWAP4 PUSH0 SWAP4 PUSH2 0x27C7 JUMPI JUMPDEST POP DUP4 PUSH2 0x2745 DUP2 DUP6 PUSH2 0x2844 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x27B5 JUMPI JUMPDEST POP POP POP PUSH2 0x275B JUMPI JUMPDEST POP POP PUSH2 0x26FD JUMP JUMPDEST SWAP1 PUSH2 0x2765 SWAP2 PUSH2 0x2924 JUMP JUMPDEST DUP7 PUSH2 0x2770 DUP4 DUP11 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x277B DUP13 PUSH2 0x25E9 JUMP JUMPDEST SWAP12 PUSH2 0x2786 SWAP1 DUP13 PUSH2 0x22C2 JUMP JUMPDEST MSTORE DUP7 DUP13 PUSH2 0x2792 DUP8 PUSH2 0x25E9 JUMP JUMPDEST SWAP7 PUSH2 0x279C SWAP2 PUSH2 0x22C2 JUMP JUMPDEST SWAP2 AND SWAP1 MSTORE PUSH2 0x27AA DUP2 DUP10 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x1 SWAP1 MSTORE DUP2 PUSH0 PUSH2 0x2754 JUMP JUMPDEST PUSH2 0x27BF SWAP4 POP PUSH2 0x2884 JUMP JUMPDEST DUP16 DUP4 PUSH0 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x27DC SWAP2 SWAP4 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP2 PUSH0 PUSH2 0x2739 JUMP JUMPDEST POP POP POP POP SWAP5 POP POP POP SWAP4 POP SWAP2 POP PUSH2 0x27F8 DUP3 PUSH2 0x2290 JUMP JUMPDEST SWAP3 PUSH0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2809 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP1 DUP4 PUSH2 0x2817 PUSH1 0x1 SWAP4 DUP6 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND PUSH2 0x2823 DUP3 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MSTORE ADD PUSH2 0x27FB JUMP JUMPDEST PUSH2 0x283E SWAP2 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST PUSH0 PUSH2 0x262B JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x287D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x2863 DUP4 DUP7 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP1 DUP4 AND EQ PUSH2 0x2875 JUMPI PUSH1 0x1 ADD PUSH2 0x2847 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x4 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH0 PUSH2 0x289E DUP5 PUSH2 0x22EA JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP1 SWAP3 PUSH4 0x19F92B0B PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP5 DUP6 ISZERO PUSH2 0x3F4 JUMPI PUSH0 SWAP6 PUSH2 0x2908 JUMPI JUMPDEST POP PUSH0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x28FE JUMPI DUP2 PUSH2 0x28D7 DUP3 DUP9 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP3 DUP5 AND EQ PUSH2 0x28E9 JUMPI PUSH1 0x1 ADD PUSH2 0x28C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP PUSH2 0x28F8 SWAP3 SWAP4 POP PUSH2 0x22C2 JUMP JUMPDEST MLOAD LT ISZERO SWAP1 JUMP JUMPDEST POP POP POP POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x291D SWAP2 SWAP6 POP RETURNDATASIZE DUP1 PUSH0 DUP4 RETURNDATACOPY PUSH2 0x449 DUP2 DUP4 PUSH2 0x2136 JUMP JUMPDEST SWAP4 PUSH0 PUSH2 0x28C0 JUMP JUMPDEST SWAP1 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2966 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x2943 DUP4 DUP7 PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND DUP2 DUP5 AND SUB PUSH2 0x2956 JUMPI POP PUSH1 0x1 ADD PUSH2 0x2927 JUMP JUMPDEST SWAP3 PUSH2 0x2961 SWAP3 POP PUSH2 0x22C2 JUMP JUMPDEST MLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F7420666F756E6420696E20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x29C7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x2A00 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x29EE JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2A33 JUMPI JUMPDEST PUSH2 0x2A11 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2A09 JUMP INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212205FFB73 SWAP5 0xF CALLER DUP12 PUSH4 0x2D35D1DA SWAP5 0xB6 SHL SELFDESTRUCT 0xDC 0xB0 SWAP14 GT KECCAK256 PUSH6 0xEDEE0430B845 0xD9 PUSH31 0x1D5E64736F6C63430008190033000000000000000000000000000000000000 ","sourceMap":"2066:14642:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3925:47;2066:14642;3925:47;;;2066:14642;;;;;;;;;;7258:65;2066:14642;7258:65;;;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;;;;;:::i;:::-;;;:::i;:::-;12446:9;;2066:14642;;;;-1:-1:-1;;;12601:46:14;;12621:10;2066:14642;12601:46;;2066:14642;12641:4;2066:14642;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;12601:46;;;;;;;;2066:14642;12601:46;;;2066:14642;12666:18;;2066:14642;;;;;;;;12768:31;;;;12621:10;2066:14642;12768:31;;2066:14642;;12768:31;;;;;;;;;;;;;;2066:14642;12768:31;;;2066:14642;12810:49;12818:16;;;;12810:49;:::i;:::-;2066:14642;;-1:-1:-1;;;12887:56:14;;12621:10;2066:14642;12887:56;;2066:14642;12641:4;2066:14642;;;;;;;;;;12641:4;2066:14642;;;-1:-1:-1;12887:56:14;;;;;;;;2066:14642;12887:56;;;2066:14642;;;;;;;-1:-1:-1;;;13022:38:14;;;-1:-1:-1;;;;;2066:14642:14;;;;;13022:38;;2066:14642;;;;;;;;;;;;-1:-1:-1;13022:38:14;;;;;;;;2066:14642;13022:38;;;2066:14642;;;;;;;-1:-1:-1;;;13150:41:14;;2066:14642;;;;13150:41;;2066:14642;;-1:-1:-1;2066:14642:14;13150:41;2066:14642;-1:-1:-1;13150:41:14;;;;;;;;2066:14642;13150:41;;;2066:14642;-1:-1:-1;2066:14642:14;;-1:-1:-1;;;13230:38:14;;2066:14642;;;;;13230:38;;;;;;;;2066:14642;13230:38;;;2066:14642;13286:13;2066:14642;13320:3;2066:14642;;13301:17;;;;;13355:9;;;;;;;:::i;:::-;2066:14642;;;;13348:42;;;;;;;12641:4;2066:14642;13348:42;;2066:14642;13348:42;;;;;;2066:14642;13348:42;;;13320:3;13340:94;13394:13;;;;;;:::i;:::-;2066:14642;-1:-1:-1;13348:59:14;13340:94;:::i;:::-;13490:13;;;;:::i;:::-;2066:14642;;;;;;;;;;13476:9;;;;;:::i;:::-;2066:14642;;;;;;13449:54;2066:14642;;;;;;13449:54;:::i;:::-;2066:14642;;;13553:9;13546:51;13553:9;;;;;:::i;:::-;2066:14642;;13583:13;;;;:::i;:::-;2066:14642;;;13546:51;;;-1:-1:-1;;;;;2066:14642:14;;;13546:51;;2066:14642;;;;;;;;;;;;;13546:51;2066:14642;;;;;;;13546:51;;;;;;;;;;2066:14642;13546:51;;;13320:3;2066:14642;;;;;;13286:13;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;13546:51;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;2066:14642;;;;;;;;;13348:42;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;13340:94;2066:14642;;13348:42;;2066:14642;;;;13348:42;;;;;13301:17;2066:14642;13230:38;;;;;;;2066:14642;13230:38;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;13150:41;;;;;;;2066:14642;13150:41;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;13022:38;;;;;;;;;;;;;;:::i;:::-;;;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;12887:56;;;;;;;;;;;;;;:::i;:::-;;;;12768:31;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;12810:49;2066:14642;;12768:31;;;;;;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;12601:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;;;12601:46;;;;;;;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;2357:1:0;2066:14642:14;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;2066:14642:14:-;;;;;;-1:-1:-1;;2066:14642:14;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;;;11789:16:14;;2066:14642;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;11789:16;;;;;;;2066:14642;11789:16;;;2066:14642;11823:13;2066:14642;11857:3;2066:14642;;11838:17;;;;;11893:9;;;2066:14642;11893:9;;;:::i;:::-;2066:14642;;11934:10;;;;;:::i;:::-;2066:14642;;;;12017:61;2066:14642;;;;;;;;;;;;;;;;;;11959:43;2066:14642;;;11959:43;:::i;:::-;2066:14642;;;;-1:-1:-1;;;12017:61:14;;12044:10;2066:14642;12017:61;;2066:14642;12064:4;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;12017:61;;;;;;;;;;2066:14642;12017:61;;;11857:3;;;2066:14642;11823:13;;12017:61;;;;;;-1:-1:-1;12017:61:14;;;;;;:::i;:::-;;;;;;11838:17;-1:-1:-1;;2066:14642:14;;;-1:-1:-1;;;12102:28:14;;2066:14642;;;;;12102:28;;2066:14642;;;;;;;;;;;11838:17;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;;12102:28;;;;;;;;;;;2066:14642;12102:28;2066:14642;12102:28;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;12102:28;;;;;11789:16;;;;;;2066:14642;11789:16;;;;;;:::i;:::-;;;;2066:14642;;;;;;-1:-1:-1;;2066:14642:14;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;5166:36;;;;;;:90;;;2066:14642;5166:145;;;2066:14642;;;;5410:32;;;:::i;:::-;5460:13;2066:14642;5475:21;;;;;;2066:14642;;;;;;;:::i;:::-;;;;5498:3;5526:10;2066:14642;5526:10;;5657:11;;5526:10;5642:13;5526:10;;5642:13;5526:10;5518:59;5526:10;;;;;5614:55;5526:10;;:::i;:::-;2066:14642;5526:14;;5518:59;:::i;:::-;2066:14642;;-1:-1:-1;;;;;2066:14642:14;;5642:13;:::i;:::-;;:::i;:::-;5657:11;;;:::i;:::-;2066:14642;;-1:-1:-1;;;5614:55:14;;-1:-1:-1;;;;;2066:14642:14;;;;5614:55;;2066:14642;;;;;;;;;;;-1:-1:-1;2066:14642:14;;;;;;;;;5614:55;;;;;;;;;;;;;2066:14642;5614:55;;;5498:3;2066:14642;;;5763:13;;2066:14642;;;;;;;;5763:13;;:::i;:::-;2066:14642;;;;;;;;;;5756:43;;5788:10;2066:14642;5756:43;;2066:14642;5756:43;;;;;;;2066:14642;5756:43;;;5498:3;5803:10;;;;;;:::i;:::-;2066:14642;-1:-1:-1;2066:14642:14;;;;;5853:73;-1:-1:-1;;;;;5860:13:14;;2066:14642;;;5860:13;:::i;:::-;2066:14642;5915:10;;;;;:::i;:::-;2066:14642;;-1:-1:-1;;;5853:73:14;;5788:10;2066:14642;5853:73;;2066:14642;5908:4;2066:14642;;;;;;;;;;;;;;;;;;;;;;;5853:73;;;;;;;;;;;6033:63;5853:73;6083:12;5853:73;;;;;;;6058:11;;5853:73;6083:12;5853:73;;2066:14642;5853:73;;;;;;6043:13;5853:73;5986:10;5853:73;;6071:10;5853:73;;;;6043:13;5853:73;;;5498:3;5986:10;;:::i;:::-;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;;5968:13;;;;;;:::i;:::-;2066:14642;;;;;5941:55;2066:14642;;;;;;5941:55;:::i;:::-;2066:14642;;6043:13;:::i;:::-;6058:11;;:::i;:::-;6071:10;;:::i;:::-;2066:14642;6083:12;;:::i;:::-;2066:14642;;-1:-1:-1;;;6033:63:14;;-1:-1:-1;;;;;2066:14642:14;;;;6033:63;;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6033:63;;2066:14642;;-1:-1:-1;;;;;2066:14642:14;;6033:63;;;;;;;2066:14642;6033:63;;;5498:3;-1:-1:-1;;;;;;2066:14642:14;;;;;;;;;;;;;;6138:11;;2066:14642;;6138:11;;:::i;:::-;2066:14642;;;;;;;;6111:52;2066:14642;;;6111:52;:::i;:::-;2066:14642;;;;;6195:11;;2066:14642;;;;;;6195:11;;;:::i;:::-;2066:14642;;;;;;;;;;6188:44;;5908:4;2066:14642;6188:44;;2066:14642;6188:44;;;;;;;2066:14642;6188:44;;;5498:3;6188:57;;6180:92;6289:53;6188:57;2066:14642;6188:57;;;6180:92;:::i;:::-;2066:14642;6296:11;;2066:14642;;;;;;6296:11;;;:::i;:::-;2066:14642;6318:12;;;;;;:::i;:::-;2066:14642;;-1:-1:-1;;;6289:53:14;;-1:-1:-1;;;;;2066:14642:14;;;;6289:53;;2066:14642;;;;;;;;;;;;-1:-1:-1;2066:14642:14;;;;;;;;;;;6289:53;;;;;;;;;;2066:14642;6289:53;;;5498:3;;2066:14642;5460:13;;6289:53;;;2066:14642;6289:53;2066:14642;6289:53;;;;;;;:::i;:::-;;;;;6188:44;;;2066:14642;6188:44;;2066:14642;6188:44;;;;;;2066:14642;6188:44;;;:::i;:::-;;;2066:14642;;;;;;6188:44;;;;;-1:-1:-1;6188:44:14;;6033:63;;;;2066:14642;6033:63;;2066:14642;6033:63;;;;;;2066:14642;6033:63;;;:::i;:::-;;;2066:14642;;;;;6033:63;;;;;;;-1:-1:-1;6033:63:14;;5853:73;;;2066:14642;5853:73;;;;;;;;;:::i;:::-;;;;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;5756:43;;;2066:14642;5756:43;;2066:14642;5756:43;;;;;;2066:14642;5756:43;;;:::i;:::-;;;2066:14642;;;;;5756:43;;;;;;-1:-1:-1;5756:43:14;;5614:55;;;;;2066:14642;5614:55;;2066:14642;5614:55;;;;;;2066:14642;5614:55;;;:::i;:::-;;;2066:14642;;;;;;;5763:13;;2066:14642;;;;;:::i;:::-;5614:55;;;;;;;;;;;;-1:-1:-1;5614:55:14;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;5166:145;5277:34;;;;5166:145;;:90;5223:33;;;;5166:90;;2066:14642;;;;;;-1:-1:-1;;2066:14642:14;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;2066:14642:14;;;;;;;;;4301:16:1;2066:14642:14;-1:-1:-1;;;;;2066:14642:14;;4726:16:1;;:34;;;;2066:14642:14;4805:1:1;4790:16;:50;;;;2066:14642:14;4855:13:1;:30;;;;2066:14642:14;4851:91:1;;;-1:-1:-1;;2066:14642:14;;4805:1:1;2066:14642:14;;;;4979:67:1;;2066:14642:14;6893:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6961:1;2639:10:14;6961:1:1;:::i;:::-;2066:14642:14;;;;;;;;;;;;;;;5066:101:1;;2066:14642:14;5066:101:1;-1:-1:-1;;;2066:14642:14;;;;;;5142:14:1;2066:14642:14;;;4805:1:1;2066:14642:14;;5142:14:1;2066:14642:14;4979:67:1;-1:-1:-1;;2066:14642:14;;;;;4979:67:1;;;4851:91;2066:14642:14;;-1:-1:-1;;;4908:23:1;;2066:14642:14;;4908:23:1;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;2066:14642:14;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;15578:34:14;;-1:-1:-1;;;;;2066:14642:14;;;;15578:34;;2066:14642;;;;;;;;;;;;;;15578:34;;;;;;;2066:14642;15578:34;;;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15578:34;;;;;;2066:14642;15578:34;;;;;;:::i;:::-;;;;2066:14642;;;;;;-1:-1:-1;;2066:14642:14;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;6569:31:14;;-1:-1:-1;;;;;2066:14642:14;;;;6569:31;;2066:14642;;;;;;;-1:-1:-1;2066:14642:14;;;-1:-1:-1;2066:14642:14;6569:31;;;;;;;2066:14642;6569:31;;;2066:14642;-1:-1:-1;2066:14642:14;;-1:-1:-1;;;6637:16:14;;2066:14642;;;;;6637:16;;;;;;;;2066:14642;6637:16;;;2066:14642;6669:13;2066:14642;6703:3;2066:14642;;6684:17;;;;;6764:10;;2066:14642;6764:10;;;:::i;:::-;2066:14642;;;;;;;;;;;;6750:9;;;;;:::i;:::-;2066:14642;;;;;;6723:51;2066:14642;;;;;;6723:51;:::i;:::-;2066:14642;;6796:9;6789:67;6796:9;;;;;:::i;:::-;2066:14642;;6845:10;;;;:::i;:::-;2066:14642;;;-1:-1:-1;;;6789:67:14;;-1:-1:-1;;;;;2066:14642:14;;;6789:67;;2066:14642;6838:4;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;6789:67;;;;;;;;;;2066:14642;6789:67;;;6703:3;;;2066:14642;6669:13;;6789:67;;;;;;-1:-1:-1;6789:67:14;;;;;;:::i;:::-;;;;;;6637:16;;;;;;;2066:14642;6637:16;;;;;;:::i;:::-;;;;;6569:31;;;;;;;2066:14642;6569:31;;;;;;:::i;:::-;;;;;2066:14642;;;;;;-1:-1:-1;;2066:14642:14;;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;16671:13;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;-1:-1:-1;;;;;;;;;;;2066:14642:14;;;;;;;;;6431:44:1;;;;;2066:14642:14;6427:105:1;;;;6656:20;2066:14642:14;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;;;6656:20:1;2066:14642:14;6431:44:1;2066:14642:14;;6450:25:1;;;-1:-1:-1;6431:44:1;;;;2066:14642:14;;;;;;-1:-1:-1;;2066:14642:14;;;;-1:-1:-1;;;;;;;;;;;2066:14642:14;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;7146:45;2066:14642;;;:::i;:::-;7061:10;;;;;7053:55;7061:10;;;7053:55;:::i;:::-;7146:45;;:::i;:::-;2066:14642;;;7210:16;2066:14642;;;;-1:-1:-1;;;7258:65:14;;7289:10;2066:14642;7258:65;;2066:14642;7309:4;2066:14642;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;7258:65;;2066:14642;;7258:65;2066:14642;;;-1:-1:-1;2066:14642:14;;;7258:65;;;;;;;;2066:14642;7336:32;7379;7427:13;2066:14642;7422:1153;7460:3;2066:14642;;7442:16;;;;;7515:8;;;;;:::i;:::-;2066:14642;;;;;;;;;7569:16;;2066:14642;7569:16;2066:14642;7569:16;;;;;;;;;2066:14642;7569:16;;;7460:3;7640:8;7628:21;7640:8;;;;;:::i;:::-;2066:14642;;7628:21;:::i;:::-;7666:17;2066:14642;7703:13;2066:14642;7741:3;2066:14642;;7718:21;;;;;7769:13;;;;;:::i;:::-;2066:14642;;;;;7769:29;;:48;;;7741:3;7765:150;;8302:1;2066:14642;7703:13;;7765:150;7854:13;;;;;;;;;;;;;:::i;:::-;2066:14642;;7890:5;7698:232;2066:14642;;;7954:23;;;2066:14642;;;;-1:-1:-1;;;8030:31:14;;2066:14642;8030:31;;2066:14642;;;;;;;;;;8030:31;;;;;;;;2066:14642;8030:31;;;7698:232;8030:50;;2066:14642;;;;-1:-1:-1;;2066:14642:14;;;;;;;;8282:48;8161:184;2066:14642;8282:48;;;:21;;;;;;:48;;2066:14642;;-1:-1:-1;;;8161:184:14;;-1:-1:-1;;;;;2066:14642:14;;;;8161:184;;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8161:184;;;;;;;;;;2066:14642;8161:184;;;8282:48;8376:8;;8302:1;8376:8;;;;;;;;:::i;:::-;2066:14642;;;;8302:1;2066:14642;;;;;;;;;;;;;;8362:56;2066:14642;;;;;;8362:56;:::i;:::-;2066:14642;;8447:8;;;;;:::i;:::-;2066:14642;;;;;;;;;;;;;;;;;8433:47;2066:14642;;;8433:47;:::i;:::-;2066:14642;;8536:27;7460:3;2066:14642;7427:13;;;8161:184;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;8302:1;2066:14642;;8161:184;;;;;;;;;;;;8282:48;7309:4;8282:48;;2066:14642;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;8030:31;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;;;8030:31;;;;;;;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;7769:48;7802:11;;;;;:::i;:::-;2066:14642;7802:15;;7769:48;;7718:21;;;;;;;;;;;7569:16;;;;;;;2066:14642;7569:16;;;;;;:::i;:::-;;;;;7442;2066:14642;;;;;;7258:65;;;;;;;;;;;;;:::i;:::-;;;;;2066:14642;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;2066:14642:14;;;-1:-1:-1;;;;;;2066:14642:14;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;2066:14642:14;;-1:-1:-1;;;;;;2066:14642:14;;;;;;;-1:-1:-1;;;;;2066:14642:14;3975:40:0;2066:14642:14;;3975:40:0;2066:14642:14;;;;;;;;:::i;:::-;3843:10;;3835:55;3843:10;;;3835:55;:::i;:::-;2066:14642;;;;-1:-1:-1;;;3925:47:14;;-1:-1:-1;;;;;2066:14642:14;;;;3925:47;;2066:14642;;;;;;;;3925:47;;;2066:14642;;;3925:47;;2066:14642;;;;;;;;3925:47;;;;;;;;2066:14642;3925:47;;;2066:14642;-1:-1:-1;2066:14642:14;;-1:-1:-1;;;4043:65:14;;4074:10;2066:14642;4043:65;;2066:14642;4094:4;2066:14642;;;;;;;;;;;;;;;;;4094:4;2066:14642;;;-1:-1:-1;2066:14642:14;4043:65;;;;;;;;;;;;;2066:14642;;;;;4119:13;2066:14642;;;;;;;;;;;;;4119:47;2066:14642;;;4119:47;:::i;:::-;2066:14642;;;;-1:-1:-1;;;4196:47:14;;-1:-1:-1;;;;;2066:14642:14;;;;4196:47;;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4196:47:14;;;;;;;;;;2066:14642;4196:47;;;2066:14642;;;;;;4312:42;2066:14642;;;;4119:13;2066:14642;;;;;;;;;;;;;;;;4254:45;2066:14642;;;4254:45;:::i;:::-;2066:14642;;;;-1:-1:-1;;;4312:42:14;;-1:-1:-1;;;;;2066:14642:14;;;;4312:42;;2066:14642;;;;;;;;;;;;-1:-1:-1;2066:14642:14;;;;;;;;;;;4312:42;;;;;;;;;;;2066:14642;;;;;;;;4312:42;;;;;;;;;;;;;:::i;:::-;;;;;4196:47;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;;4196:47;;2066:14642;;;;;;4312:42;4196:47;;;;;;;4043:65;;;;;;;;;;;;;:::i;:::-;;;;;3925:47;;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;;;;:::i;:::-;3925:47;;;;;;;;2066:14642;;;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;:::i;:::-;;;;;;;14656:41;;14686:10;2066:14642;14656:41;;2066:14642;14656:41;;2066:14642;14656:41;;;;;;;;;2066:14642;14656:41;;;2066:14642;-1:-1:-1;2066:14642:14;;-1:-1:-1;;;14730:33:14;;2066:14642;14730:33;2066:14642;;;14730:33;;;;;;;;2066:14642;14730:33;;;2066:14642;14793:5;;2066:14642;;;;;;;;;;;;;;;;;;;14774:71;2066:14642;14817:3;2066:14642;;14782:38;;14774:71;:::i;:::-;2066:14642;;-1:-1:-1;;;14924:31:14;;2066:14642;;;;;;14924:31;;;;;;;;2066:14642;;;14924:31;;;2066:14642;-1:-1:-1;2066:14642:14;;-1:-1:-1;;;15027:16:14;;2066:14642;;;;;15027:16;;;;;;;;2066:14642;15027:16;;;2066:14642;15059:13;2066:14642;15093:3;2066:14642;;15074:17;;;;;15154:15;;2066:14642;15154:15;;;:::i;:::-;2066:14642;;;;;;;;;;;;15140:9;;;;;:::i;:::-;2066:14642;;;;;;15113:56;2066:14642;;;;;;15113:56;:::i;:::-;2066:14642;;15225:18;;;;:::i;:::-;2066:14642;;;;;;;;;;15211:9;;;;;:::i;:::-;2066:14642;;;;;;15184:59;2066:14642;;;;;;15184:59;:::i;:::-;2066:14642;;;15059:13;;15027:16;;;;;;;2066:14642;15027:16;;;;;;:::i;:::-;;;;;14924:31;;;;;;;2066:14642;14924:31;;;;;;:::i;:::-;;;2066:14642;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;14924:31;;;;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;14730:33;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;14730:33;;;;;;;;;14656:41;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;14656:41;;;;;;;;2066:14642;;;;;;-1:-1:-1;;2066:14642:14;;;;5111:6:2;-1:-1:-1;;;;;2066:14642:14;5102:4:2;5094:23;5090:145;;2066:14642:14;;;1327:66:6;2066:14642:14;;;5090:145:2;2066:14642:14;;-1:-1:-1;;;5195:29:2;;2066:14642:14;;5195:29:2;2066:14642:14;;;-1:-1:-1;;2066:14642:14;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4688:6:2;2066:14642:14;;4679:4:2;4671:23;;;:120;;;;2066:14642:14;4654:251:2;;;2303:62:0;;:::i;:::-;2066:14642:14;;;;;;;;6151:52:2;;;;2066:14642:14;6151:52:2;;;;2066:14642:14;;6151:52:2;;;2066:14642:14;-1:-1:-1;6147:437:2;;2066:14642:14;;-1:-1:-1;;;6513:60:2;;2066:14642:14;6513:60:2;;2066:14642:14;;;;;6513:60:2;6147:437;1327:66:6;;;;6245:40:2;;;;6241:120;;2263:29:6;;;:34;2259:119;;-1:-1:-1;2066:14642:14;;-1:-1:-1;;;;;;2066:14642:14;;;;;;;;2922:27:6;-1:-1:-1;;2922:27:6;2066:14642:14;;2964:15:6;:11;;4255:25:11;2066:14642:14;4297:55:11;4255:25;;;;;;;;;2066:14642:14;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;4297:55:11;:::i;2066:14642:14:-;;;-1:-1:-1;4297:55:11;:::i;2960:148:6:-;6648:9;;;;;;6644:70;;2066:14642:14;6644:70:6;-1:-1:-1;;;6684:19:6;;2066:14642:14;;6684:19:6;2259:119;2066:14642:14;;-1:-1:-1;;;2320:47:6;;2066:14642:14;2320:47:6;;2066:14642:14;;;2320:47:6;6241:120:2;2066:14642:14;;6312:34:2;;;;;;2066:14642:14;6312:34:2;;2066:14642:14;6312:34:2;6151:52;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642:14;;;;;6151:52:2;;;;;;;;;4671:120;2066:14642:14;;;1327:66:6;2066:14642:14;;4749:42:2;;4671:120;;;2066:14642:14;;;;;;-1:-1:-1;;2066:14642:14;;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;14168:47:14;;-1:-1:-1;;;;;2066:14642:14;;;;14168:47;;2066:14642;;;;;;;;;;;;;;;;;;;;;;14168:47;;;;;;;;;2066:14642;14168:47;;;2066:14642;-1:-1:-1;2066:14642:14;;-1:-1:-1;;;14291:45:14;;-1:-1:-1;;;;;2066:14642:14;;;;14291:45;;2066:14642;;;;;;;;;;;;;;;;;;;;;;;;14291:45;;2066:14642;;14291:45;;;;;;;2066:14642;14291:45;;;2066:14642;;;;;;;14291:45;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;;14291:45;;;;;;;;14168:47;;;;;;;;;;;;;;;;;:::i;:::-;;;2066:14642;;;;14291:45;2066:14642;;;;;:::i;:::-;14168:47;;;;;;;;;;2066:14642;;;;;;-1:-1:-1;;2066:14642:14;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;-1:-1:-1;;2066:14642:14;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;2066:14642:14;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;2066:14642:14;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;:::o;:::-;-1:-1:-1;;;;;2066:14642:14;;;;;;-1:-1:-1;;2066:14642:14;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;2066:14642:14;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;16191:368;2066:14642;;;-1:-1:-1;;;16302:31:14;;2066:14642;;16191:368;-1:-1:-1;;;;;2066:14642:14;;;;;16302:31;2066:14642;16302:31;2066:14642;;16302:31;;;;;;;;;;;16191:368;2066:14642;16372:28;2066:14642;;16372:28;:::i;:::-;16416:13;16302:31;16450:3;2066:14642;;16431:17;;;;;2066:14642;;;16302:31;2066:14642;;;;;;16302:31;2066:14642;16504:9;;;;;;:::i;:::-;2066:14642;;16302:31;2066:14642;;;16302:31;2066:14642;;16470:44;;;;:::i;:::-;2066:14642;;16416:13;;16431:17;-1:-1:-1;16431:17:14;;-1:-1:-1;;;;16191:368:14:o;16302:31::-;;;;;;;;;;;;;;:::i;:::-;;;;;2066:14642;;;;:::o;:::-;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;2066:14642:14;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;2066:14642:14;;;;;;;;;;;;-1:-1:-1;;;2066:14642:14;;;;;;;3405:215:0;-1:-1:-1;;;;;2066:14642:14;;;;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;2066:14642:14;;-1:-1:-1;;;;;;2066:14642:14;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;2066:14642:14;;-1:-1:-1;;;3534:31:0;;3509:1;3534:31;;;2066:14642:14;;;3534:31:0;2658:162;-1:-1:-1;;;;;;;;;;;2066:14642:14;-1:-1:-1;;;;;2066:14642:14;966:10:3;2717:23:0;2713:101;;2658:162::o;2713:101::-;2066:14642:14;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;2066:14642:14;;;2763:40:0;2066:14642:14;-1:-1:-1;;2066:14642:14;;;;;;;:::o;8625:1783::-;8818:11;2066:14642;;;;-1:-1:-1;;;8818:25:14;;-1:-1:-1;;;;;2066:14642:14;;;;;8818:25;;2066:14642;;;;8818:25;;;;;;;:11;:25;;;8625:1783;2066:14642;;;8926:24;;;;:::i;:::-;8961:22;8818:11;2066:14642;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2066:14642:14;;;:::i;:::-;;;;;;;9077:24;;;:::i;:::-;9112:21;8818:11;2066:14642;;;;;;;;;;;;;9228:21;;;;;;2066:14642;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2066:14642:14;;;;;;;8818:11;2066:14642;;8818:11;2066:14642;;;8625:1783;:::o;9221:1105::-;9295:11;9289:18;9295:11;;;:::i;:::-;9289:18;;;:::i;:::-;2066:14642;;;;;9326:23;;9322:277;;8818:11;9635:13;;;;;;9221:1105;;;;9650:3;9679:10;;;;:::i;:::-;2066:14642;;9674:626;;9650:3;2066:14642;;9620:13;;9674:626;9749:11;;;;;:::i;:::-;2066:14642;;;-1:-1:-1;;;9814:16:14;;2066:14642;;8818:11;2066:14642;8818:25;2066:14642;;9814:16;;;;;;;;;;8818:11;9814:16;;;9674:626;9885:40;;;;;;:::i;:::-;:95;;;;9674:626;9855:426;;;;;9674:626;;;;;9855:426;10051:46;;;;:::i;:::-;10145:11;;;;;:::i;:::-;2066:14642;;10129:12;;;:::i;:::-;10124:32;;;;;:::i;:::-;2066:14642;10189:11;;;;;:::i;:::-;10183:30;;;;:::i;:::-;2066:14642;;;;10240:17;;;;:::i;:::-;2066:14642;;;9855:426;;;;9885:95;9929:51;;;;:::i;:::-;9885:95;;;;;9814:16;;;;;;;8818:11;9814:16;;;;;;:::i;:::-;;;;;9322:277;9399:25;;;;;;;;;;;;;;;:::i;:::-;9448:13;8818:11;9463:14;;;;;;9567:16;;;;;:::o;9479:3::-;9522:7;;;2066:14642;9522:7;;;:::i;:::-;2066:14642;;9507:22;;;;:::i;:::-;2066:14642;;9448:13;;8818:25;;;;;;:11;:25;;;;;;:::i;:::-;;;;10416:274;;10537:1;10559:3;2066:14642;;10540:17;;;;;-1:-1:-1;;;;;2066:14642:14;10583:9;;;;:::i;:::-;2066:14642;;;;;10583:18;10579:70;;2066:14642;;10525:13;;10579:70;10622:11;;;2066:14642;10622:11;:::o;10540:17::-;;;;10537:1;10416:274;:::o;10698:429::-;10913:16;;10698:429;-1:-1:-1;;;;;2066:14642:14;;;;10913:16;10850:26;2066:14642;10850:26;:::i;:::-;2066:14642;;;;;;;;;;10913:16;;;;;;;;;;;;;10698:429;10945:13;10913:16;10979:3;2066:14642;;10960:17;;;;;11003:9;;;;;:::i;:::-;2066:14642;;;;;11003:18;10999:87;;2066:14642;;10945:13;;10999:87;11049:11;;;;;;;;;:::i;:::-;2066:14642;11049:21;;11042:28;:::o;10960:17::-;;;;;;;10913:16;10698:429;:::o;10913:16::-;;;;;;;;;;;;;;:::i;:::-;;;;;11135:309;;11265:1;11287:3;2066:14642;;11268:17;;;;;-1:-1:-1;;;;;2066:14642:14;11311:9;;;;:::i;:::-;2066:14642;;;;;11311:18;11307:75;;11287:3;2066:14642;;11253:13;;11307:75;11357:9;;;;;:::i;:::-;2066:14642;;11350:16;:::o;11268:17::-;2066:14642;;-1:-1:-1;;;11403:33:14;;2066:14642;11403:33;;;2066:14642;;;;;;;;;;;;;11403:33;7084:141:1;2066:14642:14;-1:-1:-1;;;;;;;;;;;2066:14642:14;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;2066:14642:14;;-1:-1:-1;;;7191:17:1;;;;;4625:582:11;;4797:8;;-1:-1:-1;2066:14642:14;;5874:21:11;:17;;6046:142;;;;;;5870:383;2066:14642:14;;-1:-1:-1;;;6225:17:11;;;;;4793:408;2066:14642:14;;5045:22:11;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;2066:14642:14;;-1:-1:-1;;;5121:24:11;;-1:-1:-1;;;;;2066:14642:14;;;5121:24:11;;;2066:14642:14;;;5121:24:11;5045:49;5071:18;;;:23;5045:49;"},"gasEstimates":{"creation":{"codeDepositCost":"2186000","executionCost":"infinite","totalCost":"infinite"},"external":{"UPGRADE_INTERFACE_VERSION()":"699","addLiquidity(uint256[],address,address)":"infinite","batchSwap(address[],address[],uint256[],address[])":"infinite","changePoolFactory(address)":"infinite","getAmountOut(address,address,uint256)":"infinite","getAssetReserve(address,address)":"2860","getPoolsContainingToken(address)":"infinite","getReserves(address)":"infinite","getVersion()":"2298","initialize(address)":"infinite","owner()":"infinite","performRebalanceIfNeeded(address)":"infinite","poolFactory()":"2345","poolsReserves(address,address)":"2596","proxiableUUID()":"infinite","rebalanceWeights(address,address)":"infinite","reinitialize(address,uint64)":"infinite","removeLiquidity(uint256,address,address)":"infinite","renounceOwnership()":"infinite","smartSwap(address,address,uint256,address)":"infinite","swap(address,address,uint256,address)":"infinite","transferOwnership(address)":"infinite","upgradeToAndCall(address,bytes)":"infinite"},"internal":{"_authorizeUpgrade(address)":"infinite","_containsToken(address[] memory,address)":"infinite","_findOptimalRoute(address,address,uint256)":"infinite","_getOtherTokenInPool(address[] memory,address)":"infinite","_hasSufficientLiquidity(contract IBaluniV1Pool,address,uint256)":"infinite"}},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","addLiquidity(uint256[],address,address)":"ec0cd2eb","batchSwap(address[],address[],uint256[],address[])":"e74e9b06","changePoolFactory(address)":"72591be5","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address,address)":"a3e113fb","getPoolsContainingToken(address)":"ae3cce1c","getReserves(address)":"3e99c1e4","getVersion()":"0d8e6e2c","initialize(address)":"c4d66de8","owner()":"8da5cb5b","performRebalanceIfNeeded(address)":"5568081a","poolFactory()":"4219dc40","poolsReserves(address,address)":"4056c37f","proxiableUUID()":"52d1902d","rebalanceWeights(address,address)":"ad414263","reinitialize(address,uint64)":"8f2248bc","removeLiquidity(uint256,address,address)":"f31abcc4","renounceOwnership()":"715018a6","smartSwap(address,address,uint256,address)":"7442eca6","swap(address,address,uint256,address)":"6e81221c","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"fromTokens\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"toTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"receivers\",\"type\":\"address[]\"}],\"name\":\"batchSwap\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"changePoolFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsContainingToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFactory\",\"outputs\":[{\"internalType\":\"contract IBaluniV1PoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolsReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolFactory\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"reinitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"share\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"smartSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract serves as the periphery contract for interacting with BaluniV1Pool contracts. It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addLiquidity(uint256[],address,address)\":{\"details\":\"Adds liquidity to a BaluniV1Pool.\",\"params\":{\"amounts\":\"An array of amounts for each asset to add as liquidity.\"}},\"batchSwap(address[],address[],uint256[],address[])\":{\"details\":\"Performs batch swaps between multiple token pairs.\",\"params\":{\"amounts\":\"An array of amounts representing the amounts to swap.\",\"fromTokens\":\"An array of addresses representing the tokens to swap from.\",\"receivers\":\"An array of addresses representing the receivers of the swapped tokens.\",\"toTokens\":\"An array of addresses representing the tokens to swap to.\"},\"returns\":{\"_0\":\"An array of amounts representing the amounts of tokens received after the swaps.\"}},\"changePoolFactory(address)\":{\"details\":\"Changes the address of the pool factory contract. Can only be called by the contract owner.\",\"params\":{\"_poolFactory\":\"The new address of the pool factory contract.\"}},\"getAmountOut(address,address,uint256)\":{\"details\":\"Gets the amount of tokens received after a swap in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"getPoolsContainingToken(address)\":{\"details\":\"Returns an array of pool addresses that contain the given token.\",\"params\":{\"token\":\"The address of the token to search for.\"},\"returns\":{\"_0\":\"An array of pool addresses.\"}},\"getVersion()\":{\"details\":\"Returns the version of the contract.\",\"returns\":{\"_0\":\"The version string.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performRebalanceIfNeeded(address)\":{\"details\":\"Performs rebalance if needed for the given tokens.\",\"params\":{\"poolAddress\":\"The address of the token pool to rebalance.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"reinitialize(address,uint64)\":{\"details\":\"Initializes the contract by setting the pool factory address.\",\"params\":{\"_poolFactory\":\"The address of the BaluniV1PoolFactory contract.\"}},\"removeLiquidity(uint256,address,address)\":{\"details\":\"Removes liquidity from a BaluniV1Pool.\",\"params\":{\"poolAddress\":\"The address of the BaluniV1Pool.\",\"share\":\"The amount of liquidity tokens to remove.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"swap(address,address,uint256,address)\":{\"details\":\"Swaps tokens in a BaluniV1Pool.\",\"params\":{\"amount\":\"The amount of tokens to swap.\",\"fromToken\":\"The address of the token to swap from.\",\"toToken\":\"The address of the token to swap to.\"},\"returns\":{\"_0\":\"The amount of tokens received after the swap.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"BaluniV1PoolPeriphery\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BaluniV1PoolPeriphery.sol\":\"BaluniV1PoolPeriphery\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ContextUpgradeable} from \\\"../utils/ContextUpgradeable.sol\\\";\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\\n    struct OwnableStorage {\\n        address _owner;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Ownable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\\n\\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\\n        assembly {\\n            $.slot := OwnableStorageLocation\\n        }\\n    }\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\\n        __Ownable_init_unchained(initialOwner);\\n    }\\n\\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        return $._owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        OwnableStorage storage $ = _getOwnableStorage();\\n        address oldOwner = $._owner;\\n        $._owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Storage of the initializable contract.\\n     *\\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\\n     * when using with upgradeable contracts.\\n     *\\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\\n     */\\n    struct InitializableStorage {\\n        /**\\n         * @dev Indicates that the contract has been initialized.\\n         */\\n        uint64 _initialized;\\n        /**\\n         * @dev Indicates that the contract is in the process of being initialized.\\n         */\\n        bool _initializing;\\n    }\\n\\n    // keccak256(abi.encode(uint256(keccak256(\\\"openzeppelin.storage.Initializable\\\")) - 1)) & ~bytes32(uint256(0xff))\\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\\n\\n    /**\\n     * @dev The contract is already initialized.\\n     */\\n    error InvalidInitialization();\\n\\n    /**\\n     * @dev The contract is not initializing.\\n     */\\n    error NotInitializing();\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint64 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\\n     * production.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        // Cache values to avoid duplicated sloads\\n        bool isTopLevelCall = !$._initializing;\\n        uint64 initialized = $._initialized;\\n\\n        // Allowed calls:\\n        // - initialSetup: the contract is not in the initializing state and no previous version was\\n        //                 initialized\\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\\n        //                 current contract is just being deployed\\n        bool initialSetup = initialized == 0 && isTopLevelCall;\\n        bool construction = initialized == 1 && address(this).code.length == 0;\\n\\n        if (!initialSetup && !construction) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = 1;\\n        if (isTopLevelCall) {\\n            $._initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            $._initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint64 version) {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing || $._initialized >= version) {\\n            revert InvalidInitialization();\\n        }\\n        $._initialized = version;\\n        $._initializing = true;\\n        _;\\n        $._initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        _checkInitializing();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\\n     */\\n    function _checkInitializing() internal view virtual {\\n        if (!_isInitializing()) {\\n            revert NotInitializing();\\n        }\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        // solhint-disable-next-line var-name-mixedcase\\n        InitializableStorage storage $ = _getInitializableStorage();\\n\\n        if ($._initializing) {\\n            revert InvalidInitialization();\\n        }\\n        if ($._initialized != type(uint64).max) {\\n            $._initialized = type(uint64).max;\\n            emit Initialized(type(uint64).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint64) {\\n        return _getInitializableStorage()._initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _getInitializableStorage()._initializing;\\n    }\\n\\n    /**\\n     * @dev Returns a pointer to the storage namespace.\\n     */\\n    // solhint-disable-next-line var-name-mixedcase\\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\\n        assembly {\\n            $.slot := INITIALIZABLE_STORAGE\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC1822Proxiable} from \\\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\\\";\\nimport {ERC1967Utils} from \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\\\";\\nimport {Initializable} from \\\"./Initializable.sol\\\";\\n\\n/**\\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\\n *\\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\\n * `UUPSUpgradeable` with a custom implementation of upgrades.\\n *\\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\\n */\\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\\n    address private immutable __self = address(this);\\n\\n    /**\\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\\n     * If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\\n     * during an upgrade.\\n     */\\n    string public constant UPGRADE_INTERFACE_VERSION = \\\"5.0.0\\\";\\n\\n    /**\\n     * @dev The call is from an unauthorized context.\\n     */\\n    error UUPSUnauthorizedCallContext();\\n\\n    /**\\n     * @dev The storage `slot` is unsupported as a UUID.\\n     */\\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\\n\\n    /**\\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\\n     * fail.\\n     */\\n    modifier onlyProxy() {\\n        _checkProxy();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\\n     * callable on the implementing contract but not through proxies.\\n     */\\n    modifier notDelegated() {\\n        _checkNotDelegated();\\n        _;\\n    }\\n\\n    function __UUPSUpgradeable_init() internal onlyInitializing {\\n    }\\n\\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\\n    }\\n    /**\\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\\n     */\\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\\n    }\\n\\n    /**\\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\\n     * encoded in `data`.\\n     *\\n     * Calls {_authorizeUpgrade}.\\n     *\\n     * Emits an {Upgraded} event.\\n     *\\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\\n        _authorizeUpgrade(newImplementation);\\n        _upgradeToAndCallUUPS(newImplementation, data);\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\\n     * See {_onlyProxy}.\\n     */\\n    function _checkProxy() internal view virtual {\\n        if (\\n            address(this) == __self || // Must be called through delegatecall\\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\\n        ) {\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if the execution is performed via delegatecall.\\n     * See {notDelegated}.\\n     */\\n    function _checkNotDelegated() internal view virtual {\\n        if (address(this) != __self) {\\n            // Must not be called through delegatecall\\n            revert UUPSUnauthorizedCallContext();\\n        }\\n    }\\n\\n    /**\\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\\n     * {upgradeToAndCall}.\\n     *\\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\\n     *\\n     * ```solidity\\n     * function _authorizeUpgrade(address) internal onlyOwner {}\\n     * ```\\n     */\\n    function _authorizeUpgrade(address newImplementation) internal virtual;\\n\\n    /**\\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\\n     *\\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\\n     * is expected to be the implementation slot in ERC1967.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\\n                revert UUPSUnsupportedProxiableUUID(slot);\\n            }\\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\\n        } catch {\\n            // The implementation is not UUPS\\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\nimport {Initializable} from \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IBeacon} from \\\"../beacon/IBeacon.sol\\\";\\nimport {Address} from \\\"../../utils/Address.sol\\\";\\nimport {StorageSlot} from \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n */\\nlibrary ERC1967Utils {\\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Emitted when the beacon is changed.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev The `implementation` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidImplementation(address implementation);\\n\\n    /**\\n     * @dev The `admin` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidAdmin(address admin);\\n\\n    /**\\n     * @dev The `beacon` of the proxy is invalid.\\n     */\\n    error ERC1967InvalidBeacon(address beacon);\\n\\n    /**\\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\\n     */\\n    error ERC1967NonPayable();\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        if (newImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(newImplementation);\\n        }\\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-Upgraded} event.\\n     */\\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Returns the current admin.\\n     *\\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\\n     */\\n    function getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        if (newAdmin == address(0)) {\\n            revert ERC1967InvalidAdmin(address(0));\\n        }\\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {IERC1967-AdminChanged} event.\\n     */\\n    function changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\\n     */\\n    // solhint-disable-next-line private-vars-leading-underscore\\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        if (newBeacon.code.length == 0) {\\n            revert ERC1967InvalidBeacon(newBeacon);\\n        }\\n\\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\\n\\n        address beaconImplementation = IBeacon(newBeacon).implementation();\\n        if (beaconImplementation.code.length == 0) {\\n            revert ERC1967InvalidImplementation(beaconImplementation);\\n        }\\n    }\\n\\n    /**\\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\\n     * to avoid stuck value in the contract.\\n     *\\n     * Emits an {IERC1967-BeaconUpgraded} event.\\n     *\\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\\n     * efficiency.\\n     */\\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n\\n        if (data.length > 0) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        } else {\\n            _checkNonPayable();\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\\n     * if an upgrade doesn't perform an initialization call.\\n     */\\n    function _checkNonPayable() private {\\n        if (msg.value > 0) {\\n            revert ERC1967NonPayable();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {UpgradeableBeacon} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev The ETH balance of the account is not enough to perform the operation.\\n     */\\n    error AddressInsufficientBalance(address account);\\n\\n    /**\\n     * @dev There's no code at `target` (it is not a contract).\\n     */\\n    error AddressEmptyCode(address target);\\n\\n    /**\\n     * @dev A call to an address target failed. The target may have reverted.\\n     */\\n    error FailedInnerCall();\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        if (address(this).balance < amount) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        if (!success) {\\n            revert FailedInnerCall();\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason or custom error, it is bubbled\\n     * up by this function (like regular Solidity function calls). However, if\\n     * the call reverted with no returned reason, this function reverts with a\\n     * {FailedInnerCall} error.\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        if (address(this).balance < value) {\\n            revert AddressInsufficientBalance(address(this));\\n        }\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\\n     * unsuccessful call.\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata\\n    ) internal view returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            // only check if target is a contract if the call was successful and the return data is empty\\n            // otherwise we already know that it was a contract\\n            if (returndata.length == 0 && target.code.length == 0) {\\n                revert AddressEmptyCode(target);\\n            }\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\\n     * revert reason or with a default {FailedInnerCall} error.\\n     */\\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\\n        if (!success) {\\n            _revert(returndata);\\n        } else {\\n            return returndata;\\n        }\\n    }\\n\\n    /**\\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\\n     */\\n    function _revert(bytes memory returndata) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert FailedInnerCall();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```solidity\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(newImplementation.code.length > 0);\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    struct StringSlot {\\n        string value;\\n    }\\n\\n    struct BytesSlot {\\n        bytes value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\\n     */\\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\\n     */\\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\\n     */\\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\\n     */\\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            r.slot := store.slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\"},\"contracts/BaluniV1PoolPeriphery.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n/**\\r\\n *  __                  __                      __\\r\\n * /  |                /  |                    /  |\\r\\n * $$ |____    ______  $$ | __    __  _______  $$/\\r\\n * $$      \\\\  /      \\\\ $$ |/  |  /  |/       \\\\ /  |\\r\\n * $$$$$$$  | $$$$$$  |$$ |$$ |  $$ |$$$$$$$  |$$ |\\r\\n * $$ |  $$ | /    $$ |$$ |$$ |  $$ |$$ |  $$ |$$ |\\r\\n * $$ |__$$ |/$$$$$$$ |$$ |$$ \\\\__$$ |$$ |  $$ |$$ |\\r\\n * $$    $$/ $$    $$ |$$ |$$    $$/ $$ |  $$ |$$ |\\r\\n * $$$$$$$/   $$$$$$$/ $$/  $$$$$$/  $$/   $$/ $$/\\r\\n *\\r\\n *\\r\\n *                  ,-\\\"\\\"\\\"\\\"-.\\r\\n *                ,'      _ `.\\r\\n *               /       )_)  \\\\\\r\\n *              :              :\\r\\n *              \\\\              /\\r\\n *               \\\\            /\\r\\n *                `.        ,'\\r\\n *                  `.    ,'\\r\\n *                    `.,'\\r\\n *                     /\\\\`.   ,-._\\r\\n *                         `-'    \\\\__\\r\\n *                              .\\r\\n *               s                \\\\\\r\\n *                                \\\\\\\\\\r\\n *                                 \\\\\\\\\\r\\n *                                  >\\\\/7\\r\\n *                              _.-(6'  \\\\\\r\\n *                             (=___._/` \\\\\\r\\n *                                  )  \\\\ |\\r\\n *                                 /   / |\\r\\n *                                /    > /\\r\\n *                               j    < _\\\\\\r\\n *                           _.-' :      ``.\\r\\n *                           \\\\ r=._\\\\        `.\\r\\n */\\r\\nimport './interfaces/IBaluniV1PoolFactory.sol';\\r\\nimport './interfaces/IBaluniV1Pool.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\r\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol';\\r\\n\\r\\n/**\\r\\n * @title BaluniV1PoolPeriphery\\r\\n * @dev This contract serves as the periphery contract for interacting with BaluniV1Pool contracts.\\r\\n * It provides functions for swapping tokens, adding liquidity, removing liquidity, and getting the amount out for a given swap.\\r\\n */\\r\\ncontract BaluniV1PoolPeriphery is Initializable, OwnableUpgradeable, UUPSUpgradeable {\\r\\n    IBaluniV1PoolFactory public poolFactory;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) public poolsReserves; // Mapping of token address to pool addresses (for quick lookup\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function initialize(address _poolFactory) public initializer {\\r\\n        __UUPSUpgradeable_init();\\r\\n        __Ownable_init(msg.sender);\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract by setting the pool factory address.\\r\\n     * @param _poolFactory The address of the BaluniV1PoolFactory contract.\\r\\n     */\\r\\n    function reinitialize(address _poolFactory, uint64 version) public reinitializer(version) {\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Internal function to authorize an upgrade to a new implementation contract.\\r\\n     * @param newImplementation The address of the new implementation contract.\\r\\n     * @notice This function can only be called by the contract owner.\\r\\n     */\\r\\n    function _authorizeUpgrade(address newImplementation) internal override onlyOwner {}\\r\\n\\r\\n    /**\\r\\n     * @dev Swaps tokens in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function swap(address fromToken, address toToken, uint256 amount, address receiver) external returns (uint256) {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n\\r\\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n        poolsReserves[poolAddress][fromToken] += amount;\\r\\n\\r\\n        uint256 toSend = pool.swap(fromToken, toToken, amount, receiver);\\r\\n        poolsReserves[poolAddress][toToken] -= toSend;\\r\\n\\r\\n        IERC20(toToken).transfer(receiver, toSend);\\r\\n\\r\\n        return toSend;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs batch swaps between multiple token pairs.\\r\\n     * @param fromTokens An array of addresses representing the tokens to swap from.\\r\\n     * @param toTokens An array of addresses representing the tokens to swap to.\\r\\n     * @param amounts An array of amounts representing the amounts to swap.\\r\\n     * @param receivers An array of addresses representing the receivers of the swapped tokens.\\r\\n     * @return An array of amounts representing the amounts of tokens received after the swaps.\\r\\n     */\\r\\n    function batchSwap(\\r\\n        address[] calldata fromTokens,\\r\\n        address[] calldata toTokens,\\r\\n        uint256[] calldata amounts,\\r\\n        address[] calldata receivers\\r\\n    ) external returns (uint256[] memory) {\\r\\n        require(\\r\\n            fromTokens.length == toTokens.length &&\\r\\n                toTokens.length == amounts.length &&\\r\\n                amounts.length == receivers.length,\\r\\n            'Input arrays length mismatch'\\r\\n        );\\r\\n\\r\\n        uint256[] memory amountsOut = new uint256[](fromTokens.length);\\r\\n\\r\\n        for (uint256 i = 0; i < fromTokens.length; i++) {\\r\\n            require(amounts[i] > 0, 'Amount must be greater than zero');\\r\\n            address poolAddress = poolFactory.getPoolByAssets(fromTokens[i], toTokens[i]);\\r\\n            IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n\\r\\n            require(IERC20(fromTokens[i]).balanceOf(msg.sender) >= amounts[i], 'Insufficient Balance');\\r\\n            IERC20(fromTokens[i]).transferFrom(msg.sender, address(this), amounts[i]);\\r\\n            poolsReserves[poolAddress][fromTokens[i]] += amounts[i];\\r\\n\\r\\n            uint256 amountOut = pool.swap(fromTokens[i], toTokens[i], amounts[i], receivers[i]);\\r\\n            poolsReserves[poolAddress][toTokens[i]] -= amountOut;\\r\\n\\r\\n            require(IERC20(toTokens[i]).balanceOf(address(this)) >= amountOut, 'Insufficient Liquidity');\\r\\n\\r\\n            IERC20(toTokens[i]).transfer(receivers[i], amountOut);\\r\\n        }\\r\\n\\r\\n        return amountsOut;\\r\\n    }\\r\\n\\r\\n    function rebalanceWeights(address poolAddress, address receiver) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        uint256[] memory amounts = pool.rebalanceWeights(receiver);\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            poolsReserves[poolAddress][assets[i]] += amounts[i];\\r\\n            IERC20(assets[i]).transferFrom(receiver, address(this), amounts[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function smartSwap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256) {\\r\\n        require(amount > 0, 'Amount must be greater than zero');\\r\\n\\r\\n        address[] memory pools = _findOptimalRoute(fromToken, toToken, amount);\\r\\n        require(pools.length > 0, 'No route found');\\r\\n\\r\\n        IERC20(fromToken).transferFrom(msg.sender, address(this), amount);\\r\\n\\r\\n        uint256 amountRemaining = amount;\\r\\n        address currentToken = fromToken;\\r\\n        for (uint256 i = 0; i < pools.length; i++) {\\r\\n            IBaluniV1Pool pool = IBaluniV1Pool(pools[i]);\\r\\n            address[] memory poolTokens = pool.getAssets();\\r\\n            uint256[] memory reserves = getReserves(pools[i]);\\r\\n\\r\\n            address nextToken;\\r\\n            for (uint256 j = 0; j < poolTokens.length; j++) {\\r\\n                if (poolTokens[j] != currentToken && reserves[j] > 0) {\\r\\n                    nextToken = poolTokens[j];\\r\\n                    break;\\r\\n                }\\r\\n            }\\r\\n\\r\\n            require(nextToken != address(0), 'No valid next token found');\\r\\n            require(pool.getAssetReserve(nextToken) >= amountRemaining, 'Insufficient liquidity in pool for swap');\\r\\n\\r\\n            uint256 amountOut = pool.swap(\\r\\n                currentToken,\\r\\n                nextToken,\\r\\n                amountRemaining,\\r\\n                i == pools.length - 1 ? receiver : address(this)\\r\\n            );\\r\\n\\r\\n            poolsReserves[pools[i]][currentToken] += amountRemaining;\\r\\n            poolsReserves[pools[i]][nextToken] -= amountOut;\\r\\n\\r\\n            currentToken = nextToken;\\r\\n            amountRemaining = amountOut;\\r\\n        }\\r\\n\\r\\n        return amountRemaining;\\r\\n    }\\r\\n\\r\\n    function _findOptimalRoute(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount\\r\\n    ) internal view returns (address[] memory) {\\r\\n        address[] memory allPools = poolFactory.getAllPools();\\r\\n        uint256 poolCount = allPools.length;\\r\\n\\r\\n        address[] memory path = new address[](poolCount);\\r\\n        uint256 pathLength = 0;\\r\\n        bool[] memory visited = new bool[](poolCount);\\r\\n\\r\\n        address[] memory queue = new address[](poolCount);\\r\\n        uint256 queueHead = 0;\\r\\n        uint256 queueTail = 0;\\r\\n\\r\\n        queue[queueTail++] = fromToken;\\r\\n\\r\\n        while (queueHead < queueTail) {\\r\\n            address currentToken = queue[queueHead++];\\r\\n            if (currentToken == toToken) {\\r\\n                address[] memory finalPath = new address[](pathLength);\\r\\n                for (uint256 i = 0; i < pathLength; i++) {\\r\\n                    finalPath[i] = path[i];\\r\\n                }\\r\\n                return finalPath;\\r\\n            }\\r\\n\\r\\n            for (uint256 i = 0; i < poolCount; i++) {\\r\\n                if (!visited[i]) {\\r\\n                    IBaluniV1Pool pool = IBaluniV1Pool(allPools[i]);\\r\\n                    address[] memory poolTokens = pool.getAssets();\\r\\n\\r\\n                    if (\\r\\n                        _containsToken(poolTokens, currentToken) && _hasSufficientLiquidity(pool, currentToken, amount)\\r\\n                    ) {\\r\\n                        address nextToken = _getOtherTokenInPool(poolTokens, currentToken);\\r\\n                        path[pathLength++] = allPools[i];\\r\\n                        queue[queueTail++] = nextToken;\\r\\n                        visited[i] = true;\\r\\n                    }\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n\\r\\n        address[] memory addr = new address[](0);\\r\\n        return addr;\\r\\n    }\\r\\n\\r\\n    function _containsToken(address[] memory tokens, address token) internal pure returns (bool) {\\r\\n        for (uint256 i = 0; i < tokens.length; i++) {\\r\\n            if (tokens[i] == token) {\\r\\n                return true;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _hasSufficientLiquidity(IBaluniV1Pool pool, address token, uint256 amount) internal view returns (bool) {\\r\\n        uint256[] memory reserves = getReserves(address(pool));\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            if (assets[i] == token) {\\r\\n                return reserves[i] >= amount;\\r\\n            }\\r\\n        }\\r\\n        return false;\\r\\n    }\\r\\n\\r\\n    function _getOtherTokenInPool(address[] memory tokens, address token) internal pure returns (address) {\\r\\n        for (uint256 i = 0; i < tokens.length; i++) {\\r\\n            if (tokens[i] != token) {\\r\\n                return tokens[i];\\r\\n            }\\r\\n        }\\r\\n        revert('Token not found in pool');\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Adds liquidity to a BaluniV1Pool.\\r\\n     * @param amounts An array of amounts for each asset to add as liquidity.\\r\\n     */\\r\\n    function addLiquidity(uint256[] calldata amounts, address poolAddress, address receiver) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        address[] memory assets = pool.getAssets();\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            address asset = assets[i];\\r\\n            uint256 amount = amounts[i];\\r\\n            poolsReserves[poolAddress][asset] += amount;\\r\\n            IERC20(asset).transferFrom(msg.sender, address(this), amount);\\r\\n        }\\r\\n\\r\\n        pool.mint(receiver, amounts);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Removes liquidity from a BaluniV1Pool.\\r\\n     * @param share The amount of liquidity tokens to remove.\\r\\n     * @param poolAddress The address of the BaluniV1Pool.\\r\\n     */\\r\\n    function removeLiquidity(uint256 share, address poolAddress, address receiver) external {\\r\\n        require(share > 0, 'Share must be greater than zero');\\r\\n        IERC20 poolToken = IERC20(poolAddress);\\r\\n\\r\\n        // Check allowance\\r\\n        uint256 allowance = poolToken.allowance(msg.sender, address(this));\\r\\n        require(allowance >= share, 'Insufficient allowance');\\r\\n\\r\\n        // Check balance\\r\\n        uint256 balance = poolToken.balanceOf(msg.sender);\\r\\n        require(balance >= share, 'Insufficient balance');\\r\\n\\r\\n        bool success = poolToken.transferFrom(msg.sender, address(this), share);\\r\\n        require(success, 'TransferFrom failed');\\r\\n\\r\\n        bool success2 = poolToken.transfer(poolAddress, share);\\r\\n        require(success2, 'Transfer failed');\\r\\n\\r\\n        uint256[] memory amountsOut = IBaluniV1Pool(poolAddress).burn(receiver);\\r\\n\\r\\n        address[] memory assets = IBaluniV1Pool(poolAddress).getAssets();\\r\\n\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            require(IERC20(assets[i]).balanceOf(address(this)) >= amountsOut[i], 'Insufficient Liquidity');\\r\\n            poolsReserves[poolAddress][assets[i]] -= amountsOut[i];\\r\\n            bool assetTransferSuccess = IERC20(assets[i]).transfer(receiver, amountsOut[i]);\\r\\n            require(assetTransferSuccess, 'Asset transfer failed');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Gets the amount of tokens received after a swap in a BaluniV1Pool.\\r\\n     * @param fromToken The address of the token to swap from.\\r\\n     * @param toToken The address of the token to swap to.\\r\\n     * @param amount The amount of tokens to swap.\\r\\n     * @return The amount of tokens received after the swap.\\r\\n     */\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256) {\\r\\n        address poolAddress = poolFactory.getPoolByAssets(fromToken, toToken);\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        return pool.getAmountOut(fromToken, toToken, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs rebalance if needed for the given tokens.\\r\\n     * @param poolAddress The address of the token pool to rebalance.\\r\\n     */\\r\\n    function performRebalanceIfNeeded(address poolAddress) external {\\r\\n        IBaluniV1Pool pool = IBaluniV1Pool(poolAddress);\\r\\n        uint256 balance = IERC20(poolAddress).balanceOf(msg.sender);\\r\\n        uint256 totalSupply = IERC20(poolAddress).totalSupply();\\r\\n        require((balance * 10000) / totalSupply >= 100, 'Insufficient balance');\\r\\n        (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove) = pool.performRebalanceIfNeeded();\\r\\n\\r\\n        // update Pool reserves\\r\\n        address[] memory assets = pool.getAssets();\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            poolsReserves[poolAddress][assets[i]] += amountsToAdd[i];\\r\\n            poolsReserves[poolAddress][assets[i]] -= amountsToRemove[i];\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns an array of pool addresses that contain the given token.\\r\\n     * @param token The address of the token to search for.\\r\\n     * @return An array of pool addresses.\\r\\n     */\\r\\n    function getPoolsContainingToken(address token) external view returns (address[] memory) {\\r\\n        return poolFactory.getPoolsByAsset(token);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the version of the contract.\\r\\n     * @return The version string.\\r\\n     */\\r\\n    function getVersion() external view returns (uint64) {\\r\\n        return _getInitializedVersion();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Changes the address of the pool factory contract.\\r\\n     * Can only be called by the contract owner.\\r\\n     * @param _poolFactory The new address of the pool factory contract.\\r\\n     */\\r\\n    function changePoolFactory(address _poolFactory) external onlyOwner {\\r\\n        poolFactory = IBaluniV1PoolFactory(_poolFactory);\\r\\n    }\\r\\n\\r\\n    function getReserves(address pool) public view returns (uint256[] memory) {\\r\\n        address[] memory assets = IBaluniV1Pool(pool).getAssets();\\r\\n        uint256[] memory reserves = new uint256[](assets.length);\\r\\n        for (uint256 i = 0; i < assets.length; i++) {\\r\\n            reserves[i] = poolsReserves[pool][assets[i]];\\r\\n        }\\r\\n        return reserves;\\r\\n    }\\r\\n\\r\\n    function getAssetReserve(address pool, address asset) external view returns (uint256) {\\r\\n        return poolsReserves[pool][asset];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb54ea74d2c8a9157d0c2fa813377afce6f405725ab6d903fe99c7296c72eae23\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeRouter(address _newRouter) external;\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external;\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xbd04537a5ea07c608c25fafb77e1e7feb3900f483526bcdc31c6b1cd2296b3d9\",\"license\":\"GNU AGPLv3\"},\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool);\\r\\n\\r\\n    function getAllPools() external view returns (address[] memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x4f51278fac200941b584fe1eea589e22e4f6fb323d9bf2dfea3dcf6179b4b694\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[{"astId":2165,"contract":"contracts/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery","label":"poolFactory","offset":0,"slot":"0","type":"t_contract(IBaluniV1PoolFactory)3920"},{"astId":2171,"contract":"contracts/BaluniV1PoolPeriphery.sol:BaluniV1PoolPeriphery","label":"poolsReserves","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_contract(IBaluniV1PoolFactory)3920":{"encoding":"inplace","label":"contract IBaluniV1PoolFactory","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1Pool.sol":{"IBaluniV1Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesBurned","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"sharesMinted","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"by","type":"address"},{"indexed":false,"internalType":"address[]","name":"assets","type":"address[]"}],"name":"RebalancePerformed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"fromToken","type":"address"},{"indexed":true,"internalType":"address","name":"toToken","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swap","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"amountsAdded","type":"uint256[]"}],"name":"WeightsRebalanced","type":"event"},{"inputs":[],"name":"ONE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SWAP_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"assetInfos","outputs":[{"components":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"weight","type":"uint256"}],"internalType":"struct IBaluniV1Pool.AssetInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"assetIndex","type":"uint256"}],"name":"assetLiquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"assets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"burn","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRebalancer","type":"address"}],"name":"changeRebalancer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRouter","type":"address"}],"name":"changeRouter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"computeTotalValuation","outputs":[{"internalType":"uint256","name":"totalVal","type":"uint256"},{"internalType":"uint256[]","name":"valuations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getAmountOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getAssetReserve","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAssets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeviation","outputs":[{"internalType":"bool[]","name":"directions","type":"bool[]"},{"internalType":"uint256[]","name":"deviations","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReserves","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"performRebalanceIfNeeded","outputs":[{"internalType":"uint256[]","name":"amountsToAdd","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToRemove","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"rebalanceWeights","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rebalancer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"router","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"fromToken","type":"address"},{"internalType":"address","name":"toToken","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"name":"swap","outputs":[{"internalType":"uint256","name":"toSend","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"trigger","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unitPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"bool","name":"increase","type":"bool"}],"name":"updateReserves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"weights","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ONE()":"c2ee3a08","SWAP_FEE_BPS()":"67a6c440","assetInfos(uint256)":"d14ef46d","assetLiquidity(uint256)":"cf8fa764","assets(uint256)":"cf35bdd0","burn(address)":"89afcb44","changeRebalancer(address)":"0918281b","changeRouter(address)":"340ac20f","computeTotalValuation()":"36bf6e39","getAmountOut(address,address,uint256)":"4aa06652","getAssetReserve(address)":"b2b55d70","getAssets()":"67e4ac2c","getDeviation()":"89ab3532","getReserves()":"0902f1ac","getWeights()":"22acb867","liquidity()":"1a686502","mint(address,uint256[])":"de836ebd","performRebalanceIfNeeded()":"f47b45e8","rebalanceWeights(address)":"0723c999","rebalancer()":"01d22ccd","router()":"f887ea40","swap(address,address,uint256,address)":"6e81221c","trigger()":"7fec8d38","unitPrice()":"e73faa2d","updateReserves(uint256[],bool)":"3dff5b7f","weights(uint256)":"b5f163ff"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sharesMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"RebalancePerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amountsAdded\",\"type\":\"uint256[]\"}],\"name\":\"WeightsRebalanced\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ONE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"assetInfos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"internalType\":\"struct IBaluniV1Pool.AssetInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"assetIndex\",\"type\":\"uint256\"}],\"name\":\"assetLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRebalancer\",\"type\":\"address\"}],\"name\":\"changeRebalancer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRouter\",\"type\":\"address\"}],\"name\":\"changeRouter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"computeTotalValuation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVal\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"valuations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getAssetReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeviation\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"directions\",\"type\":\"bool[]\"},{\"internalType\":\"uint256[]\",\"name\":\"deviations\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"performRebalanceIfNeeded\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amountsToAdd\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToRemove\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"rebalanceWeights\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalancer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"router\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fromToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"toSend\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trigger\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unitPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"increase\",\"type\":\"bool\"}],\"name\":\"updateReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1Pool.sol\":\"IBaluniV1Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/interfaces/IBaluniV1Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\nimport '@openzeppelin/contracts/token/ERC20/ERC20.sol';\\r\\n\\r\\ninterface IBaluniV1Pool {\\r\\n    // Views\\r\\n    function rebalancer() external view returns (address);\\r\\n\\r\\n    function assets(uint256 index) external view returns (address);\\r\\n\\r\\n    function weights(uint256 index) external view returns (uint256);\\r\\n\\r\\n    function trigger() external view returns (uint256);\\r\\n\\r\\n    function ONE() external view returns (uint256);\\r\\n\\r\\n    function router() external view returns (address);\\r\\n\\r\\n    function SWAP_FEE_BPS() external view returns (uint256);\\r\\n\\r\\n    function getReserves() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAssets() external view returns (address[] memory);\\r\\n\\r\\n    function getAssetReserve(address asset) external view returns (uint256);\\r\\n\\r\\n    function getWeights() external view returns (uint256[] memory);\\r\\n\\r\\n    function getAmountOut(address fromToken, address toToken, uint256 amount) external view returns (uint256);\\r\\n\\r\\n    function performRebalanceIfNeeded()\\r\\n        external\\r\\n        returns (uint256[] memory amountsToAdd, uint256[] memory amountsToRemove);\\r\\n\\r\\n    function getDeviation() external view returns (bool[] memory directions, uint256[] memory deviations);\\r\\n\\r\\n    function assetLiquidity(uint256 assetIndex) external view returns (uint256);\\r\\n\\r\\n    function liquidity() external view returns (uint256);\\r\\n\\r\\n    function unitPrice() external view returns (uint256);\\r\\n\\r\\n    function swap(\\r\\n        address fromToken,\\r\\n        address toToken,\\r\\n        uint256 amount,\\r\\n        address receiver\\r\\n    ) external returns (uint256 toSend);\\r\\n\\r\\n    function mint(address to, uint256[] memory amounts) external returns (uint256);\\r\\n\\r\\n    function burn(address to) external returns (uint256[] memory);\\r\\n\\r\\n    function changeRebalancer(address _newRebalancer) external;\\r\\n\\r\\n    function changeRouter(address _newRouter) external;\\r\\n\\r\\n    function computeTotalValuation() external view returns (uint256 totalVal, uint256[] memory valuations);\\r\\n\\r\\n    function updateReserves(uint256[] memory amounts, bool increase) external;\\r\\n\\r\\n    function rebalanceWeights(address receiver) external returns (uint256[] memory);\\r\\n\\r\\n    struct AssetInfo {\\r\\n        address asset;\\r\\n        uint256 weight;\\r\\n    }\\r\\n\\r\\n    function assetInfos(uint _index) external view returns (AssetInfo memory);\\r\\n\\r\\n    // Events\\r\\n    event RebalancePerformed(address indexed by, address[] assets);\\r\\n    event WeightsRebalanced(address indexed user, uint256[] amountsAdded);\\r\\n    event Burn(address indexed user, uint256 sharesBurned);\\r\\n    event Mint(address indexed to, uint256 sharesMinted);\\r\\n    event Swap(\\r\\n        address indexed user,\\r\\n        address indexed fromToken,\\r\\n        address indexed toToken,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n}\\r\\n\",\"keccak256\":\"0xbd04537a5ea07c608c25fafb77e1e7feb3900f483526bcdc31c6b1cd2296b3d9\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IBaluniV1PoolFactory.sol":{"IBaluniV1PoolFactory":{"abi":[{"inputs":[],"name":"getAllPools","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset1","type":"address"},{"internalType":"address","name":"asset2","type":"address"}],"name":"getPoolByAssets","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"getPoolsByAsset","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_pool","type":"address"}],"name":"poolExist","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getAllPools()":"d88ff1f4","getPoolByAssets(address,address)":"2d5e94a7","getPoolsByAsset(address)":"b4340e6a","poolExist(address)":"89345efb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAllPools\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset2\",\"type\":\"address\"}],\"name\":\"getPoolByAssets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPoolsByAsset\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"poolExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":\"IBaluniV1PoolFactory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IBaluniV1PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: GNU AGPLv3\\r\\npragma solidity 0.8.25;\\r\\n\\r\\ninterface IBaluniV1PoolFactory {\\r\\n    function getPoolByAssets(address asset1, address asset2) external view returns (address);\\r\\n\\r\\n    function getPoolsByAsset(address token) external view returns (address[] memory);\\r\\n\\r\\n    function poolExist(address _pool) external view returns (bool);\\r\\n\\r\\n    function getAllPools() external view returns (address[] memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x4f51278fac200941b584fe1eea589e22e4f6fb323d9bf2dfea3dcf6179b4b694\",\"license\":\"GNU AGPLv3\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}